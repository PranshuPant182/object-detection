function MF(n,t){for(var e=0;e<t.length;e++){const s=t[e];if(typeof s!="string"&&!Array.isArray(s)){for(const a in s)if(a!=="default"&&!(a in n)){const r=Object.getOwnPropertyDescriptor(s,a);r&&Object.defineProperty(n,a,r.get?r:{enumerable:!0,get:()=>s[a]})}}}return Object.freeze(Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}))}(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))s(a);new MutationObserver(a=>{for(const r of a)if(r.type==="childList")for(const i of r.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&s(i)}).observe(document,{childList:!0,subtree:!0});function e(a){const r={};return a.integrity&&(r.integrity=a.integrity),a.referrerPolicy&&(r.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?r.credentials="include":a.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(a){if(a.ep)return;a.ep=!0;const r=e(a);fetch(a.href,r)}})();function Ck(n){return n&&n.__esModule&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n}function W1(n){if(Object.prototype.hasOwnProperty.call(n,"__esModule"))return n;var t=n.default;if(typeof t=="function"){var e=function s(){var a=!1;try{a=this instanceof s}catch{}return a?Reflect.construct(t,arguments,this.constructor):t.apply(this,arguments)};e.prototype=t.prototype}else e={};return Object.defineProperty(e,"__esModule",{value:!0}),Object.keys(n).forEach(function(s){var a=Object.getOwnPropertyDescriptor(n,s);Object.defineProperty(e,s,a.get?a:{enumerable:!0,get:function(){return n[s]}})}),e}var Nx={exports:{}},ph={};/**
 * @license React
 * react-jsx-runtime.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var CC;function BF(){if(CC)return ph;CC=1;var n=Symbol.for("react.transitional.element"),t=Symbol.for("react.fragment");function e(s,a,r){var i=null;if(r!==void 0&&(i=""+r),a.key!==void 0&&(i=""+a.key),"key"in a){r={};for(var l in a)l!=="key"&&(r[l]=a[l])}else r=a;return a=r.ref,{$$typeof:n,type:s,key:i,ref:a!==void 0?a:null,props:r}}return ph.Fragment=t,ph.jsx=e,ph.jsxs=e,ph}var $C;function VF(){return $C||($C=1,Nx.exports=BF()),Nx.exports}var ui=VF(),Tx={exports:{}},Ht={};/**
 * @license React
 * react.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var kC;function PF(){if(kC)return Ht;kC=1;var n=Symbol.for("react.transitional.element"),t=Symbol.for("react.portal"),e=Symbol.for("react.fragment"),s=Symbol.for("react.strict_mode"),a=Symbol.for("react.profiler"),r=Symbol.for("react.consumer"),i=Symbol.for("react.context"),l=Symbol.for("react.forward_ref"),u=Symbol.for("react.suspense"),h=Symbol.for("react.memo"),f=Symbol.for("react.lazy"),p=Symbol.iterator;function m(M){return M===null||typeof M!="object"?null:(M=p&&M[p]||M["@@iterator"],typeof M=="function"?M:null)}var y={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},b=Object.assign,v={};function w(M,j,st){this.props=M,this.context=j,this.refs=v,this.updater=st||y}w.prototype.isReactComponent={},w.prototype.setState=function(M,j){if(typeof M!="object"&&typeof M!="function"&&M!=null)throw Error("takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,M,j,"setState")},w.prototype.forceUpdate=function(M){this.updater.enqueueForceUpdate(this,M,"forceUpdate")};function S(){}S.prototype=w.prototype;function T(M,j,st){this.props=M,this.context=j,this.refs=v,this.updater=st||y}var $=T.prototype=new S;$.constructor=T,b($,w.prototype),$.isPureReactComponent=!0;var C=Array.isArray,I={H:null,A:null,T:null,S:null,V:null},R=Object.prototype.hasOwnProperty;function F(M,j,st,et,ft,mt){return st=mt.ref,{$$typeof:n,type:M,key:j,ref:st!==void 0?st:null,props:mt}}function B(M,j){return F(M.type,j,void 0,void 0,void 0,M.props)}function L(M){return typeof M=="object"&&M!==null&&M.$$typeof===n}function z(M){var j={"=":"=0",":":"=2"};return"$"+M.replace(/[=:]/g,function(st){return j[st]})}var A=/\/+/g;function G(M,j){return typeof M=="object"&&M!==null&&M.key!=null?z(""+M.key):j.toString(36)}function Q(){}function tt(M){switch(M.status){case"fulfilled":return M.value;case"rejected":throw M.reason;default:switch(typeof M.status=="string"?M.then(Q,Q):(M.status="pending",M.then(function(j){M.status==="pending"&&(M.status="fulfilled",M.value=j)},function(j){M.status==="pending"&&(M.status="rejected",M.reason=j)})),M.status){case"fulfilled":return M.value;case"rejected":throw M.reason}}throw M}function J(M,j,st,et,ft){var mt=typeof M;(mt==="undefined"||mt==="boolean")&&(M=null);var yt=!1;if(M===null)yt=!0;else switch(mt){case"bigint":case"string":case"number":yt=!0;break;case"object":switch(M.$$typeof){case n:case t:yt=!0;break;case f:return yt=M._init,J(yt(M._payload),j,st,et,ft)}}if(yt)return ft=ft(M),yt=et===""?"."+G(M,0):et,C(ft)?(st="",yt!=null&&(st=yt.replace(A,"$&/")+"/"),J(ft,j,st,"",function(Dt){return Dt})):ft!=null&&(L(ft)&&(ft=B(ft,st+(ft.key==null||M&&M.key===ft.key?"":(""+ft.key).replace(A,"$&/")+"/")+yt)),j.push(ft)),1;yt=0;var Ct=et===""?".":et+":";if(C(M))for(var Nt=0;Nt<M.length;Nt++)et=M[Nt],mt=Ct+G(et,Nt),yt+=J(et,j,st,mt,ft);else if(Nt=m(M),typeof Nt=="function")for(M=Nt.call(M),Nt=0;!(et=M.next()).done;)et=et.value,mt=Ct+G(et,Nt++),yt+=J(et,j,st,mt,ft);else if(mt==="object"){if(typeof M.then=="function")return J(tt(M),j,st,et,ft);throw j=String(M),Error("Objects are not valid as a React child (found: "+(j==="[object Object]"?"object with keys {"+Object.keys(M).join(", ")+"}":j)+"). If you meant to render a collection of children, use an array instead.")}return yt}function V(M,j,st){if(M==null)return M;var et=[],ft=0;return J(M,et,"","",function(mt){return j.call(st,mt,ft++)}),et}function q(M){if(M._status===-1){var j=M._result;j=j(),j.then(function(st){(M._status===0||M._status===-1)&&(M._status=1,M._result=st)},function(st){(M._status===0||M._status===-1)&&(M._status=2,M._result=st)}),M._status===-1&&(M._status=0,M._result=j)}if(M._status===1)return M._result.default;throw M._result}var Y=typeof reportError=="function"?reportError:function(M){if(typeof window=="object"&&typeof window.ErrorEvent=="function"){var j=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:typeof M=="object"&&M!==null&&typeof M.message=="string"?String(M.message):String(M),error:M});if(!window.dispatchEvent(j))return}else if(typeof process=="object"&&typeof process.emit=="function"){process.emit("uncaughtException",M);return}console.error(M)};function it(){}return Ht.Children={map:V,forEach:function(M,j,st){V(M,function(){j.apply(this,arguments)},st)},count:function(M){var j=0;return V(M,function(){j++}),j},toArray:function(M){return V(M,function(j){return j})||[]},only:function(M){if(!L(M))throw Error("React.Children.only expected to receive a single React element child.");return M}},Ht.Component=w,Ht.Fragment=e,Ht.Profiler=a,Ht.PureComponent=T,Ht.StrictMode=s,Ht.Suspense=u,Ht.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE=I,Ht.__COMPILER_RUNTIME={__proto__:null,c:function(M){return I.H.useMemoCache(M)}},Ht.cache=function(M){return function(){return M.apply(null,arguments)}},Ht.cloneElement=function(M,j,st){if(M==null)throw Error("The argument must be a React element, but you passed "+M+".");var et=b({},M.props),ft=M.key,mt=void 0;if(j!=null)for(yt in j.ref!==void 0&&(mt=void 0),j.key!==void 0&&(ft=""+j.key),j)!R.call(j,yt)||yt==="key"||yt==="__self"||yt==="__source"||yt==="ref"&&j.ref===void 0||(et[yt]=j[yt]);var yt=arguments.length-2;if(yt===1)et.children=st;else if(1<yt){for(var Ct=Array(yt),Nt=0;Nt<yt;Nt++)Ct[Nt]=arguments[Nt+2];et.children=Ct}return F(M.type,ft,void 0,void 0,mt,et)},Ht.createContext=function(M){return M={$$typeof:i,_currentValue:M,_currentValue2:M,_threadCount:0,Provider:null,Consumer:null},M.Provider=M,M.Consumer={$$typeof:r,_context:M},M},Ht.createElement=function(M,j,st){var et,ft={},mt=null;if(j!=null)for(et in j.key!==void 0&&(mt=""+j.key),j)R.call(j,et)&&et!=="key"&&et!=="__self"&&et!=="__source"&&(ft[et]=j[et]);var yt=arguments.length-2;if(yt===1)ft.children=st;else if(1<yt){for(var Ct=Array(yt),Nt=0;Nt<yt;Nt++)Ct[Nt]=arguments[Nt+2];ft.children=Ct}if(M&&M.defaultProps)for(et in yt=M.defaultProps,yt)ft[et]===void 0&&(ft[et]=yt[et]);return F(M,mt,void 0,void 0,null,ft)},Ht.createRef=function(){return{current:null}},Ht.forwardRef=function(M){return{$$typeof:l,render:M}},Ht.isValidElement=L,Ht.lazy=function(M){return{$$typeof:f,_payload:{_status:-1,_result:M},_init:q}},Ht.memo=function(M,j){return{$$typeof:h,type:M,compare:j===void 0?null:j}},Ht.startTransition=function(M){var j=I.T,st={};I.T=st;try{var et=M(),ft=I.S;ft!==null&&ft(st,et),typeof et=="object"&&et!==null&&typeof et.then=="function"&&et.then(it,Y)}catch(mt){Y(mt)}finally{I.T=j}},Ht.unstable_useCacheRefresh=function(){return I.H.useCacheRefresh()},Ht.use=function(M){return I.H.use(M)},Ht.useActionState=function(M,j,st){return I.H.useActionState(M,j,st)},Ht.useCallback=function(M,j){return I.H.useCallback(M,j)},Ht.useContext=function(M){return I.H.useContext(M)},Ht.useDebugValue=function(){},Ht.useDeferredValue=function(M,j){return I.H.useDeferredValue(M,j)},Ht.useEffect=function(M,j,st){var et=I.H;if(typeof st=="function")throw Error("useEffect CRUD overload is not enabled in this build of React.");return et.useEffect(M,j)},Ht.useId=function(){return I.H.useId()},Ht.useImperativeHandle=function(M,j,st){return I.H.useImperativeHandle(M,j,st)},Ht.useInsertionEffect=function(M,j){return I.H.useInsertionEffect(M,j)},Ht.useLayoutEffect=function(M,j){return I.H.useLayoutEffect(M,j)},Ht.useMemo=function(M,j){return I.H.useMemo(M,j)},Ht.useOptimistic=function(M,j){return I.H.useOptimistic(M,j)},Ht.useReducer=function(M,j,st){return I.H.useReducer(M,j,st)},Ht.useRef=function(M){return I.H.useRef(M)},Ht.useState=function(M){return I.H.useState(M)},Ht.useSyncExternalStore=function(M,j,st){return I.H.useSyncExternalStore(M,j,st)},Ht.useTransition=function(){return I.H.useTransition()},Ht.version="19.1.0",Ht}var IC;function Km(){return IC||(IC=1,Tx.exports=PF()),Tx.exports}var Ma=Km(),Cx={exports:{}},mh={},$x={exports:{}},kx={};/**
 * @license React
 * scheduler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var EC;function UF(){return EC||(EC=1,function(n){function t(V,q){var Y=V.length;V.push(q);t:for(;0<Y;){var it=Y-1>>>1,M=V[it];if(0<a(M,q))V[it]=q,V[Y]=M,Y=it;else break t}}function e(V){return V.length===0?null:V[0]}function s(V){if(V.length===0)return null;var q=V[0],Y=V.pop();if(Y!==q){V[0]=Y;t:for(var it=0,M=V.length,j=M>>>1;it<j;){var st=2*(it+1)-1,et=V[st],ft=st+1,mt=V[ft];if(0>a(et,Y))ft<M&&0>a(mt,et)?(V[it]=mt,V[ft]=Y,it=ft):(V[it]=et,V[st]=Y,it=st);else if(ft<M&&0>a(mt,Y))V[it]=mt,V[ft]=Y,it=ft;else break t}}return q}function a(V,q){var Y=V.sortIndex-q.sortIndex;return Y!==0?Y:V.id-q.id}if(n.unstable_now=void 0,typeof performance=="object"&&typeof performance.now=="function"){var r=performance;n.unstable_now=function(){return r.now()}}else{var i=Date,l=i.now();n.unstable_now=function(){return i.now()-l}}var u=[],h=[],f=1,p=null,m=3,y=!1,b=!1,v=!1,w=!1,S=typeof setTimeout=="function"?setTimeout:null,T=typeof clearTimeout=="function"?clearTimeout:null,$=typeof setImmediate<"u"?setImmediate:null;function C(V){for(var q=e(h);q!==null;){if(q.callback===null)s(h);else if(q.startTime<=V)s(h),q.sortIndex=q.expirationTime,t(u,q);else break;q=e(h)}}function I(V){if(v=!1,C(V),!b)if(e(u)!==null)b=!0,R||(R=!0,G());else{var q=e(h);q!==null&&J(I,q.startTime-V)}}var R=!1,F=-1,B=5,L=-1;function z(){return w?!0:!(n.unstable_now()-L<B)}function A(){if(w=!1,R){var V=n.unstable_now();L=V;var q=!0;try{t:{b=!1,v&&(v=!1,T(F),F=-1),y=!0;var Y=m;try{e:{for(C(V),p=e(u);p!==null&&!(p.expirationTime>V&&z());){var it=p.callback;if(typeof it=="function"){p.callback=null,m=p.priorityLevel;var M=it(p.expirationTime<=V);if(V=n.unstable_now(),typeof M=="function"){p.callback=M,C(V),q=!0;break e}p===e(u)&&s(u),C(V)}else s(u);p=e(u)}if(p!==null)q=!0;else{var j=e(h);j!==null&&J(I,j.startTime-V),q=!1}}break t}finally{p=null,m=Y,y=!1}q=void 0}}finally{q?G():R=!1}}}var G;if(typeof $=="function")G=function(){$(A)};else if(typeof MessageChannel<"u"){var Q=new MessageChannel,tt=Q.port2;Q.port1.onmessage=A,G=function(){tt.postMessage(null)}}else G=function(){S(A,0)};function J(V,q){F=S(function(){V(n.unstable_now())},q)}n.unstable_IdlePriority=5,n.unstable_ImmediatePriority=1,n.unstable_LowPriority=4,n.unstable_NormalPriority=3,n.unstable_Profiling=null,n.unstable_UserBlockingPriority=2,n.unstable_cancelCallback=function(V){V.callback=null},n.unstable_forceFrameRate=function(V){0>V||125<V?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):B=0<V?Math.floor(1e3/V):5},n.unstable_getCurrentPriorityLevel=function(){return m},n.unstable_next=function(V){switch(m){case 1:case 2:case 3:var q=3;break;default:q=m}var Y=m;m=q;try{return V()}finally{m=Y}},n.unstable_requestPaint=function(){w=!0},n.unstable_runWithPriority=function(V,q){switch(V){case 1:case 2:case 3:case 4:case 5:break;default:V=3}var Y=m;m=V;try{return q()}finally{m=Y}},n.unstable_scheduleCallback=function(V,q,Y){var it=n.unstable_now();switch(typeof Y=="object"&&Y!==null?(Y=Y.delay,Y=typeof Y=="number"&&0<Y?it+Y:it):Y=it,V){case 1:var M=-1;break;case 2:M=250;break;case 5:M=1073741823;break;case 4:M=1e4;break;default:M=5e3}return M=Y+M,V={id:f++,callback:q,priorityLevel:V,startTime:Y,expirationTime:M,sortIndex:-1},Y>it?(V.sortIndex=Y,t(h,V),e(u)===null&&V===e(h)&&(v?(T(F),F=-1):v=!0,J(I,Y-it))):(V.sortIndex=M,t(u,V),b||y||(b=!0,R||(R=!0,G()))),V},n.unstable_shouldYield=z,n.unstable_wrapCallback=function(V){var q=m;return function(){var Y=m;m=q;try{return V.apply(this,arguments)}finally{m=Y}}}}(kx)),kx}var AC;function GF(){return AC||(AC=1,$x.exports=UF()),$x.exports}var Ix={exports:{}},Hn={};/**
 * @license React
 * react-dom.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var RC;function WF(){if(RC)return Hn;RC=1;var n=Km();function t(u){var h="https://react.dev/errors/"+u;if(1<arguments.length){h+="?args[]="+encodeURIComponent(arguments[1]);for(var f=2;f<arguments.length;f++)h+="&args[]="+encodeURIComponent(arguments[f])}return"Minified React error #"+u+"; visit "+h+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function e(){}var s={d:{f:e,r:function(){throw Error(t(522))},D:e,C:e,L:e,m:e,X:e,S:e,M:e},p:0,findDOMNode:null},a=Symbol.for("react.portal");function r(u,h,f){var p=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:a,key:p==null?null:""+p,children:u,containerInfo:h,implementation:f}}var i=n.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;function l(u,h){if(u==="font")return"";if(typeof h=="string")return h==="use-credentials"?h:""}return Hn.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE=s,Hn.createPortal=function(u,h){var f=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!h||h.nodeType!==1&&h.nodeType!==9&&h.nodeType!==11)throw Error(t(299));return r(u,h,null,f)},Hn.flushSync=function(u){var h=i.T,f=s.p;try{if(i.T=null,s.p=2,u)return u()}finally{i.T=h,s.p=f,s.d.f()}},Hn.preconnect=function(u,h){typeof u=="string"&&(h?(h=h.crossOrigin,h=typeof h=="string"?h==="use-credentials"?h:"":void 0):h=null,s.d.C(u,h))},Hn.prefetchDNS=function(u){typeof u=="string"&&s.d.D(u)},Hn.preinit=function(u,h){if(typeof u=="string"&&h&&typeof h.as=="string"){var f=h.as,p=l(f,h.crossOrigin),m=typeof h.integrity=="string"?h.integrity:void 0,y=typeof h.fetchPriority=="string"?h.fetchPriority:void 0;f==="style"?s.d.S(u,typeof h.precedence=="string"?h.precedence:void 0,{crossOrigin:p,integrity:m,fetchPriority:y}):f==="script"&&s.d.X(u,{crossOrigin:p,integrity:m,fetchPriority:y,nonce:typeof h.nonce=="string"?h.nonce:void 0})}},Hn.preinitModule=function(u,h){if(typeof u=="string")if(typeof h=="object"&&h!==null){if(h.as==null||h.as==="script"){var f=l(h.as,h.crossOrigin);s.d.M(u,{crossOrigin:f,integrity:typeof h.integrity=="string"?h.integrity:void 0,nonce:typeof h.nonce=="string"?h.nonce:void 0})}}else h==null&&s.d.M(u)},Hn.preload=function(u,h){if(typeof u=="string"&&typeof h=="object"&&h!==null&&typeof h.as=="string"){var f=h.as,p=l(f,h.crossOrigin);s.d.L(u,f,{crossOrigin:p,integrity:typeof h.integrity=="string"?h.integrity:void 0,nonce:typeof h.nonce=="string"?h.nonce:void 0,type:typeof h.type=="string"?h.type:void 0,fetchPriority:typeof h.fetchPriority=="string"?h.fetchPriority:void 0,referrerPolicy:typeof h.referrerPolicy=="string"?h.referrerPolicy:void 0,imageSrcSet:typeof h.imageSrcSet=="string"?h.imageSrcSet:void 0,imageSizes:typeof h.imageSizes=="string"?h.imageSizes:void 0,media:typeof h.media=="string"?h.media:void 0})}},Hn.preloadModule=function(u,h){if(typeof u=="string")if(h){var f=l(h.as,h.crossOrigin);s.d.m(u,{as:typeof h.as=="string"&&h.as!=="script"?h.as:void 0,crossOrigin:f,integrity:typeof h.integrity=="string"?h.integrity:void 0})}else s.d.m(u)},Hn.requestFormReset=function(u){s.d.r(u)},Hn.unstable_batchedUpdates=function(u,h){return u(h)},Hn.useFormState=function(u,h,f){return i.H.useFormState(u,h,f)},Hn.useFormStatus=function(){return i.H.useHostTransitionStatus()},Hn.version="19.1.0",Hn}var DC;function HF(){if(DC)return Ix.exports;DC=1;function n(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(n)}catch(t){console.error(t)}}return n(),Ix.exports=WF(),Ix.exports}/**
 * @license React
 * react-dom-client.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var OC;function jF(){if(OC)return mh;OC=1;var n=GF(),t=Km(),e=HF();function s(o){var c="https://react.dev/errors/"+o;if(1<arguments.length){c+="?args[]="+encodeURIComponent(arguments[1]);for(var d=2;d<arguments.length;d++)c+="&args[]="+encodeURIComponent(arguments[d])}return"Minified React error #"+o+"; visit "+c+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function a(o){return!(!o||o.nodeType!==1&&o.nodeType!==9&&o.nodeType!==11)}function r(o){var c=o,d=o;if(o.alternate)for(;c.return;)c=c.return;else{o=c;do c=o,(c.flags&4098)!==0&&(d=c.return),o=c.return;while(o)}return c.tag===3?d:null}function i(o){if(o.tag===13){var c=o.memoizedState;if(c===null&&(o=o.alternate,o!==null&&(c=o.memoizedState)),c!==null)return c.dehydrated}return null}function l(o){if(r(o)!==o)throw Error(s(188))}function u(o){var c=o.alternate;if(!c){if(c=r(o),c===null)throw Error(s(188));return c!==o?null:o}for(var d=o,g=c;;){var x=d.return;if(x===null)break;var N=x.alternate;if(N===null){if(g=x.return,g!==null){d=g;continue}break}if(x.child===N.child){for(N=x.child;N;){if(N===d)return l(x),o;if(N===g)return l(x),c;N=N.sibling}throw Error(s(188))}if(d.return!==g.return)d=x,g=N;else{for(var E=!1,_=x.child;_;){if(_===d){E=!0,d=x,g=N;break}if(_===g){E=!0,g=x,d=N;break}_=_.sibling}if(!E){for(_=N.child;_;){if(_===d){E=!0,d=N,g=x;break}if(_===g){E=!0,g=N,d=x;break}_=_.sibling}if(!E)throw Error(s(189))}}if(d.alternate!==g)throw Error(s(190))}if(d.tag!==3)throw Error(s(188));return d.stateNode.current===d?o:c}function h(o){var c=o.tag;if(c===5||c===26||c===27||c===6)return o;for(o=o.child;o!==null;){if(c=h(o),c!==null)return c;o=o.sibling}return null}var f=Object.assign,p=Symbol.for("react.element"),m=Symbol.for("react.transitional.element"),y=Symbol.for("react.portal"),b=Symbol.for("react.fragment"),v=Symbol.for("react.strict_mode"),w=Symbol.for("react.profiler"),S=Symbol.for("react.provider"),T=Symbol.for("react.consumer"),$=Symbol.for("react.context"),C=Symbol.for("react.forward_ref"),I=Symbol.for("react.suspense"),R=Symbol.for("react.suspense_list"),F=Symbol.for("react.memo"),B=Symbol.for("react.lazy"),L=Symbol.for("react.activity"),z=Symbol.for("react.memo_cache_sentinel"),A=Symbol.iterator;function G(o){return o===null||typeof o!="object"?null:(o=A&&o[A]||o["@@iterator"],typeof o=="function"?o:null)}var Q=Symbol.for("react.client.reference");function tt(o){if(o==null)return null;if(typeof o=="function")return o.$$typeof===Q?null:o.displayName||o.name||null;if(typeof o=="string")return o;switch(o){case b:return"Fragment";case w:return"Profiler";case v:return"StrictMode";case I:return"Suspense";case R:return"SuspenseList";case L:return"Activity"}if(typeof o=="object")switch(o.$$typeof){case y:return"Portal";case $:return(o.displayName||"Context")+".Provider";case T:return(o._context.displayName||"Context")+".Consumer";case C:var c=o.render;return o=o.displayName,o||(o=c.displayName||c.name||"",o=o!==""?"ForwardRef("+o+")":"ForwardRef"),o;case F:return c=o.displayName||null,c!==null?c:tt(o.type)||"Memo";case B:c=o._payload,o=o._init;try{return tt(o(c))}catch{}}return null}var J=Array.isArray,V=t.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,q=e.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,Y={pending:!1,data:null,method:null,action:null},it=[],M=-1;function j(o){return{current:o}}function st(o){0>M||(o.current=it[M],it[M]=null,M--)}function et(o,c){M++,it[M]=o.current,o.current=c}var ft=j(null),mt=j(null),yt=j(null),Ct=j(null);function Nt(o,c){switch(et(yt,c),et(mt,o),et(ft,null),c.nodeType){case 9:case 11:o=(o=c.documentElement)&&(o=o.namespaceURI)?J2(o):0;break;default:if(o=c.tagName,c=c.namespaceURI)c=J2(c),o=tC(c,o);else switch(o){case"svg":o=1;break;case"math":o=2;break;default:o=0}}st(ft),et(ft,o)}function Dt(){st(ft),st(mt),st(yt)}function Vt(o){o.memoizedState!==null&&et(Ct,o);var c=ft.current,d=tC(c,o.type);c!==d&&(et(mt,o),et(ft,d))}function Pt(o){mt.current===o&&(st(ft),st(mt)),Ct.current===o&&(st(Ct),uh._currentValue=Y)}var ie=Object.prototype.hasOwnProperty,ce=n.unstable_scheduleCallback,Ce=n.unstable_cancelCallback,ge=n.unstable_shouldYield,he=n.unstable_requestPaint,ae=n.unstable_now,$e=n.unstable_getCurrentPriorityLevel,Hs=n.unstable_ImmediatePriority,Ye=n.unstable_UserBlockingPriority,ks=n.unstable_NormalPriority,ts=n.unstable_LowPriority,Da=n.unstable_IdlePriority,Is=n.log,da=n.unstable_setDisableYieldValue,ds=null,Ue=null;function Fn(o){if(typeof Is=="function"&&da(o),Ue&&typeof Ue.setStrictMode=="function")try{Ue.setStrictMode(ds,o)}catch{}}var dn=Math.clz32?Math.clz32:hb,gc=Math.log,yc=Math.LN2;function hb(o){return o>>>=0,o===0?32:31-(gc(o)/yc|0)|0}var sr=256,Yo=4194304;function ar(o){var c=o&42;if(c!==0)return c;switch(o&-o){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:return 64;case 128:return 128;case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return o&4194048;case 4194304:case 8388608:case 16777216:case 33554432:return o&62914560;case 67108864:return 67108864;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 0;default:return o}}function Ff(o,c,d){var g=o.pendingLanes;if(g===0)return 0;var x=0,N=o.suspendedLanes,E=o.pingedLanes;o=o.warmLanes;var _=g&134217727;return _!==0?(g=_&~N,g!==0?x=ar(g):(E&=_,E!==0?x=ar(E):d||(d=_&~o,d!==0&&(x=ar(d))))):(_=g&~N,_!==0?x=ar(_):E!==0?x=ar(E):d||(d=g&~o,d!==0&&(x=ar(d)))),x===0?0:c!==0&&c!==x&&(c&N)===0&&(N=x&-x,d=c&-c,N>=d||N===32&&(d&4194048)!==0)?c:x}function bc(o,c){return(o.pendingLanes&~(o.suspendedLanes&~o.pingedLanes)&c)===0}function C_(o,c){switch(o){case 1:case 2:case 4:case 8:case 64:return c+250;case 16:case 32:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return c+5e3;case 4194304:case 8388608:case 16777216:case 33554432:return-1;case 67108864:case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function LS(){var o=sr;return sr<<=1,(sr&4194048)===0&&(sr=256),o}function zS(){var o=Yo;return Yo<<=1,(Yo&62914560)===0&&(Yo=4194304),o}function db(o){for(var c=[],d=0;31>d;d++)c.push(o);return c}function xc(o,c){o.pendingLanes|=c,c!==268435456&&(o.suspendedLanes=0,o.pingedLanes=0,o.warmLanes=0)}function $_(o,c,d,g,x,N){var E=o.pendingLanes;o.pendingLanes=d,o.suspendedLanes=0,o.pingedLanes=0,o.warmLanes=0,o.expiredLanes&=d,o.entangledLanes&=d,o.errorRecoveryDisabledLanes&=d,o.shellSuspendCounter=0;var _=o.entanglements,W=o.expirationTimes,lt=o.hiddenUpdates;for(d=E&~d;0<d;){var pt=31-dn(d),bt=1<<pt;_[pt]=0,W[pt]=-1;var ut=lt[pt];if(ut!==null)for(lt[pt]=null,pt=0;pt<ut.length;pt++){var ct=ut[pt];ct!==null&&(ct.lane&=-536870913)}d&=~bt}g!==0&&MS(o,g,0),N!==0&&x===0&&o.tag!==0&&(o.suspendedLanes|=N&~(E&~c))}function MS(o,c,d){o.pendingLanes|=c,o.suspendedLanes&=~c;var g=31-dn(c);o.entangledLanes|=c,o.entanglements[g]=o.entanglements[g]|1073741824|d&4194090}function BS(o,c){var d=o.entangledLanes|=c;for(o=o.entanglements;d;){var g=31-dn(d),x=1<<g;x&c|o[g]&c&&(o[g]|=c),d&=~x}}function fb(o){switch(o){case 2:o=1;break;case 8:o=4;break;case 32:o=16;break;case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:o=128;break;case 268435456:o=134217728;break;default:o=0}return o}function pb(o){return o&=-o,2<o?8<o?(o&134217727)!==0?32:268435456:8:2}function VS(){var o=q.p;return o!==0?o:(o=window.event,o===void 0?32:xC(o.type))}function k_(o,c){var d=q.p;try{return q.p=o,c()}finally{q.p=d}}var Vr=Math.random().toString(36).slice(2),Gn="__reactFiber$"+Vr,fs="__reactProps$"+Vr,Zo="__reactContainer$"+Vr,mb="__reactEvents$"+Vr,I_="__reactListeners$"+Vr,E_="__reactHandles$"+Vr,PS="__reactResources$"+Vr,vc="__reactMarker$"+Vr;function gb(o){delete o[Gn],delete o[fs],delete o[mb],delete o[I_],delete o[E_]}function Qo(o){var c=o[Gn];if(c)return c;for(var d=o.parentNode;d;){if(c=d[Zo]||d[Gn]){if(d=c.alternate,c.child!==null||d!==null&&d.child!==null)for(o=aC(o);o!==null;){if(d=o[Gn])return d;o=aC(o)}return c}o=d,d=o.parentNode}return null}function Jo(o){if(o=o[Gn]||o[Zo]){var c=o.tag;if(c===5||c===6||c===13||c===26||c===27||c===3)return o}return null}function wc(o){var c=o.tag;if(c===5||c===26||c===27||c===6)return o.stateNode;throw Error(s(33))}function tl(o){var c=o[PS];return c||(c=o[PS]={hoistableStyles:new Map,hoistableScripts:new Map}),c}function Sn(o){o[vc]=!0}var US=new Set,GS={};function Vi(o,c){el(o,c),el(o+"Capture",c)}function el(o,c){for(GS[o]=c,o=0;o<c.length;o++)US.add(c[o])}var A_=RegExp("^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"),WS={},HS={};function R_(o){return ie.call(HS,o)?!0:ie.call(WS,o)?!1:A_.test(o)?HS[o]=!0:(WS[o]=!0,!1)}function Lf(o,c,d){if(R_(c))if(d===null)o.removeAttribute(c);else{switch(typeof d){case"undefined":case"function":case"symbol":o.removeAttribute(c);return;case"boolean":var g=c.toLowerCase().slice(0,5);if(g!=="data-"&&g!=="aria-"){o.removeAttribute(c);return}}o.setAttribute(c,""+d)}}function zf(o,c,d){if(d===null)o.removeAttribute(c);else{switch(typeof d){case"undefined":case"function":case"symbol":case"boolean":o.removeAttribute(c);return}o.setAttribute(c,""+d)}}function rr(o,c,d,g){if(g===null)o.removeAttribute(d);else{switch(typeof g){case"undefined":case"function":case"symbol":case"boolean":o.removeAttribute(d);return}o.setAttributeNS(c,d,""+g)}}var yb,jS;function nl(o){if(yb===void 0)try{throw Error()}catch(d){var c=d.stack.trim().match(/\n( *(at )?)/);yb=c&&c[1]||"",jS=-1<d.stack.indexOf(`
    at`)?" (<anonymous>)":-1<d.stack.indexOf("@")?"@unknown:0:0":""}return`
`+yb+o+jS}var bb=!1;function xb(o,c){if(!o||bb)return"";bb=!0;var d=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{var g={DetermineComponentFrameRoot:function(){try{if(c){var bt=function(){throw Error()};if(Object.defineProperty(bt.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(bt,[])}catch(ct){var ut=ct}Reflect.construct(o,[],bt)}else{try{bt.call()}catch(ct){ut=ct}o.call(bt.prototype)}}else{try{throw Error()}catch(ct){ut=ct}(bt=o())&&typeof bt.catch=="function"&&bt.catch(function(){})}}catch(ct){if(ct&&ut&&typeof ct.stack=="string")return[ct.stack,ut.stack]}return[null,null]}};g.DetermineComponentFrameRoot.displayName="DetermineComponentFrameRoot";var x=Object.getOwnPropertyDescriptor(g.DetermineComponentFrameRoot,"name");x&&x.configurable&&Object.defineProperty(g.DetermineComponentFrameRoot,"name",{value:"DetermineComponentFrameRoot"});var N=g.DetermineComponentFrameRoot(),E=N[0],_=N[1];if(E&&_){var W=E.split(`
`),lt=_.split(`
`);for(x=g=0;g<W.length&&!W[g].includes("DetermineComponentFrameRoot");)g++;for(;x<lt.length&&!lt[x].includes("DetermineComponentFrameRoot");)x++;if(g===W.length||x===lt.length)for(g=W.length-1,x=lt.length-1;1<=g&&0<=x&&W[g]!==lt[x];)x--;for(;1<=g&&0<=x;g--,x--)if(W[g]!==lt[x]){if(g!==1||x!==1)do if(g--,x--,0>x||W[g]!==lt[x]){var pt=`
`+W[g].replace(" at new "," at ");return o.displayName&&pt.includes("<anonymous>")&&(pt=pt.replace("<anonymous>",o.displayName)),pt}while(1<=g&&0<=x);break}}}finally{bb=!1,Error.prepareStackTrace=d}return(d=o?o.displayName||o.name:"")?nl(d):""}function D_(o){switch(o.tag){case 26:case 27:case 5:return nl(o.type);case 16:return nl("Lazy");case 13:return nl("Suspense");case 19:return nl("SuspenseList");case 0:case 15:return xb(o.type,!1);case 11:return xb(o.type.render,!1);case 1:return xb(o.type,!0);case 31:return nl("Activity");default:return""}}function qS(o){try{var c="";do c+=D_(o),o=o.return;while(o);return c}catch(d){return`
Error generating stack: `+d.message+`
`+d.stack}}function js(o){switch(typeof o){case"bigint":case"boolean":case"number":case"string":case"undefined":return o;case"object":return o;default:return""}}function XS(o){var c=o.type;return(o=o.nodeName)&&o.toLowerCase()==="input"&&(c==="checkbox"||c==="radio")}function O_(o){var c=XS(o)?"checked":"value",d=Object.getOwnPropertyDescriptor(o.constructor.prototype,c),g=""+o[c];if(!o.hasOwnProperty(c)&&typeof d<"u"&&typeof d.get=="function"&&typeof d.set=="function"){var x=d.get,N=d.set;return Object.defineProperty(o,c,{configurable:!0,get:function(){return x.call(this)},set:function(E){g=""+E,N.call(this,E)}}),Object.defineProperty(o,c,{enumerable:d.enumerable}),{getValue:function(){return g},setValue:function(E){g=""+E},stopTracking:function(){o._valueTracker=null,delete o[c]}}}}function Mf(o){o._valueTracker||(o._valueTracker=O_(o))}function KS(o){if(!o)return!1;var c=o._valueTracker;if(!c)return!0;var d=c.getValue(),g="";return o&&(g=XS(o)?o.checked?"true":"false":o.value),o=g,o!==d?(c.setValue(o),!0):!1}function Bf(o){if(o=o||(typeof document<"u"?document:void 0),typeof o>"u")return null;try{return o.activeElement||o.body}catch{return o.body}}var __=/[\n"\\]/g;function qs(o){return o.replace(__,function(c){return"\\"+c.charCodeAt(0).toString(16)+" "})}function vb(o,c,d,g,x,N,E,_){o.name="",E!=null&&typeof E!="function"&&typeof E!="symbol"&&typeof E!="boolean"?o.type=E:o.removeAttribute("type"),c!=null?E==="number"?(c===0&&o.value===""||o.value!=c)&&(o.value=""+js(c)):o.value!==""+js(c)&&(o.value=""+js(c)):E!=="submit"&&E!=="reset"||o.removeAttribute("value"),c!=null?wb(o,E,js(c)):d!=null?wb(o,E,js(d)):g!=null&&o.removeAttribute("value"),x==null&&N!=null&&(o.defaultChecked=!!N),x!=null&&(o.checked=x&&typeof x!="function"&&typeof x!="symbol"),_!=null&&typeof _!="function"&&typeof _!="symbol"&&typeof _!="boolean"?o.name=""+js(_):o.removeAttribute("name")}function YS(o,c,d,g,x,N,E,_){if(N!=null&&typeof N!="function"&&typeof N!="symbol"&&typeof N!="boolean"&&(o.type=N),c!=null||d!=null){if(!(N!=="submit"&&N!=="reset"||c!=null))return;d=d!=null?""+js(d):"",c=c!=null?""+js(c):d,_||c===o.value||(o.value=c),o.defaultValue=c}g=g??x,g=typeof g!="function"&&typeof g!="symbol"&&!!g,o.checked=_?o.checked:!!g,o.defaultChecked=!!g,E!=null&&typeof E!="function"&&typeof E!="symbol"&&typeof E!="boolean"&&(o.name=E)}function wb(o,c,d){c==="number"&&Bf(o.ownerDocument)===o||o.defaultValue===""+d||(o.defaultValue=""+d)}function sl(o,c,d,g){if(o=o.options,c){c={};for(var x=0;x<d.length;x++)c["$"+d[x]]=!0;for(d=0;d<o.length;d++)x=c.hasOwnProperty("$"+o[d].value),o[d].selected!==x&&(o[d].selected=x),x&&g&&(o[d].defaultSelected=!0)}else{for(d=""+js(d),c=null,x=0;x<o.length;x++){if(o[x].value===d){o[x].selected=!0,g&&(o[x].defaultSelected=!0);return}c!==null||o[x].disabled||(c=o[x])}c!==null&&(c.selected=!0)}}function ZS(o,c,d){if(c!=null&&(c=""+js(c),c!==o.value&&(o.value=c),d==null)){o.defaultValue!==c&&(o.defaultValue=c);return}o.defaultValue=d!=null?""+js(d):""}function QS(o,c,d,g){if(c==null){if(g!=null){if(d!=null)throw Error(s(92));if(J(g)){if(1<g.length)throw Error(s(93));g=g[0]}d=g}d==null&&(d=""),c=d}d=js(c),o.defaultValue=d,g=o.textContent,g===d&&g!==""&&g!==null&&(o.value=g)}function al(o,c){if(c){var d=o.firstChild;if(d&&d===o.lastChild&&d.nodeType===3){d.nodeValue=c;return}}o.textContent=c}var F_=new Set("animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp".split(" "));function JS(o,c,d){var g=c.indexOf("--")===0;d==null||typeof d=="boolean"||d===""?g?o.setProperty(c,""):c==="float"?o.cssFloat="":o[c]="":g?o.setProperty(c,d):typeof d!="number"||d===0||F_.has(c)?c==="float"?o.cssFloat=d:o[c]=(""+d).trim():o[c]=d+"px"}function tN(o,c,d){if(c!=null&&typeof c!="object")throw Error(s(62));if(o=o.style,d!=null){for(var g in d)!d.hasOwnProperty(g)||c!=null&&c.hasOwnProperty(g)||(g.indexOf("--")===0?o.setProperty(g,""):g==="float"?o.cssFloat="":o[g]="");for(var x in c)g=c[x],c.hasOwnProperty(x)&&d[x]!==g&&JS(o,x,g)}else for(var N in c)c.hasOwnProperty(N)&&JS(o,N,c[N])}function Sb(o){if(o.indexOf("-")===-1)return!1;switch(o){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var L_=new Map([["acceptCharset","accept-charset"],["htmlFor","for"],["httpEquiv","http-equiv"],["crossOrigin","crossorigin"],["accentHeight","accent-height"],["alignmentBaseline","alignment-baseline"],["arabicForm","arabic-form"],["baselineShift","baseline-shift"],["capHeight","cap-height"],["clipPath","clip-path"],["clipRule","clip-rule"],["colorInterpolation","color-interpolation"],["colorInterpolationFilters","color-interpolation-filters"],["colorProfile","color-profile"],["colorRendering","color-rendering"],["dominantBaseline","dominant-baseline"],["enableBackground","enable-background"],["fillOpacity","fill-opacity"],["fillRule","fill-rule"],["floodColor","flood-color"],["floodOpacity","flood-opacity"],["fontFamily","font-family"],["fontSize","font-size"],["fontSizeAdjust","font-size-adjust"],["fontStretch","font-stretch"],["fontStyle","font-style"],["fontVariant","font-variant"],["fontWeight","font-weight"],["glyphName","glyph-name"],["glyphOrientationHorizontal","glyph-orientation-horizontal"],["glyphOrientationVertical","glyph-orientation-vertical"],["horizAdvX","horiz-adv-x"],["horizOriginX","horiz-origin-x"],["imageRendering","image-rendering"],["letterSpacing","letter-spacing"],["lightingColor","lighting-color"],["markerEnd","marker-end"],["markerMid","marker-mid"],["markerStart","marker-start"],["overlinePosition","overline-position"],["overlineThickness","overline-thickness"],["paintOrder","paint-order"],["panose-1","panose-1"],["pointerEvents","pointer-events"],["renderingIntent","rendering-intent"],["shapeRendering","shape-rendering"],["stopColor","stop-color"],["stopOpacity","stop-opacity"],["strikethroughPosition","strikethrough-position"],["strikethroughThickness","strikethrough-thickness"],["strokeDasharray","stroke-dasharray"],["strokeDashoffset","stroke-dashoffset"],["strokeLinecap","stroke-linecap"],["strokeLinejoin","stroke-linejoin"],["strokeMiterlimit","stroke-miterlimit"],["strokeOpacity","stroke-opacity"],["strokeWidth","stroke-width"],["textAnchor","text-anchor"],["textDecoration","text-decoration"],["textRendering","text-rendering"],["transformOrigin","transform-origin"],["underlinePosition","underline-position"],["underlineThickness","underline-thickness"],["unicodeBidi","unicode-bidi"],["unicodeRange","unicode-range"],["unitsPerEm","units-per-em"],["vAlphabetic","v-alphabetic"],["vHanging","v-hanging"],["vIdeographic","v-ideographic"],["vMathematical","v-mathematical"],["vectorEffect","vector-effect"],["vertAdvY","vert-adv-y"],["vertOriginX","vert-origin-x"],["vertOriginY","vert-origin-y"],["wordSpacing","word-spacing"],["writingMode","writing-mode"],["xmlnsXlink","xmlns:xlink"],["xHeight","x-height"]]),z_=/^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*:/i;function Vf(o){return z_.test(""+o)?"javascript:throw new Error('React has blocked a javascript: URL as a security precaution.')":o}var Nb=null;function Tb(o){return o=o.target||o.srcElement||window,o.correspondingUseElement&&(o=o.correspondingUseElement),o.nodeType===3?o.parentNode:o}var rl=null,il=null;function eN(o){var c=Jo(o);if(c&&(o=c.stateNode)){var d=o[fs]||null;t:switch(o=c.stateNode,c.type){case"input":if(vb(o,d.value,d.defaultValue,d.defaultValue,d.checked,d.defaultChecked,d.type,d.name),c=d.name,d.type==="radio"&&c!=null){for(d=o;d.parentNode;)d=d.parentNode;for(d=d.querySelectorAll('input[name="'+qs(""+c)+'"][type="radio"]'),c=0;c<d.length;c++){var g=d[c];if(g!==o&&g.form===o.form){var x=g[fs]||null;if(!x)throw Error(s(90));vb(g,x.value,x.defaultValue,x.defaultValue,x.checked,x.defaultChecked,x.type,x.name)}}for(c=0;c<d.length;c++)g=d[c],g.form===o.form&&KS(g)}break t;case"textarea":ZS(o,d.value,d.defaultValue);break t;case"select":c=d.value,c!=null&&sl(o,!!d.multiple,c,!1)}}}var Cb=!1;function nN(o,c,d){if(Cb)return o(c,d);Cb=!0;try{var g=o(c);return g}finally{if(Cb=!1,(rl!==null||il!==null)&&(Cp(),rl&&(c=rl,o=il,il=rl=null,eN(c),o)))for(c=0;c<o.length;c++)eN(o[c])}}function Sc(o,c){var d=o.stateNode;if(d===null)return null;var g=d[fs]||null;if(g===null)return null;d=g[c];t:switch(c){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(g=!g.disabled)||(o=o.type,g=!(o==="button"||o==="input"||o==="select"||o==="textarea")),o=!g;break t;default:o=!1}if(o)return null;if(d&&typeof d!="function")throw Error(s(231,c,typeof d));return d}var ir=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),$b=!1;if(ir)try{var Nc={};Object.defineProperty(Nc,"passive",{get:function(){$b=!0}}),window.addEventListener("test",Nc,Nc),window.removeEventListener("test",Nc,Nc)}catch{$b=!1}var Pr=null,kb=null,Pf=null;function sN(){if(Pf)return Pf;var o,c=kb,d=c.length,g,x="value"in Pr?Pr.value:Pr.textContent,N=x.length;for(o=0;o<d&&c[o]===x[o];o++);var E=d-o;for(g=1;g<=E&&c[d-g]===x[N-g];g++);return Pf=x.slice(o,1<g?1-g:void 0)}function Uf(o){var c=o.keyCode;return"charCode"in o?(o=o.charCode,o===0&&c===13&&(o=13)):o=c,o===10&&(o=13),32<=o||o===13?o:0}function Gf(){return!0}function aN(){return!1}function ps(o){function c(d,g,x,N,E){this._reactName=d,this._targetInst=x,this.type=g,this.nativeEvent=N,this.target=E,this.currentTarget=null;for(var _ in o)o.hasOwnProperty(_)&&(d=o[_],this[_]=d?d(N):N[_]);return this.isDefaultPrevented=(N.defaultPrevented!=null?N.defaultPrevented:N.returnValue===!1)?Gf:aN,this.isPropagationStopped=aN,this}return f(c.prototype,{preventDefault:function(){this.defaultPrevented=!0;var d=this.nativeEvent;d&&(d.preventDefault?d.preventDefault():typeof d.returnValue!="unknown"&&(d.returnValue=!1),this.isDefaultPrevented=Gf)},stopPropagation:function(){var d=this.nativeEvent;d&&(d.stopPropagation?d.stopPropagation():typeof d.cancelBubble!="unknown"&&(d.cancelBubble=!0),this.isPropagationStopped=Gf)},persist:function(){},isPersistent:Gf}),c}var Pi={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(o){return o.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},Wf=ps(Pi),Tc=f({},Pi,{view:0,detail:0}),M_=ps(Tc),Ib,Eb,Cc,Hf=f({},Tc,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Rb,button:0,buttons:0,relatedTarget:function(o){return o.relatedTarget===void 0?o.fromElement===o.srcElement?o.toElement:o.fromElement:o.relatedTarget},movementX:function(o){return"movementX"in o?o.movementX:(o!==Cc&&(Cc&&o.type==="mousemove"?(Ib=o.screenX-Cc.screenX,Eb=o.screenY-Cc.screenY):Eb=Ib=0,Cc=o),Ib)},movementY:function(o){return"movementY"in o?o.movementY:Eb}}),rN=ps(Hf),B_=f({},Hf,{dataTransfer:0}),V_=ps(B_),P_=f({},Tc,{relatedTarget:0}),Ab=ps(P_),U_=f({},Pi,{animationName:0,elapsedTime:0,pseudoElement:0}),G_=ps(U_),W_=f({},Pi,{clipboardData:function(o){return"clipboardData"in o?o.clipboardData:window.clipboardData}}),H_=ps(W_),j_=f({},Pi,{data:0}),iN=ps(j_),q_={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},X_={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},K_={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Y_(o){var c=this.nativeEvent;return c.getModifierState?c.getModifierState(o):(o=K_[o])?!!c[o]:!1}function Rb(){return Y_}var Z_=f({},Tc,{key:function(o){if(o.key){var c=q_[o.key]||o.key;if(c!=="Unidentified")return c}return o.type==="keypress"?(o=Uf(o),o===13?"Enter":String.fromCharCode(o)):o.type==="keydown"||o.type==="keyup"?X_[o.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Rb,charCode:function(o){return o.type==="keypress"?Uf(o):0},keyCode:function(o){return o.type==="keydown"||o.type==="keyup"?o.keyCode:0},which:function(o){return o.type==="keypress"?Uf(o):o.type==="keydown"||o.type==="keyup"?o.keyCode:0}}),Q_=ps(Z_),J_=f({},Hf,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),oN=ps(J_),t3=f({},Tc,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Rb}),e3=ps(t3),n3=f({},Pi,{propertyName:0,elapsedTime:0,pseudoElement:0}),s3=ps(n3),a3=f({},Hf,{deltaX:function(o){return"deltaX"in o?o.deltaX:"wheelDeltaX"in o?-o.wheelDeltaX:0},deltaY:function(o){return"deltaY"in o?o.deltaY:"wheelDeltaY"in o?-o.wheelDeltaY:"wheelDelta"in o?-o.wheelDelta:0},deltaZ:0,deltaMode:0}),r3=ps(a3),i3=f({},Pi,{newState:0,oldState:0}),o3=ps(i3),l3=[9,13,27,32],Db=ir&&"CompositionEvent"in window,$c=null;ir&&"documentMode"in document&&($c=document.documentMode);var u3=ir&&"TextEvent"in window&&!$c,lN=ir&&(!Db||$c&&8<$c&&11>=$c),uN=" ",cN=!1;function hN(o,c){switch(o){case"keyup":return l3.indexOf(c.keyCode)!==-1;case"keydown":return c.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function dN(o){return o=o.detail,typeof o=="object"&&"data"in o?o.data:null}var ol=!1;function c3(o,c){switch(o){case"compositionend":return dN(c);case"keypress":return c.which!==32?null:(cN=!0,uN);case"textInput":return o=c.data,o===uN&&cN?null:o;default:return null}}function h3(o,c){if(ol)return o==="compositionend"||!Db&&hN(o,c)?(o=sN(),Pf=kb=Pr=null,ol=!1,o):null;switch(o){case"paste":return null;case"keypress":if(!(c.ctrlKey||c.altKey||c.metaKey)||c.ctrlKey&&c.altKey){if(c.char&&1<c.char.length)return c.char;if(c.which)return String.fromCharCode(c.which)}return null;case"compositionend":return lN&&c.locale!=="ko"?null:c.data;default:return null}}var d3={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function fN(o){var c=o&&o.nodeName&&o.nodeName.toLowerCase();return c==="input"?!!d3[o.type]:c==="textarea"}function pN(o,c,d,g){rl?il?il.push(g):il=[g]:rl=g,c=Rp(c,"onChange"),0<c.length&&(d=new Wf("onChange","change",null,d,g),o.push({event:d,listeners:c}))}var kc=null,Ic=null;function f3(o){X2(o,0)}function jf(o){var c=wc(o);if(KS(c))return o}function mN(o,c){if(o==="change")return c}var gN=!1;if(ir){var Ob;if(ir){var _b="oninput"in document;if(!_b){var yN=document.createElement("div");yN.setAttribute("oninput","return;"),_b=typeof yN.oninput=="function"}Ob=_b}else Ob=!1;gN=Ob&&(!document.documentMode||9<document.documentMode)}function bN(){kc&&(kc.detachEvent("onpropertychange",xN),Ic=kc=null)}function xN(o){if(o.propertyName==="value"&&jf(Ic)){var c=[];pN(c,Ic,o,Tb(o)),nN(f3,c)}}function p3(o,c,d){o==="focusin"?(bN(),kc=c,Ic=d,kc.attachEvent("onpropertychange",xN)):o==="focusout"&&bN()}function m3(o){if(o==="selectionchange"||o==="keyup"||o==="keydown")return jf(Ic)}function g3(o,c){if(o==="click")return jf(c)}function y3(o,c){if(o==="input"||o==="change")return jf(c)}function b3(o,c){return o===c&&(o!==0||1/o===1/c)||o!==o&&c!==c}var Es=typeof Object.is=="function"?Object.is:b3;function Ec(o,c){if(Es(o,c))return!0;if(typeof o!="object"||o===null||typeof c!="object"||c===null)return!1;var d=Object.keys(o),g=Object.keys(c);if(d.length!==g.length)return!1;for(g=0;g<d.length;g++){var x=d[g];if(!ie.call(c,x)||!Es(o[x],c[x]))return!1}return!0}function vN(o){for(;o&&o.firstChild;)o=o.firstChild;return o}function wN(o,c){var d=vN(o);o=0;for(var g;d;){if(d.nodeType===3){if(g=o+d.textContent.length,o<=c&&g>=c)return{node:d,offset:c-o};o=g}t:{for(;d;){if(d.nextSibling){d=d.nextSibling;break t}d=d.parentNode}d=void 0}d=vN(d)}}function SN(o,c){return o&&c?o===c?!0:o&&o.nodeType===3?!1:c&&c.nodeType===3?SN(o,c.parentNode):"contains"in o?o.contains(c):o.compareDocumentPosition?!!(o.compareDocumentPosition(c)&16):!1:!1}function NN(o){o=o!=null&&o.ownerDocument!=null&&o.ownerDocument.defaultView!=null?o.ownerDocument.defaultView:window;for(var c=Bf(o.document);c instanceof o.HTMLIFrameElement;){try{var d=typeof c.contentWindow.location.href=="string"}catch{d=!1}if(d)o=c.contentWindow;else break;c=Bf(o.document)}return c}function Fb(o){var c=o&&o.nodeName&&o.nodeName.toLowerCase();return c&&(c==="input"&&(o.type==="text"||o.type==="search"||o.type==="tel"||o.type==="url"||o.type==="password")||c==="textarea"||o.contentEditable==="true")}var x3=ir&&"documentMode"in document&&11>=document.documentMode,ll=null,Lb=null,Ac=null,zb=!1;function TN(o,c,d){var g=d.window===d?d.document:d.nodeType===9?d:d.ownerDocument;zb||ll==null||ll!==Bf(g)||(g=ll,"selectionStart"in g&&Fb(g)?g={start:g.selectionStart,end:g.selectionEnd}:(g=(g.ownerDocument&&g.ownerDocument.defaultView||window).getSelection(),g={anchorNode:g.anchorNode,anchorOffset:g.anchorOffset,focusNode:g.focusNode,focusOffset:g.focusOffset}),Ac&&Ec(Ac,g)||(Ac=g,g=Rp(Lb,"onSelect"),0<g.length&&(c=new Wf("onSelect","select",null,c,d),o.push({event:c,listeners:g}),c.target=ll)))}function Ui(o,c){var d={};return d[o.toLowerCase()]=c.toLowerCase(),d["Webkit"+o]="webkit"+c,d["Moz"+o]="moz"+c,d}var ul={animationend:Ui("Animation","AnimationEnd"),animationiteration:Ui("Animation","AnimationIteration"),animationstart:Ui("Animation","AnimationStart"),transitionrun:Ui("Transition","TransitionRun"),transitionstart:Ui("Transition","TransitionStart"),transitioncancel:Ui("Transition","TransitionCancel"),transitionend:Ui("Transition","TransitionEnd")},Mb={},CN={};ir&&(CN=document.createElement("div").style,"AnimationEvent"in window||(delete ul.animationend.animation,delete ul.animationiteration.animation,delete ul.animationstart.animation),"TransitionEvent"in window||delete ul.transitionend.transition);function Gi(o){if(Mb[o])return Mb[o];if(!ul[o])return o;var c=ul[o],d;for(d in c)if(c.hasOwnProperty(d)&&d in CN)return Mb[o]=c[d];return o}var $N=Gi("animationend"),kN=Gi("animationiteration"),IN=Gi("animationstart"),v3=Gi("transitionrun"),w3=Gi("transitionstart"),S3=Gi("transitioncancel"),EN=Gi("transitionend"),AN=new Map,Bb="abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");Bb.push("scrollEnd");function fa(o,c){AN.set(o,c),Vi(c,[o])}var RN=new WeakMap;function Xs(o,c){if(typeof o=="object"&&o!==null){var d=RN.get(o);return d!==void 0?d:(c={value:o,source:c,stack:qS(c)},RN.set(o,c),c)}return{value:o,source:c,stack:qS(c)}}var Ks=[],cl=0,Vb=0;function qf(){for(var o=cl,c=Vb=cl=0;c<o;){var d=Ks[c];Ks[c++]=null;var g=Ks[c];Ks[c++]=null;var x=Ks[c];Ks[c++]=null;var N=Ks[c];if(Ks[c++]=null,g!==null&&x!==null){var E=g.pending;E===null?x.next=x:(x.next=E.next,E.next=x),g.pending=x}N!==0&&DN(d,x,N)}}function Xf(o,c,d,g){Ks[cl++]=o,Ks[cl++]=c,Ks[cl++]=d,Ks[cl++]=g,Vb|=g,o.lanes|=g,o=o.alternate,o!==null&&(o.lanes|=g)}function Pb(o,c,d,g){return Xf(o,c,d,g),Kf(o)}function hl(o,c){return Xf(o,null,null,c),Kf(o)}function DN(o,c,d){o.lanes|=d;var g=o.alternate;g!==null&&(g.lanes|=d);for(var x=!1,N=o.return;N!==null;)N.childLanes|=d,g=N.alternate,g!==null&&(g.childLanes|=d),N.tag===22&&(o=N.stateNode,o===null||o._visibility&1||(x=!0)),o=N,N=N.return;return o.tag===3?(N=o.stateNode,x&&c!==null&&(x=31-dn(d),o=N.hiddenUpdates,g=o[x],g===null?o[x]=[c]:g.push(c),c.lane=d|536870912),N):null}function Kf(o){if(50<eh)throw eh=0,q0=null,Error(s(185));for(var c=o.return;c!==null;)o=c,c=o.return;return o.tag===3?o.stateNode:null}var dl={};function N3(o,c,d,g){this.tag=o,this.key=d,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.refCleanup=this.ref=null,this.pendingProps=c,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=g,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function As(o,c,d,g){return new N3(o,c,d,g)}function Ub(o){return o=o.prototype,!(!o||!o.isReactComponent)}function or(o,c){var d=o.alternate;return d===null?(d=As(o.tag,c,o.key,o.mode),d.elementType=o.elementType,d.type=o.type,d.stateNode=o.stateNode,d.alternate=o,o.alternate=d):(d.pendingProps=c,d.type=o.type,d.flags=0,d.subtreeFlags=0,d.deletions=null),d.flags=o.flags&65011712,d.childLanes=o.childLanes,d.lanes=o.lanes,d.child=o.child,d.memoizedProps=o.memoizedProps,d.memoizedState=o.memoizedState,d.updateQueue=o.updateQueue,c=o.dependencies,d.dependencies=c===null?null:{lanes:c.lanes,firstContext:c.firstContext},d.sibling=o.sibling,d.index=o.index,d.ref=o.ref,d.refCleanup=o.refCleanup,d}function ON(o,c){o.flags&=65011714;var d=o.alternate;return d===null?(o.childLanes=0,o.lanes=c,o.child=null,o.subtreeFlags=0,o.memoizedProps=null,o.memoizedState=null,o.updateQueue=null,o.dependencies=null,o.stateNode=null):(o.childLanes=d.childLanes,o.lanes=d.lanes,o.child=d.child,o.subtreeFlags=0,o.deletions=null,o.memoizedProps=d.memoizedProps,o.memoizedState=d.memoizedState,o.updateQueue=d.updateQueue,o.type=d.type,c=d.dependencies,o.dependencies=c===null?null:{lanes:c.lanes,firstContext:c.firstContext}),o}function Yf(o,c,d,g,x,N){var E=0;if(g=o,typeof o=="function")Ub(o)&&(E=1);else if(typeof o=="string")E=CF(o,d,ft.current)?26:o==="html"||o==="head"||o==="body"?27:5;else t:switch(o){case L:return o=As(31,d,c,x),o.elementType=L,o.lanes=N,o;case b:return Wi(d.children,x,N,c);case v:E=8,x|=24;break;case w:return o=As(12,d,c,x|2),o.elementType=w,o.lanes=N,o;case I:return o=As(13,d,c,x),o.elementType=I,o.lanes=N,o;case R:return o=As(19,d,c,x),o.elementType=R,o.lanes=N,o;default:if(typeof o=="object"&&o!==null)switch(o.$$typeof){case S:case $:E=10;break t;case T:E=9;break t;case C:E=11;break t;case F:E=14;break t;case B:E=16,g=null;break t}E=29,d=Error(s(130,o===null?"null":typeof o,"")),g=null}return c=As(E,d,c,x),c.elementType=o,c.type=g,c.lanes=N,c}function Wi(o,c,d,g){return o=As(7,o,g,c),o.lanes=d,o}function Gb(o,c,d){return o=As(6,o,null,c),o.lanes=d,o}function Wb(o,c,d){return c=As(4,o.children!==null?o.children:[],o.key,c),c.lanes=d,c.stateNode={containerInfo:o.containerInfo,pendingChildren:null,implementation:o.implementation},c}var fl=[],pl=0,Zf=null,Qf=0,Ys=[],Zs=0,Hi=null,lr=1,ur="";function ji(o,c){fl[pl++]=Qf,fl[pl++]=Zf,Zf=o,Qf=c}function _N(o,c,d){Ys[Zs++]=lr,Ys[Zs++]=ur,Ys[Zs++]=Hi,Hi=o;var g=lr;o=ur;var x=32-dn(g)-1;g&=~(1<<x),d+=1;var N=32-dn(c)+x;if(30<N){var E=x-x%5;N=(g&(1<<E)-1).toString(32),g>>=E,x-=E,lr=1<<32-dn(c)+x|d<<x|g,ur=N+o}else lr=1<<N|d<<x|g,ur=o}function Hb(o){o.return!==null&&(ji(o,1),_N(o,1,0))}function jb(o){for(;o===Zf;)Zf=fl[--pl],fl[pl]=null,Qf=fl[--pl],fl[pl]=null;for(;o===Hi;)Hi=Ys[--Zs],Ys[Zs]=null,ur=Ys[--Zs],Ys[Zs]=null,lr=Ys[--Zs],Ys[Zs]=null}var es=null,Ge=null,de=!1,qi=null,Oa=!1,qb=Error(s(519));function Xi(o){var c=Error(s(418,""));throw Oc(Xs(c,o)),qb}function FN(o){var c=o.stateNode,d=o.type,g=o.memoizedProps;switch(c[Gn]=o,c[fs]=g,d){case"dialog":ee("cancel",c),ee("close",c);break;case"iframe":case"object":case"embed":ee("load",c);break;case"video":case"audio":for(d=0;d<sh.length;d++)ee(sh[d],c);break;case"source":ee("error",c);break;case"img":case"image":case"link":ee("error",c),ee("load",c);break;case"details":ee("toggle",c);break;case"input":ee("invalid",c),YS(c,g.value,g.defaultValue,g.checked,g.defaultChecked,g.type,g.name,!0),Mf(c);break;case"select":ee("invalid",c);break;case"textarea":ee("invalid",c),QS(c,g.value,g.defaultValue,g.children),Mf(c)}d=g.children,typeof d!="string"&&typeof d!="number"&&typeof d!="bigint"||c.textContent===""+d||g.suppressHydrationWarning===!0||Q2(c.textContent,d)?(g.popover!=null&&(ee("beforetoggle",c),ee("toggle",c)),g.onScroll!=null&&ee("scroll",c),g.onScrollEnd!=null&&ee("scrollend",c),g.onClick!=null&&(c.onclick=Dp),c=!0):c=!1,c||Xi(o)}function LN(o){for(es=o.return;es;)switch(es.tag){case 5:case 13:Oa=!1;return;case 27:case 3:Oa=!0;return;default:es=es.return}}function Rc(o){if(o!==es)return!1;if(!de)return LN(o),de=!0,!1;var c=o.tag,d;if((d=c!==3&&c!==27)&&((d=c===5)&&(d=o.type,d=!(d!=="form"&&d!=="button")||ux(o.type,o.memoizedProps)),d=!d),d&&Ge&&Xi(o),LN(o),c===13){if(o=o.memoizedState,o=o!==null?o.dehydrated:null,!o)throw Error(s(317));t:{for(o=o.nextSibling,c=0;o;){if(o.nodeType===8)if(d=o.data,d==="/$"){if(c===0){Ge=ma(o.nextSibling);break t}c--}else d!=="$"&&d!=="$!"&&d!=="$?"||c++;o=o.nextSibling}Ge=null}}else c===27?(c=Ge,si(o.type)?(o=fx,fx=null,Ge=o):Ge=c):Ge=es?ma(o.stateNode.nextSibling):null;return!0}function Dc(){Ge=es=null,de=!1}function zN(){var o=qi;return o!==null&&(ys===null?ys=o:ys.push.apply(ys,o),qi=null),o}function Oc(o){qi===null?qi=[o]:qi.push(o)}var Xb=j(null),Ki=null,cr=null;function Ur(o,c,d){et(Xb,c._currentValue),c._currentValue=d}function hr(o){o._currentValue=Xb.current,st(Xb)}function Kb(o,c,d){for(;o!==null;){var g=o.alternate;if((o.childLanes&c)!==c?(o.childLanes|=c,g!==null&&(g.childLanes|=c)):g!==null&&(g.childLanes&c)!==c&&(g.childLanes|=c),o===d)break;o=o.return}}function Yb(o,c,d,g){var x=o.child;for(x!==null&&(x.return=o);x!==null;){var N=x.dependencies;if(N!==null){var E=x.child;N=N.firstContext;t:for(;N!==null;){var _=N;N=x;for(var W=0;W<c.length;W++)if(_.context===c[W]){N.lanes|=d,_=N.alternate,_!==null&&(_.lanes|=d),Kb(N.return,d,o),g||(E=null);break t}N=_.next}}else if(x.tag===18){if(E=x.return,E===null)throw Error(s(341));E.lanes|=d,N=E.alternate,N!==null&&(N.lanes|=d),Kb(E,d,o),E=null}else E=x.child;if(E!==null)E.return=x;else for(E=x;E!==null;){if(E===o){E=null;break}if(x=E.sibling,x!==null){x.return=E.return,E=x;break}E=E.return}x=E}}function _c(o,c,d,g){o=null;for(var x=c,N=!1;x!==null;){if(!N){if((x.flags&524288)!==0)N=!0;else if((x.flags&262144)!==0)break}if(x.tag===10){var E=x.alternate;if(E===null)throw Error(s(387));if(E=E.memoizedProps,E!==null){var _=x.type;Es(x.pendingProps.value,E.value)||(o!==null?o.push(_):o=[_])}}else if(x===Ct.current){if(E=x.alternate,E===null)throw Error(s(387));E.memoizedState.memoizedState!==x.memoizedState.memoizedState&&(o!==null?o.push(uh):o=[uh])}x=x.return}o!==null&&Yb(c,o,d,g),c.flags|=262144}function Jf(o){for(o=o.firstContext;o!==null;){if(!Es(o.context._currentValue,o.memoizedValue))return!0;o=o.next}return!1}function Yi(o){Ki=o,cr=null,o=o.dependencies,o!==null&&(o.firstContext=null)}function Wn(o){return MN(Ki,o)}function tp(o,c){return Ki===null&&Yi(o),MN(o,c)}function MN(o,c){var d=c._currentValue;if(c={context:c,memoizedValue:d,next:null},cr===null){if(o===null)throw Error(s(308));cr=c,o.dependencies={lanes:0,firstContext:c},o.flags|=524288}else cr=cr.next=c;return d}var T3=typeof AbortController<"u"?AbortController:function(){var o=[],c=this.signal={aborted:!1,addEventListener:function(d,g){o.push(g)}};this.abort=function(){c.aborted=!0,o.forEach(function(d){return d()})}},C3=n.unstable_scheduleCallback,$3=n.unstable_NormalPriority,fn={$$typeof:$,Consumer:null,Provider:null,_currentValue:null,_currentValue2:null,_threadCount:0};function Zb(){return{controller:new T3,data:new Map,refCount:0}}function Fc(o){o.refCount--,o.refCount===0&&C3($3,function(){o.controller.abort()})}var Lc=null,Qb=0,ml=0,gl=null;function k3(o,c){if(Lc===null){var d=Lc=[];Qb=0,ml=tx(),gl={status:"pending",value:void 0,then:function(g){d.push(g)}}}return Qb++,c.then(BN,BN),c}function BN(){if(--Qb===0&&Lc!==null){gl!==null&&(gl.status="fulfilled");var o=Lc;Lc=null,ml=0,gl=null;for(var c=0;c<o.length;c++)(0,o[c])()}}function I3(o,c){var d=[],g={status:"pending",value:null,reason:null,then:function(x){d.push(x)}};return o.then(function(){g.status="fulfilled",g.value=c;for(var x=0;x<d.length;x++)(0,d[x])(c)},function(x){for(g.status="rejected",g.reason=x,x=0;x<d.length;x++)(0,d[x])(void 0)}),g}var VN=V.S;V.S=function(o,c){typeof c=="object"&&c!==null&&typeof c.then=="function"&&k3(o,c),VN!==null&&VN(o,c)};var Zi=j(null);function Jb(){var o=Zi.current;return o!==null?o:Re.pooledCache}function ep(o,c){c===null?et(Zi,Zi.current):et(Zi,c.pool)}function PN(){var o=Jb();return o===null?null:{parent:fn._currentValue,pool:o}}var zc=Error(s(460)),UN=Error(s(474)),np=Error(s(542)),t0={then:function(){}};function GN(o){return o=o.status,o==="fulfilled"||o==="rejected"}function sp(){}function WN(o,c,d){switch(d=o[d],d===void 0?o.push(c):d!==c&&(c.then(sp,sp),c=d),c.status){case"fulfilled":return c.value;case"rejected":throw o=c.reason,jN(o),o;default:if(typeof c.status=="string")c.then(sp,sp);else{if(o=Re,o!==null&&100<o.shellSuspendCounter)throw Error(s(482));o=c,o.status="pending",o.then(function(g){if(c.status==="pending"){var x=c;x.status="fulfilled",x.value=g}},function(g){if(c.status==="pending"){var x=c;x.status="rejected",x.reason=g}})}switch(c.status){case"fulfilled":return c.value;case"rejected":throw o=c.reason,jN(o),o}throw Mc=c,zc}}var Mc=null;function HN(){if(Mc===null)throw Error(s(459));var o=Mc;return Mc=null,o}function jN(o){if(o===zc||o===np)throw Error(s(483))}var Gr=!1;function e0(o){o.updateQueue={baseState:o.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,lanes:0,hiddenCallbacks:null},callbacks:null}}function n0(o,c){o=o.updateQueue,c.updateQueue===o&&(c.updateQueue={baseState:o.baseState,firstBaseUpdate:o.firstBaseUpdate,lastBaseUpdate:o.lastBaseUpdate,shared:o.shared,callbacks:null})}function Wr(o){return{lane:o,tag:0,payload:null,callback:null,next:null}}function Hr(o,c,d){var g=o.updateQueue;if(g===null)return null;if(g=g.shared,(ye&2)!==0){var x=g.pending;return x===null?c.next=c:(c.next=x.next,x.next=c),g.pending=c,c=Kf(o),DN(o,null,d),c}return Xf(o,g,c,d),Kf(o)}function Bc(o,c,d){if(c=c.updateQueue,c!==null&&(c=c.shared,(d&4194048)!==0)){var g=c.lanes;g&=o.pendingLanes,d|=g,c.lanes=d,BS(o,d)}}function s0(o,c){var d=o.updateQueue,g=o.alternate;if(g!==null&&(g=g.updateQueue,d===g)){var x=null,N=null;if(d=d.firstBaseUpdate,d!==null){do{var E={lane:d.lane,tag:d.tag,payload:d.payload,callback:null,next:null};N===null?x=N=E:N=N.next=E,d=d.next}while(d!==null);N===null?x=N=c:N=N.next=c}else x=N=c;d={baseState:g.baseState,firstBaseUpdate:x,lastBaseUpdate:N,shared:g.shared,callbacks:g.callbacks},o.updateQueue=d;return}o=d.lastBaseUpdate,o===null?d.firstBaseUpdate=c:o.next=c,d.lastBaseUpdate=c}var a0=!1;function Vc(){if(a0){var o=gl;if(o!==null)throw o}}function Pc(o,c,d,g){a0=!1;var x=o.updateQueue;Gr=!1;var N=x.firstBaseUpdate,E=x.lastBaseUpdate,_=x.shared.pending;if(_!==null){x.shared.pending=null;var W=_,lt=W.next;W.next=null,E===null?N=lt:E.next=lt,E=W;var pt=o.alternate;pt!==null&&(pt=pt.updateQueue,_=pt.lastBaseUpdate,_!==E&&(_===null?pt.firstBaseUpdate=lt:_.next=lt,pt.lastBaseUpdate=W))}if(N!==null){var bt=x.baseState;E=0,pt=lt=W=null,_=N;do{var ut=_.lane&-536870913,ct=ut!==_.lane;if(ct?(oe&ut)===ut:(g&ut)===ut){ut!==0&&ut===ml&&(a0=!0),pt!==null&&(pt=pt.next={lane:0,tag:_.tag,payload:_.payload,callback:null,next:null});t:{var Bt=o,Lt=_;ut=c;var Ne=d;switch(Lt.tag){case 1:if(Bt=Lt.payload,typeof Bt=="function"){bt=Bt.call(Ne,bt,ut);break t}bt=Bt;break t;case 3:Bt.flags=Bt.flags&-65537|128;case 0:if(Bt=Lt.payload,ut=typeof Bt=="function"?Bt.call(Ne,bt,ut):Bt,ut==null)break t;bt=f({},bt,ut);break t;case 2:Gr=!0}}ut=_.callback,ut!==null&&(o.flags|=64,ct&&(o.flags|=8192),ct=x.callbacks,ct===null?x.callbacks=[ut]:ct.push(ut))}else ct={lane:ut,tag:_.tag,payload:_.payload,callback:_.callback,next:null},pt===null?(lt=pt=ct,W=bt):pt=pt.next=ct,E|=ut;if(_=_.next,_===null){if(_=x.shared.pending,_===null)break;ct=_,_=ct.next,ct.next=null,x.lastBaseUpdate=ct,x.shared.pending=null}}while(!0);pt===null&&(W=bt),x.baseState=W,x.firstBaseUpdate=lt,x.lastBaseUpdate=pt,N===null&&(x.shared.lanes=0),Jr|=E,o.lanes=E,o.memoizedState=bt}}function qN(o,c){if(typeof o!="function")throw Error(s(191,o));o.call(c)}function XN(o,c){var d=o.callbacks;if(d!==null)for(o.callbacks=null,o=0;o<d.length;o++)qN(d[o],c)}var yl=j(null),ap=j(0);function KN(o,c){o=br,et(ap,o),et(yl,c),br=o|c.baseLanes}function r0(){et(ap,br),et(yl,yl.current)}function i0(){br=ap.current,st(yl),st(ap)}var jr=0,Yt=null,we=null,sn=null,rp=!1,bl=!1,Qi=!1,ip=0,Uc=0,xl=null,E3=0;function Ze(){throw Error(s(321))}function o0(o,c){if(c===null)return!1;for(var d=0;d<c.length&&d<o.length;d++)if(!Es(o[d],c[d]))return!1;return!0}function l0(o,c,d,g,x,N){return jr=N,Yt=c,c.memoizedState=null,c.updateQueue=null,c.lanes=0,V.H=o===null||o.memoizedState===null?DT:OT,Qi=!1,N=d(g,x),Qi=!1,bl&&(N=ZN(c,d,g,x)),YN(o),N}function YN(o){V.H=dp;var c=we!==null&&we.next!==null;if(jr=0,sn=we=Yt=null,rp=!1,Uc=0,xl=null,c)throw Error(s(300));o===null||Nn||(o=o.dependencies,o!==null&&Jf(o)&&(Nn=!0))}function ZN(o,c,d,g){Yt=o;var x=0;do{if(bl&&(xl=null),Uc=0,bl=!1,25<=x)throw Error(s(301));if(x+=1,sn=we=null,o.updateQueue!=null){var N=o.updateQueue;N.lastEffect=null,N.events=null,N.stores=null,N.memoCache!=null&&(N.memoCache.index=0)}V.H=L3,N=c(d,g)}while(bl);return N}function A3(){var o=V.H,c=o.useState()[0];return c=typeof c.then=="function"?Gc(c):c,o=o.useState()[0],(we!==null?we.memoizedState:null)!==o&&(Yt.flags|=1024),c}function u0(){var o=ip!==0;return ip=0,o}function c0(o,c,d){c.updateQueue=o.updateQueue,c.flags&=-2053,o.lanes&=~d}function h0(o){if(rp){for(o=o.memoizedState;o!==null;){var c=o.queue;c!==null&&(c.pending=null),o=o.next}rp=!1}jr=0,sn=we=Yt=null,bl=!1,Uc=ip=0,xl=null}function ms(){var o={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return sn===null?Yt.memoizedState=sn=o:sn=sn.next=o,sn}function an(){if(we===null){var o=Yt.alternate;o=o!==null?o.memoizedState:null}else o=we.next;var c=sn===null?Yt.memoizedState:sn.next;if(c!==null)sn=c,we=o;else{if(o===null)throw Yt.alternate===null?Error(s(467)):Error(s(310));we=o,o={memoizedState:we.memoizedState,baseState:we.baseState,baseQueue:we.baseQueue,queue:we.queue,next:null},sn===null?Yt.memoizedState=sn=o:sn=sn.next=o}return sn}function d0(){return{lastEffect:null,events:null,stores:null,memoCache:null}}function Gc(o){var c=Uc;return Uc+=1,xl===null&&(xl=[]),o=WN(xl,o,c),c=Yt,(sn===null?c.memoizedState:sn.next)===null&&(c=c.alternate,V.H=c===null||c.memoizedState===null?DT:OT),o}function op(o){if(o!==null&&typeof o=="object"){if(typeof o.then=="function")return Gc(o);if(o.$$typeof===$)return Wn(o)}throw Error(s(438,String(o)))}function f0(o){var c=null,d=Yt.updateQueue;if(d!==null&&(c=d.memoCache),c==null){var g=Yt.alternate;g!==null&&(g=g.updateQueue,g!==null&&(g=g.memoCache,g!=null&&(c={data:g.data.map(function(x){return x.slice()}),index:0})))}if(c==null&&(c={data:[],index:0}),d===null&&(d=d0(),Yt.updateQueue=d),d.memoCache=c,d=c.data[c.index],d===void 0)for(d=c.data[c.index]=Array(o),g=0;g<o;g++)d[g]=z;return c.index++,d}function dr(o,c){return typeof c=="function"?c(o):c}function lp(o){var c=an();return p0(c,we,o)}function p0(o,c,d){var g=o.queue;if(g===null)throw Error(s(311));g.lastRenderedReducer=d;var x=o.baseQueue,N=g.pending;if(N!==null){if(x!==null){var E=x.next;x.next=N.next,N.next=E}c.baseQueue=x=N,g.pending=null}if(N=o.baseState,x===null)o.memoizedState=N;else{c=x.next;var _=E=null,W=null,lt=c,pt=!1;do{var bt=lt.lane&-536870913;if(bt!==lt.lane?(oe&bt)===bt:(jr&bt)===bt){var ut=lt.revertLane;if(ut===0)W!==null&&(W=W.next={lane:0,revertLane:0,action:lt.action,hasEagerState:lt.hasEagerState,eagerState:lt.eagerState,next:null}),bt===ml&&(pt=!0);else if((jr&ut)===ut){lt=lt.next,ut===ml&&(pt=!0);continue}else bt={lane:0,revertLane:lt.revertLane,action:lt.action,hasEagerState:lt.hasEagerState,eagerState:lt.eagerState,next:null},W===null?(_=W=bt,E=N):W=W.next=bt,Yt.lanes|=ut,Jr|=ut;bt=lt.action,Qi&&d(N,bt),N=lt.hasEagerState?lt.eagerState:d(N,bt)}else ut={lane:bt,revertLane:lt.revertLane,action:lt.action,hasEagerState:lt.hasEagerState,eagerState:lt.eagerState,next:null},W===null?(_=W=ut,E=N):W=W.next=ut,Yt.lanes|=bt,Jr|=bt;lt=lt.next}while(lt!==null&&lt!==c);if(W===null?E=N:W.next=_,!Es(N,o.memoizedState)&&(Nn=!0,pt&&(d=gl,d!==null)))throw d;o.memoizedState=N,o.baseState=E,o.baseQueue=W,g.lastRenderedState=N}return x===null&&(g.lanes=0),[o.memoizedState,g.dispatch]}function m0(o){var c=an(),d=c.queue;if(d===null)throw Error(s(311));d.lastRenderedReducer=o;var g=d.dispatch,x=d.pending,N=c.memoizedState;if(x!==null){d.pending=null;var E=x=x.next;do N=o(N,E.action),E=E.next;while(E!==x);Es(N,c.memoizedState)||(Nn=!0),c.memoizedState=N,c.baseQueue===null&&(c.baseState=N),d.lastRenderedState=N}return[N,g]}function QN(o,c,d){var g=Yt,x=an(),N=de;if(N){if(d===void 0)throw Error(s(407));d=d()}else d=c();var E=!Es((we||x).memoizedState,d);E&&(x.memoizedState=d,Nn=!0),x=x.queue;var _=eT.bind(null,g,x,o);if(Wc(2048,8,_,[o]),x.getSnapshot!==c||E||sn!==null&&sn.memoizedState.tag&1){if(g.flags|=2048,vl(9,up(),tT.bind(null,g,x,d,c),null),Re===null)throw Error(s(349));N||(jr&124)!==0||JN(g,c,d)}return d}function JN(o,c,d){o.flags|=16384,o={getSnapshot:c,value:d},c=Yt.updateQueue,c===null?(c=d0(),Yt.updateQueue=c,c.stores=[o]):(d=c.stores,d===null?c.stores=[o]:d.push(o))}function tT(o,c,d,g){c.value=d,c.getSnapshot=g,nT(c)&&sT(o)}function eT(o,c,d){return d(function(){nT(c)&&sT(o)})}function nT(o){var c=o.getSnapshot;o=o.value;try{var d=c();return!Es(o,d)}catch{return!0}}function sT(o){var c=hl(o,2);c!==null&&Fs(c,o,2)}function g0(o){var c=ms();if(typeof o=="function"){var d=o;if(o=d(),Qi){Fn(!0);try{d()}finally{Fn(!1)}}}return c.memoizedState=c.baseState=o,c.queue={pending:null,lanes:0,dispatch:null,lastRenderedReducer:dr,lastRenderedState:o},c}function aT(o,c,d,g){return o.baseState=d,p0(o,we,typeof g=="function"?g:dr)}function R3(o,c,d,g,x){if(hp(o))throw Error(s(485));if(o=c.action,o!==null){var N={payload:x,action:o,next:null,isTransition:!0,status:"pending",value:null,reason:null,listeners:[],then:function(E){N.listeners.push(E)}};V.T!==null?d(!0):N.isTransition=!1,g(N),d=c.pending,d===null?(N.next=c.pending=N,rT(c,N)):(N.next=d.next,c.pending=d.next=N)}}function rT(o,c){var d=c.action,g=c.payload,x=o.state;if(c.isTransition){var N=V.T,E={};V.T=E;try{var _=d(x,g),W=V.S;W!==null&&W(E,_),iT(o,c,_)}catch(lt){y0(o,c,lt)}finally{V.T=N}}else try{N=d(x,g),iT(o,c,N)}catch(lt){y0(o,c,lt)}}function iT(o,c,d){d!==null&&typeof d=="object"&&typeof d.then=="function"?d.then(function(g){oT(o,c,g)},function(g){return y0(o,c,g)}):oT(o,c,d)}function oT(o,c,d){c.status="fulfilled",c.value=d,lT(c),o.state=d,c=o.pending,c!==null&&(d=c.next,d===c?o.pending=null:(d=d.next,c.next=d,rT(o,d)))}function y0(o,c,d){var g=o.pending;if(o.pending=null,g!==null){g=g.next;do c.status="rejected",c.reason=d,lT(c),c=c.next;while(c!==g)}o.action=null}function lT(o){o=o.listeners;for(var c=0;c<o.length;c++)(0,o[c])()}function uT(o,c){return c}function cT(o,c){if(de){var d=Re.formState;if(d!==null){t:{var g=Yt;if(de){if(Ge){e:{for(var x=Ge,N=Oa;x.nodeType!==8;){if(!N){x=null;break e}if(x=ma(x.nextSibling),x===null){x=null;break e}}N=x.data,x=N==="F!"||N==="F"?x:null}if(x){Ge=ma(x.nextSibling),g=x.data==="F!";break t}}Xi(g)}g=!1}g&&(c=d[0])}}return d=ms(),d.memoizedState=d.baseState=c,g={pending:null,lanes:0,dispatch:null,lastRenderedReducer:uT,lastRenderedState:c},d.queue=g,d=ET.bind(null,Yt,g),g.dispatch=d,g=g0(!1),N=S0.bind(null,Yt,!1,g.queue),g=ms(),x={state:c,dispatch:null,action:o,pending:null},g.queue=x,d=R3.bind(null,Yt,x,N,d),x.dispatch=d,g.memoizedState=o,[c,d,!1]}function hT(o){var c=an();return dT(c,we,o)}function dT(o,c,d){if(c=p0(o,c,uT)[0],o=lp(dr)[0],typeof c=="object"&&c!==null&&typeof c.then=="function")try{var g=Gc(c)}catch(E){throw E===zc?np:E}else g=c;c=an();var x=c.queue,N=x.dispatch;return d!==c.memoizedState&&(Yt.flags|=2048,vl(9,up(),D3.bind(null,x,d),null)),[g,N,o]}function D3(o,c){o.action=c}function fT(o){var c=an(),d=we;if(d!==null)return dT(c,d,o);an(),c=c.memoizedState,d=an();var g=d.queue.dispatch;return d.memoizedState=o,[c,g,!1]}function vl(o,c,d,g){return o={tag:o,create:d,deps:g,inst:c,next:null},c=Yt.updateQueue,c===null&&(c=d0(),Yt.updateQueue=c),d=c.lastEffect,d===null?c.lastEffect=o.next=o:(g=d.next,d.next=o,o.next=g,c.lastEffect=o),o}function up(){return{destroy:void 0,resource:void 0}}function pT(){return an().memoizedState}function cp(o,c,d,g){var x=ms();g=g===void 0?null:g,Yt.flags|=o,x.memoizedState=vl(1|c,up(),d,g)}function Wc(o,c,d,g){var x=an();g=g===void 0?null:g;var N=x.memoizedState.inst;we!==null&&g!==null&&o0(g,we.memoizedState.deps)?x.memoizedState=vl(c,N,d,g):(Yt.flags|=o,x.memoizedState=vl(1|c,N,d,g))}function mT(o,c){cp(8390656,8,o,c)}function gT(o,c){Wc(2048,8,o,c)}function yT(o,c){return Wc(4,2,o,c)}function bT(o,c){return Wc(4,4,o,c)}function xT(o,c){if(typeof c=="function"){o=o();var d=c(o);return function(){typeof d=="function"?d():c(null)}}if(c!=null)return o=o(),c.current=o,function(){c.current=null}}function vT(o,c,d){d=d!=null?d.concat([o]):null,Wc(4,4,xT.bind(null,c,o),d)}function b0(){}function wT(o,c){var d=an();c=c===void 0?null:c;var g=d.memoizedState;return c!==null&&o0(c,g[1])?g[0]:(d.memoizedState=[o,c],o)}function ST(o,c){var d=an();c=c===void 0?null:c;var g=d.memoizedState;if(c!==null&&o0(c,g[1]))return g[0];if(g=o(),Qi){Fn(!0);try{o()}finally{Fn(!1)}}return d.memoizedState=[g,c],g}function x0(o,c,d){return d===void 0||(jr&1073741824)!==0?o.memoizedState=c:(o.memoizedState=d,o=C2(),Yt.lanes|=o,Jr|=o,d)}function NT(o,c,d,g){return Es(d,c)?d:yl.current!==null?(o=x0(o,d,g),Es(o,c)||(Nn=!0),o):(jr&42)===0?(Nn=!0,o.memoizedState=d):(o=C2(),Yt.lanes|=o,Jr|=o,c)}function TT(o,c,d,g,x){var N=q.p;q.p=N!==0&&8>N?N:8;var E=V.T,_={};V.T=_,S0(o,!1,c,d);try{var W=x(),lt=V.S;if(lt!==null&&lt(_,W),W!==null&&typeof W=="object"&&typeof W.then=="function"){var pt=I3(W,g);Hc(o,c,pt,_s(o))}else Hc(o,c,g,_s(o))}catch(bt){Hc(o,c,{then:function(){},status:"rejected",reason:bt},_s())}finally{q.p=N,V.T=E}}function O3(){}function v0(o,c,d,g){if(o.tag!==5)throw Error(s(476));var x=CT(o).queue;TT(o,x,c,Y,d===null?O3:function(){return $T(o),d(g)})}function CT(o){var c=o.memoizedState;if(c!==null)return c;c={memoizedState:Y,baseState:Y,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:dr,lastRenderedState:Y},next:null};var d={};return c.next={memoizedState:d,baseState:d,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:dr,lastRenderedState:d},next:null},o.memoizedState=c,o=o.alternate,o!==null&&(o.memoizedState=c),c}function $T(o){var c=CT(o).next.queue;Hc(o,c,{},_s())}function w0(){return Wn(uh)}function kT(){return an().memoizedState}function IT(){return an().memoizedState}function _3(o){for(var c=o.return;c!==null;){switch(c.tag){case 24:case 3:var d=_s();o=Wr(d);var g=Hr(c,o,d);g!==null&&(Fs(g,c,d),Bc(g,c,d)),c={cache:Zb()},o.payload=c;return}c=c.return}}function F3(o,c,d){var g=_s();d={lane:g,revertLane:0,action:d,hasEagerState:!1,eagerState:null,next:null},hp(o)?AT(c,d):(d=Pb(o,c,d,g),d!==null&&(Fs(d,o,g),RT(d,c,g)))}function ET(o,c,d){var g=_s();Hc(o,c,d,g)}function Hc(o,c,d,g){var x={lane:g,revertLane:0,action:d,hasEagerState:!1,eagerState:null,next:null};if(hp(o))AT(c,x);else{var N=o.alternate;if(o.lanes===0&&(N===null||N.lanes===0)&&(N=c.lastRenderedReducer,N!==null))try{var E=c.lastRenderedState,_=N(E,d);if(x.hasEagerState=!0,x.eagerState=_,Es(_,E))return Xf(o,c,x,0),Re===null&&qf(),!1}catch{}finally{}if(d=Pb(o,c,x,g),d!==null)return Fs(d,o,g),RT(d,c,g),!0}return!1}function S0(o,c,d,g){if(g={lane:2,revertLane:tx(),action:g,hasEagerState:!1,eagerState:null,next:null},hp(o)){if(c)throw Error(s(479))}else c=Pb(o,d,g,2),c!==null&&Fs(c,o,2)}function hp(o){var c=o.alternate;return o===Yt||c!==null&&c===Yt}function AT(o,c){bl=rp=!0;var d=o.pending;d===null?c.next=c:(c.next=d.next,d.next=c),o.pending=c}function RT(o,c,d){if((d&4194048)!==0){var g=c.lanes;g&=o.pendingLanes,d|=g,c.lanes=d,BS(o,d)}}var dp={readContext:Wn,use:op,useCallback:Ze,useContext:Ze,useEffect:Ze,useImperativeHandle:Ze,useLayoutEffect:Ze,useInsertionEffect:Ze,useMemo:Ze,useReducer:Ze,useRef:Ze,useState:Ze,useDebugValue:Ze,useDeferredValue:Ze,useTransition:Ze,useSyncExternalStore:Ze,useId:Ze,useHostTransitionStatus:Ze,useFormState:Ze,useActionState:Ze,useOptimistic:Ze,useMemoCache:Ze,useCacheRefresh:Ze},DT={readContext:Wn,use:op,useCallback:function(o,c){return ms().memoizedState=[o,c===void 0?null:c],o},useContext:Wn,useEffect:mT,useImperativeHandle:function(o,c,d){d=d!=null?d.concat([o]):null,cp(4194308,4,xT.bind(null,c,o),d)},useLayoutEffect:function(o,c){return cp(4194308,4,o,c)},useInsertionEffect:function(o,c){cp(4,2,o,c)},useMemo:function(o,c){var d=ms();c=c===void 0?null:c;var g=o();if(Qi){Fn(!0);try{o()}finally{Fn(!1)}}return d.memoizedState=[g,c],g},useReducer:function(o,c,d){var g=ms();if(d!==void 0){var x=d(c);if(Qi){Fn(!0);try{d(c)}finally{Fn(!1)}}}else x=c;return g.memoizedState=g.baseState=x,o={pending:null,lanes:0,dispatch:null,lastRenderedReducer:o,lastRenderedState:x},g.queue=o,o=o.dispatch=F3.bind(null,Yt,o),[g.memoizedState,o]},useRef:function(o){var c=ms();return o={current:o},c.memoizedState=o},useState:function(o){o=g0(o);var c=o.queue,d=ET.bind(null,Yt,c);return c.dispatch=d,[o.memoizedState,d]},useDebugValue:b0,useDeferredValue:function(o,c){var d=ms();return x0(d,o,c)},useTransition:function(){var o=g0(!1);return o=TT.bind(null,Yt,o.queue,!0,!1),ms().memoizedState=o,[!1,o]},useSyncExternalStore:function(o,c,d){var g=Yt,x=ms();if(de){if(d===void 0)throw Error(s(407));d=d()}else{if(d=c(),Re===null)throw Error(s(349));(oe&124)!==0||JN(g,c,d)}x.memoizedState=d;var N={value:d,getSnapshot:c};return x.queue=N,mT(eT.bind(null,g,N,o),[o]),g.flags|=2048,vl(9,up(),tT.bind(null,g,N,d,c),null),d},useId:function(){var o=ms(),c=Re.identifierPrefix;if(de){var d=ur,g=lr;d=(g&~(1<<32-dn(g)-1)).toString(32)+d,c="«"+c+"R"+d,d=ip++,0<d&&(c+="H"+d.toString(32)),c+="»"}else d=E3++,c="«"+c+"r"+d.toString(32)+"»";return o.memoizedState=c},useHostTransitionStatus:w0,useFormState:cT,useActionState:cT,useOptimistic:function(o){var c=ms();c.memoizedState=c.baseState=o;var d={pending:null,lanes:0,dispatch:null,lastRenderedReducer:null,lastRenderedState:null};return c.queue=d,c=S0.bind(null,Yt,!0,d),d.dispatch=c,[o,c]},useMemoCache:f0,useCacheRefresh:function(){return ms().memoizedState=_3.bind(null,Yt)}},OT={readContext:Wn,use:op,useCallback:wT,useContext:Wn,useEffect:gT,useImperativeHandle:vT,useInsertionEffect:yT,useLayoutEffect:bT,useMemo:ST,useReducer:lp,useRef:pT,useState:function(){return lp(dr)},useDebugValue:b0,useDeferredValue:function(o,c){var d=an();return NT(d,we.memoizedState,o,c)},useTransition:function(){var o=lp(dr)[0],c=an().memoizedState;return[typeof o=="boolean"?o:Gc(o),c]},useSyncExternalStore:QN,useId:kT,useHostTransitionStatus:w0,useFormState:hT,useActionState:hT,useOptimistic:function(o,c){var d=an();return aT(d,we,o,c)},useMemoCache:f0,useCacheRefresh:IT},L3={readContext:Wn,use:op,useCallback:wT,useContext:Wn,useEffect:gT,useImperativeHandle:vT,useInsertionEffect:yT,useLayoutEffect:bT,useMemo:ST,useReducer:m0,useRef:pT,useState:function(){return m0(dr)},useDebugValue:b0,useDeferredValue:function(o,c){var d=an();return we===null?x0(d,o,c):NT(d,we.memoizedState,o,c)},useTransition:function(){var o=m0(dr)[0],c=an().memoizedState;return[typeof o=="boolean"?o:Gc(o),c]},useSyncExternalStore:QN,useId:kT,useHostTransitionStatus:w0,useFormState:fT,useActionState:fT,useOptimistic:function(o,c){var d=an();return we!==null?aT(d,we,o,c):(d.baseState=o,[o,d.queue.dispatch])},useMemoCache:f0,useCacheRefresh:IT},wl=null,jc=0;function fp(o){var c=jc;return jc+=1,wl===null&&(wl=[]),WN(wl,o,c)}function qc(o,c){c=c.props.ref,o.ref=c!==void 0?c:null}function pp(o,c){throw c.$$typeof===p?Error(s(525)):(o=Object.prototype.toString.call(c),Error(s(31,o==="[object Object]"?"object with keys {"+Object.keys(c).join(", ")+"}":o)))}function _T(o){var c=o._init;return c(o._payload)}function FT(o){function c(nt,Z){if(o){var ot=nt.deletions;ot===null?(nt.deletions=[Z],nt.flags|=16):ot.push(Z)}}function d(nt,Z){if(!o)return null;for(;Z!==null;)c(nt,Z),Z=Z.sibling;return null}function g(nt){for(var Z=new Map;nt!==null;)nt.key!==null?Z.set(nt.key,nt):Z.set(nt.index,nt),nt=nt.sibling;return Z}function x(nt,Z){return nt=or(nt,Z),nt.index=0,nt.sibling=null,nt}function N(nt,Z,ot){return nt.index=ot,o?(ot=nt.alternate,ot!==null?(ot=ot.index,ot<Z?(nt.flags|=67108866,Z):ot):(nt.flags|=67108866,Z)):(nt.flags|=1048576,Z)}function E(nt){return o&&nt.alternate===null&&(nt.flags|=67108866),nt}function _(nt,Z,ot,gt){return Z===null||Z.tag!==6?(Z=Gb(ot,nt.mode,gt),Z.return=nt,Z):(Z=x(Z,ot),Z.return=nt,Z)}function W(nt,Z,ot,gt){var Et=ot.type;return Et===b?pt(nt,Z,ot.props.children,gt,ot.key):Z!==null&&(Z.elementType===Et||typeof Et=="object"&&Et!==null&&Et.$$typeof===B&&_T(Et)===Z.type)?(Z=x(Z,ot.props),qc(Z,ot),Z.return=nt,Z):(Z=Yf(ot.type,ot.key,ot.props,null,nt.mode,gt),qc(Z,ot),Z.return=nt,Z)}function lt(nt,Z,ot,gt){return Z===null||Z.tag!==4||Z.stateNode.containerInfo!==ot.containerInfo||Z.stateNode.implementation!==ot.implementation?(Z=Wb(ot,nt.mode,gt),Z.return=nt,Z):(Z=x(Z,ot.children||[]),Z.return=nt,Z)}function pt(nt,Z,ot,gt,Et){return Z===null||Z.tag!==7?(Z=Wi(ot,nt.mode,gt,Et),Z.return=nt,Z):(Z=x(Z,ot),Z.return=nt,Z)}function bt(nt,Z,ot){if(typeof Z=="string"&&Z!==""||typeof Z=="number"||typeof Z=="bigint")return Z=Gb(""+Z,nt.mode,ot),Z.return=nt,Z;if(typeof Z=="object"&&Z!==null){switch(Z.$$typeof){case m:return ot=Yf(Z.type,Z.key,Z.props,null,nt.mode,ot),qc(ot,Z),ot.return=nt,ot;case y:return Z=Wb(Z,nt.mode,ot),Z.return=nt,Z;case B:var gt=Z._init;return Z=gt(Z._payload),bt(nt,Z,ot)}if(J(Z)||G(Z))return Z=Wi(Z,nt.mode,ot,null),Z.return=nt,Z;if(typeof Z.then=="function")return bt(nt,fp(Z),ot);if(Z.$$typeof===$)return bt(nt,tp(nt,Z),ot);pp(nt,Z)}return null}function ut(nt,Z,ot,gt){var Et=Z!==null?Z.key:null;if(typeof ot=="string"&&ot!==""||typeof ot=="number"||typeof ot=="bigint")return Et!==null?null:_(nt,Z,""+ot,gt);if(typeof ot=="object"&&ot!==null){switch(ot.$$typeof){case m:return ot.key===Et?W(nt,Z,ot,gt):null;case y:return ot.key===Et?lt(nt,Z,ot,gt):null;case B:return Et=ot._init,ot=Et(ot._payload),ut(nt,Z,ot,gt)}if(J(ot)||G(ot))return Et!==null?null:pt(nt,Z,ot,gt,null);if(typeof ot.then=="function")return ut(nt,Z,fp(ot),gt);if(ot.$$typeof===$)return ut(nt,Z,tp(nt,ot),gt);pp(nt,ot)}return null}function ct(nt,Z,ot,gt,Et){if(typeof gt=="string"&&gt!==""||typeof gt=="number"||typeof gt=="bigint")return nt=nt.get(ot)||null,_(Z,nt,""+gt,Et);if(typeof gt=="object"&&gt!==null){switch(gt.$$typeof){case m:return nt=nt.get(gt.key===null?ot:gt.key)||null,W(Z,nt,gt,Et);case y:return nt=nt.get(gt.key===null?ot:gt.key)||null,lt(Z,nt,gt,Et);case B:var Qt=gt._init;return gt=Qt(gt._payload),ct(nt,Z,ot,gt,Et)}if(J(gt)||G(gt))return nt=nt.get(ot)||null,pt(Z,nt,gt,Et,null);if(typeof gt.then=="function")return ct(nt,Z,ot,fp(gt),Et);if(gt.$$typeof===$)return ct(nt,Z,ot,tp(Z,gt),Et);pp(Z,gt)}return null}function Bt(nt,Z,ot,gt){for(var Et=null,Qt=null,Ft=Z,zt=Z=0,Cn=null;Ft!==null&&zt<ot.length;zt++){Ft.index>zt?(Cn=Ft,Ft=null):Cn=Ft.sibling;var ue=ut(nt,Ft,ot[zt],gt);if(ue===null){Ft===null&&(Ft=Cn);break}o&&Ft&&ue.alternate===null&&c(nt,Ft),Z=N(ue,Z,zt),Qt===null?Et=ue:Qt.sibling=ue,Qt=ue,Ft=Cn}if(zt===ot.length)return d(nt,Ft),de&&ji(nt,zt),Et;if(Ft===null){for(;zt<ot.length;zt++)Ft=bt(nt,ot[zt],gt),Ft!==null&&(Z=N(Ft,Z,zt),Qt===null?Et=Ft:Qt.sibling=Ft,Qt=Ft);return de&&ji(nt,zt),Et}for(Ft=g(Ft);zt<ot.length;zt++)Cn=ct(Ft,nt,zt,ot[zt],gt),Cn!==null&&(o&&Cn.alternate!==null&&Ft.delete(Cn.key===null?zt:Cn.key),Z=N(Cn,Z,zt),Qt===null?Et=Cn:Qt.sibling=Cn,Qt=Cn);return o&&Ft.forEach(function(li){return c(nt,li)}),de&&ji(nt,zt),Et}function Lt(nt,Z,ot,gt){if(ot==null)throw Error(s(151));for(var Et=null,Qt=null,Ft=Z,zt=Z=0,Cn=null,ue=ot.next();Ft!==null&&!ue.done;zt++,ue=ot.next()){Ft.index>zt?(Cn=Ft,Ft=null):Cn=Ft.sibling;var li=ut(nt,Ft,ue.value,gt);if(li===null){Ft===null&&(Ft=Cn);break}o&&Ft&&li.alternate===null&&c(nt,Ft),Z=N(li,Z,zt),Qt===null?Et=li:Qt.sibling=li,Qt=li,Ft=Cn}if(ue.done)return d(nt,Ft),de&&ji(nt,zt),Et;if(Ft===null){for(;!ue.done;zt++,ue=ot.next())ue=bt(nt,ue.value,gt),ue!==null&&(Z=N(ue,Z,zt),Qt===null?Et=ue:Qt.sibling=ue,Qt=ue);return de&&ji(nt,zt),Et}for(Ft=g(Ft);!ue.done;zt++,ue=ot.next())ue=ct(Ft,nt,zt,ue.value,gt),ue!==null&&(o&&ue.alternate!==null&&Ft.delete(ue.key===null?zt:ue.key),Z=N(ue,Z,zt),Qt===null?Et=ue:Qt.sibling=ue,Qt=ue);return o&&Ft.forEach(function(zF){return c(nt,zF)}),de&&ji(nt,zt),Et}function Ne(nt,Z,ot,gt){if(typeof ot=="object"&&ot!==null&&ot.type===b&&ot.key===null&&(ot=ot.props.children),typeof ot=="object"&&ot!==null){switch(ot.$$typeof){case m:t:{for(var Et=ot.key;Z!==null;){if(Z.key===Et){if(Et=ot.type,Et===b){if(Z.tag===7){d(nt,Z.sibling),gt=x(Z,ot.props.children),gt.return=nt,nt=gt;break t}}else if(Z.elementType===Et||typeof Et=="object"&&Et!==null&&Et.$$typeof===B&&_T(Et)===Z.type){d(nt,Z.sibling),gt=x(Z,ot.props),qc(gt,ot),gt.return=nt,nt=gt;break t}d(nt,Z);break}else c(nt,Z);Z=Z.sibling}ot.type===b?(gt=Wi(ot.props.children,nt.mode,gt,ot.key),gt.return=nt,nt=gt):(gt=Yf(ot.type,ot.key,ot.props,null,nt.mode,gt),qc(gt,ot),gt.return=nt,nt=gt)}return E(nt);case y:t:{for(Et=ot.key;Z!==null;){if(Z.key===Et)if(Z.tag===4&&Z.stateNode.containerInfo===ot.containerInfo&&Z.stateNode.implementation===ot.implementation){d(nt,Z.sibling),gt=x(Z,ot.children||[]),gt.return=nt,nt=gt;break t}else{d(nt,Z);break}else c(nt,Z);Z=Z.sibling}gt=Wb(ot,nt.mode,gt),gt.return=nt,nt=gt}return E(nt);case B:return Et=ot._init,ot=Et(ot._payload),Ne(nt,Z,ot,gt)}if(J(ot))return Bt(nt,Z,ot,gt);if(G(ot)){if(Et=G(ot),typeof Et!="function")throw Error(s(150));return ot=Et.call(ot),Lt(nt,Z,ot,gt)}if(typeof ot.then=="function")return Ne(nt,Z,fp(ot),gt);if(ot.$$typeof===$)return Ne(nt,Z,tp(nt,ot),gt);pp(nt,ot)}return typeof ot=="string"&&ot!==""||typeof ot=="number"||typeof ot=="bigint"?(ot=""+ot,Z!==null&&Z.tag===6?(d(nt,Z.sibling),gt=x(Z,ot),gt.return=nt,nt=gt):(d(nt,Z),gt=Gb(ot,nt.mode,gt),gt.return=nt,nt=gt),E(nt)):d(nt,Z)}return function(nt,Z,ot,gt){try{jc=0;var Et=Ne(nt,Z,ot,gt);return wl=null,Et}catch(Ft){if(Ft===zc||Ft===np)throw Ft;var Qt=As(29,Ft,null,nt.mode);return Qt.lanes=gt,Qt.return=nt,Qt}finally{}}}var Sl=FT(!0),LT=FT(!1),Qs=j(null),_a=null;function qr(o){var c=o.alternate;et(pn,pn.current&1),et(Qs,o),_a===null&&(c===null||yl.current!==null||c.memoizedState!==null)&&(_a=o)}function zT(o){if(o.tag===22){if(et(pn,pn.current),et(Qs,o),_a===null){var c=o.alternate;c!==null&&c.memoizedState!==null&&(_a=o)}}else Xr()}function Xr(){et(pn,pn.current),et(Qs,Qs.current)}function fr(o){st(Qs),_a===o&&(_a=null),st(pn)}var pn=j(0);function mp(o){for(var c=o;c!==null;){if(c.tag===13){var d=c.memoizedState;if(d!==null&&(d=d.dehydrated,d===null||d.data==="$?"||dx(d)))return c}else if(c.tag===19&&c.memoizedProps.revealOrder!==void 0){if((c.flags&128)!==0)return c}else if(c.child!==null){c.child.return=c,c=c.child;continue}if(c===o)break;for(;c.sibling===null;){if(c.return===null||c.return===o)return null;c=c.return}c.sibling.return=c.return,c=c.sibling}return null}function N0(o,c,d,g){c=o.memoizedState,d=d(g,c),d=d==null?c:f({},c,d),o.memoizedState=d,o.lanes===0&&(o.updateQueue.baseState=d)}var T0={enqueueSetState:function(o,c,d){o=o._reactInternals;var g=_s(),x=Wr(g);x.payload=c,d!=null&&(x.callback=d),c=Hr(o,x,g),c!==null&&(Fs(c,o,g),Bc(c,o,g))},enqueueReplaceState:function(o,c,d){o=o._reactInternals;var g=_s(),x=Wr(g);x.tag=1,x.payload=c,d!=null&&(x.callback=d),c=Hr(o,x,g),c!==null&&(Fs(c,o,g),Bc(c,o,g))},enqueueForceUpdate:function(o,c){o=o._reactInternals;var d=_s(),g=Wr(d);g.tag=2,c!=null&&(g.callback=c),c=Hr(o,g,d),c!==null&&(Fs(c,o,d),Bc(c,o,d))}};function MT(o,c,d,g,x,N,E){return o=o.stateNode,typeof o.shouldComponentUpdate=="function"?o.shouldComponentUpdate(g,N,E):c.prototype&&c.prototype.isPureReactComponent?!Ec(d,g)||!Ec(x,N):!0}function BT(o,c,d,g){o=c.state,typeof c.componentWillReceiveProps=="function"&&c.componentWillReceiveProps(d,g),typeof c.UNSAFE_componentWillReceiveProps=="function"&&c.UNSAFE_componentWillReceiveProps(d,g),c.state!==o&&T0.enqueueReplaceState(c,c.state,null)}function Ji(o,c){var d=c;if("ref"in c){d={};for(var g in c)g!=="ref"&&(d[g]=c[g])}if(o=o.defaultProps){d===c&&(d=f({},d));for(var x in o)d[x]===void 0&&(d[x]=o[x])}return d}var gp=typeof reportError=="function"?reportError:function(o){if(typeof window=="object"&&typeof window.ErrorEvent=="function"){var c=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:typeof o=="object"&&o!==null&&typeof o.message=="string"?String(o.message):String(o),error:o});if(!window.dispatchEvent(c))return}else if(typeof process=="object"&&typeof process.emit=="function"){process.emit("uncaughtException",o);return}console.error(o)};function VT(o){gp(o)}function PT(o){console.error(o)}function UT(o){gp(o)}function yp(o,c){try{var d=o.onUncaughtError;d(c.value,{componentStack:c.stack})}catch(g){setTimeout(function(){throw g})}}function GT(o,c,d){try{var g=o.onCaughtError;g(d.value,{componentStack:d.stack,errorBoundary:c.tag===1?c.stateNode:null})}catch(x){setTimeout(function(){throw x})}}function C0(o,c,d){return d=Wr(d),d.tag=3,d.payload={element:null},d.callback=function(){yp(o,c)},d}function WT(o){return o=Wr(o),o.tag=3,o}function HT(o,c,d,g){var x=d.type.getDerivedStateFromError;if(typeof x=="function"){var N=g.value;o.payload=function(){return x(N)},o.callback=function(){GT(c,d,g)}}var E=d.stateNode;E!==null&&typeof E.componentDidCatch=="function"&&(o.callback=function(){GT(c,d,g),typeof x!="function"&&(ti===null?ti=new Set([this]):ti.add(this));var _=g.stack;this.componentDidCatch(g.value,{componentStack:_!==null?_:""})})}function z3(o,c,d,g,x){if(d.flags|=32768,g!==null&&typeof g=="object"&&typeof g.then=="function"){if(c=d.alternate,c!==null&&_c(c,d,x,!0),d=Qs.current,d!==null){switch(d.tag){case 13:return _a===null?K0():d.alternate===null&&We===0&&(We=3),d.flags&=-257,d.flags|=65536,d.lanes=x,g===t0?d.flags|=16384:(c=d.updateQueue,c===null?d.updateQueue=new Set([g]):c.add(g),Z0(o,g,x)),!1;case 22:return d.flags|=65536,g===t0?d.flags|=16384:(c=d.updateQueue,c===null?(c={transitions:null,markerInstances:null,retryQueue:new Set([g])},d.updateQueue=c):(d=c.retryQueue,d===null?c.retryQueue=new Set([g]):d.add(g)),Z0(o,g,x)),!1}throw Error(s(435,d.tag))}return Z0(o,g,x),K0(),!1}if(de)return c=Qs.current,c!==null?((c.flags&65536)===0&&(c.flags|=256),c.flags|=65536,c.lanes=x,g!==qb&&(o=Error(s(422),{cause:g}),Oc(Xs(o,d)))):(g!==qb&&(c=Error(s(423),{cause:g}),Oc(Xs(c,d))),o=o.current.alternate,o.flags|=65536,x&=-x,o.lanes|=x,g=Xs(g,d),x=C0(o.stateNode,g,x),s0(o,x),We!==4&&(We=2)),!1;var N=Error(s(520),{cause:g});if(N=Xs(N,d),th===null?th=[N]:th.push(N),We!==4&&(We=2),c===null)return!0;g=Xs(g,d),d=c;do{switch(d.tag){case 3:return d.flags|=65536,o=x&-x,d.lanes|=o,o=C0(d.stateNode,g,o),s0(d,o),!1;case 1:if(c=d.type,N=d.stateNode,(d.flags&128)===0&&(typeof c.getDerivedStateFromError=="function"||N!==null&&typeof N.componentDidCatch=="function"&&(ti===null||!ti.has(N))))return d.flags|=65536,x&=-x,d.lanes|=x,x=WT(x),HT(x,o,d,g),s0(d,x),!1}d=d.return}while(d!==null);return!1}var jT=Error(s(461)),Nn=!1;function Ln(o,c,d,g){c.child=o===null?LT(c,null,d,g):Sl(c,o.child,d,g)}function qT(o,c,d,g,x){d=d.render;var N=c.ref;if("ref"in g){var E={};for(var _ in g)_!=="ref"&&(E[_]=g[_])}else E=g;return Yi(c),g=l0(o,c,d,E,N,x),_=u0(),o!==null&&!Nn?(c0(o,c,x),pr(o,c,x)):(de&&_&&Hb(c),c.flags|=1,Ln(o,c,g,x),c.child)}function XT(o,c,d,g,x){if(o===null){var N=d.type;return typeof N=="function"&&!Ub(N)&&N.defaultProps===void 0&&d.compare===null?(c.tag=15,c.type=N,KT(o,c,N,g,x)):(o=Yf(d.type,null,g,c,c.mode,x),o.ref=c.ref,o.return=c,c.child=o)}if(N=o.child,!O0(o,x)){var E=N.memoizedProps;if(d=d.compare,d=d!==null?d:Ec,d(E,g)&&o.ref===c.ref)return pr(o,c,x)}return c.flags|=1,o=or(N,g),o.ref=c.ref,o.return=c,c.child=o}function KT(o,c,d,g,x){if(o!==null){var N=o.memoizedProps;if(Ec(N,g)&&o.ref===c.ref)if(Nn=!1,c.pendingProps=g=N,O0(o,x))(o.flags&131072)!==0&&(Nn=!0);else return c.lanes=o.lanes,pr(o,c,x)}return $0(o,c,d,g,x)}function YT(o,c,d){var g=c.pendingProps,x=g.children,N=o!==null?o.memoizedState:null;if(g.mode==="hidden"){if((c.flags&128)!==0){if(g=N!==null?N.baseLanes|d:d,o!==null){for(x=c.child=o.child,N=0;x!==null;)N=N|x.lanes|x.childLanes,x=x.sibling;c.childLanes=N&~g}else c.childLanes=0,c.child=null;return ZT(o,c,g,d)}if((d&536870912)!==0)c.memoizedState={baseLanes:0,cachePool:null},o!==null&&ep(c,N!==null?N.cachePool:null),N!==null?KN(c,N):r0(),zT(c);else return c.lanes=c.childLanes=536870912,ZT(o,c,N!==null?N.baseLanes|d:d,d)}else N!==null?(ep(c,N.cachePool),KN(c,N),Xr(),c.memoizedState=null):(o!==null&&ep(c,null),r0(),Xr());return Ln(o,c,x,d),c.child}function ZT(o,c,d,g){var x=Jb();return x=x===null?null:{parent:fn._currentValue,pool:x},c.memoizedState={baseLanes:d,cachePool:x},o!==null&&ep(c,null),r0(),zT(c),o!==null&&_c(o,c,g,!0),null}function bp(o,c){var d=c.ref;if(d===null)o!==null&&o.ref!==null&&(c.flags|=4194816);else{if(typeof d!="function"&&typeof d!="object")throw Error(s(284));(o===null||o.ref!==d)&&(c.flags|=4194816)}}function $0(o,c,d,g,x){return Yi(c),d=l0(o,c,d,g,void 0,x),g=u0(),o!==null&&!Nn?(c0(o,c,x),pr(o,c,x)):(de&&g&&Hb(c),c.flags|=1,Ln(o,c,d,x),c.child)}function QT(o,c,d,g,x,N){return Yi(c),c.updateQueue=null,d=ZN(c,g,d,x),YN(o),g=u0(),o!==null&&!Nn?(c0(o,c,N),pr(o,c,N)):(de&&g&&Hb(c),c.flags|=1,Ln(o,c,d,N),c.child)}function JT(o,c,d,g,x){if(Yi(c),c.stateNode===null){var N=dl,E=d.contextType;typeof E=="object"&&E!==null&&(N=Wn(E)),N=new d(g,N),c.memoizedState=N.state!==null&&N.state!==void 0?N.state:null,N.updater=T0,c.stateNode=N,N._reactInternals=c,N=c.stateNode,N.props=g,N.state=c.memoizedState,N.refs={},e0(c),E=d.contextType,N.context=typeof E=="object"&&E!==null?Wn(E):dl,N.state=c.memoizedState,E=d.getDerivedStateFromProps,typeof E=="function"&&(N0(c,d,E,g),N.state=c.memoizedState),typeof d.getDerivedStateFromProps=="function"||typeof N.getSnapshotBeforeUpdate=="function"||typeof N.UNSAFE_componentWillMount!="function"&&typeof N.componentWillMount!="function"||(E=N.state,typeof N.componentWillMount=="function"&&N.componentWillMount(),typeof N.UNSAFE_componentWillMount=="function"&&N.UNSAFE_componentWillMount(),E!==N.state&&T0.enqueueReplaceState(N,N.state,null),Pc(c,g,N,x),Vc(),N.state=c.memoizedState),typeof N.componentDidMount=="function"&&(c.flags|=4194308),g=!0}else if(o===null){N=c.stateNode;var _=c.memoizedProps,W=Ji(d,_);N.props=W;var lt=N.context,pt=d.contextType;E=dl,typeof pt=="object"&&pt!==null&&(E=Wn(pt));var bt=d.getDerivedStateFromProps;pt=typeof bt=="function"||typeof N.getSnapshotBeforeUpdate=="function",_=c.pendingProps!==_,pt||typeof N.UNSAFE_componentWillReceiveProps!="function"&&typeof N.componentWillReceiveProps!="function"||(_||lt!==E)&&BT(c,N,g,E),Gr=!1;var ut=c.memoizedState;N.state=ut,Pc(c,g,N,x),Vc(),lt=c.memoizedState,_||ut!==lt||Gr?(typeof bt=="function"&&(N0(c,d,bt,g),lt=c.memoizedState),(W=Gr||MT(c,d,W,g,ut,lt,E))?(pt||typeof N.UNSAFE_componentWillMount!="function"&&typeof N.componentWillMount!="function"||(typeof N.componentWillMount=="function"&&N.componentWillMount(),typeof N.UNSAFE_componentWillMount=="function"&&N.UNSAFE_componentWillMount()),typeof N.componentDidMount=="function"&&(c.flags|=4194308)):(typeof N.componentDidMount=="function"&&(c.flags|=4194308),c.memoizedProps=g,c.memoizedState=lt),N.props=g,N.state=lt,N.context=E,g=W):(typeof N.componentDidMount=="function"&&(c.flags|=4194308),g=!1)}else{N=c.stateNode,n0(o,c),E=c.memoizedProps,pt=Ji(d,E),N.props=pt,bt=c.pendingProps,ut=N.context,lt=d.contextType,W=dl,typeof lt=="object"&&lt!==null&&(W=Wn(lt)),_=d.getDerivedStateFromProps,(lt=typeof _=="function"||typeof N.getSnapshotBeforeUpdate=="function")||typeof N.UNSAFE_componentWillReceiveProps!="function"&&typeof N.componentWillReceiveProps!="function"||(E!==bt||ut!==W)&&BT(c,N,g,W),Gr=!1,ut=c.memoizedState,N.state=ut,Pc(c,g,N,x),Vc();var ct=c.memoizedState;E!==bt||ut!==ct||Gr||o!==null&&o.dependencies!==null&&Jf(o.dependencies)?(typeof _=="function"&&(N0(c,d,_,g),ct=c.memoizedState),(pt=Gr||MT(c,d,pt,g,ut,ct,W)||o!==null&&o.dependencies!==null&&Jf(o.dependencies))?(lt||typeof N.UNSAFE_componentWillUpdate!="function"&&typeof N.componentWillUpdate!="function"||(typeof N.componentWillUpdate=="function"&&N.componentWillUpdate(g,ct,W),typeof N.UNSAFE_componentWillUpdate=="function"&&N.UNSAFE_componentWillUpdate(g,ct,W)),typeof N.componentDidUpdate=="function"&&(c.flags|=4),typeof N.getSnapshotBeforeUpdate=="function"&&(c.flags|=1024)):(typeof N.componentDidUpdate!="function"||E===o.memoizedProps&&ut===o.memoizedState||(c.flags|=4),typeof N.getSnapshotBeforeUpdate!="function"||E===o.memoizedProps&&ut===o.memoizedState||(c.flags|=1024),c.memoizedProps=g,c.memoizedState=ct),N.props=g,N.state=ct,N.context=W,g=pt):(typeof N.componentDidUpdate!="function"||E===o.memoizedProps&&ut===o.memoizedState||(c.flags|=4),typeof N.getSnapshotBeforeUpdate!="function"||E===o.memoizedProps&&ut===o.memoizedState||(c.flags|=1024),g=!1)}return N=g,bp(o,c),g=(c.flags&128)!==0,N||g?(N=c.stateNode,d=g&&typeof d.getDerivedStateFromError!="function"?null:N.render(),c.flags|=1,o!==null&&g?(c.child=Sl(c,o.child,null,x),c.child=Sl(c,null,d,x)):Ln(o,c,d,x),c.memoizedState=N.state,o=c.child):o=pr(o,c,x),o}function t2(o,c,d,g){return Dc(),c.flags|=256,Ln(o,c,d,g),c.child}var k0={dehydrated:null,treeContext:null,retryLane:0,hydrationErrors:null};function I0(o){return{baseLanes:o,cachePool:PN()}}function E0(o,c,d){return o=o!==null?o.childLanes&~d:0,c&&(o|=Js),o}function e2(o,c,d){var g=c.pendingProps,x=!1,N=(c.flags&128)!==0,E;if((E=N)||(E=o!==null&&o.memoizedState===null?!1:(pn.current&2)!==0),E&&(x=!0,c.flags&=-129),E=(c.flags&32)!==0,c.flags&=-33,o===null){if(de){if(x?qr(c):Xr(),de){var _=Ge,W;if(W=_){t:{for(W=_,_=Oa;W.nodeType!==8;){if(!_){_=null;break t}if(W=ma(W.nextSibling),W===null){_=null;break t}}_=W}_!==null?(c.memoizedState={dehydrated:_,treeContext:Hi!==null?{id:lr,overflow:ur}:null,retryLane:536870912,hydrationErrors:null},W=As(18,null,null,0),W.stateNode=_,W.return=c,c.child=W,es=c,Ge=null,W=!0):W=!1}W||Xi(c)}if(_=c.memoizedState,_!==null&&(_=_.dehydrated,_!==null))return dx(_)?c.lanes=32:c.lanes=536870912,null;fr(c)}return _=g.children,g=g.fallback,x?(Xr(),x=c.mode,_=xp({mode:"hidden",children:_},x),g=Wi(g,x,d,null),_.return=c,g.return=c,_.sibling=g,c.child=_,x=c.child,x.memoizedState=I0(d),x.childLanes=E0(o,E,d),c.memoizedState=k0,g):(qr(c),A0(c,_))}if(W=o.memoizedState,W!==null&&(_=W.dehydrated,_!==null)){if(N)c.flags&256?(qr(c),c.flags&=-257,c=R0(o,c,d)):c.memoizedState!==null?(Xr(),c.child=o.child,c.flags|=128,c=null):(Xr(),x=g.fallback,_=c.mode,g=xp({mode:"visible",children:g.children},_),x=Wi(x,_,d,null),x.flags|=2,g.return=c,x.return=c,g.sibling=x,c.child=g,Sl(c,o.child,null,d),g=c.child,g.memoizedState=I0(d),g.childLanes=E0(o,E,d),c.memoizedState=k0,c=x);else if(qr(c),dx(_)){if(E=_.nextSibling&&_.nextSibling.dataset,E)var lt=E.dgst;E=lt,g=Error(s(419)),g.stack="",g.digest=E,Oc({value:g,source:null,stack:null}),c=R0(o,c,d)}else if(Nn||_c(o,c,d,!1),E=(d&o.childLanes)!==0,Nn||E){if(E=Re,E!==null&&(g=d&-d,g=(g&42)!==0?1:fb(g),g=(g&(E.suspendedLanes|d))!==0?0:g,g!==0&&g!==W.retryLane))throw W.retryLane=g,hl(o,g),Fs(E,o,g),jT;_.data==="$?"||K0(),c=R0(o,c,d)}else _.data==="$?"?(c.flags|=192,c.child=o.child,c=null):(o=W.treeContext,Ge=ma(_.nextSibling),es=c,de=!0,qi=null,Oa=!1,o!==null&&(Ys[Zs++]=lr,Ys[Zs++]=ur,Ys[Zs++]=Hi,lr=o.id,ur=o.overflow,Hi=c),c=A0(c,g.children),c.flags|=4096);return c}return x?(Xr(),x=g.fallback,_=c.mode,W=o.child,lt=W.sibling,g=or(W,{mode:"hidden",children:g.children}),g.subtreeFlags=W.subtreeFlags&65011712,lt!==null?x=or(lt,x):(x=Wi(x,_,d,null),x.flags|=2),x.return=c,g.return=c,g.sibling=x,c.child=g,g=x,x=c.child,_=o.child.memoizedState,_===null?_=I0(d):(W=_.cachePool,W!==null?(lt=fn._currentValue,W=W.parent!==lt?{parent:lt,pool:lt}:W):W=PN(),_={baseLanes:_.baseLanes|d,cachePool:W}),x.memoizedState=_,x.childLanes=E0(o,E,d),c.memoizedState=k0,g):(qr(c),d=o.child,o=d.sibling,d=or(d,{mode:"visible",children:g.children}),d.return=c,d.sibling=null,o!==null&&(E=c.deletions,E===null?(c.deletions=[o],c.flags|=16):E.push(o)),c.child=d,c.memoizedState=null,d)}function A0(o,c){return c=xp({mode:"visible",children:c},o.mode),c.return=o,o.child=c}function xp(o,c){return o=As(22,o,null,c),o.lanes=0,o.stateNode={_visibility:1,_pendingMarkers:null,_retryCache:null,_transitions:null},o}function R0(o,c,d){return Sl(c,o.child,null,d),o=A0(c,c.pendingProps.children),o.flags|=2,c.memoizedState=null,o}function n2(o,c,d){o.lanes|=c;var g=o.alternate;g!==null&&(g.lanes|=c),Kb(o.return,c,d)}function D0(o,c,d,g,x){var N=o.memoizedState;N===null?o.memoizedState={isBackwards:c,rendering:null,renderingStartTime:0,last:g,tail:d,tailMode:x}:(N.isBackwards=c,N.rendering=null,N.renderingStartTime=0,N.last=g,N.tail=d,N.tailMode=x)}function s2(o,c,d){var g=c.pendingProps,x=g.revealOrder,N=g.tail;if(Ln(o,c,g.children,d),g=pn.current,(g&2)!==0)g=g&1|2,c.flags|=128;else{if(o!==null&&(o.flags&128)!==0)t:for(o=c.child;o!==null;){if(o.tag===13)o.memoizedState!==null&&n2(o,d,c);else if(o.tag===19)n2(o,d,c);else if(o.child!==null){o.child.return=o,o=o.child;continue}if(o===c)break t;for(;o.sibling===null;){if(o.return===null||o.return===c)break t;o=o.return}o.sibling.return=o.return,o=o.sibling}g&=1}switch(et(pn,g),x){case"forwards":for(d=c.child,x=null;d!==null;)o=d.alternate,o!==null&&mp(o)===null&&(x=d),d=d.sibling;d=x,d===null?(x=c.child,c.child=null):(x=d.sibling,d.sibling=null),D0(c,!1,x,d,N);break;case"backwards":for(d=null,x=c.child,c.child=null;x!==null;){if(o=x.alternate,o!==null&&mp(o)===null){c.child=x;break}o=x.sibling,x.sibling=d,d=x,x=o}D0(c,!0,d,null,N);break;case"together":D0(c,!1,null,null,void 0);break;default:c.memoizedState=null}return c.child}function pr(o,c,d){if(o!==null&&(c.dependencies=o.dependencies),Jr|=c.lanes,(d&c.childLanes)===0)if(o!==null){if(_c(o,c,d,!1),(d&c.childLanes)===0)return null}else return null;if(o!==null&&c.child!==o.child)throw Error(s(153));if(c.child!==null){for(o=c.child,d=or(o,o.pendingProps),c.child=d,d.return=c;o.sibling!==null;)o=o.sibling,d=d.sibling=or(o,o.pendingProps),d.return=c;d.sibling=null}return c.child}function O0(o,c){return(o.lanes&c)!==0?!0:(o=o.dependencies,!!(o!==null&&Jf(o)))}function M3(o,c,d){switch(c.tag){case 3:Nt(c,c.stateNode.containerInfo),Ur(c,fn,o.memoizedState.cache),Dc();break;case 27:case 5:Vt(c);break;case 4:Nt(c,c.stateNode.containerInfo);break;case 10:Ur(c,c.type,c.memoizedProps.value);break;case 13:var g=c.memoizedState;if(g!==null)return g.dehydrated!==null?(qr(c),c.flags|=128,null):(d&c.child.childLanes)!==0?e2(o,c,d):(qr(c),o=pr(o,c,d),o!==null?o.sibling:null);qr(c);break;case 19:var x=(o.flags&128)!==0;if(g=(d&c.childLanes)!==0,g||(_c(o,c,d,!1),g=(d&c.childLanes)!==0),x){if(g)return s2(o,c,d);c.flags|=128}if(x=c.memoizedState,x!==null&&(x.rendering=null,x.tail=null,x.lastEffect=null),et(pn,pn.current),g)break;return null;case 22:case 23:return c.lanes=0,YT(o,c,d);case 24:Ur(c,fn,o.memoizedState.cache)}return pr(o,c,d)}function a2(o,c,d){if(o!==null)if(o.memoizedProps!==c.pendingProps)Nn=!0;else{if(!O0(o,d)&&(c.flags&128)===0)return Nn=!1,M3(o,c,d);Nn=(o.flags&131072)!==0}else Nn=!1,de&&(c.flags&1048576)!==0&&_N(c,Qf,c.index);switch(c.lanes=0,c.tag){case 16:t:{o=c.pendingProps;var g=c.elementType,x=g._init;if(g=x(g._payload),c.type=g,typeof g=="function")Ub(g)?(o=Ji(g,o),c.tag=1,c=JT(null,c,g,o,d)):(c.tag=0,c=$0(null,c,g,o,d));else{if(g!=null){if(x=g.$$typeof,x===C){c.tag=11,c=qT(null,c,g,o,d);break t}else if(x===F){c.tag=14,c=XT(null,c,g,o,d);break t}}throw c=tt(g)||g,Error(s(306,c,""))}}return c;case 0:return $0(o,c,c.type,c.pendingProps,d);case 1:return g=c.type,x=Ji(g,c.pendingProps),JT(o,c,g,x,d);case 3:t:{if(Nt(c,c.stateNode.containerInfo),o===null)throw Error(s(387));g=c.pendingProps;var N=c.memoizedState;x=N.element,n0(o,c),Pc(c,g,null,d);var E=c.memoizedState;if(g=E.cache,Ur(c,fn,g),g!==N.cache&&Yb(c,[fn],d,!0),Vc(),g=E.element,N.isDehydrated)if(N={element:g,isDehydrated:!1,cache:E.cache},c.updateQueue.baseState=N,c.memoizedState=N,c.flags&256){c=t2(o,c,g,d);break t}else if(g!==x){x=Xs(Error(s(424)),c),Oc(x),c=t2(o,c,g,d);break t}else{switch(o=c.stateNode.containerInfo,o.nodeType){case 9:o=o.body;break;default:o=o.nodeName==="HTML"?o.ownerDocument.body:o}for(Ge=ma(o.firstChild),es=c,de=!0,qi=null,Oa=!0,d=LT(c,null,g,d),c.child=d;d;)d.flags=d.flags&-3|4096,d=d.sibling}else{if(Dc(),g===x){c=pr(o,c,d);break t}Ln(o,c,g,d)}c=c.child}return c;case 26:return bp(o,c),o===null?(d=lC(c.type,null,c.pendingProps,null))?c.memoizedState=d:de||(d=c.type,o=c.pendingProps,g=Op(yt.current).createElement(d),g[Gn]=c,g[fs]=o,Mn(g,d,o),Sn(g),c.stateNode=g):c.memoizedState=lC(c.type,o.memoizedProps,c.pendingProps,o.memoizedState),null;case 27:return Vt(c),o===null&&de&&(g=c.stateNode=rC(c.type,c.pendingProps,yt.current),es=c,Oa=!0,x=Ge,si(c.type)?(fx=x,Ge=ma(g.firstChild)):Ge=x),Ln(o,c,c.pendingProps.children,d),bp(o,c),o===null&&(c.flags|=4194304),c.child;case 5:return o===null&&de&&((x=g=Ge)&&(g=dF(g,c.type,c.pendingProps,Oa),g!==null?(c.stateNode=g,es=c,Ge=ma(g.firstChild),Oa=!1,x=!0):x=!1),x||Xi(c)),Vt(c),x=c.type,N=c.pendingProps,E=o!==null?o.memoizedProps:null,g=N.children,ux(x,N)?g=null:E!==null&&ux(x,E)&&(c.flags|=32),c.memoizedState!==null&&(x=l0(o,c,A3,null,null,d),uh._currentValue=x),bp(o,c),Ln(o,c,g,d),c.child;case 6:return o===null&&de&&((o=d=Ge)&&(d=fF(d,c.pendingProps,Oa),d!==null?(c.stateNode=d,es=c,Ge=null,o=!0):o=!1),o||Xi(c)),null;case 13:return e2(o,c,d);case 4:return Nt(c,c.stateNode.containerInfo),g=c.pendingProps,o===null?c.child=Sl(c,null,g,d):Ln(o,c,g,d),c.child;case 11:return qT(o,c,c.type,c.pendingProps,d);case 7:return Ln(o,c,c.pendingProps,d),c.child;case 8:return Ln(o,c,c.pendingProps.children,d),c.child;case 12:return Ln(o,c,c.pendingProps.children,d),c.child;case 10:return g=c.pendingProps,Ur(c,c.type,g.value),Ln(o,c,g.children,d),c.child;case 9:return x=c.type._context,g=c.pendingProps.children,Yi(c),x=Wn(x),g=g(x),c.flags|=1,Ln(o,c,g,d),c.child;case 14:return XT(o,c,c.type,c.pendingProps,d);case 15:return KT(o,c,c.type,c.pendingProps,d);case 19:return s2(o,c,d);case 31:return g=c.pendingProps,d=c.mode,g={mode:g.mode,children:g.children},o===null?(d=xp(g,d),d.ref=c.ref,c.child=d,d.return=c,c=d):(d=or(o.child,g),d.ref=c.ref,c.child=d,d.return=c,c=d),c;case 22:return YT(o,c,d);case 24:return Yi(c),g=Wn(fn),o===null?(x=Jb(),x===null&&(x=Re,N=Zb(),x.pooledCache=N,N.refCount++,N!==null&&(x.pooledCacheLanes|=d),x=N),c.memoizedState={parent:g,cache:x},e0(c),Ur(c,fn,x)):((o.lanes&d)!==0&&(n0(o,c),Pc(c,null,null,d),Vc()),x=o.memoizedState,N=c.memoizedState,x.parent!==g?(x={parent:g,cache:g},c.memoizedState=x,c.lanes===0&&(c.memoizedState=c.updateQueue.baseState=x),Ur(c,fn,g)):(g=N.cache,Ur(c,fn,g),g!==x.cache&&Yb(c,[fn],d,!0))),Ln(o,c,c.pendingProps.children,d),c.child;case 29:throw c.pendingProps}throw Error(s(156,c.tag))}function mr(o){o.flags|=4}function r2(o,c){if(c.type!=="stylesheet"||(c.state.loading&4)!==0)o.flags&=-16777217;else if(o.flags|=16777216,!fC(c)){if(c=Qs.current,c!==null&&((oe&4194048)===oe?_a!==null:(oe&62914560)!==oe&&(oe&536870912)===0||c!==_a))throw Mc=t0,UN;o.flags|=8192}}function vp(o,c){c!==null&&(o.flags|=4),o.flags&16384&&(c=o.tag!==22?zS():536870912,o.lanes|=c,$l|=c)}function Xc(o,c){if(!de)switch(o.tailMode){case"hidden":c=o.tail;for(var d=null;c!==null;)c.alternate!==null&&(d=c),c=c.sibling;d===null?o.tail=null:d.sibling=null;break;case"collapsed":d=o.tail;for(var g=null;d!==null;)d.alternate!==null&&(g=d),d=d.sibling;g===null?c||o.tail===null?o.tail=null:o.tail.sibling=null:g.sibling=null}}function Ve(o){var c=o.alternate!==null&&o.alternate.child===o.child,d=0,g=0;if(c)for(var x=o.child;x!==null;)d|=x.lanes|x.childLanes,g|=x.subtreeFlags&65011712,g|=x.flags&65011712,x.return=o,x=x.sibling;else for(x=o.child;x!==null;)d|=x.lanes|x.childLanes,g|=x.subtreeFlags,g|=x.flags,x.return=o,x=x.sibling;return o.subtreeFlags|=g,o.childLanes=d,c}function B3(o,c,d){var g=c.pendingProps;switch(jb(c),c.tag){case 31:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Ve(c),null;case 1:return Ve(c),null;case 3:return d=c.stateNode,g=null,o!==null&&(g=o.memoizedState.cache),c.memoizedState.cache!==g&&(c.flags|=2048),hr(fn),Dt(),d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null),(o===null||o.child===null)&&(Rc(c)?mr(c):o===null||o.memoizedState.isDehydrated&&(c.flags&256)===0||(c.flags|=1024,zN())),Ve(c),null;case 26:return d=c.memoizedState,o===null?(mr(c),d!==null?(Ve(c),r2(c,d)):(Ve(c),c.flags&=-16777217)):d?d!==o.memoizedState?(mr(c),Ve(c),r2(c,d)):(Ve(c),c.flags&=-16777217):(o.memoizedProps!==g&&mr(c),Ve(c),c.flags&=-16777217),null;case 27:Pt(c),d=yt.current;var x=c.type;if(o!==null&&c.stateNode!=null)o.memoizedProps!==g&&mr(c);else{if(!g){if(c.stateNode===null)throw Error(s(166));return Ve(c),null}o=ft.current,Rc(c)?FN(c):(o=rC(x,g,d),c.stateNode=o,mr(c))}return Ve(c),null;case 5:if(Pt(c),d=c.type,o!==null&&c.stateNode!=null)o.memoizedProps!==g&&mr(c);else{if(!g){if(c.stateNode===null)throw Error(s(166));return Ve(c),null}if(o=ft.current,Rc(c))FN(c);else{switch(x=Op(yt.current),o){case 1:o=x.createElementNS("http://www.w3.org/2000/svg",d);break;case 2:o=x.createElementNS("http://www.w3.org/1998/Math/MathML",d);break;default:switch(d){case"svg":o=x.createElementNS("http://www.w3.org/2000/svg",d);break;case"math":o=x.createElementNS("http://www.w3.org/1998/Math/MathML",d);break;case"script":o=x.createElement("div"),o.innerHTML="<script><\/script>",o=o.removeChild(o.firstChild);break;case"select":o=typeof g.is=="string"?x.createElement("select",{is:g.is}):x.createElement("select"),g.multiple?o.multiple=!0:g.size&&(o.size=g.size);break;default:o=typeof g.is=="string"?x.createElement(d,{is:g.is}):x.createElement(d)}}o[Gn]=c,o[fs]=g;t:for(x=c.child;x!==null;){if(x.tag===5||x.tag===6)o.appendChild(x.stateNode);else if(x.tag!==4&&x.tag!==27&&x.child!==null){x.child.return=x,x=x.child;continue}if(x===c)break t;for(;x.sibling===null;){if(x.return===null||x.return===c)break t;x=x.return}x.sibling.return=x.return,x=x.sibling}c.stateNode=o;t:switch(Mn(o,d,g),d){case"button":case"input":case"select":case"textarea":o=!!g.autoFocus;break t;case"img":o=!0;break t;default:o=!1}o&&mr(c)}}return Ve(c),c.flags&=-16777217,null;case 6:if(o&&c.stateNode!=null)o.memoizedProps!==g&&mr(c);else{if(typeof g!="string"&&c.stateNode===null)throw Error(s(166));if(o=yt.current,Rc(c)){if(o=c.stateNode,d=c.memoizedProps,g=null,x=es,x!==null)switch(x.tag){case 27:case 5:g=x.memoizedProps}o[Gn]=c,o=!!(o.nodeValue===d||g!==null&&g.suppressHydrationWarning===!0||Q2(o.nodeValue,d)),o||Xi(c)}else o=Op(o).createTextNode(g),o[Gn]=c,c.stateNode=o}return Ve(c),null;case 13:if(g=c.memoizedState,o===null||o.memoizedState!==null&&o.memoizedState.dehydrated!==null){if(x=Rc(c),g!==null&&g.dehydrated!==null){if(o===null){if(!x)throw Error(s(318));if(x=c.memoizedState,x=x!==null?x.dehydrated:null,!x)throw Error(s(317));x[Gn]=c}else Dc(),(c.flags&128)===0&&(c.memoizedState=null),c.flags|=4;Ve(c),x=!1}else x=zN(),o!==null&&o.memoizedState!==null&&(o.memoizedState.hydrationErrors=x),x=!0;if(!x)return c.flags&256?(fr(c),c):(fr(c),null)}if(fr(c),(c.flags&128)!==0)return c.lanes=d,c;if(d=g!==null,o=o!==null&&o.memoizedState!==null,d){g=c.child,x=null,g.alternate!==null&&g.alternate.memoizedState!==null&&g.alternate.memoizedState.cachePool!==null&&(x=g.alternate.memoizedState.cachePool.pool);var N=null;g.memoizedState!==null&&g.memoizedState.cachePool!==null&&(N=g.memoizedState.cachePool.pool),N!==x&&(g.flags|=2048)}return d!==o&&d&&(c.child.flags|=8192),vp(c,c.updateQueue),Ve(c),null;case 4:return Dt(),o===null&&ax(c.stateNode.containerInfo),Ve(c),null;case 10:return hr(c.type),Ve(c),null;case 19:if(st(pn),x=c.memoizedState,x===null)return Ve(c),null;if(g=(c.flags&128)!==0,N=x.rendering,N===null)if(g)Xc(x,!1);else{if(We!==0||o!==null&&(o.flags&128)!==0)for(o=c.child;o!==null;){if(N=mp(o),N!==null){for(c.flags|=128,Xc(x,!1),o=N.updateQueue,c.updateQueue=o,vp(c,o),c.subtreeFlags=0,o=d,d=c.child;d!==null;)ON(d,o),d=d.sibling;return et(pn,pn.current&1|2),c.child}o=o.sibling}x.tail!==null&&ae()>Np&&(c.flags|=128,g=!0,Xc(x,!1),c.lanes=4194304)}else{if(!g)if(o=mp(N),o!==null){if(c.flags|=128,g=!0,o=o.updateQueue,c.updateQueue=o,vp(c,o),Xc(x,!0),x.tail===null&&x.tailMode==="hidden"&&!N.alternate&&!de)return Ve(c),null}else 2*ae()-x.renderingStartTime>Np&&d!==536870912&&(c.flags|=128,g=!0,Xc(x,!1),c.lanes=4194304);x.isBackwards?(N.sibling=c.child,c.child=N):(o=x.last,o!==null?o.sibling=N:c.child=N,x.last=N)}return x.tail!==null?(c=x.tail,x.rendering=c,x.tail=c.sibling,x.renderingStartTime=ae(),c.sibling=null,o=pn.current,et(pn,g?o&1|2:o&1),c):(Ve(c),null);case 22:case 23:return fr(c),i0(),g=c.memoizedState!==null,o!==null?o.memoizedState!==null!==g&&(c.flags|=8192):g&&(c.flags|=8192),g?(d&536870912)!==0&&(c.flags&128)===0&&(Ve(c),c.subtreeFlags&6&&(c.flags|=8192)):Ve(c),d=c.updateQueue,d!==null&&vp(c,d.retryQueue),d=null,o!==null&&o.memoizedState!==null&&o.memoizedState.cachePool!==null&&(d=o.memoizedState.cachePool.pool),g=null,c.memoizedState!==null&&c.memoizedState.cachePool!==null&&(g=c.memoizedState.cachePool.pool),g!==d&&(c.flags|=2048),o!==null&&st(Zi),null;case 24:return d=null,o!==null&&(d=o.memoizedState.cache),c.memoizedState.cache!==d&&(c.flags|=2048),hr(fn),Ve(c),null;case 25:return null;case 30:return null}throw Error(s(156,c.tag))}function V3(o,c){switch(jb(c),c.tag){case 1:return o=c.flags,o&65536?(c.flags=o&-65537|128,c):null;case 3:return hr(fn),Dt(),o=c.flags,(o&65536)!==0&&(o&128)===0?(c.flags=o&-65537|128,c):null;case 26:case 27:case 5:return Pt(c),null;case 13:if(fr(c),o=c.memoizedState,o!==null&&o.dehydrated!==null){if(c.alternate===null)throw Error(s(340));Dc()}return o=c.flags,o&65536?(c.flags=o&-65537|128,c):null;case 19:return st(pn),null;case 4:return Dt(),null;case 10:return hr(c.type),null;case 22:case 23:return fr(c),i0(),o!==null&&st(Zi),o=c.flags,o&65536?(c.flags=o&-65537|128,c):null;case 24:return hr(fn),null;case 25:return null;default:return null}}function i2(o,c){switch(jb(c),c.tag){case 3:hr(fn),Dt();break;case 26:case 27:case 5:Pt(c);break;case 4:Dt();break;case 13:fr(c);break;case 19:st(pn);break;case 10:hr(c.type);break;case 22:case 23:fr(c),i0(),o!==null&&st(Zi);break;case 24:hr(fn)}}function Kc(o,c){try{var d=c.updateQueue,g=d!==null?d.lastEffect:null;if(g!==null){var x=g.next;d=x;do{if((d.tag&o)===o){g=void 0;var N=d.create,E=d.inst;g=N(),E.destroy=g}d=d.next}while(d!==x)}}catch(_){ke(c,c.return,_)}}function Kr(o,c,d){try{var g=c.updateQueue,x=g!==null?g.lastEffect:null;if(x!==null){var N=x.next;g=N;do{if((g.tag&o)===o){var E=g.inst,_=E.destroy;if(_!==void 0){E.destroy=void 0,x=c;var W=d,lt=_;try{lt()}catch(pt){ke(x,W,pt)}}}g=g.next}while(g!==N)}}catch(pt){ke(c,c.return,pt)}}function o2(o){var c=o.updateQueue;if(c!==null){var d=o.stateNode;try{XN(c,d)}catch(g){ke(o,o.return,g)}}}function l2(o,c,d){d.props=Ji(o.type,o.memoizedProps),d.state=o.memoizedState;try{d.componentWillUnmount()}catch(g){ke(o,c,g)}}function Yc(o,c){try{var d=o.ref;if(d!==null){switch(o.tag){case 26:case 27:case 5:var g=o.stateNode;break;case 30:g=o.stateNode;break;default:g=o.stateNode}typeof d=="function"?o.refCleanup=d(g):d.current=g}}catch(x){ke(o,c,x)}}function Fa(o,c){var d=o.ref,g=o.refCleanup;if(d!==null)if(typeof g=="function")try{g()}catch(x){ke(o,c,x)}finally{o.refCleanup=null,o=o.alternate,o!=null&&(o.refCleanup=null)}else if(typeof d=="function")try{d(null)}catch(x){ke(o,c,x)}else d.current=null}function u2(o){var c=o.type,d=o.memoizedProps,g=o.stateNode;try{t:switch(c){case"button":case"input":case"select":case"textarea":d.autoFocus&&g.focus();break t;case"img":d.src?g.src=d.src:d.srcSet&&(g.srcset=d.srcSet)}}catch(x){ke(o,o.return,x)}}function _0(o,c,d){try{var g=o.stateNode;oF(g,o.type,d,c),g[fs]=c}catch(x){ke(o,o.return,x)}}function c2(o){return o.tag===5||o.tag===3||o.tag===26||o.tag===27&&si(o.type)||o.tag===4}function F0(o){t:for(;;){for(;o.sibling===null;){if(o.return===null||c2(o.return))return null;o=o.return}for(o.sibling.return=o.return,o=o.sibling;o.tag!==5&&o.tag!==6&&o.tag!==18;){if(o.tag===27&&si(o.type)||o.flags&2||o.child===null||o.tag===4)continue t;o.child.return=o,o=o.child}if(!(o.flags&2))return o.stateNode}}function L0(o,c,d){var g=o.tag;if(g===5||g===6)o=o.stateNode,c?(d.nodeType===9?d.body:d.nodeName==="HTML"?d.ownerDocument.body:d).insertBefore(o,c):(c=d.nodeType===9?d.body:d.nodeName==="HTML"?d.ownerDocument.body:d,c.appendChild(o),d=d._reactRootContainer,d!=null||c.onclick!==null||(c.onclick=Dp));else if(g!==4&&(g===27&&si(o.type)&&(d=o.stateNode,c=null),o=o.child,o!==null))for(L0(o,c,d),o=o.sibling;o!==null;)L0(o,c,d),o=o.sibling}function wp(o,c,d){var g=o.tag;if(g===5||g===6)o=o.stateNode,c?d.insertBefore(o,c):d.appendChild(o);else if(g!==4&&(g===27&&si(o.type)&&(d=o.stateNode),o=o.child,o!==null))for(wp(o,c,d),o=o.sibling;o!==null;)wp(o,c,d),o=o.sibling}function h2(o){var c=o.stateNode,d=o.memoizedProps;try{for(var g=o.type,x=c.attributes;x.length;)c.removeAttributeNode(x[0]);Mn(c,g,d),c[Gn]=o,c[fs]=d}catch(N){ke(o,o.return,N)}}var gr=!1,Qe=!1,z0=!1,d2=typeof WeakSet=="function"?WeakSet:Set,Tn=null;function P3(o,c){if(o=o.containerInfo,ox=Bp,o=NN(o),Fb(o)){if("selectionStart"in o)var d={start:o.selectionStart,end:o.selectionEnd};else t:{d=(d=o.ownerDocument)&&d.defaultView||window;var g=d.getSelection&&d.getSelection();if(g&&g.rangeCount!==0){d=g.anchorNode;var x=g.anchorOffset,N=g.focusNode;g=g.focusOffset;try{d.nodeType,N.nodeType}catch{d=null;break t}var E=0,_=-1,W=-1,lt=0,pt=0,bt=o,ut=null;e:for(;;){for(var ct;bt!==d||x!==0&&bt.nodeType!==3||(_=E+x),bt!==N||g!==0&&bt.nodeType!==3||(W=E+g),bt.nodeType===3&&(E+=bt.nodeValue.length),(ct=bt.firstChild)!==null;)ut=bt,bt=ct;for(;;){if(bt===o)break e;if(ut===d&&++lt===x&&(_=E),ut===N&&++pt===g&&(W=E),(ct=bt.nextSibling)!==null)break;bt=ut,ut=bt.parentNode}bt=ct}d=_===-1||W===-1?null:{start:_,end:W}}else d=null}d=d||{start:0,end:0}}else d=null;for(lx={focusedElem:o,selectionRange:d},Bp=!1,Tn=c;Tn!==null;)if(c=Tn,o=c.child,(c.subtreeFlags&1024)!==0&&o!==null)o.return=c,Tn=o;else for(;Tn!==null;){switch(c=Tn,N=c.alternate,o=c.flags,c.tag){case 0:break;case 11:case 15:break;case 1:if((o&1024)!==0&&N!==null){o=void 0,d=c,x=N.memoizedProps,N=N.memoizedState,g=d.stateNode;try{var Bt=Ji(d.type,x,d.elementType===d.type);o=g.getSnapshotBeforeUpdate(Bt,N),g.__reactInternalSnapshotBeforeUpdate=o}catch(Lt){ke(d,d.return,Lt)}}break;case 3:if((o&1024)!==0){if(o=c.stateNode.containerInfo,d=o.nodeType,d===9)hx(o);else if(d===1)switch(o.nodeName){case"HEAD":case"HTML":case"BODY":hx(o);break;default:o.textContent=""}}break;case 5:case 26:case 27:case 6:case 4:case 17:break;default:if((o&1024)!==0)throw Error(s(163))}if(o=c.sibling,o!==null){o.return=c.return,Tn=o;break}Tn=c.return}}function f2(o,c,d){var g=d.flags;switch(d.tag){case 0:case 11:case 15:Yr(o,d),g&4&&Kc(5,d);break;case 1:if(Yr(o,d),g&4)if(o=d.stateNode,c===null)try{o.componentDidMount()}catch(E){ke(d,d.return,E)}else{var x=Ji(d.type,c.memoizedProps);c=c.memoizedState;try{o.componentDidUpdate(x,c,o.__reactInternalSnapshotBeforeUpdate)}catch(E){ke(d,d.return,E)}}g&64&&o2(d),g&512&&Yc(d,d.return);break;case 3:if(Yr(o,d),g&64&&(o=d.updateQueue,o!==null)){if(c=null,d.child!==null)switch(d.child.tag){case 27:case 5:c=d.child.stateNode;break;case 1:c=d.child.stateNode}try{XN(o,c)}catch(E){ke(d,d.return,E)}}break;case 27:c===null&&g&4&&h2(d);case 26:case 5:Yr(o,d),c===null&&g&4&&u2(d),g&512&&Yc(d,d.return);break;case 12:Yr(o,d);break;case 13:Yr(o,d),g&4&&g2(o,d),g&64&&(o=d.memoizedState,o!==null&&(o=o.dehydrated,o!==null&&(d=Y3.bind(null,d),pF(o,d))));break;case 22:if(g=d.memoizedState!==null||gr,!g){c=c!==null&&c.memoizedState!==null||Qe,x=gr;var N=Qe;gr=g,(Qe=c)&&!N?Zr(o,d,(d.subtreeFlags&8772)!==0):Yr(o,d),gr=x,Qe=N}break;case 30:break;default:Yr(o,d)}}function p2(o){var c=o.alternate;c!==null&&(o.alternate=null,p2(c)),o.child=null,o.deletions=null,o.sibling=null,o.tag===5&&(c=o.stateNode,c!==null&&gb(c)),o.stateNode=null,o.return=null,o.dependencies=null,o.memoizedProps=null,o.memoizedState=null,o.pendingProps=null,o.stateNode=null,o.updateQueue=null}var _e=null,gs=!1;function yr(o,c,d){for(d=d.child;d!==null;)m2(o,c,d),d=d.sibling}function m2(o,c,d){if(Ue&&typeof Ue.onCommitFiberUnmount=="function")try{Ue.onCommitFiberUnmount(ds,d)}catch{}switch(d.tag){case 26:Qe||Fa(d,c),yr(o,c,d),d.memoizedState?d.memoizedState.count--:d.stateNode&&(d=d.stateNode,d.parentNode.removeChild(d));break;case 27:Qe||Fa(d,c);var g=_e,x=gs;si(d.type)&&(_e=d.stateNode,gs=!1),yr(o,c,d),rh(d.stateNode),_e=g,gs=x;break;case 5:Qe||Fa(d,c);case 6:if(g=_e,x=gs,_e=null,yr(o,c,d),_e=g,gs=x,_e!==null)if(gs)try{(_e.nodeType===9?_e.body:_e.nodeName==="HTML"?_e.ownerDocument.body:_e).removeChild(d.stateNode)}catch(N){ke(d,c,N)}else try{_e.removeChild(d.stateNode)}catch(N){ke(d,c,N)}break;case 18:_e!==null&&(gs?(o=_e,sC(o.nodeType===9?o.body:o.nodeName==="HTML"?o.ownerDocument.body:o,d.stateNode),fh(o)):sC(_e,d.stateNode));break;case 4:g=_e,x=gs,_e=d.stateNode.containerInfo,gs=!0,yr(o,c,d),_e=g,gs=x;break;case 0:case 11:case 14:case 15:Qe||Kr(2,d,c),Qe||Kr(4,d,c),yr(o,c,d);break;case 1:Qe||(Fa(d,c),g=d.stateNode,typeof g.componentWillUnmount=="function"&&l2(d,c,g)),yr(o,c,d);break;case 21:yr(o,c,d);break;case 22:Qe=(g=Qe)||d.memoizedState!==null,yr(o,c,d),Qe=g;break;default:yr(o,c,d)}}function g2(o,c){if(c.memoizedState===null&&(o=c.alternate,o!==null&&(o=o.memoizedState,o!==null&&(o=o.dehydrated,o!==null))))try{fh(o)}catch(d){ke(c,c.return,d)}}function U3(o){switch(o.tag){case 13:case 19:var c=o.stateNode;return c===null&&(c=o.stateNode=new d2),c;case 22:return o=o.stateNode,c=o._retryCache,c===null&&(c=o._retryCache=new d2),c;default:throw Error(s(435,o.tag))}}function M0(o,c){var d=U3(o);c.forEach(function(g){var x=Z3.bind(null,o,g);d.has(g)||(d.add(g),g.then(x,x))})}function Rs(o,c){var d=c.deletions;if(d!==null)for(var g=0;g<d.length;g++){var x=d[g],N=o,E=c,_=E;t:for(;_!==null;){switch(_.tag){case 27:if(si(_.type)){_e=_.stateNode,gs=!1;break t}break;case 5:_e=_.stateNode,gs=!1;break t;case 3:case 4:_e=_.stateNode.containerInfo,gs=!0;break t}_=_.return}if(_e===null)throw Error(s(160));m2(N,E,x),_e=null,gs=!1,N=x.alternate,N!==null&&(N.return=null),x.return=null}if(c.subtreeFlags&13878)for(c=c.child;c!==null;)y2(c,o),c=c.sibling}var pa=null;function y2(o,c){var d=o.alternate,g=o.flags;switch(o.tag){case 0:case 11:case 14:case 15:Rs(c,o),Ds(o),g&4&&(Kr(3,o,o.return),Kc(3,o),Kr(5,o,o.return));break;case 1:Rs(c,o),Ds(o),g&512&&(Qe||d===null||Fa(d,d.return)),g&64&&gr&&(o=o.updateQueue,o!==null&&(g=o.callbacks,g!==null&&(d=o.shared.hiddenCallbacks,o.shared.hiddenCallbacks=d===null?g:d.concat(g))));break;case 26:var x=pa;if(Rs(c,o),Ds(o),g&512&&(Qe||d===null||Fa(d,d.return)),g&4){var N=d!==null?d.memoizedState:null;if(g=o.memoizedState,d===null)if(g===null)if(o.stateNode===null){t:{g=o.type,d=o.memoizedProps,x=x.ownerDocument||x;e:switch(g){case"title":N=x.getElementsByTagName("title")[0],(!N||N[vc]||N[Gn]||N.namespaceURI==="http://www.w3.org/2000/svg"||N.hasAttribute("itemprop"))&&(N=x.createElement(g),x.head.insertBefore(N,x.querySelector("head > title"))),Mn(N,g,d),N[Gn]=o,Sn(N),g=N;break t;case"link":var E=hC("link","href",x).get(g+(d.href||""));if(E){for(var _=0;_<E.length;_++)if(N=E[_],N.getAttribute("href")===(d.href==null||d.href===""?null:d.href)&&N.getAttribute("rel")===(d.rel==null?null:d.rel)&&N.getAttribute("title")===(d.title==null?null:d.title)&&N.getAttribute("crossorigin")===(d.crossOrigin==null?null:d.crossOrigin)){E.splice(_,1);break e}}N=x.createElement(g),Mn(N,g,d),x.head.appendChild(N);break;case"meta":if(E=hC("meta","content",x).get(g+(d.content||""))){for(_=0;_<E.length;_++)if(N=E[_],N.getAttribute("content")===(d.content==null?null:""+d.content)&&N.getAttribute("name")===(d.name==null?null:d.name)&&N.getAttribute("property")===(d.property==null?null:d.property)&&N.getAttribute("http-equiv")===(d.httpEquiv==null?null:d.httpEquiv)&&N.getAttribute("charset")===(d.charSet==null?null:d.charSet)){E.splice(_,1);break e}}N=x.createElement(g),Mn(N,g,d),x.head.appendChild(N);break;default:throw Error(s(468,g))}N[Gn]=o,Sn(N),g=N}o.stateNode=g}else dC(x,o.type,o.stateNode);else o.stateNode=cC(x,g,o.memoizedProps);else N!==g?(N===null?d.stateNode!==null&&(d=d.stateNode,d.parentNode.removeChild(d)):N.count--,g===null?dC(x,o.type,o.stateNode):cC(x,g,o.memoizedProps)):g===null&&o.stateNode!==null&&_0(o,o.memoizedProps,d.memoizedProps)}break;case 27:Rs(c,o),Ds(o),g&512&&(Qe||d===null||Fa(d,d.return)),d!==null&&g&4&&_0(o,o.memoizedProps,d.memoizedProps);break;case 5:if(Rs(c,o),Ds(o),g&512&&(Qe||d===null||Fa(d,d.return)),o.flags&32){x=o.stateNode;try{al(x,"")}catch(ct){ke(o,o.return,ct)}}g&4&&o.stateNode!=null&&(x=o.memoizedProps,_0(o,x,d!==null?d.memoizedProps:x)),g&1024&&(z0=!0);break;case 6:if(Rs(c,o),Ds(o),g&4){if(o.stateNode===null)throw Error(s(162));g=o.memoizedProps,d=o.stateNode;try{d.nodeValue=g}catch(ct){ke(o,o.return,ct)}}break;case 3:if(Lp=null,x=pa,pa=_p(c.containerInfo),Rs(c,o),pa=x,Ds(o),g&4&&d!==null&&d.memoizedState.isDehydrated)try{fh(c.containerInfo)}catch(ct){ke(o,o.return,ct)}z0&&(z0=!1,b2(o));break;case 4:g=pa,pa=_p(o.stateNode.containerInfo),Rs(c,o),Ds(o),pa=g;break;case 12:Rs(c,o),Ds(o);break;case 13:Rs(c,o),Ds(o),o.child.flags&8192&&o.memoizedState!==null!=(d!==null&&d.memoizedState!==null)&&(W0=ae()),g&4&&(g=o.updateQueue,g!==null&&(o.updateQueue=null,M0(o,g)));break;case 22:x=o.memoizedState!==null;var W=d!==null&&d.memoizedState!==null,lt=gr,pt=Qe;if(gr=lt||x,Qe=pt||W,Rs(c,o),Qe=pt,gr=lt,Ds(o),g&8192)t:for(c=o.stateNode,c._visibility=x?c._visibility&-2:c._visibility|1,x&&(d===null||W||gr||Qe||to(o)),d=null,c=o;;){if(c.tag===5||c.tag===26){if(d===null){W=d=c;try{if(N=W.stateNode,x)E=N.style,typeof E.setProperty=="function"?E.setProperty("display","none","important"):E.display="none";else{_=W.stateNode;var bt=W.memoizedProps.style,ut=bt!=null&&bt.hasOwnProperty("display")?bt.display:null;_.style.display=ut==null||typeof ut=="boolean"?"":(""+ut).trim()}}catch(ct){ke(W,W.return,ct)}}}else if(c.tag===6){if(d===null){W=c;try{W.stateNode.nodeValue=x?"":W.memoizedProps}catch(ct){ke(W,W.return,ct)}}}else if((c.tag!==22&&c.tag!==23||c.memoizedState===null||c===o)&&c.child!==null){c.child.return=c,c=c.child;continue}if(c===o)break t;for(;c.sibling===null;){if(c.return===null||c.return===o)break t;d===c&&(d=null),c=c.return}d===c&&(d=null),c.sibling.return=c.return,c=c.sibling}g&4&&(g=o.updateQueue,g!==null&&(d=g.retryQueue,d!==null&&(g.retryQueue=null,M0(o,d))));break;case 19:Rs(c,o),Ds(o),g&4&&(g=o.updateQueue,g!==null&&(o.updateQueue=null,M0(o,g)));break;case 30:break;case 21:break;default:Rs(c,o),Ds(o)}}function Ds(o){var c=o.flags;if(c&2){try{for(var d,g=o.return;g!==null;){if(c2(g)){d=g;break}g=g.return}if(d==null)throw Error(s(160));switch(d.tag){case 27:var x=d.stateNode,N=F0(o);wp(o,N,x);break;case 5:var E=d.stateNode;d.flags&32&&(al(E,""),d.flags&=-33);var _=F0(o);wp(o,_,E);break;case 3:case 4:var W=d.stateNode.containerInfo,lt=F0(o);L0(o,lt,W);break;default:throw Error(s(161))}}catch(pt){ke(o,o.return,pt)}o.flags&=-3}c&4096&&(o.flags&=-4097)}function b2(o){if(o.subtreeFlags&1024)for(o=o.child;o!==null;){var c=o;b2(c),c.tag===5&&c.flags&1024&&c.stateNode.reset(),o=o.sibling}}function Yr(o,c){if(c.subtreeFlags&8772)for(c=c.child;c!==null;)f2(o,c.alternate,c),c=c.sibling}function to(o){for(o=o.child;o!==null;){var c=o;switch(c.tag){case 0:case 11:case 14:case 15:Kr(4,c,c.return),to(c);break;case 1:Fa(c,c.return);var d=c.stateNode;typeof d.componentWillUnmount=="function"&&l2(c,c.return,d),to(c);break;case 27:rh(c.stateNode);case 26:case 5:Fa(c,c.return),to(c);break;case 22:c.memoizedState===null&&to(c);break;case 30:to(c);break;default:to(c)}o=o.sibling}}function Zr(o,c,d){for(d=d&&(c.subtreeFlags&8772)!==0,c=c.child;c!==null;){var g=c.alternate,x=o,N=c,E=N.flags;switch(N.tag){case 0:case 11:case 15:Zr(x,N,d),Kc(4,N);break;case 1:if(Zr(x,N,d),g=N,x=g.stateNode,typeof x.componentDidMount=="function")try{x.componentDidMount()}catch(lt){ke(g,g.return,lt)}if(g=N,x=g.updateQueue,x!==null){var _=g.stateNode;try{var W=x.shared.hiddenCallbacks;if(W!==null)for(x.shared.hiddenCallbacks=null,x=0;x<W.length;x++)qN(W[x],_)}catch(lt){ke(g,g.return,lt)}}d&&E&64&&o2(N),Yc(N,N.return);break;case 27:h2(N);case 26:case 5:Zr(x,N,d),d&&g===null&&E&4&&u2(N),Yc(N,N.return);break;case 12:Zr(x,N,d);break;case 13:Zr(x,N,d),d&&E&4&&g2(x,N);break;case 22:N.memoizedState===null&&Zr(x,N,d),Yc(N,N.return);break;case 30:break;default:Zr(x,N,d)}c=c.sibling}}function B0(o,c){var d=null;o!==null&&o.memoizedState!==null&&o.memoizedState.cachePool!==null&&(d=o.memoizedState.cachePool.pool),o=null,c.memoizedState!==null&&c.memoizedState.cachePool!==null&&(o=c.memoizedState.cachePool.pool),o!==d&&(o!=null&&o.refCount++,d!=null&&Fc(d))}function V0(o,c){o=null,c.alternate!==null&&(o=c.alternate.memoizedState.cache),c=c.memoizedState.cache,c!==o&&(c.refCount++,o!=null&&Fc(o))}function La(o,c,d,g){if(c.subtreeFlags&10256)for(c=c.child;c!==null;)x2(o,c,d,g),c=c.sibling}function x2(o,c,d,g){var x=c.flags;switch(c.tag){case 0:case 11:case 15:La(o,c,d,g),x&2048&&Kc(9,c);break;case 1:La(o,c,d,g);break;case 3:La(o,c,d,g),x&2048&&(o=null,c.alternate!==null&&(o=c.alternate.memoizedState.cache),c=c.memoizedState.cache,c!==o&&(c.refCount++,o!=null&&Fc(o)));break;case 12:if(x&2048){La(o,c,d,g),o=c.stateNode;try{var N=c.memoizedProps,E=N.id,_=N.onPostCommit;typeof _=="function"&&_(E,c.alternate===null?"mount":"update",o.passiveEffectDuration,-0)}catch(W){ke(c,c.return,W)}}else La(o,c,d,g);break;case 13:La(o,c,d,g);break;case 23:break;case 22:N=c.stateNode,E=c.alternate,c.memoizedState!==null?N._visibility&2?La(o,c,d,g):Zc(o,c):N._visibility&2?La(o,c,d,g):(N._visibility|=2,Nl(o,c,d,g,(c.subtreeFlags&10256)!==0)),x&2048&&B0(E,c);break;case 24:La(o,c,d,g),x&2048&&V0(c.alternate,c);break;default:La(o,c,d,g)}}function Nl(o,c,d,g,x){for(x=x&&(c.subtreeFlags&10256)!==0,c=c.child;c!==null;){var N=o,E=c,_=d,W=g,lt=E.flags;switch(E.tag){case 0:case 11:case 15:Nl(N,E,_,W,x),Kc(8,E);break;case 23:break;case 22:var pt=E.stateNode;E.memoizedState!==null?pt._visibility&2?Nl(N,E,_,W,x):Zc(N,E):(pt._visibility|=2,Nl(N,E,_,W,x)),x&&lt&2048&&B0(E.alternate,E);break;case 24:Nl(N,E,_,W,x),x&&lt&2048&&V0(E.alternate,E);break;default:Nl(N,E,_,W,x)}c=c.sibling}}function Zc(o,c){if(c.subtreeFlags&10256)for(c=c.child;c!==null;){var d=o,g=c,x=g.flags;switch(g.tag){case 22:Zc(d,g),x&2048&&B0(g.alternate,g);break;case 24:Zc(d,g),x&2048&&V0(g.alternate,g);break;default:Zc(d,g)}c=c.sibling}}var Qc=8192;function Tl(o){if(o.subtreeFlags&Qc)for(o=o.child;o!==null;)v2(o),o=o.sibling}function v2(o){switch(o.tag){case 26:Tl(o),o.flags&Qc&&o.memoizedState!==null&&kF(pa,o.memoizedState,o.memoizedProps);break;case 5:Tl(o);break;case 3:case 4:var c=pa;pa=_p(o.stateNode.containerInfo),Tl(o),pa=c;break;case 22:o.memoizedState===null&&(c=o.alternate,c!==null&&c.memoizedState!==null?(c=Qc,Qc=16777216,Tl(o),Qc=c):Tl(o));break;default:Tl(o)}}function w2(o){var c=o.alternate;if(c!==null&&(o=c.child,o!==null)){c.child=null;do c=o.sibling,o.sibling=null,o=c;while(o!==null)}}function Jc(o){var c=o.deletions;if((o.flags&16)!==0){if(c!==null)for(var d=0;d<c.length;d++){var g=c[d];Tn=g,N2(g,o)}w2(o)}if(o.subtreeFlags&10256)for(o=o.child;o!==null;)S2(o),o=o.sibling}function S2(o){switch(o.tag){case 0:case 11:case 15:Jc(o),o.flags&2048&&Kr(9,o,o.return);break;case 3:Jc(o);break;case 12:Jc(o);break;case 22:var c=o.stateNode;o.memoizedState!==null&&c._visibility&2&&(o.return===null||o.return.tag!==13)?(c._visibility&=-3,Sp(o)):Jc(o);break;default:Jc(o)}}function Sp(o){var c=o.deletions;if((o.flags&16)!==0){if(c!==null)for(var d=0;d<c.length;d++){var g=c[d];Tn=g,N2(g,o)}w2(o)}for(o=o.child;o!==null;){switch(c=o,c.tag){case 0:case 11:case 15:Kr(8,c,c.return),Sp(c);break;case 22:d=c.stateNode,d._visibility&2&&(d._visibility&=-3,Sp(c));break;default:Sp(c)}o=o.sibling}}function N2(o,c){for(;Tn!==null;){var d=Tn;switch(d.tag){case 0:case 11:case 15:Kr(8,d,c);break;case 23:case 22:if(d.memoizedState!==null&&d.memoizedState.cachePool!==null){var g=d.memoizedState.cachePool.pool;g!=null&&g.refCount++}break;case 24:Fc(d.memoizedState.cache)}if(g=d.child,g!==null)g.return=d,Tn=g;else t:for(d=o;Tn!==null;){g=Tn;var x=g.sibling,N=g.return;if(p2(g),g===d){Tn=null;break t}if(x!==null){x.return=N,Tn=x;break t}Tn=N}}}var G3={getCacheForType:function(o){var c=Wn(fn),d=c.data.get(o);return d===void 0&&(d=o(),c.data.set(o,d)),d}},W3=typeof WeakMap=="function"?WeakMap:Map,ye=0,Re=null,te=null,oe=0,be=0,Os=null,Qr=!1,Cl=!1,P0=!1,br=0,We=0,Jr=0,eo=0,U0=0,Js=0,$l=0,th=null,ys=null,G0=!1,W0=0,Np=1/0,Tp=null,ti=null,zn=0,ei=null,kl=null,Il=0,H0=0,j0=null,T2=null,eh=0,q0=null;function _s(){if((ye&2)!==0&&oe!==0)return oe&-oe;if(V.T!==null){var o=ml;return o!==0?o:tx()}return VS()}function C2(){Js===0&&(Js=(oe&536870912)===0||de?LS():536870912);var o=Qs.current;return o!==null&&(o.flags|=32),Js}function Fs(o,c,d){(o===Re&&(be===2||be===9)||o.cancelPendingCommit!==null)&&(El(o,0),ni(o,oe,Js,!1)),xc(o,d),((ye&2)===0||o!==Re)&&(o===Re&&((ye&2)===0&&(eo|=d),We===4&&ni(o,oe,Js,!1)),za(o))}function $2(o,c,d){if((ye&6)!==0)throw Error(s(327));var g=!d&&(c&124)===0&&(c&o.expiredLanes)===0||bc(o,c),x=g?q3(o,c):Y0(o,c,!0),N=g;do{if(x===0){Cl&&!g&&ni(o,c,0,!1);break}else{if(d=o.current.alternate,N&&!H3(d)){x=Y0(o,c,!1),N=!1;continue}if(x===2){if(N=c,o.errorRecoveryDisabledLanes&N)var E=0;else E=o.pendingLanes&-536870913,E=E!==0?E:E&536870912?536870912:0;if(E!==0){c=E;t:{var _=o;x=th;var W=_.current.memoizedState.isDehydrated;if(W&&(El(_,E).flags|=256),E=Y0(_,E,!1),E!==2){if(P0&&!W){_.errorRecoveryDisabledLanes|=N,eo|=N,x=4;break t}N=ys,ys=x,N!==null&&(ys===null?ys=N:ys.push.apply(ys,N))}x=E}if(N=!1,x!==2)continue}}if(x===1){El(o,0),ni(o,c,0,!0);break}t:{switch(g=o,N=x,N){case 0:case 1:throw Error(s(345));case 4:if((c&4194048)!==c)break;case 6:ni(g,c,Js,!Qr);break t;case 2:ys=null;break;case 3:case 5:break;default:throw Error(s(329))}if((c&62914560)===c&&(x=W0+300-ae(),10<x)){if(ni(g,c,Js,!Qr),Ff(g,0,!0)!==0)break t;g.timeoutHandle=eC(k2.bind(null,g,d,ys,Tp,G0,c,Js,eo,$l,Qr,N,2,-0,0),x);break t}k2(g,d,ys,Tp,G0,c,Js,eo,$l,Qr,N,0,-0,0)}}break}while(!0);za(o)}function k2(o,c,d,g,x,N,E,_,W,lt,pt,bt,ut,ct){if(o.timeoutHandle=-1,bt=c.subtreeFlags,(bt&8192||(bt&16785408)===16785408)&&(lh={stylesheets:null,count:0,unsuspend:$F},v2(c),bt=IF(),bt!==null)){o.cancelPendingCommit=bt(_2.bind(null,o,c,N,d,g,x,E,_,W,pt,1,ut,ct)),ni(o,N,E,!lt);return}_2(o,c,N,d,g,x,E,_,W)}function H3(o){for(var c=o;;){var d=c.tag;if((d===0||d===11||d===15)&&c.flags&16384&&(d=c.updateQueue,d!==null&&(d=d.stores,d!==null)))for(var g=0;g<d.length;g++){var x=d[g],N=x.getSnapshot;x=x.value;try{if(!Es(N(),x))return!1}catch{return!1}}if(d=c.child,c.subtreeFlags&16384&&d!==null)d.return=c,c=d;else{if(c===o)break;for(;c.sibling===null;){if(c.return===null||c.return===o)return!0;c=c.return}c.sibling.return=c.return,c=c.sibling}}return!0}function ni(o,c,d,g){c&=~U0,c&=~eo,o.suspendedLanes|=c,o.pingedLanes&=~c,g&&(o.warmLanes|=c),g=o.expirationTimes;for(var x=c;0<x;){var N=31-dn(x),E=1<<N;g[N]=-1,x&=~E}d!==0&&MS(o,d,c)}function Cp(){return(ye&6)===0?(nh(0),!1):!0}function X0(){if(te!==null){if(be===0)var o=te.return;else o=te,cr=Ki=null,h0(o),wl=null,jc=0,o=te;for(;o!==null;)i2(o.alternate,o),o=o.return;te=null}}function El(o,c){var d=o.timeoutHandle;d!==-1&&(o.timeoutHandle=-1,uF(d)),d=o.cancelPendingCommit,d!==null&&(o.cancelPendingCommit=null,d()),X0(),Re=o,te=d=or(o.current,null),oe=c,be=0,Os=null,Qr=!1,Cl=bc(o,c),P0=!1,$l=Js=U0=eo=Jr=We=0,ys=th=null,G0=!1,(c&8)!==0&&(c|=c&32);var g=o.entangledLanes;if(g!==0)for(o=o.entanglements,g&=c;0<g;){var x=31-dn(g),N=1<<x;c|=o[x],g&=~N}return br=c,qf(),d}function I2(o,c){Yt=null,V.H=dp,c===zc||c===np?(c=HN(),be=3):c===UN?(c=HN(),be=4):be=c===jT?8:c!==null&&typeof c=="object"&&typeof c.then=="function"?6:1,Os=c,te===null&&(We=1,yp(o,Xs(c,o.current)))}function E2(){var o=V.H;return V.H=dp,o===null?dp:o}function A2(){var o=V.A;return V.A=G3,o}function K0(){We=4,Qr||(oe&4194048)!==oe&&Qs.current!==null||(Cl=!0),(Jr&134217727)===0&&(eo&134217727)===0||Re===null||ni(Re,oe,Js,!1)}function Y0(o,c,d){var g=ye;ye|=2;var x=E2(),N=A2();(Re!==o||oe!==c)&&(Tp=null,El(o,c)),c=!1;var E=We;t:do try{if(be!==0&&te!==null){var _=te,W=Os;switch(be){case 8:X0(),E=6;break t;case 3:case 2:case 9:case 6:Qs.current===null&&(c=!0);var lt=be;if(be=0,Os=null,Al(o,_,W,lt),d&&Cl){E=0;break t}break;default:lt=be,be=0,Os=null,Al(o,_,W,lt)}}j3(),E=We;break}catch(pt){I2(o,pt)}while(!0);return c&&o.shellSuspendCounter++,cr=Ki=null,ye=g,V.H=x,V.A=N,te===null&&(Re=null,oe=0,qf()),E}function j3(){for(;te!==null;)R2(te)}function q3(o,c){var d=ye;ye|=2;var g=E2(),x=A2();Re!==o||oe!==c?(Tp=null,Np=ae()+500,El(o,c)):Cl=bc(o,c);t:do try{if(be!==0&&te!==null){c=te;var N=Os;e:switch(be){case 1:be=0,Os=null,Al(o,c,N,1);break;case 2:case 9:if(GN(N)){be=0,Os=null,D2(c);break}c=function(){be!==2&&be!==9||Re!==o||(be=7),za(o)},N.then(c,c);break t;case 3:be=7;break t;case 4:be=5;break t;case 7:GN(N)?(be=0,Os=null,D2(c)):(be=0,Os=null,Al(o,c,N,7));break;case 5:var E=null;switch(te.tag){case 26:E=te.memoizedState;case 5:case 27:var _=te;if(!E||fC(E)){be=0,Os=null;var W=_.sibling;if(W!==null)te=W;else{var lt=_.return;lt!==null?(te=lt,$p(lt)):te=null}break e}}be=0,Os=null,Al(o,c,N,5);break;case 6:be=0,Os=null,Al(o,c,N,6);break;case 8:X0(),We=6;break t;default:throw Error(s(462))}}X3();break}catch(pt){I2(o,pt)}while(!0);return cr=Ki=null,V.H=g,V.A=x,ye=d,te!==null?0:(Re=null,oe=0,qf(),We)}function X3(){for(;te!==null&&!ge();)R2(te)}function R2(o){var c=a2(o.alternate,o,br);o.memoizedProps=o.pendingProps,c===null?$p(o):te=c}function D2(o){var c=o,d=c.alternate;switch(c.tag){case 15:case 0:c=QT(d,c,c.pendingProps,c.type,void 0,oe);break;case 11:c=QT(d,c,c.pendingProps,c.type.render,c.ref,oe);break;case 5:h0(c);default:i2(d,c),c=te=ON(c,br),c=a2(d,c,br)}o.memoizedProps=o.pendingProps,c===null?$p(o):te=c}function Al(o,c,d,g){cr=Ki=null,h0(c),wl=null,jc=0;var x=c.return;try{if(z3(o,x,c,d,oe)){We=1,yp(o,Xs(d,o.current)),te=null;return}}catch(N){if(x!==null)throw te=x,N;We=1,yp(o,Xs(d,o.current)),te=null;return}c.flags&32768?(de||g===1?o=!0:Cl||(oe&536870912)!==0?o=!1:(Qr=o=!0,(g===2||g===9||g===3||g===6)&&(g=Qs.current,g!==null&&g.tag===13&&(g.flags|=16384))),O2(c,o)):$p(c)}function $p(o){var c=o;do{if((c.flags&32768)!==0){O2(c,Qr);return}o=c.return;var d=B3(c.alternate,c,br);if(d!==null){te=d;return}if(c=c.sibling,c!==null){te=c;return}te=c=o}while(c!==null);We===0&&(We=5)}function O2(o,c){do{var d=V3(o.alternate,o);if(d!==null){d.flags&=32767,te=d;return}if(d=o.return,d!==null&&(d.flags|=32768,d.subtreeFlags=0,d.deletions=null),!c&&(o=o.sibling,o!==null)){te=o;return}te=o=d}while(o!==null);We=6,te=null}function _2(o,c,d,g,x,N,E,_,W){o.cancelPendingCommit=null;do kp();while(zn!==0);if((ye&6)!==0)throw Error(s(327));if(c!==null){if(c===o.current)throw Error(s(177));if(N=c.lanes|c.childLanes,N|=Vb,$_(o,d,N,E,_,W),o===Re&&(te=Re=null,oe=0),kl=c,ei=o,Il=d,H0=N,j0=x,T2=g,(c.subtreeFlags&10256)!==0||(c.flags&10256)!==0?(o.callbackNode=null,o.callbackPriority=0,Q3(ks,function(){return B2(),null})):(o.callbackNode=null,o.callbackPriority=0),g=(c.flags&13878)!==0,(c.subtreeFlags&13878)!==0||g){g=V.T,V.T=null,x=q.p,q.p=2,E=ye,ye|=4;try{P3(o,c,d)}finally{ye=E,q.p=x,V.T=g}}zn=1,F2(),L2(),z2()}}function F2(){if(zn===1){zn=0;var o=ei,c=kl,d=(c.flags&13878)!==0;if((c.subtreeFlags&13878)!==0||d){d=V.T,V.T=null;var g=q.p;q.p=2;var x=ye;ye|=4;try{y2(c,o);var N=lx,E=NN(o.containerInfo),_=N.focusedElem,W=N.selectionRange;if(E!==_&&_&&_.ownerDocument&&SN(_.ownerDocument.documentElement,_)){if(W!==null&&Fb(_)){var lt=W.start,pt=W.end;if(pt===void 0&&(pt=lt),"selectionStart"in _)_.selectionStart=lt,_.selectionEnd=Math.min(pt,_.value.length);else{var bt=_.ownerDocument||document,ut=bt&&bt.defaultView||window;if(ut.getSelection){var ct=ut.getSelection(),Bt=_.textContent.length,Lt=Math.min(W.start,Bt),Ne=W.end===void 0?Lt:Math.min(W.end,Bt);!ct.extend&&Lt>Ne&&(E=Ne,Ne=Lt,Lt=E);var nt=wN(_,Lt),Z=wN(_,Ne);if(nt&&Z&&(ct.rangeCount!==1||ct.anchorNode!==nt.node||ct.anchorOffset!==nt.offset||ct.focusNode!==Z.node||ct.focusOffset!==Z.offset)){var ot=bt.createRange();ot.setStart(nt.node,nt.offset),ct.removeAllRanges(),Lt>Ne?(ct.addRange(ot),ct.extend(Z.node,Z.offset)):(ot.setEnd(Z.node,Z.offset),ct.addRange(ot))}}}}for(bt=[],ct=_;ct=ct.parentNode;)ct.nodeType===1&&bt.push({element:ct,left:ct.scrollLeft,top:ct.scrollTop});for(typeof _.focus=="function"&&_.focus(),_=0;_<bt.length;_++){var gt=bt[_];gt.element.scrollLeft=gt.left,gt.element.scrollTop=gt.top}}Bp=!!ox,lx=ox=null}finally{ye=x,q.p=g,V.T=d}}o.current=c,zn=2}}function L2(){if(zn===2){zn=0;var o=ei,c=kl,d=(c.flags&8772)!==0;if((c.subtreeFlags&8772)!==0||d){d=V.T,V.T=null;var g=q.p;q.p=2;var x=ye;ye|=4;try{f2(o,c.alternate,c)}finally{ye=x,q.p=g,V.T=d}}zn=3}}function z2(){if(zn===4||zn===3){zn=0,he();var o=ei,c=kl,d=Il,g=T2;(c.subtreeFlags&10256)!==0||(c.flags&10256)!==0?zn=5:(zn=0,kl=ei=null,M2(o,o.pendingLanes));var x=o.pendingLanes;if(x===0&&(ti=null),pb(d),c=c.stateNode,Ue&&typeof Ue.onCommitFiberRoot=="function")try{Ue.onCommitFiberRoot(ds,c,void 0,(c.current.flags&128)===128)}catch{}if(g!==null){c=V.T,x=q.p,q.p=2,V.T=null;try{for(var N=o.onRecoverableError,E=0;E<g.length;E++){var _=g[E];N(_.value,{componentStack:_.stack})}}finally{V.T=c,q.p=x}}(Il&3)!==0&&kp(),za(o),x=o.pendingLanes,(d&4194090)!==0&&(x&42)!==0?o===q0?eh++:(eh=0,q0=o):eh=0,nh(0)}}function M2(o,c){(o.pooledCacheLanes&=c)===0&&(c=o.pooledCache,c!=null&&(o.pooledCache=null,Fc(c)))}function kp(o){return F2(),L2(),z2(),B2()}function B2(){if(zn!==5)return!1;var o=ei,c=H0;H0=0;var d=pb(Il),g=V.T,x=q.p;try{q.p=32>d?32:d,V.T=null,d=j0,j0=null;var N=ei,E=Il;if(zn=0,kl=ei=null,Il=0,(ye&6)!==0)throw Error(s(331));var _=ye;if(ye|=4,S2(N.current),x2(N,N.current,E,d),ye=_,nh(0,!1),Ue&&typeof Ue.onPostCommitFiberRoot=="function")try{Ue.onPostCommitFiberRoot(ds,N)}catch{}return!0}finally{q.p=x,V.T=g,M2(o,c)}}function V2(o,c,d){c=Xs(d,c),c=C0(o.stateNode,c,2),o=Hr(o,c,2),o!==null&&(xc(o,2),za(o))}function ke(o,c,d){if(o.tag===3)V2(o,o,d);else for(;c!==null;){if(c.tag===3){V2(c,o,d);break}else if(c.tag===1){var g=c.stateNode;if(typeof c.type.getDerivedStateFromError=="function"||typeof g.componentDidCatch=="function"&&(ti===null||!ti.has(g))){o=Xs(d,o),d=WT(2),g=Hr(c,d,2),g!==null&&(HT(d,g,c,o),xc(g,2),za(g));break}}c=c.return}}function Z0(o,c,d){var g=o.pingCache;if(g===null){g=o.pingCache=new W3;var x=new Set;g.set(c,x)}else x=g.get(c),x===void 0&&(x=new Set,g.set(c,x));x.has(d)||(P0=!0,x.add(d),o=K3.bind(null,o,c,d),c.then(o,o))}function K3(o,c,d){var g=o.pingCache;g!==null&&g.delete(c),o.pingedLanes|=o.suspendedLanes&d,o.warmLanes&=~d,Re===o&&(oe&d)===d&&(We===4||We===3&&(oe&62914560)===oe&&300>ae()-W0?(ye&2)===0&&El(o,0):U0|=d,$l===oe&&($l=0)),za(o)}function P2(o,c){c===0&&(c=zS()),o=hl(o,c),o!==null&&(xc(o,c),za(o))}function Y3(o){var c=o.memoizedState,d=0;c!==null&&(d=c.retryLane),P2(o,d)}function Z3(o,c){var d=0;switch(o.tag){case 13:var g=o.stateNode,x=o.memoizedState;x!==null&&(d=x.retryLane);break;case 19:g=o.stateNode;break;case 22:g=o.stateNode._retryCache;break;default:throw Error(s(314))}g!==null&&g.delete(c),P2(o,d)}function Q3(o,c){return ce(o,c)}var Ip=null,Rl=null,Q0=!1,Ep=!1,J0=!1,no=0;function za(o){o!==Rl&&o.next===null&&(Rl===null?Ip=Rl=o:Rl=Rl.next=o),Ep=!0,Q0||(Q0=!0,tF())}function nh(o,c){if(!J0&&Ep){J0=!0;do for(var d=!1,g=Ip;g!==null;){if(o!==0){var x=g.pendingLanes;if(x===0)var N=0;else{var E=g.suspendedLanes,_=g.pingedLanes;N=(1<<31-dn(42|o)+1)-1,N&=x&~(E&~_),N=N&201326741?N&201326741|1:N?N|2:0}N!==0&&(d=!0,H2(g,N))}else N=oe,N=Ff(g,g===Re?N:0,g.cancelPendingCommit!==null||g.timeoutHandle!==-1),(N&3)===0||bc(g,N)||(d=!0,H2(g,N));g=g.next}while(d);J0=!1}}function J3(){U2()}function U2(){Ep=Q0=!1;var o=0;no!==0&&(lF()&&(o=no),no=0);for(var c=ae(),d=null,g=Ip;g!==null;){var x=g.next,N=G2(g,c);N===0?(g.next=null,d===null?Ip=x:d.next=x,x===null&&(Rl=d)):(d=g,(o!==0||(N&3)!==0)&&(Ep=!0)),g=x}nh(o)}function G2(o,c){for(var d=o.suspendedLanes,g=o.pingedLanes,x=o.expirationTimes,N=o.pendingLanes&-62914561;0<N;){var E=31-dn(N),_=1<<E,W=x[E];W===-1?((_&d)===0||(_&g)!==0)&&(x[E]=C_(_,c)):W<=c&&(o.expiredLanes|=_),N&=~_}if(c=Re,d=oe,d=Ff(o,o===c?d:0,o.cancelPendingCommit!==null||o.timeoutHandle!==-1),g=o.callbackNode,d===0||o===c&&(be===2||be===9)||o.cancelPendingCommit!==null)return g!==null&&g!==null&&Ce(g),o.callbackNode=null,o.callbackPriority=0;if((d&3)===0||bc(o,d)){if(c=d&-d,c===o.callbackPriority)return c;switch(g!==null&&Ce(g),pb(d)){case 2:case 8:d=Ye;break;case 32:d=ks;break;case 268435456:d=Da;break;default:d=ks}return g=W2.bind(null,o),d=ce(d,g),o.callbackPriority=c,o.callbackNode=d,c}return g!==null&&g!==null&&Ce(g),o.callbackPriority=2,o.callbackNode=null,2}function W2(o,c){if(zn!==0&&zn!==5)return o.callbackNode=null,o.callbackPriority=0,null;var d=o.callbackNode;if(kp()&&o.callbackNode!==d)return null;var g=oe;return g=Ff(o,o===Re?g:0,o.cancelPendingCommit!==null||o.timeoutHandle!==-1),g===0?null:($2(o,g,c),G2(o,ae()),o.callbackNode!=null&&o.callbackNode===d?W2.bind(null,o):null)}function H2(o,c){if(kp())return null;$2(o,c,!0)}function tF(){cF(function(){(ye&6)!==0?ce(Hs,J3):U2()})}function tx(){return no===0&&(no=LS()),no}function j2(o){return o==null||typeof o=="symbol"||typeof o=="boolean"?null:typeof o=="function"?o:Vf(""+o)}function q2(o,c){var d=c.ownerDocument.createElement("input");return d.name=c.name,d.value=c.value,o.id&&d.setAttribute("form",o.id),c.parentNode.insertBefore(d,c),o=new FormData(o),d.parentNode.removeChild(d),o}function eF(o,c,d,g,x){if(c==="submit"&&d&&d.stateNode===x){var N=j2((x[fs]||null).action),E=g.submitter;E&&(c=(c=E[fs]||null)?j2(c.formAction):E.getAttribute("formAction"),c!==null&&(N=c,E=null));var _=new Wf("action","action",null,g,x);o.push({event:_,listeners:[{instance:null,listener:function(){if(g.defaultPrevented){if(no!==0){var W=E?q2(x,E):new FormData(x);v0(d,{pending:!0,data:W,method:x.method,action:N},null,W)}}else typeof N=="function"&&(_.preventDefault(),W=E?q2(x,E):new FormData(x),v0(d,{pending:!0,data:W,method:x.method,action:N},N,W))},currentTarget:x}]})}}for(var ex=0;ex<Bb.length;ex++){var nx=Bb[ex],nF=nx.toLowerCase(),sF=nx[0].toUpperCase()+nx.slice(1);fa(nF,"on"+sF)}fa($N,"onAnimationEnd"),fa(kN,"onAnimationIteration"),fa(IN,"onAnimationStart"),fa("dblclick","onDoubleClick"),fa("focusin","onFocus"),fa("focusout","onBlur"),fa(v3,"onTransitionRun"),fa(w3,"onTransitionStart"),fa(S3,"onTransitionCancel"),fa(EN,"onTransitionEnd"),el("onMouseEnter",["mouseout","mouseover"]),el("onMouseLeave",["mouseout","mouseover"]),el("onPointerEnter",["pointerout","pointerover"]),el("onPointerLeave",["pointerout","pointerover"]),Vi("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),Vi("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),Vi("onBeforeInput",["compositionend","keypress","textInput","paste"]),Vi("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),Vi("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),Vi("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var sh="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),aF=new Set("beforetoggle cancel close invalid load scroll scrollend toggle".split(" ").concat(sh));function X2(o,c){c=(c&4)!==0;for(var d=0;d<o.length;d++){var g=o[d],x=g.event;g=g.listeners;t:{var N=void 0;if(c)for(var E=g.length-1;0<=E;E--){var _=g[E],W=_.instance,lt=_.currentTarget;if(_=_.listener,W!==N&&x.isPropagationStopped())break t;N=_,x.currentTarget=lt;try{N(x)}catch(pt){gp(pt)}x.currentTarget=null,N=W}else for(E=0;E<g.length;E++){if(_=g[E],W=_.instance,lt=_.currentTarget,_=_.listener,W!==N&&x.isPropagationStopped())break t;N=_,x.currentTarget=lt;try{N(x)}catch(pt){gp(pt)}x.currentTarget=null,N=W}}}}function ee(o,c){var d=c[mb];d===void 0&&(d=c[mb]=new Set);var g=o+"__bubble";d.has(g)||(K2(c,o,2,!1),d.add(g))}function sx(o,c,d){var g=0;c&&(g|=4),K2(d,o,g,c)}var Ap="_reactListening"+Math.random().toString(36).slice(2);function ax(o){if(!o[Ap]){o[Ap]=!0,US.forEach(function(d){d!=="selectionchange"&&(aF.has(d)||sx(d,!1,o),sx(d,!0,o))});var c=o.nodeType===9?o:o.ownerDocument;c===null||c[Ap]||(c[Ap]=!0,sx("selectionchange",!1,c))}}function K2(o,c,d,g){switch(xC(c)){case 2:var x=RF;break;case 8:x=DF;break;default:x=bx}d=x.bind(null,c,d,o),x=void 0,!$b||c!=="touchstart"&&c!=="touchmove"&&c!=="wheel"||(x=!0),g?x!==void 0?o.addEventListener(c,d,{capture:!0,passive:x}):o.addEventListener(c,d,!0):x!==void 0?o.addEventListener(c,d,{passive:x}):o.addEventListener(c,d,!1)}function rx(o,c,d,g,x){var N=g;if((c&1)===0&&(c&2)===0&&g!==null)t:for(;;){if(g===null)return;var E=g.tag;if(E===3||E===4){var _=g.stateNode.containerInfo;if(_===x)break;if(E===4)for(E=g.return;E!==null;){var W=E.tag;if((W===3||W===4)&&E.stateNode.containerInfo===x)return;E=E.return}for(;_!==null;){if(E=Qo(_),E===null)return;if(W=E.tag,W===5||W===6||W===26||W===27){g=N=E;continue t}_=_.parentNode}}g=g.return}nN(function(){var lt=N,pt=Tb(d),bt=[];t:{var ut=AN.get(o);if(ut!==void 0){var ct=Wf,Bt=o;switch(o){case"keypress":if(Uf(d)===0)break t;case"keydown":case"keyup":ct=Q_;break;case"focusin":Bt="focus",ct=Ab;break;case"focusout":Bt="blur",ct=Ab;break;case"beforeblur":case"afterblur":ct=Ab;break;case"click":if(d.button===2)break t;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":ct=rN;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":ct=V_;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":ct=e3;break;case $N:case kN:case IN:ct=G_;break;case EN:ct=s3;break;case"scroll":case"scrollend":ct=M_;break;case"wheel":ct=r3;break;case"copy":case"cut":case"paste":ct=H_;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":ct=oN;break;case"toggle":case"beforetoggle":ct=o3}var Lt=(c&4)!==0,Ne=!Lt&&(o==="scroll"||o==="scrollend"),nt=Lt?ut!==null?ut+"Capture":null:ut;Lt=[];for(var Z=lt,ot;Z!==null;){var gt=Z;if(ot=gt.stateNode,gt=gt.tag,gt!==5&&gt!==26&&gt!==27||ot===null||nt===null||(gt=Sc(Z,nt),gt!=null&&Lt.push(ah(Z,gt,ot))),Ne)break;Z=Z.return}0<Lt.length&&(ut=new ct(ut,Bt,null,d,pt),bt.push({event:ut,listeners:Lt}))}}if((c&7)===0){t:{if(ut=o==="mouseover"||o==="pointerover",ct=o==="mouseout"||o==="pointerout",ut&&d!==Nb&&(Bt=d.relatedTarget||d.fromElement)&&(Qo(Bt)||Bt[Zo]))break t;if((ct||ut)&&(ut=pt.window===pt?pt:(ut=pt.ownerDocument)?ut.defaultView||ut.parentWindow:window,ct?(Bt=d.relatedTarget||d.toElement,ct=lt,Bt=Bt?Qo(Bt):null,Bt!==null&&(Ne=r(Bt),Lt=Bt.tag,Bt!==Ne||Lt!==5&&Lt!==27&&Lt!==6)&&(Bt=null)):(ct=null,Bt=lt),ct!==Bt)){if(Lt=rN,gt="onMouseLeave",nt="onMouseEnter",Z="mouse",(o==="pointerout"||o==="pointerover")&&(Lt=oN,gt="onPointerLeave",nt="onPointerEnter",Z="pointer"),Ne=ct==null?ut:wc(ct),ot=Bt==null?ut:wc(Bt),ut=new Lt(gt,Z+"leave",ct,d,pt),ut.target=Ne,ut.relatedTarget=ot,gt=null,Qo(pt)===lt&&(Lt=new Lt(nt,Z+"enter",Bt,d,pt),Lt.target=ot,Lt.relatedTarget=Ne,gt=Lt),Ne=gt,ct&&Bt)e:{for(Lt=ct,nt=Bt,Z=0,ot=Lt;ot;ot=Dl(ot))Z++;for(ot=0,gt=nt;gt;gt=Dl(gt))ot++;for(;0<Z-ot;)Lt=Dl(Lt),Z--;for(;0<ot-Z;)nt=Dl(nt),ot--;for(;Z--;){if(Lt===nt||nt!==null&&Lt===nt.alternate)break e;Lt=Dl(Lt),nt=Dl(nt)}Lt=null}else Lt=null;ct!==null&&Y2(bt,ut,ct,Lt,!1),Bt!==null&&Ne!==null&&Y2(bt,Ne,Bt,Lt,!0)}}t:{if(ut=lt?wc(lt):window,ct=ut.nodeName&&ut.nodeName.toLowerCase(),ct==="select"||ct==="input"&&ut.type==="file")var Et=mN;else if(fN(ut))if(gN)Et=y3;else{Et=m3;var Qt=p3}else ct=ut.nodeName,!ct||ct.toLowerCase()!=="input"||ut.type!=="checkbox"&&ut.type!=="radio"?lt&&Sb(lt.elementType)&&(Et=mN):Et=g3;if(Et&&(Et=Et(o,lt))){pN(bt,Et,d,pt);break t}Qt&&Qt(o,ut,lt),o==="focusout"&&lt&&ut.type==="number"&&lt.memoizedProps.value!=null&&wb(ut,"number",ut.value)}switch(Qt=lt?wc(lt):window,o){case"focusin":(fN(Qt)||Qt.contentEditable==="true")&&(ll=Qt,Lb=lt,Ac=null);break;case"focusout":Ac=Lb=ll=null;break;case"mousedown":zb=!0;break;case"contextmenu":case"mouseup":case"dragend":zb=!1,TN(bt,d,pt);break;case"selectionchange":if(x3)break;case"keydown":case"keyup":TN(bt,d,pt)}var Ft;if(Db)t:{switch(o){case"compositionstart":var zt="onCompositionStart";break t;case"compositionend":zt="onCompositionEnd";break t;case"compositionupdate":zt="onCompositionUpdate";break t}zt=void 0}else ol?hN(o,d)&&(zt="onCompositionEnd"):o==="keydown"&&d.keyCode===229&&(zt="onCompositionStart");zt&&(lN&&d.locale!=="ko"&&(ol||zt!=="onCompositionStart"?zt==="onCompositionEnd"&&ol&&(Ft=sN()):(Pr=pt,kb="value"in Pr?Pr.value:Pr.textContent,ol=!0)),Qt=Rp(lt,zt),0<Qt.length&&(zt=new iN(zt,o,null,d,pt),bt.push({event:zt,listeners:Qt}),Ft?zt.data=Ft:(Ft=dN(d),Ft!==null&&(zt.data=Ft)))),(Ft=u3?c3(o,d):h3(o,d))&&(zt=Rp(lt,"onBeforeInput"),0<zt.length&&(Qt=new iN("onBeforeInput","beforeinput",null,d,pt),bt.push({event:Qt,listeners:zt}),Qt.data=Ft)),eF(bt,o,lt,d,pt)}X2(bt,c)})}function ah(o,c,d){return{instance:o,listener:c,currentTarget:d}}function Rp(o,c){for(var d=c+"Capture",g=[];o!==null;){var x=o,N=x.stateNode;if(x=x.tag,x!==5&&x!==26&&x!==27||N===null||(x=Sc(o,d),x!=null&&g.unshift(ah(o,x,N)),x=Sc(o,c),x!=null&&g.push(ah(o,x,N))),o.tag===3)return g;o=o.return}return[]}function Dl(o){if(o===null)return null;do o=o.return;while(o&&o.tag!==5&&o.tag!==27);return o||null}function Y2(o,c,d,g,x){for(var N=c._reactName,E=[];d!==null&&d!==g;){var _=d,W=_.alternate,lt=_.stateNode;if(_=_.tag,W!==null&&W===g)break;_!==5&&_!==26&&_!==27||lt===null||(W=lt,x?(lt=Sc(d,N),lt!=null&&E.unshift(ah(d,lt,W))):x||(lt=Sc(d,N),lt!=null&&E.push(ah(d,lt,W)))),d=d.return}E.length!==0&&o.push({event:c,listeners:E})}var rF=/\r\n?/g,iF=/\u0000|\uFFFD/g;function Z2(o){return(typeof o=="string"?o:""+o).replace(rF,`
`).replace(iF,"")}function Q2(o,c){return c=Z2(c),Z2(o)===c}function Dp(){}function Se(o,c,d,g,x,N){switch(d){case"children":typeof g=="string"?c==="body"||c==="textarea"&&g===""||al(o,g):(typeof g=="number"||typeof g=="bigint")&&c!=="body"&&al(o,""+g);break;case"className":zf(o,"class",g);break;case"tabIndex":zf(o,"tabindex",g);break;case"dir":case"role":case"viewBox":case"width":case"height":zf(o,d,g);break;case"style":tN(o,g,N);break;case"data":if(c!=="object"){zf(o,"data",g);break}case"src":case"href":if(g===""&&(c!=="a"||d!=="href")){o.removeAttribute(d);break}if(g==null||typeof g=="function"||typeof g=="symbol"||typeof g=="boolean"){o.removeAttribute(d);break}g=Vf(""+g),o.setAttribute(d,g);break;case"action":case"formAction":if(typeof g=="function"){o.setAttribute(d,"javascript:throw new Error('A React form was unexpectedly submitted. If you called form.submit() manually, consider using form.requestSubmit() instead. If you\\'re trying to use event.stopPropagation() in a submit event handler, consider also calling event.preventDefault().')");break}else typeof N=="function"&&(d==="formAction"?(c!=="input"&&Se(o,c,"name",x.name,x,null),Se(o,c,"formEncType",x.formEncType,x,null),Se(o,c,"formMethod",x.formMethod,x,null),Se(o,c,"formTarget",x.formTarget,x,null)):(Se(o,c,"encType",x.encType,x,null),Se(o,c,"method",x.method,x,null),Se(o,c,"target",x.target,x,null)));if(g==null||typeof g=="symbol"||typeof g=="boolean"){o.removeAttribute(d);break}g=Vf(""+g),o.setAttribute(d,g);break;case"onClick":g!=null&&(o.onclick=Dp);break;case"onScroll":g!=null&&ee("scroll",o);break;case"onScrollEnd":g!=null&&ee("scrollend",o);break;case"dangerouslySetInnerHTML":if(g!=null){if(typeof g!="object"||!("__html"in g))throw Error(s(61));if(d=g.__html,d!=null){if(x.children!=null)throw Error(s(60));o.innerHTML=d}}break;case"multiple":o.multiple=g&&typeof g!="function"&&typeof g!="symbol";break;case"muted":o.muted=g&&typeof g!="function"&&typeof g!="symbol";break;case"suppressContentEditableWarning":case"suppressHydrationWarning":case"defaultValue":case"defaultChecked":case"innerHTML":case"ref":break;case"autoFocus":break;case"xlinkHref":if(g==null||typeof g=="function"||typeof g=="boolean"||typeof g=="symbol"){o.removeAttribute("xlink:href");break}d=Vf(""+g),o.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",d);break;case"contentEditable":case"spellCheck":case"draggable":case"value":case"autoReverse":case"externalResourcesRequired":case"focusable":case"preserveAlpha":g!=null&&typeof g!="function"&&typeof g!="symbol"?o.setAttribute(d,""+g):o.removeAttribute(d);break;case"inert":case"allowFullScreen":case"async":case"autoPlay":case"controls":case"default":case"defer":case"disabled":case"disablePictureInPicture":case"disableRemotePlayback":case"formNoValidate":case"hidden":case"loop":case"noModule":case"noValidate":case"open":case"playsInline":case"readOnly":case"required":case"reversed":case"scoped":case"seamless":case"itemScope":g&&typeof g!="function"&&typeof g!="symbol"?o.setAttribute(d,""):o.removeAttribute(d);break;case"capture":case"download":g===!0?o.setAttribute(d,""):g!==!1&&g!=null&&typeof g!="function"&&typeof g!="symbol"?o.setAttribute(d,g):o.removeAttribute(d);break;case"cols":case"rows":case"size":case"span":g!=null&&typeof g!="function"&&typeof g!="symbol"&&!isNaN(g)&&1<=g?o.setAttribute(d,g):o.removeAttribute(d);break;case"rowSpan":case"start":g==null||typeof g=="function"||typeof g=="symbol"||isNaN(g)?o.removeAttribute(d):o.setAttribute(d,g);break;case"popover":ee("beforetoggle",o),ee("toggle",o),Lf(o,"popover",g);break;case"xlinkActuate":rr(o,"http://www.w3.org/1999/xlink","xlink:actuate",g);break;case"xlinkArcrole":rr(o,"http://www.w3.org/1999/xlink","xlink:arcrole",g);break;case"xlinkRole":rr(o,"http://www.w3.org/1999/xlink","xlink:role",g);break;case"xlinkShow":rr(o,"http://www.w3.org/1999/xlink","xlink:show",g);break;case"xlinkTitle":rr(o,"http://www.w3.org/1999/xlink","xlink:title",g);break;case"xlinkType":rr(o,"http://www.w3.org/1999/xlink","xlink:type",g);break;case"xmlBase":rr(o,"http://www.w3.org/XML/1998/namespace","xml:base",g);break;case"xmlLang":rr(o,"http://www.w3.org/XML/1998/namespace","xml:lang",g);break;case"xmlSpace":rr(o,"http://www.w3.org/XML/1998/namespace","xml:space",g);break;case"is":Lf(o,"is",g);break;case"innerText":case"textContent":break;default:(!(2<d.length)||d[0]!=="o"&&d[0]!=="O"||d[1]!=="n"&&d[1]!=="N")&&(d=L_.get(d)||d,Lf(o,d,g))}}function ix(o,c,d,g,x,N){switch(d){case"style":tN(o,g,N);break;case"dangerouslySetInnerHTML":if(g!=null){if(typeof g!="object"||!("__html"in g))throw Error(s(61));if(d=g.__html,d!=null){if(x.children!=null)throw Error(s(60));o.innerHTML=d}}break;case"children":typeof g=="string"?al(o,g):(typeof g=="number"||typeof g=="bigint")&&al(o,""+g);break;case"onScroll":g!=null&&ee("scroll",o);break;case"onScrollEnd":g!=null&&ee("scrollend",o);break;case"onClick":g!=null&&(o.onclick=Dp);break;case"suppressContentEditableWarning":case"suppressHydrationWarning":case"innerHTML":case"ref":break;case"innerText":case"textContent":break;default:if(!GS.hasOwnProperty(d))t:{if(d[0]==="o"&&d[1]==="n"&&(x=d.endsWith("Capture"),c=d.slice(2,x?d.length-7:void 0),N=o[fs]||null,N=N!=null?N[d]:null,typeof N=="function"&&o.removeEventListener(c,N,x),typeof g=="function")){typeof N!="function"&&N!==null&&(d in o?o[d]=null:o.hasAttribute(d)&&o.removeAttribute(d)),o.addEventListener(c,g,x);break t}d in o?o[d]=g:g===!0?o.setAttribute(d,""):Lf(o,d,g)}}}function Mn(o,c,d){switch(c){case"div":case"span":case"svg":case"path":case"a":case"g":case"p":case"li":break;case"img":ee("error",o),ee("load",o);var g=!1,x=!1,N;for(N in d)if(d.hasOwnProperty(N)){var E=d[N];if(E!=null)switch(N){case"src":g=!0;break;case"srcSet":x=!0;break;case"children":case"dangerouslySetInnerHTML":throw Error(s(137,c));default:Se(o,c,N,E,d,null)}}x&&Se(o,c,"srcSet",d.srcSet,d,null),g&&Se(o,c,"src",d.src,d,null);return;case"input":ee("invalid",o);var _=N=E=x=null,W=null,lt=null;for(g in d)if(d.hasOwnProperty(g)){var pt=d[g];if(pt!=null)switch(g){case"name":x=pt;break;case"type":E=pt;break;case"checked":W=pt;break;case"defaultChecked":lt=pt;break;case"value":N=pt;break;case"defaultValue":_=pt;break;case"children":case"dangerouslySetInnerHTML":if(pt!=null)throw Error(s(137,c));break;default:Se(o,c,g,pt,d,null)}}YS(o,N,_,W,lt,E,x,!1),Mf(o);return;case"select":ee("invalid",o),g=E=N=null;for(x in d)if(d.hasOwnProperty(x)&&(_=d[x],_!=null))switch(x){case"value":N=_;break;case"defaultValue":E=_;break;case"multiple":g=_;default:Se(o,c,x,_,d,null)}c=N,d=E,o.multiple=!!g,c!=null?sl(o,!!g,c,!1):d!=null&&sl(o,!!g,d,!0);return;case"textarea":ee("invalid",o),N=x=g=null;for(E in d)if(d.hasOwnProperty(E)&&(_=d[E],_!=null))switch(E){case"value":g=_;break;case"defaultValue":x=_;break;case"children":N=_;break;case"dangerouslySetInnerHTML":if(_!=null)throw Error(s(91));break;default:Se(o,c,E,_,d,null)}QS(o,g,x,N),Mf(o);return;case"option":for(W in d)if(d.hasOwnProperty(W)&&(g=d[W],g!=null))switch(W){case"selected":o.selected=g&&typeof g!="function"&&typeof g!="symbol";break;default:Se(o,c,W,g,d,null)}return;case"dialog":ee("beforetoggle",o),ee("toggle",o),ee("cancel",o),ee("close",o);break;case"iframe":case"object":ee("load",o);break;case"video":case"audio":for(g=0;g<sh.length;g++)ee(sh[g],o);break;case"image":ee("error",o),ee("load",o);break;case"details":ee("toggle",o);break;case"embed":case"source":case"link":ee("error",o),ee("load",o);case"area":case"base":case"br":case"col":case"hr":case"keygen":case"meta":case"param":case"track":case"wbr":case"menuitem":for(lt in d)if(d.hasOwnProperty(lt)&&(g=d[lt],g!=null))switch(lt){case"children":case"dangerouslySetInnerHTML":throw Error(s(137,c));default:Se(o,c,lt,g,d,null)}return;default:if(Sb(c)){for(pt in d)d.hasOwnProperty(pt)&&(g=d[pt],g!==void 0&&ix(o,c,pt,g,d,void 0));return}}for(_ in d)d.hasOwnProperty(_)&&(g=d[_],g!=null&&Se(o,c,_,g,d,null))}function oF(o,c,d,g){switch(c){case"div":case"span":case"svg":case"path":case"a":case"g":case"p":case"li":break;case"input":var x=null,N=null,E=null,_=null,W=null,lt=null,pt=null;for(ct in d){var bt=d[ct];if(d.hasOwnProperty(ct)&&bt!=null)switch(ct){case"checked":break;case"value":break;case"defaultValue":W=bt;default:g.hasOwnProperty(ct)||Se(o,c,ct,null,g,bt)}}for(var ut in g){var ct=g[ut];if(bt=d[ut],g.hasOwnProperty(ut)&&(ct!=null||bt!=null))switch(ut){case"type":N=ct;break;case"name":x=ct;break;case"checked":lt=ct;break;case"defaultChecked":pt=ct;break;case"value":E=ct;break;case"defaultValue":_=ct;break;case"children":case"dangerouslySetInnerHTML":if(ct!=null)throw Error(s(137,c));break;default:ct!==bt&&Se(o,c,ut,ct,g,bt)}}vb(o,E,_,W,lt,pt,N,x);return;case"select":ct=E=_=ut=null;for(N in d)if(W=d[N],d.hasOwnProperty(N)&&W!=null)switch(N){case"value":break;case"multiple":ct=W;default:g.hasOwnProperty(N)||Se(o,c,N,null,g,W)}for(x in g)if(N=g[x],W=d[x],g.hasOwnProperty(x)&&(N!=null||W!=null))switch(x){case"value":ut=N;break;case"defaultValue":_=N;break;case"multiple":E=N;default:N!==W&&Se(o,c,x,N,g,W)}c=_,d=E,g=ct,ut!=null?sl(o,!!d,ut,!1):!!g!=!!d&&(c!=null?sl(o,!!d,c,!0):sl(o,!!d,d?[]:"",!1));return;case"textarea":ct=ut=null;for(_ in d)if(x=d[_],d.hasOwnProperty(_)&&x!=null&&!g.hasOwnProperty(_))switch(_){case"value":break;case"children":break;default:Se(o,c,_,null,g,x)}for(E in g)if(x=g[E],N=d[E],g.hasOwnProperty(E)&&(x!=null||N!=null))switch(E){case"value":ut=x;break;case"defaultValue":ct=x;break;case"children":break;case"dangerouslySetInnerHTML":if(x!=null)throw Error(s(91));break;default:x!==N&&Se(o,c,E,x,g,N)}ZS(o,ut,ct);return;case"option":for(var Bt in d)if(ut=d[Bt],d.hasOwnProperty(Bt)&&ut!=null&&!g.hasOwnProperty(Bt))switch(Bt){case"selected":o.selected=!1;break;default:Se(o,c,Bt,null,g,ut)}for(W in g)if(ut=g[W],ct=d[W],g.hasOwnProperty(W)&&ut!==ct&&(ut!=null||ct!=null))switch(W){case"selected":o.selected=ut&&typeof ut!="function"&&typeof ut!="symbol";break;default:Se(o,c,W,ut,g,ct)}return;case"img":case"link":case"area":case"base":case"br":case"col":case"embed":case"hr":case"keygen":case"meta":case"param":case"source":case"track":case"wbr":case"menuitem":for(var Lt in d)ut=d[Lt],d.hasOwnProperty(Lt)&&ut!=null&&!g.hasOwnProperty(Lt)&&Se(o,c,Lt,null,g,ut);for(lt in g)if(ut=g[lt],ct=d[lt],g.hasOwnProperty(lt)&&ut!==ct&&(ut!=null||ct!=null))switch(lt){case"children":case"dangerouslySetInnerHTML":if(ut!=null)throw Error(s(137,c));break;default:Se(o,c,lt,ut,g,ct)}return;default:if(Sb(c)){for(var Ne in d)ut=d[Ne],d.hasOwnProperty(Ne)&&ut!==void 0&&!g.hasOwnProperty(Ne)&&ix(o,c,Ne,void 0,g,ut);for(pt in g)ut=g[pt],ct=d[pt],!g.hasOwnProperty(pt)||ut===ct||ut===void 0&&ct===void 0||ix(o,c,pt,ut,g,ct);return}}for(var nt in d)ut=d[nt],d.hasOwnProperty(nt)&&ut!=null&&!g.hasOwnProperty(nt)&&Se(o,c,nt,null,g,ut);for(bt in g)ut=g[bt],ct=d[bt],!g.hasOwnProperty(bt)||ut===ct||ut==null&&ct==null||Se(o,c,bt,ut,g,ct)}var ox=null,lx=null;function Op(o){return o.nodeType===9?o:o.ownerDocument}function J2(o){switch(o){case"http://www.w3.org/2000/svg":return 1;case"http://www.w3.org/1998/Math/MathML":return 2;default:return 0}}function tC(o,c){if(o===0)switch(c){case"svg":return 1;case"math":return 2;default:return 0}return o===1&&c==="foreignObject"?0:o}function ux(o,c){return o==="textarea"||o==="noscript"||typeof c.children=="string"||typeof c.children=="number"||typeof c.children=="bigint"||typeof c.dangerouslySetInnerHTML=="object"&&c.dangerouslySetInnerHTML!==null&&c.dangerouslySetInnerHTML.__html!=null}var cx=null;function lF(){var o=window.event;return o&&o.type==="popstate"?o===cx?!1:(cx=o,!0):(cx=null,!1)}var eC=typeof setTimeout=="function"?setTimeout:void 0,uF=typeof clearTimeout=="function"?clearTimeout:void 0,nC=typeof Promise=="function"?Promise:void 0,cF=typeof queueMicrotask=="function"?queueMicrotask:typeof nC<"u"?function(o){return nC.resolve(null).then(o).catch(hF)}:eC;function hF(o){setTimeout(function(){throw o})}function si(o){return o==="head"}function sC(o,c){var d=c,g=0,x=0;do{var N=d.nextSibling;if(o.removeChild(d),N&&N.nodeType===8)if(d=N.data,d==="/$"){if(0<g&&8>g){d=g;var E=o.ownerDocument;if(d&1&&rh(E.documentElement),d&2&&rh(E.body),d&4)for(d=E.head,rh(d),E=d.firstChild;E;){var _=E.nextSibling,W=E.nodeName;E[vc]||W==="SCRIPT"||W==="STYLE"||W==="LINK"&&E.rel.toLowerCase()==="stylesheet"||d.removeChild(E),E=_}}if(x===0){o.removeChild(N),fh(c);return}x--}else d==="$"||d==="$?"||d==="$!"?x++:g=d.charCodeAt(0)-48;else g=0;d=N}while(d);fh(c)}function hx(o){var c=o.firstChild;for(c&&c.nodeType===10&&(c=c.nextSibling);c;){var d=c;switch(c=c.nextSibling,d.nodeName){case"HTML":case"HEAD":case"BODY":hx(d),gb(d);continue;case"SCRIPT":case"STYLE":continue;case"LINK":if(d.rel.toLowerCase()==="stylesheet")continue}o.removeChild(d)}}function dF(o,c,d,g){for(;o.nodeType===1;){var x=d;if(o.nodeName.toLowerCase()!==c.toLowerCase()){if(!g&&(o.nodeName!=="INPUT"||o.type!=="hidden"))break}else if(g){if(!o[vc])switch(c){case"meta":if(!o.hasAttribute("itemprop"))break;return o;case"link":if(N=o.getAttribute("rel"),N==="stylesheet"&&o.hasAttribute("data-precedence"))break;if(N!==x.rel||o.getAttribute("href")!==(x.href==null||x.href===""?null:x.href)||o.getAttribute("crossorigin")!==(x.crossOrigin==null?null:x.crossOrigin)||o.getAttribute("title")!==(x.title==null?null:x.title))break;return o;case"style":if(o.hasAttribute("data-precedence"))break;return o;case"script":if(N=o.getAttribute("src"),(N!==(x.src==null?null:x.src)||o.getAttribute("type")!==(x.type==null?null:x.type)||o.getAttribute("crossorigin")!==(x.crossOrigin==null?null:x.crossOrigin))&&N&&o.hasAttribute("async")&&!o.hasAttribute("itemprop"))break;return o;default:return o}}else if(c==="input"&&o.type==="hidden"){var N=x.name==null?null:""+x.name;if(x.type==="hidden"&&o.getAttribute("name")===N)return o}else return o;if(o=ma(o.nextSibling),o===null)break}return null}function fF(o,c,d){if(c==="")return null;for(;o.nodeType!==3;)if((o.nodeType!==1||o.nodeName!=="INPUT"||o.type!=="hidden")&&!d||(o=ma(o.nextSibling),o===null))return null;return o}function dx(o){return o.data==="$!"||o.data==="$?"&&o.ownerDocument.readyState==="complete"}function pF(o,c){var d=o.ownerDocument;if(o.data!=="$?"||d.readyState==="complete")c();else{var g=function(){c(),d.removeEventListener("DOMContentLoaded",g)};d.addEventListener("DOMContentLoaded",g),o._reactRetry=g}}function ma(o){for(;o!=null;o=o.nextSibling){var c=o.nodeType;if(c===1||c===3)break;if(c===8){if(c=o.data,c==="$"||c==="$!"||c==="$?"||c==="F!"||c==="F")break;if(c==="/$")return null}}return o}var fx=null;function aC(o){o=o.previousSibling;for(var c=0;o;){if(o.nodeType===8){var d=o.data;if(d==="$"||d==="$!"||d==="$?"){if(c===0)return o;c--}else d==="/$"&&c++}o=o.previousSibling}return null}function rC(o,c,d){switch(c=Op(d),o){case"html":if(o=c.documentElement,!o)throw Error(s(452));return o;case"head":if(o=c.head,!o)throw Error(s(453));return o;case"body":if(o=c.body,!o)throw Error(s(454));return o;default:throw Error(s(451))}}function rh(o){for(var c=o.attributes;c.length;)o.removeAttributeNode(c[0]);gb(o)}var ta=new Map,iC=new Set;function _p(o){return typeof o.getRootNode=="function"?o.getRootNode():o.nodeType===9?o:o.ownerDocument}var xr=q.d;q.d={f:mF,r:gF,D:yF,C:bF,L:xF,m:vF,X:SF,S:wF,M:NF};function mF(){var o=xr.f(),c=Cp();return o||c}function gF(o){var c=Jo(o);c!==null&&c.tag===5&&c.type==="form"?$T(c):xr.r(o)}var Ol=typeof document>"u"?null:document;function oC(o,c,d){var g=Ol;if(g&&typeof c=="string"&&c){var x=qs(c);x='link[rel="'+o+'"][href="'+x+'"]',typeof d=="string"&&(x+='[crossorigin="'+d+'"]'),iC.has(x)||(iC.add(x),o={rel:o,crossOrigin:d,href:c},g.querySelector(x)===null&&(c=g.createElement("link"),Mn(c,"link",o),Sn(c),g.head.appendChild(c)))}}function yF(o){xr.D(o),oC("dns-prefetch",o,null)}function bF(o,c){xr.C(o,c),oC("preconnect",o,c)}function xF(o,c,d){xr.L(o,c,d);var g=Ol;if(g&&o&&c){var x='link[rel="preload"][as="'+qs(c)+'"]';c==="image"&&d&&d.imageSrcSet?(x+='[imagesrcset="'+qs(d.imageSrcSet)+'"]',typeof d.imageSizes=="string"&&(x+='[imagesizes="'+qs(d.imageSizes)+'"]')):x+='[href="'+qs(o)+'"]';var N=x;switch(c){case"style":N=_l(o);break;case"script":N=Fl(o)}ta.has(N)||(o=f({rel:"preload",href:c==="image"&&d&&d.imageSrcSet?void 0:o,as:c},d),ta.set(N,o),g.querySelector(x)!==null||c==="style"&&g.querySelector(ih(N))||c==="script"&&g.querySelector(oh(N))||(c=g.createElement("link"),Mn(c,"link",o),Sn(c),g.head.appendChild(c)))}}function vF(o,c){xr.m(o,c);var d=Ol;if(d&&o){var g=c&&typeof c.as=="string"?c.as:"script",x='link[rel="modulepreload"][as="'+qs(g)+'"][href="'+qs(o)+'"]',N=x;switch(g){case"audioworklet":case"paintworklet":case"serviceworker":case"sharedworker":case"worker":case"script":N=Fl(o)}if(!ta.has(N)&&(o=f({rel:"modulepreload",href:o},c),ta.set(N,o),d.querySelector(x)===null)){switch(g){case"audioworklet":case"paintworklet":case"serviceworker":case"sharedworker":case"worker":case"script":if(d.querySelector(oh(N)))return}g=d.createElement("link"),Mn(g,"link",o),Sn(g),d.head.appendChild(g)}}}function wF(o,c,d){xr.S(o,c,d);var g=Ol;if(g&&o){var x=tl(g).hoistableStyles,N=_l(o);c=c||"default";var E=x.get(N);if(!E){var _={loading:0,preload:null};if(E=g.querySelector(ih(N)))_.loading=5;else{o=f({rel:"stylesheet",href:o,"data-precedence":c},d),(d=ta.get(N))&&px(o,d);var W=E=g.createElement("link");Sn(W),Mn(W,"link",o),W._p=new Promise(function(lt,pt){W.onload=lt,W.onerror=pt}),W.addEventListener("load",function(){_.loading|=1}),W.addEventListener("error",function(){_.loading|=2}),_.loading|=4,Fp(E,c,g)}E={type:"stylesheet",instance:E,count:1,state:_},x.set(N,E)}}}function SF(o,c){xr.X(o,c);var d=Ol;if(d&&o){var g=tl(d).hoistableScripts,x=Fl(o),N=g.get(x);N||(N=d.querySelector(oh(x)),N||(o=f({src:o,async:!0},c),(c=ta.get(x))&&mx(o,c),N=d.createElement("script"),Sn(N),Mn(N,"link",o),d.head.appendChild(N)),N={type:"script",instance:N,count:1,state:null},g.set(x,N))}}function NF(o,c){xr.M(o,c);var d=Ol;if(d&&o){var g=tl(d).hoistableScripts,x=Fl(o),N=g.get(x);N||(N=d.querySelector(oh(x)),N||(o=f({src:o,async:!0,type:"module"},c),(c=ta.get(x))&&mx(o,c),N=d.createElement("script"),Sn(N),Mn(N,"link",o),d.head.appendChild(N)),N={type:"script",instance:N,count:1,state:null},g.set(x,N))}}function lC(o,c,d,g){var x=(x=yt.current)?_p(x):null;if(!x)throw Error(s(446));switch(o){case"meta":case"title":return null;case"style":return typeof d.precedence=="string"&&typeof d.href=="string"?(c=_l(d.href),d=tl(x).hoistableStyles,g=d.get(c),g||(g={type:"style",instance:null,count:0,state:null},d.set(c,g)),g):{type:"void",instance:null,count:0,state:null};case"link":if(d.rel==="stylesheet"&&typeof d.href=="string"&&typeof d.precedence=="string"){o=_l(d.href);var N=tl(x).hoistableStyles,E=N.get(o);if(E||(x=x.ownerDocument||x,E={type:"stylesheet",instance:null,count:0,state:{loading:0,preload:null}},N.set(o,E),(N=x.querySelector(ih(o)))&&!N._p&&(E.instance=N,E.state.loading=5),ta.has(o)||(d={rel:"preload",as:"style",href:d.href,crossOrigin:d.crossOrigin,integrity:d.integrity,media:d.media,hrefLang:d.hrefLang,referrerPolicy:d.referrerPolicy},ta.set(o,d),N||TF(x,o,d,E.state))),c&&g===null)throw Error(s(528,""));return E}if(c&&g!==null)throw Error(s(529,""));return null;case"script":return c=d.async,d=d.src,typeof d=="string"&&c&&typeof c!="function"&&typeof c!="symbol"?(c=Fl(d),d=tl(x).hoistableScripts,g=d.get(c),g||(g={type:"script",instance:null,count:0,state:null},d.set(c,g)),g):{type:"void",instance:null,count:0,state:null};default:throw Error(s(444,o))}}function _l(o){return'href="'+qs(o)+'"'}function ih(o){return'link[rel="stylesheet"]['+o+"]"}function uC(o){return f({},o,{"data-precedence":o.precedence,precedence:null})}function TF(o,c,d,g){o.querySelector('link[rel="preload"][as="style"]['+c+"]")?g.loading=1:(c=o.createElement("link"),g.preload=c,c.addEventListener("load",function(){return g.loading|=1}),c.addEventListener("error",function(){return g.loading|=2}),Mn(c,"link",d),Sn(c),o.head.appendChild(c))}function Fl(o){return'[src="'+qs(o)+'"]'}function oh(o){return"script[async]"+o}function cC(o,c,d){if(c.count++,c.instance===null)switch(c.type){case"style":var g=o.querySelector('style[data-href~="'+qs(d.href)+'"]');if(g)return c.instance=g,Sn(g),g;var x=f({},d,{"data-href":d.href,"data-precedence":d.precedence,href:null,precedence:null});return g=(o.ownerDocument||o).createElement("style"),Sn(g),Mn(g,"style",x),Fp(g,d.precedence,o),c.instance=g;case"stylesheet":x=_l(d.href);var N=o.querySelector(ih(x));if(N)return c.state.loading|=4,c.instance=N,Sn(N),N;g=uC(d),(x=ta.get(x))&&px(g,x),N=(o.ownerDocument||o).createElement("link"),Sn(N);var E=N;return E._p=new Promise(function(_,W){E.onload=_,E.onerror=W}),Mn(N,"link",g),c.state.loading|=4,Fp(N,d.precedence,o),c.instance=N;case"script":return N=Fl(d.src),(x=o.querySelector(oh(N)))?(c.instance=x,Sn(x),x):(g=d,(x=ta.get(N))&&(g=f({},d),mx(g,x)),o=o.ownerDocument||o,x=o.createElement("script"),Sn(x),Mn(x,"link",g),o.head.appendChild(x),c.instance=x);case"void":return null;default:throw Error(s(443,c.type))}else c.type==="stylesheet"&&(c.state.loading&4)===0&&(g=c.instance,c.state.loading|=4,Fp(g,d.precedence,o));return c.instance}function Fp(o,c,d){for(var g=d.querySelectorAll('link[rel="stylesheet"][data-precedence],style[data-precedence]'),x=g.length?g[g.length-1]:null,N=x,E=0;E<g.length;E++){var _=g[E];if(_.dataset.precedence===c)N=_;else if(N!==x)break}N?N.parentNode.insertBefore(o,N.nextSibling):(c=d.nodeType===9?d.head:d,c.insertBefore(o,c.firstChild))}function px(o,c){o.crossOrigin==null&&(o.crossOrigin=c.crossOrigin),o.referrerPolicy==null&&(o.referrerPolicy=c.referrerPolicy),o.title==null&&(o.title=c.title)}function mx(o,c){o.crossOrigin==null&&(o.crossOrigin=c.crossOrigin),o.referrerPolicy==null&&(o.referrerPolicy=c.referrerPolicy),o.integrity==null&&(o.integrity=c.integrity)}var Lp=null;function hC(o,c,d){if(Lp===null){var g=new Map,x=Lp=new Map;x.set(d,g)}else x=Lp,g=x.get(d),g||(g=new Map,x.set(d,g));if(g.has(o))return g;for(g.set(o,null),d=d.getElementsByTagName(o),x=0;x<d.length;x++){var N=d[x];if(!(N[vc]||N[Gn]||o==="link"&&N.getAttribute("rel")==="stylesheet")&&N.namespaceURI!=="http://www.w3.org/2000/svg"){var E=N.getAttribute(c)||"";E=o+E;var _=g.get(E);_?_.push(N):g.set(E,[N])}}return g}function dC(o,c,d){o=o.ownerDocument||o,o.head.insertBefore(d,c==="title"?o.querySelector("head > title"):null)}function CF(o,c,d){if(d===1||c.itemProp!=null)return!1;switch(o){case"meta":case"title":return!0;case"style":if(typeof c.precedence!="string"||typeof c.href!="string"||c.href==="")break;return!0;case"link":if(typeof c.rel!="string"||typeof c.href!="string"||c.href===""||c.onLoad||c.onError)break;switch(c.rel){case"stylesheet":return o=c.disabled,typeof c.precedence=="string"&&o==null;default:return!0}case"script":if(c.async&&typeof c.async!="function"&&typeof c.async!="symbol"&&!c.onLoad&&!c.onError&&c.src&&typeof c.src=="string")return!0}return!1}function fC(o){return!(o.type==="stylesheet"&&(o.state.loading&3)===0)}var lh=null;function $F(){}function kF(o,c,d){if(lh===null)throw Error(s(475));var g=lh;if(c.type==="stylesheet"&&(typeof d.media!="string"||matchMedia(d.media).matches!==!1)&&(c.state.loading&4)===0){if(c.instance===null){var x=_l(d.href),N=o.querySelector(ih(x));if(N){o=N._p,o!==null&&typeof o=="object"&&typeof o.then=="function"&&(g.count++,g=zp.bind(g),o.then(g,g)),c.state.loading|=4,c.instance=N,Sn(N);return}N=o.ownerDocument||o,d=uC(d),(x=ta.get(x))&&px(d,x),N=N.createElement("link"),Sn(N);var E=N;E._p=new Promise(function(_,W){E.onload=_,E.onerror=W}),Mn(N,"link",d),c.instance=N}g.stylesheets===null&&(g.stylesheets=new Map),g.stylesheets.set(c,o),(o=c.state.preload)&&(c.state.loading&3)===0&&(g.count++,c=zp.bind(g),o.addEventListener("load",c),o.addEventListener("error",c))}}function IF(){if(lh===null)throw Error(s(475));var o=lh;return o.stylesheets&&o.count===0&&gx(o,o.stylesheets),0<o.count?function(c){var d=setTimeout(function(){if(o.stylesheets&&gx(o,o.stylesheets),o.unsuspend){var g=o.unsuspend;o.unsuspend=null,g()}},6e4);return o.unsuspend=c,function(){o.unsuspend=null,clearTimeout(d)}}:null}function zp(){if(this.count--,this.count===0){if(this.stylesheets)gx(this,this.stylesheets);else if(this.unsuspend){var o=this.unsuspend;this.unsuspend=null,o()}}}var Mp=null;function gx(o,c){o.stylesheets=null,o.unsuspend!==null&&(o.count++,Mp=new Map,c.forEach(EF,o),Mp=null,zp.call(o))}function EF(o,c){if(!(c.state.loading&4)){var d=Mp.get(o);if(d)var g=d.get(null);else{d=new Map,Mp.set(o,d);for(var x=o.querySelectorAll("link[data-precedence],style[data-precedence]"),N=0;N<x.length;N++){var E=x[N];(E.nodeName==="LINK"||E.getAttribute("media")!=="not all")&&(d.set(E.dataset.precedence,E),g=E)}g&&d.set(null,g)}x=c.instance,E=x.getAttribute("data-precedence"),N=d.get(E)||g,N===g&&d.set(null,x),d.set(E,x),this.count++,g=zp.bind(this),x.addEventListener("load",g),x.addEventListener("error",g),N?N.parentNode.insertBefore(x,N.nextSibling):(o=o.nodeType===9?o.head:o,o.insertBefore(x,o.firstChild)),c.state.loading|=4}}var uh={$$typeof:$,Provider:null,Consumer:null,_currentValue:Y,_currentValue2:Y,_threadCount:0};function AF(o,c,d,g,x,N,E,_){this.tag=1,this.containerInfo=o,this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.next=this.pendingContext=this.context=this.cancelPendingCommit=null,this.callbackPriority=0,this.expirationTimes=db(-1),this.entangledLanes=this.shellSuspendCounter=this.errorRecoveryDisabledLanes=this.expiredLanes=this.warmLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=db(0),this.hiddenUpdates=db(null),this.identifierPrefix=g,this.onUncaughtError=x,this.onCaughtError=N,this.onRecoverableError=E,this.pooledCache=null,this.pooledCacheLanes=0,this.formState=_,this.incompleteTransitions=new Map}function pC(o,c,d,g,x,N,E,_,W,lt,pt,bt){return o=new AF(o,c,d,E,_,W,lt,bt),c=1,N===!0&&(c|=24),N=As(3,null,null,c),o.current=N,N.stateNode=o,c=Zb(),c.refCount++,o.pooledCache=c,c.refCount++,N.memoizedState={element:g,isDehydrated:d,cache:c},e0(N),o}function mC(o){return o?(o=dl,o):dl}function gC(o,c,d,g,x,N){x=mC(x),g.context===null?g.context=x:g.pendingContext=x,g=Wr(c),g.payload={element:d},N=N===void 0?null:N,N!==null&&(g.callback=N),d=Hr(o,g,c),d!==null&&(Fs(d,o,c),Bc(d,o,c))}function yC(o,c){if(o=o.memoizedState,o!==null&&o.dehydrated!==null){var d=o.retryLane;o.retryLane=d!==0&&d<c?d:c}}function yx(o,c){yC(o,c),(o=o.alternate)&&yC(o,c)}function bC(o){if(o.tag===13){var c=hl(o,67108864);c!==null&&Fs(c,o,67108864),yx(o,67108864)}}var Bp=!0;function RF(o,c,d,g){var x=V.T;V.T=null;var N=q.p;try{q.p=2,bx(o,c,d,g)}finally{q.p=N,V.T=x}}function DF(o,c,d,g){var x=V.T;V.T=null;var N=q.p;try{q.p=8,bx(o,c,d,g)}finally{q.p=N,V.T=x}}function bx(o,c,d,g){if(Bp){var x=xx(g);if(x===null)rx(o,c,g,Vp,d),vC(o,g);else if(_F(x,o,c,d,g))g.stopPropagation();else if(vC(o,g),c&4&&-1<OF.indexOf(o)){for(;x!==null;){var N=Jo(x);if(N!==null)switch(N.tag){case 3:if(N=N.stateNode,N.current.memoizedState.isDehydrated){var E=ar(N.pendingLanes);if(E!==0){var _=N;for(_.pendingLanes|=2,_.entangledLanes|=2;E;){var W=1<<31-dn(E);_.entanglements[1]|=W,E&=~W}za(N),(ye&6)===0&&(Np=ae()+500,nh(0))}}break;case 13:_=hl(N,2),_!==null&&Fs(_,N,2),Cp(),yx(N,2)}if(N=xx(g),N===null&&rx(o,c,g,Vp,d),N===x)break;x=N}x!==null&&g.stopPropagation()}else rx(o,c,g,null,d)}}function xx(o){return o=Tb(o),vx(o)}var Vp=null;function vx(o){if(Vp=null,o=Qo(o),o!==null){var c=r(o);if(c===null)o=null;else{var d=c.tag;if(d===13){if(o=i(c),o!==null)return o;o=null}else if(d===3){if(c.stateNode.current.memoizedState.isDehydrated)return c.tag===3?c.stateNode.containerInfo:null;o=null}else c!==o&&(o=null)}}return Vp=o,null}function xC(o){switch(o){case"beforetoggle":case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"toggle":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 2;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 8;case"message":switch($e()){case Hs:return 2;case Ye:return 8;case ks:case ts:return 32;case Da:return 268435456;default:return 32}default:return 32}}var wx=!1,ai=null,ri=null,ii=null,ch=new Map,hh=new Map,oi=[],OF="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset".split(" ");function vC(o,c){switch(o){case"focusin":case"focusout":ai=null;break;case"dragenter":case"dragleave":ri=null;break;case"mouseover":case"mouseout":ii=null;break;case"pointerover":case"pointerout":ch.delete(c.pointerId);break;case"gotpointercapture":case"lostpointercapture":hh.delete(c.pointerId)}}function dh(o,c,d,g,x,N){return o===null||o.nativeEvent!==N?(o={blockedOn:c,domEventName:d,eventSystemFlags:g,nativeEvent:N,targetContainers:[x]},c!==null&&(c=Jo(c),c!==null&&bC(c)),o):(o.eventSystemFlags|=g,c=o.targetContainers,x!==null&&c.indexOf(x)===-1&&c.push(x),o)}function _F(o,c,d,g,x){switch(c){case"focusin":return ai=dh(ai,o,c,d,g,x),!0;case"dragenter":return ri=dh(ri,o,c,d,g,x),!0;case"mouseover":return ii=dh(ii,o,c,d,g,x),!0;case"pointerover":var N=x.pointerId;return ch.set(N,dh(ch.get(N)||null,o,c,d,g,x)),!0;case"gotpointercapture":return N=x.pointerId,hh.set(N,dh(hh.get(N)||null,o,c,d,g,x)),!0}return!1}function wC(o){var c=Qo(o.target);if(c!==null){var d=r(c);if(d!==null){if(c=d.tag,c===13){if(c=i(d),c!==null){o.blockedOn=c,k_(o.priority,function(){if(d.tag===13){var g=_s();g=fb(g);var x=hl(d,g);x!==null&&Fs(x,d,g),yx(d,g)}});return}}else if(c===3&&d.stateNode.current.memoizedState.isDehydrated){o.blockedOn=d.tag===3?d.stateNode.containerInfo:null;return}}}o.blockedOn=null}function Pp(o){if(o.blockedOn!==null)return!1;for(var c=o.targetContainers;0<c.length;){var d=xx(o.nativeEvent);if(d===null){d=o.nativeEvent;var g=new d.constructor(d.type,d);Nb=g,d.target.dispatchEvent(g),Nb=null}else return c=Jo(d),c!==null&&bC(c),o.blockedOn=d,!1;c.shift()}return!0}function SC(o,c,d){Pp(o)&&d.delete(c)}function FF(){wx=!1,ai!==null&&Pp(ai)&&(ai=null),ri!==null&&Pp(ri)&&(ri=null),ii!==null&&Pp(ii)&&(ii=null),ch.forEach(SC),hh.forEach(SC)}function Up(o,c){o.blockedOn===c&&(o.blockedOn=null,wx||(wx=!0,n.unstable_scheduleCallback(n.unstable_NormalPriority,FF)))}var Gp=null;function NC(o){Gp!==o&&(Gp=o,n.unstable_scheduleCallback(n.unstable_NormalPriority,function(){Gp===o&&(Gp=null);for(var c=0;c<o.length;c+=3){var d=o[c],g=o[c+1],x=o[c+2];if(typeof g!="function"){if(vx(g||d)===null)continue;break}var N=Jo(d);N!==null&&(o.splice(c,3),c-=3,v0(N,{pending:!0,data:x,method:d.method,action:g},g,x))}}))}function fh(o){function c(W){return Up(W,o)}ai!==null&&Up(ai,o),ri!==null&&Up(ri,o),ii!==null&&Up(ii,o),ch.forEach(c),hh.forEach(c);for(var d=0;d<oi.length;d++){var g=oi[d];g.blockedOn===o&&(g.blockedOn=null)}for(;0<oi.length&&(d=oi[0],d.blockedOn===null);)wC(d),d.blockedOn===null&&oi.shift();if(d=(o.ownerDocument||o).$$reactFormReplay,d!=null)for(g=0;g<d.length;g+=3){var x=d[g],N=d[g+1],E=x[fs]||null;if(typeof N=="function")E||NC(d);else if(E){var _=null;if(N&&N.hasAttribute("formAction")){if(x=N,E=N[fs]||null)_=E.formAction;else if(vx(x)!==null)continue}else _=E.action;typeof _=="function"?d[g+1]=_:(d.splice(g,3),g-=3),NC(d)}}}function Sx(o){this._internalRoot=o}Wp.prototype.render=Sx.prototype.render=function(o){var c=this._internalRoot;if(c===null)throw Error(s(409));var d=c.current,g=_s();gC(d,g,o,c,null,null)},Wp.prototype.unmount=Sx.prototype.unmount=function(){var o=this._internalRoot;if(o!==null){this._internalRoot=null;var c=o.containerInfo;gC(o.current,2,null,o,null,null),Cp(),c[Zo]=null}};function Wp(o){this._internalRoot=o}Wp.prototype.unstable_scheduleHydration=function(o){if(o){var c=VS();o={blockedOn:null,target:o,priority:c};for(var d=0;d<oi.length&&c!==0&&c<oi[d].priority;d++);oi.splice(d,0,o),d===0&&wC(o)}};var TC=t.version;if(TC!=="19.1.0")throw Error(s(527,TC,"19.1.0"));q.findDOMNode=function(o){var c=o._reactInternals;if(c===void 0)throw typeof o.render=="function"?Error(s(188)):(o=Object.keys(o).join(","),Error(s(268,o)));return o=u(c),o=o!==null?h(o):null,o=o===null?null:o.stateNode,o};var LF={bundleType:0,version:"19.1.0",rendererPackageName:"react-dom",currentDispatcherRef:V,reconcilerVersion:"19.1.0"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var Hp=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!Hp.isDisabled&&Hp.supportsFiber)try{ds=Hp.inject(LF),Ue=Hp}catch{}}return mh.createRoot=function(o,c){if(!a(o))throw Error(s(299));var d=!1,g="",x=VT,N=PT,E=UT,_=null;return c!=null&&(c.unstable_strictMode===!0&&(d=!0),c.identifierPrefix!==void 0&&(g=c.identifierPrefix),c.onUncaughtError!==void 0&&(x=c.onUncaughtError),c.onCaughtError!==void 0&&(N=c.onCaughtError),c.onRecoverableError!==void 0&&(E=c.onRecoverableError),c.unstable_transitionCallbacks!==void 0&&(_=c.unstable_transitionCallbacks)),c=pC(o,1,!1,null,null,d,g,x,N,E,_,null),o[Zo]=c.current,ax(o),new Sx(c)},mh.hydrateRoot=function(o,c,d){if(!a(o))throw Error(s(299));var g=!1,x="",N=VT,E=PT,_=UT,W=null,lt=null;return d!=null&&(d.unstable_strictMode===!0&&(g=!0),d.identifierPrefix!==void 0&&(x=d.identifierPrefix),d.onUncaughtError!==void 0&&(N=d.onUncaughtError),d.onCaughtError!==void 0&&(E=d.onCaughtError),d.onRecoverableError!==void 0&&(_=d.onRecoverableError),d.unstable_transitionCallbacks!==void 0&&(W=d.unstable_transitionCallbacks),d.formState!==void 0&&(lt=d.formState)),c=pC(o,1,!0,c,d??null,g,x,N,E,_,W,lt),c.context=mC(null),d=c.current,g=_s(),g=fb(g),x=Wr(g),x.callback=null,Hr(d,x,g),d=g,c.current.lanes=d,xc(c,d),za(c),o[Zo]=c.current,ax(o),new Wp(c)},mh.version="19.1.0",mh}var _C;function qF(){if(_C)return Cx.exports;_C=1;function n(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(n)}catch(t){console.error(t)}}return n(),Cx.exports=jF(),Cx.exports}var XF=qF(),om={exports:{}},KF=om.exports,FC;function YF(){return FC||(FC=1,function(n,t){(function(s,a){n.exports=a(Km())})(KF,function(e){return function(s){var a={};function r(i){if(a[i])return a[i].exports;var l=a[i]={i,l:!1,exports:{}};return s[i].call(l.exports,l,l.exports,r),l.l=!0,l.exports}return r.m=s,r.c=a,r.d=function(i,l,u){r.o(i,l)||Object.defineProperty(i,l,{enumerable:!0,get:u})},r.r=function(i){typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(i,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(i,"__esModule",{value:!0})},r.t=function(i,l){if(l&1&&(i=r(i)),l&8||l&4&&typeof i=="object"&&i&&i.__esModule)return i;var u=Object.create(null);if(r.r(u),Object.defineProperty(u,"default",{enumerable:!0,value:i}),l&2&&typeof i!="string")for(var h in i)r.d(u,h,(function(f){return i[f]}).bind(null,h));return u},r.n=function(i){var l=i&&i.__esModule?function(){return i.default}:function(){return i};return r.d(l,"a",l),l},r.o=function(i,l){return Object.prototype.hasOwnProperty.call(i,l)},r.p="",r(r.s="./src/react-webcam.tsx")}({"./src/react-webcam.tsx":function(s,a,r){r.r(a);var i=r("react"),l=function(){var m=function(y,b){return m=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(v,w){v.__proto__=w}||function(v,w){for(var S in w)w.hasOwnProperty(S)&&(v[S]=w[S])},m(y,b)};return function(y,b){m(y,b);function v(){this.constructor=y}y.prototype=b===null?Object.create(b):(v.prototype=b.prototype,new v)}}(),u=function(){return u=Object.assign||function(m){for(var y,b=1,v=arguments.length;b<v;b++){y=arguments[b];for(var w in y)Object.prototype.hasOwnProperty.call(y,w)&&(m[w]=y[w])}return m},u.apply(this,arguments)},h=function(m,y){var b={};for(var v in m)Object.prototype.hasOwnProperty.call(m,v)&&y.indexOf(v)<0&&(b[v]=m[v]);if(m!=null&&typeof Object.getOwnPropertySymbols=="function")for(var w=0,v=Object.getOwnPropertySymbols(m);w<v.length;w++)y.indexOf(v[w])<0&&Object.prototype.propertyIsEnumerable.call(m,v[w])&&(b[v[w]]=m[v[w]]);return b};(function(){typeof window>"u"||(navigator.mediaDevices===void 0&&(navigator.mediaDevices={}),navigator.mediaDevices.getUserMedia===void 0&&(navigator.mediaDevices.getUserMedia=function(y){var b=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia;return b?new Promise(function(v,w){b.call(navigator,y,v,w)}):Promise.reject(new Error("getUserMedia is not implemented in this browser"))}))})();function f(){return!!(navigator.mediaDevices&&navigator.mediaDevices.getUserMedia)}var p=function(m){l(y,m);function y(b){var v=m.call(this,b)||this;return v.canvas=null,v.ctx=null,v.requestUserMediaId=0,v.unmounted=!1,v.state={hasUserMedia:!1},v}return y.prototype.componentDidMount=function(){var b=this,v=b.state,w=b.props;if(this.unmounted=!1,!f()){w.onUserMediaError("getUserMedia not supported");return}v.hasUserMedia||this.requestUserMedia(),w.children&&typeof w.children!="function"&&console.warn("children must be a function")},y.prototype.componentDidUpdate=function(b){var v=this.props;if(!f()){v.onUserMediaError("getUserMedia not supported");return}var w=JSON.stringify(b.audioConstraints)!==JSON.stringify(v.audioConstraints),S=JSON.stringify(b.videoConstraints)!==JSON.stringify(v.videoConstraints),T=b.minScreenshotWidth!==v.minScreenshotWidth,$=b.minScreenshotHeight!==v.minScreenshotHeight;(S||T||$)&&(this.canvas=null,this.ctx=null),(w||S)&&(this.stopAndCleanup(),this.requestUserMedia())},y.prototype.componentWillUnmount=function(){this.unmounted=!0,this.stopAndCleanup()},y.stopMediaStream=function(b){b&&(b.getVideoTracks&&b.getAudioTracks?(b.getVideoTracks().map(function(v){b.removeTrack(v),v.stop()}),b.getAudioTracks().map(function(v){b.removeTrack(v),v.stop()})):b.stop())},y.prototype.stopAndCleanup=function(){var b=this.state;b.hasUserMedia&&(y.stopMediaStream(this.stream),b.src&&window.URL.revokeObjectURL(b.src))},y.prototype.getScreenshot=function(b){var v=this,w=v.state,S=v.props;if(!w.hasUserMedia)return null;var T=this.getCanvas(b);return T&&T.toDataURL(S.screenshotFormat,S.screenshotQuality)},y.prototype.getCanvas=function(b){var v=this,w=v.state,S=v.props;if(!this.video||!w.hasUserMedia||!this.video.videoHeight)return null;if(!this.ctx){var T=this.video.videoWidth,$=this.video.videoHeight;if(!this.props.forceScreenshotSourceSize){var C=T/$;T=S.minScreenshotWidth||this.video.clientWidth,$=T/C,S.minScreenshotHeight&&$<S.minScreenshotHeight&&($=S.minScreenshotHeight,T=$*C)}this.canvas=document.createElement("canvas"),this.canvas.width=b?.width||T,this.canvas.height=b?.height||$,this.ctx=this.canvas.getContext("2d")}var I=this,R=I.ctx,F=I.canvas;return R&&F&&(F.width=b?.width||F.width,F.height=b?.height||F.height,S.mirrored&&(R.translate(F.width,0),R.scale(-1,1)),R.imageSmoothingEnabled=S.imageSmoothing,R.drawImage(this.video,0,0,b?.width||F.width,b?.height||F.height),S.mirrored&&(R.scale(-1,1),R.translate(-F.width,0))),F},y.prototype.requestUserMedia=function(){var b=this,v=this.props,w=function($,C){var I={video:typeof C<"u"?C:!0};v.audio&&(I.audio=typeof $<"u"?$:!0),b.requestUserMediaId++;var R=b.requestUserMediaId;navigator.mediaDevices.getUserMedia(I).then(function(F){b.unmounted||R!==b.requestUserMediaId?y.stopMediaStream(F):b.handleUserMedia(null,F)}).catch(function(F){b.handleUserMedia(F)})};if("mediaDevices"in navigator)w(v.audioConstraints,v.videoConstraints);else{var S=function($){return{optional:[{sourceId:$}]}},T=function($){var C=$.deviceId;return typeof C=="string"?C:Array.isArray(C)&&C.length>0?C[0]:typeof C=="object"&&C.ideal?C.ideal:null};MediaStreamTrack.getSources(function($){var C=null,I=null;$.forEach(function(B){B.kind==="audio"?C=B.id:B.kind==="video"&&(I=B.id)});var R=T(v.audioConstraints);R&&(C=R);var F=T(v.videoConstraints);F&&(I=F),w(S(C),S(I))})}},y.prototype.handleUserMedia=function(b,v){var w=this.props;if(b||!v){this.setState({hasUserMedia:!1}),w.onUserMediaError(b);return}this.stream=v;try{this.video&&(this.video.srcObject=v),this.setState({hasUserMedia:!0})}catch{this.setState({hasUserMedia:!0,src:window.URL.createObjectURL(v)})}w.onUserMedia(v)},y.prototype.render=function(){var b=this,v=this,w=v.state,S=v.props,T=S.audio;S.forceScreenshotSourceSize;var $=S.disablePictureInPicture;S.onUserMedia,S.onUserMediaError,S.screenshotFormat,S.screenshotQuality,S.minScreenshotWidth,S.minScreenshotHeight,S.audioConstraints,S.videoConstraints,S.imageSmoothing;var C=S.mirrored,I=S.style,R=I===void 0?{}:I,F=S.children,B=h(S,["audio","forceScreenshotSourceSize","disablePictureInPicture","onUserMedia","onUserMediaError","screenshotFormat","screenshotQuality","minScreenshotWidth","minScreenshotHeight","audioConstraints","videoConstraints","imageSmoothing","mirrored","style","children"]),L=C?u(u({},R),{transform:(R.transform||"")+" scaleX(-1)"}):R,z={getScreenshot:this.getScreenshot.bind(this)};return i.createElement(i.Fragment,null,i.createElement("video",u({autoPlay:!0,disablePictureInPicture:$,src:w.src,muted:!T,playsInline:!0,ref:function(A){b.video=A},style:L},B)),F&&F(z))},y.defaultProps={audio:!1,disablePictureInPicture:!1,forceScreenshotSourceSize:!1,imageSmoothing:!0,mirrored:!1,onUserMedia:function(){},onUserMediaError:function(){},screenshotFormat:"image/webp",screenshotQuality:.92},y}(i.Component);a.default=p},react:function(s,a){s.exports=e}}).default})}(om)),om.exports}var ZF=YF();const QF=Ck(ZF);var vh={exports:{}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JF=1e-7,tL=1e-4;class H1{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class Ym{refCount(t){return bs("refCount")}incRef(t){return bs("incRef")}timerAvailable(){return!0}time(t){return bs("time")}read(t){return bs("read")}readSync(t){return bs("readSync")}readToGPU(t,e){return bs("readToGPU")}numDataIds(){return bs("numDataIds")}disposeData(t,e){return bs("disposeData")}write(t,e,s){return bs("write")}move(t,e,s,a,r){return bs("move")}createTensorFromGPUData(t,e,s){return bs("createTensorFromGPUData")}memory(){return bs("memory")}floatPrecision(){return bs("floatPrecision")}epsilon(){return this.floatPrecision()===32?JF:tL}dispose(){return bs("dispose")}}function bs(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j1(n){let t=n.length,e=0;for(;t>0;)e=Math.random()*t|0,t--,Nr(n,t,e)}function eL(n,t){if(n.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${n.length}Second array length was ${t.length}`);let e=n.length,s=0;for(;e>0;)s=Math.random()*e|0,e--,Nr(n,e,s),Nr(t,e,s)}function yi(n,t,e){return Math.max(n,Math.min(t,e))}function Zm(n){return n%2===0?n:n+1}function Nr(n,t,e){const s=n[t];n[t]=n[e],n[e]=s}function $k(n){let t=0;for(let e=0;e<n.length;e++)t+=n[e];return t}function nL(n,t){const e=Math.random();return t*e+(1-e)*n}function sL(n,t){let e=0;for(let s=0;s<n.length;s++){const a=Number(n[s])-Number(t[s]);e+=a*a}return e}function D(n,t){if(!n)throw new Error(typeof t=="string"?t:t())}function An(n,t,e=""){D(Zt(n,t),()=>e+` Shapes ${n} and ${t} must match`)}function Lo(n){D(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function ht(n){if(n.length===0)return 1;let t=n[0];for(let e=1;e<n.length;e++)t*=n[e];return t}function aL(n){return n.length===0}function kk(n,t){if(n===t)return!0;if(n==null||t==null||n.length!==t.length)return!1;for(let e=0;e<n.length;e++)if(n[e]!==null&&t[e]!==null&&n[e]!==t[e])return!1;return!0}function Zt(n,t){if(n===t)return!0;if(n==null||t==null||n.length!==t.length)return!1;for(let e=0;e<n.length;e++)if(n[e]!==t[e])return!1;return!0}function wo(n){return n%1===0}function rL(n){if(Math.tanh!=null)return Math.tanh(n);if(n===1/0)return 1;if(n===-1/0)return-1;{const t=Math.exp(2*n);return(t-1)/(t+1)}}function xm(n){const t=Math.ceil(Math.sqrt(n));return[t,Math.ceil(n/t)]}function iL(n){const t=new Uint32Array(n);for(let e=0;e<n;++e)t[e]=e;return j1(t),t}function go(n,t){return t<=n.length?n:n+" ".repeat(t-n.length)}function Yx(n,t=a=>0,e,s){return new Promise((a,r)=>{let i=0;const l=()=>{if(n()){a();return}i++;const u=t(i);if(e!=null&&i>=e){r();return}s!=null?s(l,u):setTimeout(l,u)};l()})}function q1(n,t){let e=1,s=-1;for(let r=0;r<n.length;++r)if(n[r]>=0)e*=n[r];else if(n[r]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${r}`);s=r}else if(n[r]<0)throw Error(`Shapes can not be < 0. Found ${n[r]} at dim ${r}`);if(s===-1){if(t>0&&t!==e)throw Error(`Size(${t}) must match the product of shape ${n}`);return n}if(e===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(t%e!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${e}`);const a=n.slice();return a[s]=t/e,a}function Xt(n,t){const e=t.length;return n=n==null?t.map((s,a)=>a):[].concat(n),D(n.every(s=>s>=-e&&s<e),()=>`All values in axis param must be in range [-${e}, ${e}) but got axis ${n}`),D(n.every(s=>wo(s)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(s=>s<0?e+s:s)}function Rr(n,t){const e=[],s=[],a=t!=null&&Array.isArray(t)&&t.length===0,r=t==null||a?null:Xt(t,n).sort();let i=0;for(let l=0;l<n.length;++l){if(r!=null){if(r[i]===l&&n[l]!==1)throw new Error(`Can't squeeze axis ${l} since its dim '${n[l]}' is not 1`);(r[i]==null||r[i]>l)&&n[l]===1&&(e.push(n[l]),s.push(l)),r[i]<=l&&i++}n[l]!==1&&(e.push(n[l]),s.push(l))}return{newShape:e,keptDims:s}}function bn(n,t){return Pe(n,t)}function Pe(n,t){let e=null;if(n==null||n==="float32")e=new Float32Array(t);else if(n==="int32")e=new Int32Array(t);else if(n==="bool")e=new Uint8Array(t);else if(n==="string")e=new Array(t);else throw new Error(`Unknown data type ${n}`);return e}function Ik(n,t){for(let e=0;e<n.length;e++){const s=n[e];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function Ek(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function X1(n,t){return!(t==="complex64"||t==="float32"&&n!=="complex64"||t==="int32"&&n!=="float32"&&n!=="complex64"||t==="bool"&&n==="bool")}function Ih(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function Ak(n){if(n==null)return 0;let t=0;return n.forEach(e=>t+=e.length),t}function Ua(n){return typeof n=="string"||n instanceof String}function Rk(n){return typeof n=="boolean"}function vm(n){return typeof n=="number"}function zo(n){return Array.isArray(n)?zo(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":vm(n)?"float32":Ua(n)?"string":Rk(n)?"bool":"float32"}function bi(n){return!!(n&&n.constructor&&n.call&&n.apply)}function wm(n,t){for(let e=t;e<n;++e)if(n%e===0)return e;return n}function Ot(n){const t=n.length;if(t<2)return[];const e=new Array(t-1);e[t-2]=n[t-1];for(let s=t-3;s>=0;--s)e[s]=e[s+1]*n[s+1];return e}function Dk(n,t,e,s=!1){const a=new Array;if(t.length===1){const r=t[0]*(s?2:1);for(let i=0;i<r;i++)a[i]=e[n+i]}else{const r=t[0],i=t.slice(1),l=i.reduce((u,h)=>u*h)*(s?2:1);for(let u=0;u<r;u++)a[u]=Dk(n+u*l,i,e,s)}return a}function Vs(n,t,e=!1){if(n.length===0)return t[0];const s=n.reduce((a,r)=>a*r)*(e?2:1);if(s===0)return[];if(s!==t.length)throw new Error(`[${n}] does not match the input size ${t.length}${e?" for a complex tensor":""}.`);return Dk(0,n,t,e)}function Ok(n,t){if(Array.isArray(n))return n;if(t==="float32")return n instanceof Float32Array?n:new Float32Array(n);if(t==="int32")return n instanceof Int32Array?n:new Int32Array(n);if(t==="bool"||t==="string")return Uint8Array.from(new Int32Array(n));throw new Error(`Unknown dtype ${t}`)}function Qm(n,t){const e=En(n,t);for(let s=0;s<e.length;s++)e[s]=1;return e}function En(n,t){if(t==null||t==="float32"||t==="complex64")return new Float32Array(n);if(t==="int32")return new Int32Array(n);if(t==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${t}`)}function K1(n,t){const e=n.reduce((s,a)=>s*a,1);if(t==null||t==="float32")return Vs(n,new Float32Array(e));if(t==="int32")return Vs(n,new Int32Array(e));if(t==="bool")return Vs(n,new Uint8Array(e));throw new Error(`Unknown data type ${t}`)}function $s(n){n.forEach(t=>{D(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function Sa(n,t,e){if(t===0)return 0;if(t===1)return n[0];let s=n[n.length-1];for(let a=0;a<n.length-1;++a)s+=e[a]*n[a];return s}function Mo(n,t,e){if(t===0)return[];if(t===1)return[n];const s=new Array(t);for(let a=0;a<s.length-1;++a)s[a]=Math.floor(n/e[a]),n-=s[a]*e[a];return s[s.length-1]=n,s}function xi(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LC="tfjsflags";class _k{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=oL,this.populateURLFlags()}setPlatform(t,e){this.platform!=null&&(rt().getBool("IS_TEST")||rt().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=t,this.platform=e}registerFlag(t,e,s){if(this.flagRegistry[t]={evaluationFn:e,setHook:s},this.urlFlags[t]!=null){const a=this.urlFlags[t];rt().getBool("IS_TEST")||rt().getBool("PROD")||console.warn(`Setting feature override from URL ${t}: ${a}.`),this.set(t,a)}}async getAsync(t){return t in this.flags?this.flags[t]:(this.flags[t]=await this.evaluateFlag(t),this.flags[t])}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if(xi(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getString(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(this.flagRegistry[t]==null)throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,this.flagRegistry[t].setHook!=null&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(this.flagRegistry[t]==null)throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const t=this.getQueryParams(this.global.location.search);LC in t&&t[LC].split(",").forEach(s=>{const[a,r]=s.split(":");this.urlFlags[a]=uL(a,r)})}}function oL(n){const t={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...s)=>(lL(t,s[0],s[1]),s.join("="))),t}function lL(n,t,e){n[decodeURIComponent(t)]=decodeURIComponent(e||"")}function uL(n,t){const e=t.toLowerCase();return e==="true"||e==="false"?e==="true":`${+e}`===e?+e:t}function rt(){return Y1}let Y1=null;function cL(n){Y1=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Ex;function Fk(){if(Ex==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");Ex=n}return Ex}function hL(){const n=Fk();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function Z1(n,t){const e=hL();if(e.has(n))return e.get(n);{const s=t();return e.set(n,s),e.get(n)}}const Xh="Abs",ru="Acos",iu="Acosh",Bo="Add",Kh="AddN",Jm="All",tg="Any",Yh="ArgMax",Zh="ArgMin",ou="Asin",lu="Asinh",uu="Atan",cu="Atanh",hu="Atan2",Qh="AvgPool",eg="AvgPoolGrad",Jh="AvgPool3D",ng="AvgPool3DGrad",td="BatchMatMul",ed="BatchToSpaceND",sg="Bincount",nd="BitwiseAnd",Lk="BroadcastTo",ag="BroadcastArgs",du="Cast",fu="Ceil",pu="ClipByValue",rg="Complex",sd="ComplexAbs",ad="Concat",rd="Conv2D",ig="Conv2DBackpropFilter",id="Conv2DBackpropInput",od="Conv3D",og="Conv3DBackpropFilterV2",lg="Conv3DBackpropInputV2",mu="Cos",gu="Cosh",ug="Cumprod",ld="Cumsum",cg="CropAndResize",hg="DenseBincount",dg="DepthToSpace",ud="DepthwiseConv2dNative",fg="DepthwiseConv2dNativeBackpropFilter",pg="DepthwiseConv2dNativeBackpropInput",mg="Diag",cd="Dilation2D",Sm="Dilation2DBackpropInput",Nm="Dilation2DBackpropFilter",gg="Draw",yu="RealDiv",yg="Einsum",bu="Elu",bg="EluGrad",xu="Erf",hd="Equal",vu="Exp",dd="ExpandDims",wu="Expm1",xg="FFT",vg="Fill",wg="FlipLeftRight",Su="Floor",Nu="FloorDiv",fd="FusedBatchNorm",pd="GatherV2",Sg="GatherNd",md="Greater",Tu="GreaterEqual",Cu="Identity",Ng="IFFT",Tg="Imag",$u="IsFinite",ku="IsInf",Iu="IsNan",gd="LeakyRelu",yd="Less",bd="LessEqual",Cg="LinSpace",Eu="Log",Au="Log1p",xd="LogicalAnd",vd="LogicalNot",wd="LogicalOr",dL="LogicalXor",zk="LogSoftmax",fL="LowerBound",Sd="LRN",$g="LRNGrad",pL="MatrixBandPart",Nd="Max",Ru="Maximum",Td="MaxPool",kg="MaxPoolGrad",Cd="MaxPool3D",Ig="MaxPool3DGrad",Eg="MaxPoolWithArgmax",$d="Mean",kd="Min",Du="Minimum",Id="MirrorPad",Ou="Mod",Ag="Multinomial",_u="Multiply",Ed="Neg",Ad="NotEqual",Rg="NonMaxSuppressionV3",Dg="NonMaxSuppressionV4",Og="NonMaxSuppressionV5",Rd="OnesLike",Dd="OneHot",Od="Pack",_d="PadV2",mL="Pool",Fu="Pow",Fd="Prelu",Ld="Prod",_g="RaggedGather",Fg="RaggedRange",Lg="RaggedTensorToTensor",zg="Range",Mg="Real",Lu="Reciprocal",zu="Relu",zd="Reshape",Md="ResizeNearestNeighbor",Bg="ResizeNearestNeighborGrad",Bd="ResizeBilinear",Vg="ResizeBilinearGrad",Mu="Relu6",Vd="Reverse",Bu="Round",Vu="Rsqrt",Pg="ScatterNd",Ug="TensorScatterUpdate",Gg="SearchSorted",Pd="Select",Pu="Selu",Ud="Slice",Uu="Sin",Gu="Sinh",Wu="Sign",Hu="Sigmoid",ju="Softplus",qu="Sqrt",Gd="Sum",Wd="SpaceToBatchND",Hd="SplitV",jd="Softmax",Wg="SparseFillEmptyRows",Hg="SparseReshape",jg="SparseSegmentMean",qg="SparseSegmentSum",Xg="SparseToDense",Xu="SquaredDifference",Kg="Square",qd="StaticRegexReplace",Yg="StridedSlice",Zg="StringNGrams",Qg="StringSplit",Jg="StringToHashBucketFast",Ku="Sub",Yu="Tan",Zu="Tanh",Qu="Tile",ty="TopK",ey="Transform",yo="Transpose",ny="Unique",Xd="Unpack",Kd="UnsortedSegmentSum",gL="UpperBound",Yd="ZerosLike",Ju="Step",Tm="FromPixels",sy="RotateWithOffset",Eh="_FusedMatMul",Ah="FusedConv2D",Rh="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ls(...n){rt().getBool("IS_TEST")||rt().getBool("PROD")||console.warn(...n)}function yL(...n){rt().getBool("IS_TEST")||rt().getBool("PROD")||console.log(...n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hl=Z1("kernelRegistry",()=>new Map),Dh=Z1("gradRegistry",()=>new Map);function Oh(n,t){const e=Q1(n,t);return Hl.get(e)}function Zx(n){return Dh.get(n)}function Cm(n){const t=Hl.entries(),e=[];for(;;){const{done:s,value:a}=t.next();if(s)break;const[r,i]=a,[l]=r.split("_");l===n&&e.push(i)}return e}function ay(n){const{kernelName:t,backendName:e}=n,s=Q1(t,e);Hl.has(s)&&Ls(`The kernel '${t}' for backend '${e}' is already registered`),Hl.set(s,n)}function Mk(n){const{kernelName:t}=n;Dh.has(t)&&rt().getBool("DEBUG")&&Ls(`Overriding the gradient for '${t}'`),Dh.set(t,n)}function bL(n,t){const e=Q1(n,t);if(!Hl.has(e))throw new Error(`The kernel '${n}' for backend '${t}' is not registered`);Hl.delete(e)}function xL(n){if(!Dh.has(n))throw new Error(`The gradient '${n}' for backend is not registered`);Dh.delete(n)}function vL(n,t){Cm(n).forEach(s=>{const a=Object.assign({},s,{backendName:t});ay(a)})}function Q1(n,t){return`${t}_${n}`}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bk(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}var Ax,zC;function wL(){if(zC)return Ax;zC=1,Ax=t;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function t(z,A,G){this.low=z|0,this.high=A|0,this.unsigned=!!G}t.prototype.__isLong__,Object.defineProperty(t.prototype,"__isLong__",{value:!0});function e(z){return(z&&z.__isLong__)===!0}t.isLong=e;var s={},a={};function r(z,A){var G,Q,tt;return A?(z>>>=0,(tt=0<=z&&z<256)&&(Q=a[z],Q)?Q:(G=l(z,(z|0)<0?-1:0,!0),tt&&(a[z]=G),G)):(z|=0,(tt=-128<=z&&z<128)&&(Q=s[z],Q)?Q:(G=l(z,z<0?-1:0,!1),tt&&(s[z]=G),G))}t.fromInt=r;function i(z,A){if(isNaN(z))return A?T:S;if(A){if(z<0)return T;if(z>=b)return F}else{if(z<=-v)return B;if(z+1>=v)return R}return z<0?i(-z,A).neg():l(z%y|0,z/y|0,A)}t.fromNumber=i;function l(z,A,G){return new t(z,A,G)}t.fromBits=l;var u=Math.pow;function h(z,A,G){if(z.length===0)throw Error("empty string");if(z==="NaN"||z==="Infinity"||z==="+Infinity"||z==="-Infinity")return S;if(typeof A=="number"?(G=A,A=!1):A=!!A,G=G||10,G<2||36<G)throw RangeError("radix");var Q;if((Q=z.indexOf("-"))>0)throw Error("interior hyphen");if(Q===0)return h(z.substring(1),A,G).neg();for(var tt=i(u(G,8)),J=S,V=0;V<z.length;V+=8){var q=Math.min(8,z.length-V),Y=parseInt(z.substring(V,V+q),G);if(q<8){var it=i(u(G,q));J=J.mul(it).add(i(Y))}else J=J.mul(tt),J=J.add(i(Y))}return J.unsigned=A,J}t.fromString=h;function f(z,A){return typeof z=="number"?i(z,A):typeof z=="string"?h(z,A):l(z.low,z.high,typeof A=="boolean"?A:z.unsigned)}t.fromValue=f;var p=65536,m=1<<24,y=p*p,b=y*y,v=b/2,w=r(m),S=r(0);t.ZERO=S;var T=r(0,!0);t.UZERO=T;var $=r(1);t.ONE=$;var C=r(1,!0);t.UONE=C;var I=r(-1);t.NEG_ONE=I;var R=l(-1,2147483647,!1);t.MAX_VALUE=R;var F=l(-1,-1,!0);t.MAX_UNSIGNED_VALUE=F;var B=l(0,-2147483648,!1);t.MIN_VALUE=B;var L=t.prototype;return L.toInt=function(){return this.unsigned?this.low>>>0:this.low},L.toNumber=function(){return this.unsigned?(this.high>>>0)*y+(this.low>>>0):this.high*y+(this.low>>>0)},L.toString=function(A){if(A=A||10,A<2||36<A)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(B)){var G=i(A),Q=this.div(G),tt=Q.mul(G).sub(this);return Q.toString(A)+tt.toInt().toString(A)}else return"-"+this.neg().toString(A);for(var J=i(u(A,6),this.unsigned),V=this,q="";;){var Y=V.div(J),it=V.sub(Y.mul(J)).toInt()>>>0,M=it.toString(A);if(V=Y,V.isZero())return M+q;for(;M.length<6;)M="0"+M;q=""+M+q}},L.getHighBits=function(){return this.high},L.getHighBitsUnsigned=function(){return this.high>>>0},L.getLowBits=function(){return this.low},L.getLowBitsUnsigned=function(){return this.low>>>0},L.getNumBitsAbs=function(){if(this.isNegative())return this.eq(B)?64:this.neg().getNumBitsAbs();for(var A=this.high!=0?this.high:this.low,G=31;G>0&&(A&1<<G)==0;G--);return this.high!=0?G+33:G+1},L.isZero=function(){return this.high===0&&this.low===0},L.eqz=L.isZero,L.isNegative=function(){return!this.unsigned&&this.high<0},L.isPositive=function(){return this.unsigned||this.high>=0},L.isOdd=function(){return(this.low&1)===1},L.isEven=function(){return(this.low&1)===0},L.equals=function(A){return e(A)||(A=f(A)),this.unsigned!==A.unsigned&&this.high>>>31===1&&A.high>>>31===1?!1:this.high===A.high&&this.low===A.low},L.eq=L.equals,L.notEquals=function(A){return!this.eq(A)},L.neq=L.notEquals,L.ne=L.notEquals,L.lessThan=function(A){return this.comp(A)<0},L.lt=L.lessThan,L.lessThanOrEqual=function(A){return this.comp(A)<=0},L.lte=L.lessThanOrEqual,L.le=L.lessThanOrEqual,L.greaterThan=function(A){return this.comp(A)>0},L.gt=L.greaterThan,L.greaterThanOrEqual=function(A){return this.comp(A)>=0},L.gte=L.greaterThanOrEqual,L.ge=L.greaterThanOrEqual,L.compare=function(A){if(e(A)||(A=f(A)),this.eq(A))return 0;var G=this.isNegative(),Q=A.isNegative();return G&&!Q?-1:!G&&Q?1:this.unsigned?A.high>>>0>this.high>>>0||A.high===this.high&&A.low>>>0>this.low>>>0?-1:1:this.sub(A).isNegative()?-1:1},L.comp=L.compare,L.negate=function(){return!this.unsigned&&this.eq(B)?B:this.not().add($)},L.neg=L.negate,L.add=function(A){e(A)||(A=f(A));var G=this.high>>>16,Q=this.high&65535,tt=this.low>>>16,J=this.low&65535,V=A.high>>>16,q=A.high&65535,Y=A.low>>>16,it=A.low&65535,M=0,j=0,st=0,et=0;return et+=J+it,st+=et>>>16,et&=65535,st+=tt+Y,j+=st>>>16,st&=65535,j+=Q+q,M+=j>>>16,j&=65535,M+=G+V,M&=65535,l(st<<16|et,M<<16|j,this.unsigned)},L.subtract=function(A){return e(A)||(A=f(A)),this.add(A.neg())},L.sub=L.subtract,L.multiply=function(A){if(this.isZero())return S;if(e(A)||(A=f(A)),n){var G=n.mul(this.low,this.high,A.low,A.high);return l(G,n.get_high(),this.unsigned)}if(A.isZero())return S;if(this.eq(B))return A.isOdd()?B:S;if(A.eq(B))return this.isOdd()?B:S;if(this.isNegative())return A.isNegative()?this.neg().mul(A.neg()):this.neg().mul(A).neg();if(A.isNegative())return this.mul(A.neg()).neg();if(this.lt(w)&&A.lt(w))return i(this.toNumber()*A.toNumber(),this.unsigned);var Q=this.high>>>16,tt=this.high&65535,J=this.low>>>16,V=this.low&65535,q=A.high>>>16,Y=A.high&65535,it=A.low>>>16,M=A.low&65535,j=0,st=0,et=0,ft=0;return ft+=V*M,et+=ft>>>16,ft&=65535,et+=J*M,st+=et>>>16,et&=65535,et+=V*it,st+=et>>>16,et&=65535,st+=tt*M,j+=st>>>16,st&=65535,st+=J*it,j+=st>>>16,st&=65535,st+=V*Y,j+=st>>>16,st&=65535,j+=Q*M+tt*it+J*Y+V*q,j&=65535,l(et<<16|ft,j<<16|st,this.unsigned)},L.mul=L.multiply,L.divide=function(A){if(e(A)||(A=f(A)),A.isZero())throw Error("division by zero");if(n){if(!this.unsigned&&this.high===-2147483648&&A.low===-1&&A.high===-1)return this;var G=(this.unsigned?n.div_u:n.div_s)(this.low,this.high,A.low,A.high);return l(G,n.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?T:S;var Q,tt,J;if(this.unsigned){if(A.unsigned||(A=A.toUnsigned()),A.gt(this))return T;if(A.gt(this.shru(1)))return C;J=T}else{if(this.eq(B)){if(A.eq($)||A.eq(I))return B;if(A.eq(B))return $;var V=this.shr(1);return Q=V.div(A).shl(1),Q.eq(S)?A.isNegative()?$:I:(tt=this.sub(A.mul(Q)),J=Q.add(tt.div(A)),J)}else if(A.eq(B))return this.unsigned?T:S;if(this.isNegative())return A.isNegative()?this.neg().div(A.neg()):this.neg().div(A).neg();if(A.isNegative())return this.div(A.neg()).neg();J=S}for(tt=this;tt.gte(A);){Q=Math.max(1,Math.floor(tt.toNumber()/A.toNumber()));for(var q=Math.ceil(Math.log(Q)/Math.LN2),Y=q<=48?1:u(2,q-48),it=i(Q),M=it.mul(A);M.isNegative()||M.gt(tt);)Q-=Y,it=i(Q,this.unsigned),M=it.mul(A);it.isZero()&&(it=$),J=J.add(it),tt=tt.sub(M)}return J},L.div=L.divide,L.modulo=function(A){if(e(A)||(A=f(A)),n){var G=(this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,A.low,A.high);return l(G,n.get_high(),this.unsigned)}return this.sub(this.div(A).mul(A))},L.mod=L.modulo,L.rem=L.modulo,L.not=function(){return l(~this.low,~this.high,this.unsigned)},L.and=function(A){return e(A)||(A=f(A)),l(this.low&A.low,this.high&A.high,this.unsigned)},L.or=function(A){return e(A)||(A=f(A)),l(this.low|A.low,this.high|A.high,this.unsigned)},L.xor=function(A){return e(A)||(A=f(A)),l(this.low^A.low,this.high^A.high,this.unsigned)},L.shiftLeft=function(A){return e(A)&&(A=A.toInt()),(A&=63)===0?this:A<32?l(this.low<<A,this.high<<A|this.low>>>32-A,this.unsigned):l(0,this.low<<A-32,this.unsigned)},L.shl=L.shiftLeft,L.shiftRight=function(A){return e(A)&&(A=A.toInt()),(A&=63)===0?this:A<32?l(this.low>>>A|this.high<<32-A,this.high>>A,this.unsigned):l(this.high>>A-32,this.high>=0?0:-1,this.unsigned)},L.shr=L.shiftRight,L.shiftRightUnsigned=function(A){if(e(A)&&(A=A.toInt()),A&=63,A===0)return this;var G=this.high;if(A<32){var Q=this.low;return l(Q>>>A|G<<32-A,G>>>A,this.unsigned)}else return A===32?l(G,0,this.unsigned):l(G>>>A-32,0,this.unsigned)},L.shru=L.shiftRightUnsigned,L.shr_u=L.shiftRightUnsigned,L.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},L.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},L.toBytes=function(A){return A?this.toBytesLE():this.toBytesBE()},L.toBytesLE=function(){var A=this.high,G=this.low;return[G&255,G>>>8&255,G>>>16&255,G>>>24,A&255,A>>>8&255,A>>>16&255,A>>>24]},L.toBytesBE=function(){var A=this.high,G=this.low;return[A>>>24,A>>>16&255,A>>>8&255,A&255,G>>>24,G>>>16&255,G>>>8&255,G&255]},t.fromBytes=function(A,G,Q){return Q?t.fromBytesLE(A,G):t.fromBytesBE(A,G)},t.fromBytesLE=function(A,G){return new t(A[0]|A[1]<<8|A[2]<<16|A[3]<<24,A[4]|A[5]<<8|A[6]<<16|A[7]<<24,G)},t.fromBytesBE=function(A,G){return new t(A[4]<<24|A[5]<<16|A[6]<<8|A[7],A[0]<<24|A[1]<<16|A[2]<<8|A[3],G)},Ax}var Vk=wL();const Pk=Ck(Vk),SL=MF({__proto__:null,default:Pk},[Vk]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lo=Pk||SL;function Zd(n){return lo.fromString(n,!0,16)}const Uk=Zd("c3a5c85c97cb3127"),io=Zd("b492b66fbe98f273"),Xn=Zd("9ae16a3b2f90404f");function Qx(n){return n.xor(n.shru(47))}function Gk(n,t,e){const s=n.slice(t,t+e);return lo.fromBytes(Array.from(s),!0,!0)}function Ie(n,t){return Gk(n,t,8)}function MC(n,t){return Gk(n,t,4)}function mn(n,t){return t===0?n:n.shru(t).or(n.shl(64-t))}function pi(n,t,e=Zd("9ddfea08eb382d69")){let s=n.xor(t).mul(e);s=s.xor(s.shru(47));let a=t.xor(s).mul(e);return a=a.xor(a.shru(47)),a=a.mul(e),a}function NL(n,t,e,s,a,r){a=a.add(n),r=mn(r.add(a).add(s),21);const i=a;return a=a.add(t),a=a.add(e),r=r.add(mn(a,44)),[a.add(s),r.add(i)]}function jp(n,t,e,s){return NL(Ie(n,t),Ie(n,t+8),Ie(n,t+16),Ie(n,t+24),e,s)}function TL(n,t=n.length){if(t>=8){const e=Xn.add(t*2),s=Ie(n,0).add(Xn),a=Ie(n,t-8),r=mn(a,37).mul(e).add(s),i=mn(s,25).add(a).mul(e);return pi(r,i,e)}if(t>=4){const e=Xn.add(t*2),s=MC(n,0);return pi(s.shl(3).add(t),MC(n,t-4),e)}if(t>0){const e=n[0],s=n[t>>1],a=n[t-1],r=e+(s<<8),i=t+(a<<2);return Qx(Xn.mul(r).xor(Uk.mul(i))).mul(Xn)}return Xn}function CL(n,t=n.length){const e=Xn.add(t*2),s=Ie(n,0).mul(io),a=Ie(n,8),r=Ie(n,t-8).mul(e),i=Ie(n,t-16).mul(Xn);return pi(mn(s.add(a),43).add(mn(r,30)).add(i),s.add(mn(a.add(Xn),18)).add(r),e)}function $L(n,t=n.length){const e=Xn.add(t*2),s=Ie(n,0).mul(Xn),a=Ie(n,8),r=Ie(n,t-8).mul(e),i=Ie(n,t-16).mul(Xn),l=mn(s.add(a),43).add(mn(r,30)).add(i),u=pi(l,s.add(mn(a.add(Xn),18)).add(r),e),h=Ie(n,16).mul(e),f=Ie(n,24),p=l.add(Ie(n,t-32)).mul(e),m=u.add(Ie(n,t-24)).mul(e);return pi(mn(h.add(f),43).add(mn(p,30)).add(m),h.add(mn(f.add(s),18)).add(p),e)}function Wk(n,t=n.length){const e=lo.fromNumber(81,!0);if(t<=32)return t<=16?TL(n,t):CL(n,t);if(t<=64)return $L(n,t);let s=e,a=e.mul(io).add(113),r=Qx(a.mul(Xn).add(113)).mul(Xn),i=[lo.UZERO,lo.UZERO],l=[lo.UZERO,lo.UZERO];s=s.mul(Xn).add(Ie(n,0));let u=0;const h=(t-1>>6)*64,f=h+(t-1&63)-63;do s=mn(s.add(a).add(i[0]).add(Ie(n,u+8)),37).mul(io),a=mn(a.add(i[1]).add(Ie(n,u+48)),42).mul(io),s=s.xor(l[1]),a=a.add(i[0]).add(Ie(n,u+40)),r=mn(r.add(l[0]),33).mul(io),i=jp(n,u,i[1].mul(io),s.add(l[0])),l=jp(n,u+32,r.add(l[1]),a.add(Ie(n,u+16))),[r,s]=[s,r],u+=64;while(u!==h);const p=io.add(r.and(255).shl(1));return u=f,l[0]=l[0].add(t-1&63),i[0]=i[0].add(l[0]),l[0]=l[0].add(i[0]),s=mn(s.add(a).add(i[0]).add(Ie(n,u+8)),37).mul(p),a=mn(a.add(i[1]).add(Ie(n,u+48)),42).mul(p),s=s.xor(l[1].mul(9)),a=a.add(i[0].mul(9).add(Ie(n,u+40))),r=mn(r.add(l[0]),33).mul(p),i=jp(n,u,i[1].mul(p),s.add(l[0])),l=jp(n,u+32,r.add(l[1]),a.add(Ie(n,u+16))),[r,s]=[s,r],pi(pi(i[0],l[0],p).add(Qx(a).mul(Uk)).add(r),pi(i[1],l[1],p).add(s),p)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dr(n,t){return t==="string"?Wa(n):Ei([n],t)}function kL(n,t){return n instanceof Float32Array&&t==="float32"||n instanceof Int32Array&&t==="int32"||n instanceof Uint8Array&&t==="bool"}function Ei(n,t){if(t==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=Ka(n)),rt().getBool("DEBUG")&&Ik(n,t),kL(n,t))return n;if(t==null||t==="float32"||t==="complex64")return new Float32Array(n);if(t==="int32")return new Int32Array(n);if(t==="bool"){const e=new Uint8Array(n.length);for(let s=0;s<e.length;++s)Math.round(n[s])!==0&&(e[s]=1);return e}else throw new Error(`Unknown data type ${t}`)}function jn(){return rt().platform.now()}function IL(n,t){return rt().platform.fetch(n,t)}function Wa(n,t="utf-8"){return t=t||"utf-8",rt().platform.encode(n,t)}function $r(n,t="utf-8"){return t=t||"utf-8",rt().platform.decode(n,t)}function gn(n){return rt().platform.isTypedArray!=null?rt().platform.isTypedArray(n):Bk(n)}function Ka(n,t=[],e=!1){if(t==null&&(t=[]),typeof n=="boolean"||typeof n=="number"||typeof n=="string"||xi(n)||n==null||gn(n)&&e)t.push(n);else if(Array.isArray(n)||gn(n))for(let s=0;s<n.length;++s)Ka(n[s],t,e);else{let s=-1;for(const a of Object.keys(n))/^([1-9]+[0-9]*|0)$/.test(a)&&(s=Math.max(s,Number(a)));for(let a=0;a<=s;a++)Ka(n[a],t,e)}return t}const EL=Object.freeze(Object.defineProperty({__proto__:null,arraysEqual:Zt,arraysEqualWithNull:kk,assert:D,assertNonNegativeIntegerDimensions:$s,assertNonNull:Lo,assertShapesMatch:An,bytesFromStringArray:Ak,bytesPerElement:Ih,checkConversionForErrors:Ik,clamp:yi,computeStrides:Ot,convertBackendValuesAndArrayBuffer:Ok,createScalarValue:Dr,createShuffledIndices:iL,decodeString:$r,distSquared:sL,encodeString:Wa,fetch:IL,fingerPrint64:Wk,flatten:Ka,getArrayFromDType:Pe,getTypedArrayFromDType:bn,hasEncodingLoss:X1,hexToLong:Zd,indexToLoc:Mo,inferDtype:zo,inferFromImplicitShape:q1,isBoolean:Rk,isFunction:bi,isInt:wo,isNumber:vm,isPromise:xi,isScalarShape:aL,isString:Ua,isTypedArray:gn,isValidDtype:Ek,locToIndex:Sa,makeOnesTypedArray:Qm,makeZerosNestedTypedArray:K1,makeZerosTypedArray:En,nearestDivisor:wm,nearestLargerEven:Zm,now:jn,parseAxisParam:Xt,randUniform:nL,repeatedTry:Yx,rightPad:go,shuffle:j1,shuffleCombo:eL,sizeFromShape:ht,sizeToSquarishShape:xm,squeezeShape:Rr,sum:$k,swap:Nr,tanh:rL,toNestedArray:Vs,toTypedArray:Ei},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class AL{constructor(t,e){this.backendTimer=t,this.logger=e,e==null&&(this.logger=new DL)}profileKernel(t,e,s){let a;const r=()=>{a=s()};let i;const l=jn();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(r);else{r();for(const h of a)h.dataSync();i=Promise.resolve({kernelMs:jn()-l})}if(rt().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let h=0;h<a.length;h++){const f=a[h];f.data().then(p=>{RL(p,f.dtype,t)})}return{kernelName:t,outputs:a,inputs:e,timeMs:i.then(h=>h.kernelMs),extraInfo:i.then(h=>h.getExtraProfileInfo!=null?h.getExtraProfileInfo():"")}}logKernelProfile(t){const{kernelName:e,outputs:s,timeMs:a,inputs:r,extraInfo:i}=t;s.forEach(l=>{Promise.all([l.data(),a,i]).then(u=>{this.logger.logKernelProfile(e,l,u[0],u[1],r,u[2])})})}}function RL(n,t,e){if(t!=="float32")return!1;for(let s=0;s<n.length;s++){const a=n[s];if(isNaN(a)||!isFinite(a))return console.warn(`Found ${a} in the result of '${e}'`),!0}return!1}class DL{logKernelProfile(t,e,s,a,r,i){const l=typeof a=="number"?go(`${a}ms`,9):a.error,u=go(t,25),h=e.rank,f=e.size,p=go(e.shape.toString(),14);let m="";for(const y in r){const b=r[y];if(b!=null){const v=b.shape||e.shape,w=v.length;m+=`${y}: ${w}D ${w>0?v:""} `}}console.log(`%c${u}	%c${l}	%c${h}D ${p}	%c${f}	%c${m}	%c${i}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OL(n,t,e){const s={},a={};for(let u=0;u<t.length;u++)s[t[u].id]=!0;for(let u=0;u<n.length;u++){const h=n[u],f=h.inputs;for(const p in f){const m=f[p];let y=!1;for(let b=0;b<t.length;b++)if(s[m.id]){h.outputs.forEach(v=>s[v.id]=!0),y=!0,a[h.id]=!0;break}if(y)break}}const r={};r[e.id]=!0;const i={};for(let u=n.length-1;u>=0;u--){const h=n[u],f=h.inputs;for(let p=0;p<h.outputs.length;p++)if(r[h.outputs[p].id]){for(const m in f)r[f[m].id]=!0,i[h.id]=!0;break}}const l=[];for(let u=0;u<n.length;u++){const h=n[u];if(a[h.id]&&i[h.id]){const f={};for(const m in h.inputs){const y=h.inputs[m];s[y.id]&&(f[m]=y)}const p=Object.assign({},h);p.inputs=f,p.outputs=h.outputs,l.push(p)}}return l}function _L(n,t,e,s){for(let a=t.length-1;a>=0;a--){const r=t[a],i=[];if(r.outputs.forEach(u=>{const h=n[u.id];h!=null?i.push(h):i.push(null)}),r.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${r.kernelName}.`);const l=r.gradient(i);for(const u in r.inputs){if(!(u in l))throw new Error(`Cannot backprop through input ${u}. Available gradients found: ${Object.keys(l)}.`);const h=e(()=>l[u]());if(h.dtype!=="float32")throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input ${u} must have 'float32' dtype, but has '${h.dtype}'`);const f=r.inputs[u];if(!Zt(h.shape,f.shape))throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input '${u}' has shape '${h.shape}', which does not match the shape of the input '${f.shape}'`);if(n[f.id]==null)n[f.id]=h;else{const p=n[f.id];n[f.id]=s(p,h),p.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BC=20,gh=3,Rx=7;function FL(n,t,e,s){const a=Ot(t),r=LL(n,t,e,a),i=t.length,l=lm(n,t,e,a,r),u=["Tensor"];return s&&(u.push(`  dtype: ${e}`),u.push(`  rank: ${i}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(l.map(h=>"    "+h).join(`
`)),u.join(`
`)}function LL(n,t,e,s){const a=ht(t),r=s[s.length-1],i=new Array(r).fill(0),l=t.length,u=e==="complex64"?Sh(n):n;if(l>1)for(let h=0;h<a/r;h++){const f=h*r;for(let p=0;p<r;p++)i[p]=Math.max(i[p],wh(u[f+p],0,e).length)}return i}function wh(n,t,e){let s;return Array.isArray(n)?s=`${parseFloat(n[0].toFixed(Rx))} + ${parseFloat(n[1].toFixed(Rx))}j`:Ua(n)?s=`'${n}'`:e==="bool"?s=Hk(n):s=parseFloat(n.toFixed(Rx)).toString(),go(s,t)}function Hk(n){return n===0?"false":"true"}function lm(n,t,e,s,a,r=!0){const i=e==="complex64"?2:1,l=t[0],u=t.length;if(u===0){if(e==="complex64"){const v=Sh(n);return[wh(v[0],0,e)]}return e==="bool"?[Hk(n[0])]:[n[0].toString()]}if(u===1){if(l>BC){const w=gh*i;let S=Array.from(n.slice(0,w)),T=Array.from(n.slice((l-gh)*i,l*i));return e==="complex64"&&(S=Sh(S),T=Sh(T)),["["+S.map(($,C)=>wh($,a[C],e)).join(", ")+", ..., "+T.map(($,C)=>wh($,a[l-gh+C],e)).join(", ")+"]"]}return["["+(e==="complex64"?Sh(n):Array.from(n)).map((w,S)=>wh(w,a[S],e)).join(", ")+"]"]}const h=t.slice(1),f=s.slice(1),p=s[0]*i,m=[];if(l>BC){for(let v=0;v<gh;v++){const w=v*p,S=w+p;m.push(...lm(n.slice(w,S),h,e,f,a,!1))}m.push("...");for(let v=l-gh;v<l;v++){const w=v*p,S=w+p;m.push(...lm(n.slice(w,S),h,e,f,a,v===l-1))}}else for(let v=0;v<l;v++){const w=v*p,S=w+p;m.push(...lm(n.slice(w,S),h,e,f,a,v===l-1))}const y=u===2?",":"";m[0]="["+(l>0?m[0]+y:"");for(let v=1;v<m.length-1;v++)m[v]=" "+m[v]+y;let b=`,
`;for(let v=2;v<u;v++)b+=`
`;return m[m.length-1]=" "+m[m.length-1]+"]"+(r?"":b),m}function Sh(n){const t=[];for(let e=0;e<n.length;e+=2)t.push([n[e],n[e+1]]);return t}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class en{constructor(t,e,s){if(this.dtype=e,this.shape=t.slice(),this.size=ht(t),s!=null){const a=s.length;D(a===this.size,()=>`Length of values '${a}' does not match the size inferred by the shape '${this.size}'.`)}if(e==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||Pe(e,this.size),this.strides=Ot(t)}set(t,...e){e.length===0&&(e=[0]),D(e.length===this.rank,()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`);const s=this.locToIndex(e);this.values[s]=t}get(...t){t.length===0&&(t=[0]);let e=0;for(const a of t){if(a<0||a>=this.shape[e]){const r=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(r)}e++}let s=t[t.length-1];for(let a=0;a<t.length-1;++a)s+=this.strides[a]*t[a];return this.values[s]}locToIndex(t){if(this.rank===0)return 0;if(this.rank===1)return t[0];let e=t[t.length-1];for(let s=0;s<t.length-1;++s)e+=this.strides[s]*t[s];return e}indexToLoc(t){if(this.rank===0)return[];if(this.rank===1)return[t];const e=new Array(this.shape.length);for(let s=0;s<e.length-1;++s)e[s]=Math.floor(t/this.strides[s]),t-=e[s]*this.strides[s];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return xa().makeTensor(this.values,this.shape,this.dtype)}}let xa=null,Ml=null;function zL(n){xa=n}function ML(n){Ml=n}class fe{constructor(t,e,s,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=ht(t),this.strides=Ot(t),this.dataId=s,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return Ml.buffer(this.shape,this.dtype,t)}bufferSync(){return Ml.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return Vs(this.shape,t,this.dtype==="complex64")}arraySync(){return Vs(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const t=xa().read(this.dataId);if(this.dtype==="string"){const e=await t;try{return e.map(s=>$r(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataToGPU(t){return this.throwIfDisposed(),xa().readToGPU(this.dataId,t)}dataSync(){this.throwIfDisposed();const t=xa().readSync(this.dataId);if(this.dtype==="string")try{return t.map(e=>$r(e))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await xa().read(this.dataId);return this.dtype==="string"?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(this.kerasMask&&this.kerasMask.dispose(),xa().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return Ml.print(this,t)}clone(){return this.throwIfDisposed(),Ml.clone(this)}toString(t=!1){const e=this.dataSync();return FL(e,this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),Ml.cast(this,t)}variable(t=!0,e,s){return this.throwIfDisposed(),xa().makeVariable(this,t,e,s)}}Object.defineProperty(fe,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function dt(){return Z1("Tensor",()=>fe)}dt();class _h extends fe{constructor(t,e,s,a){super(t.shape,t.dtype,t.dataId,a),this.trainable=e,this.name=s}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!Zt(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);xa().disposeTensor(this),this.dataId=t.dataId,xa().incRef(this,null)}dispose(){xa().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(_h,Symbol.hasInstance,{value:n=>n instanceof fe&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Jx;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(Jx||(Jx={}));var t1;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(t1||(t1={}));var e1;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(e1||(e1={}));var n1;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(n1||(n1={}));var s1;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(s1||(s1={}));const BL={float32:n1,int32:t1,bool:e1,complex64:s1};function rs(n,t){if(n==="string"||t==="string"){if(n==="string"&&t==="string")return"string";throw new Error(`Can not upcast ${n} with ${t}`)}return BL[n][t]}function ry(n){return rs(n,"int32")}function jk(n){return n!=null&&typeof n=="object"&&"texture"in n&&n.texture instanceof WebGLTexture}function qk(n){return typeof GPUBuffer<"u"&&n!=null&&typeof n=="object"&&"buffer"in n&&n.buffer instanceof GPUBuffer}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Me(n,t){if(n.dtype===t.dtype)return[n,t];const e=rs(n.dtype,t.dtype);return[n.cast(e),t.cast(e)]}function Xk(n,t){D(n.dtype===t.dtype,()=>`The dtypes of the first(${n.dtype}) and second(${t.dtype}) input must match`)}function VL(n,t){return t.some(e=>e.id===n.id)}function J1(n){const t=[];return Kk(n,t,new Set),t}function Kk(n,t,e){if(n==null)return;if(n instanceof fe){t.push(n);return}if(!PL(n))return;const s=n;for(const a in s){const r=s[a];e.has(r)||(e.add(r),Kk(r,t,e))}}function PL(n){return Array.isArray(n)||typeof n=="object"}const UL=Object.freeze(Object.defineProperty({__proto__:null,assertTypesMatch:Xk,getTensorsInContainer:J1,isTensorInList:VL,makeTypesMatch:Me},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dx(n){return n.kernelName!=null}class VC{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(t=>t.name)))}}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class jl{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new VC}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const s=t[e];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry))if(t in this.registryFactory){const{asyncInit:e}=this.initializeBackend(t);if(e)return null}else return null;return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,s=1){return t in this.registryFactory?(Ls(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:s},!0)}async setBackend(t){if(this.registryFactory[t]==null)throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,this.registry[t]==null){this.backendInstance=null;const{success:e,asyncInit:s}=this.initializeBackend(t);if(!(s?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new AL(this.backendInstance),!0}setupRegisteredKernels(){Cm(this.backendName).forEach(e=>{e.setupFunc!=null&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(t){Cm(t).forEach(s=>{s.disposeFunc!=null&&s.disposeFunc(this.registry[t])})}initializeBackend(t){const e=this.registryFactory[t];if(e==null)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const s=e.factory();if(s&&!(s instanceof Ym)&&typeof s.then=="function"){const a=++this.pendingBackendInitId,r=s.then(i=>a<this.pendingBackendInitId?!1:(this.registry[t]=i,this.pendingBackendInit=null,!0)).catch(i=>(a<this.pendingBackendInitId||(this.pendingBackendInit=null,Ls(`Initialization of backend ${t} failed`),Ls(i.stack||i.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}else return this.registry[t]=s,{success:!0,asyncInit:!1}}catch(s){return Ls(`Initialization of backend ${t} failed`),Ls(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority)}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const s=t[e],{success:a,asyncInit:r}=this.initializeBackend(s);if(r||a)return{name:s,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const s=this.state.tensorInfo.get(e),a=s.backend,r=this.readSync(e),i=a.refCount(e);a.disposeData(e,!0),s.backend=t,t.move(e,r,s.shape,s.dtype,i),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let s=null;if(e==null){if(typeof t!="function")throw new Error("Please provide a function to tidy()");e=t}else{if(typeof t!="string"&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof e!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=t}let a;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(a),()=>(a=e(),a instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),a))}scopedRun(t,e,s){t();try{const a=s();return e(),a}catch(a){throw e(),a}}nextTensorId(){return jl.nextTensorId++}nextVariableId(){return jl.nextVariableId++}clone(t){const e=P.runKernel(Cu,{x:t}),s={x:t},a=i=>({x:()=>{const l="float32",u={x:i},h={dtype:l};return P.runKernel(du,u,h)}}),r=[];return this.addTapeNode(this.state.activeScope.name,s,[e],a,r,{}),e}runKernel(t,e,s){if(this.backendName==null&&this.backend,!(Oh(t,this.backendName)!=null))throw new Error(`Kernel '${t}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:t,inputs:e,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,s){const a=this.backend.numDataIds();let r=0;s.forEach(u=>{r+=u.dtype==="complex64"?3:1});const i=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],l=a-e-r-i;if(l>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${l} data ids) after running '${t}'`)}runKernelFunc(t){let e,s=[];const a=this.isTapeOn(),r=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let l;this.backendName==null&&this.backend;let u;const h=Dx(t)?t.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Dx(t)){const{kernelName:b,inputs:v,attrs:w}=t;this.backendName==null&&this.backend;const S=Oh(b,this.backendName);D(S!=null,()=>`Cannot find registered kernel '${b}' for backend '${this.backendName}'`),l=()=>{const T=this.backend.numDataIds();u=S.kernelFunc({inputs:v,attrs:w,backend:this.backend});const $=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(b,T,$);const C=$.map(I=>I.rank!=null?I:this.makeTensorFromTensorInfo(I));if(a){const I=this.getTensorsForGradient(b,v,C);s=this.saveTensorsForBackwardMode(I)}return C}}else{const{forwardFunc:b}=t,v=w=>{a&&(s=w.map(S=>this.keep(this.clone(S))))};l=()=>{const w=this.backend.numDataIds();u=this.tidy(()=>b(this.backend,v));const S=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(h,w,S),S}}const{inputs:f,attrs:p}=t,m=Dx(t)?null:t.backwardsFunc;let y;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?e=l():(y=this.profiler.profileKernel(h,f,()=>l()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(y),e=y.outputs)}),a&&this.addTapeNode(h,f,e,m,s,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:h,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(f).map(b=>f[b]!=null?f[b].shape:null),outputShapes:e.map(b=>b.shape),kernelTimeMs:y.timeMs,extraInfo:y.extraInfo}),Array.isArray(u)?e:e[0]}saveTensorsForBackwardMode(t){return t.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(t,e,s){const a=Zx(t);if(a!=null){const r=a.inputsToSave||[],i=a.outputsToSave||[];let l;a.saveAllInputs?(D(Array.isArray(e),()=>"saveAllInputs is true, expected inputs to be an array."),l=Object.keys(e).map(h=>e[h])):l=r.map(h=>e[h]);const u=s.filter((h,f)=>i[f]);return l.concat(u)}return[]}makeTensor(t,e,s,a){if(t==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",a=a||this.backend;let r=t;s==="string"&&Ua(t[0])&&(r=t.map(u=>Wa(u)));const i=a.write(r,e,s),l=new fe(e,s,i,this.nextTensorId());if(this.trackTensor(l,a),s==="string"){const u=this.state.tensorInfo.get(i),h=Ak(r);this.state.numBytes+=h-u.bytes,u.bytes=h}return l}makeTensorFromDataId(t,e,s,a){s=s||"float32";const r={dataId:t,shape:e,dtype:s};return this.makeTensorFromTensorInfo(r,a)}makeTensorFromTensorInfo(t,e){const{dataId:s,shape:a,dtype:r}=t,i=new fe(a,r,s,this.nextTensorId());return this.trackTensor(i,e),i}makeVariable(t,e=!0,s,a){s=s||this.nextVariableId().toString(),a!=null&&a!==t.dtype&&(t=t.cast(a));const r=new _h(t,e,s,this.nextTensorId());if(this.state.registeredVariables[r.name]!=null)throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(t,e){this.state.numTensors++,t.dtype==="string"&&this.state.numStringTensors++;let s=0;t.dtype!=="complex64"&&t.dtype!=="string"&&(s=t.size*Ih(t.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(t.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:s})),t instanceof _h||this.track(t)}incRef(t,e){this.trackTensor(t,e),this.backend.incRef(t.dataId)}removeDataId(t,e){this.state.tensorInfo.has(t)&&this.state.tensorInfo.get(t).backend===e&&(this.state.tensorInfo.delete(t),this.state.numDataBuffers--)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;const e=this.state.tensorInfo.get(t.dataId);if(this.state.numTensors--,t.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=e.bytes),t.dtype!=="complex64"&&t.dtype!=="string"){const s=t.size*Ih(t.dtype);this.state.numBytes-=s}e.backend.disposeData(t.dataId)&&this.removeDataId(t.dataId,e.backend)}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),this.state.registeredVariables[t.name]!=null&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,t.reasons==null&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(a=>a.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const a of this.state.activeProfile.kernels)a.kernelTimeMs=await a.kernelTimeMs,a.extraInfo=await a.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(t,e,s,a,r,i){const l={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:s,saved:r},u=Zx(t);u!=null&&(a=u.gradFunc),a!=null&&(l.gradient=h=>(h=h.map((f,p)=>{if(f==null){const m=s[p],y=En(m.size,m.dtype);return this.makeTensor(y,m.shape,m.dtype)}return f}),a(h.length>1?h:h[0],r,i))),this.state.activeTape.push(l)}keep(t){return t.kept=!0,t}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=J1(t),s=new Set(e.map(r=>r.id));for(let r=0;r<this.state.activeScope.track.length;r++){const i=this.state.activeScope.track[r];!i.kept&&!s.has(i.id)&&i.dispose()}const a=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach(r=>{!r.kept&&r.scopeId===a.id&&this.track(r)})}gradients(t,e,s,a=!1){if(D(e.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",t));D(r instanceof fe,()=>"The result y returned by f() must be a tensor.");const i=OL(this.state.activeTape,e,r);if(!a&&i.length===0&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const l={};l[r.id]=s??GL(r.shape),_L(l,i,h=>this.tidy(h),WL);const u=e.map(h=>l[h.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(h=>{for(const f of h.saved)f.dispose()}),this.state.activeTape=null),{value:r,grads:u}})}customGrad(t){return D(bi(t),()=>"The f passed in customGrad(f) must be a function."),(...e)=>{D(e.every(l=>l instanceof fe),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const a={};e.forEach((l,u)=>{a[u]=l});const r=(l,u)=>(s=t(...e,u),D(s.value instanceof fe,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),D(bi(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),i=(l,u)=>{const h=s.gradFunc(l,u),f=Array.isArray(h)?h:[h];D(f.length===e.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),D(f.every(m=>m instanceof fe),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const p={};return f.forEach((m,y)=>{p[y]=()=>m}),p};return this.runKernelFunc({forwardFunc:r,backwardsFunc:i,inputs:a})}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}readToGPU(t,e){return this.state.tensorInfo.get(t).backend.readToGPU(t,e)}async time(t){const e=jn(),s=await this.backend.time(t);return s.wallMs=jn()-e,s}track(t){return this.state.activeScope!=null&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new VC;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}jl.nextTensorId=0;jl.nextVariableId=0;function GL(n){const t=Qm(ht(n),"float32");return P.makeTensor(t,n,"float32")}function Yk(){const n=Fk();if(n._tfengine==null){const t=new _k(n);n._tfengine=new jl(t)}return cL(n._tfengine.ENV),zL(()=>n._tfengine),n._tfengine}const P=Yk();function WL(n,t){const e={a:n,b:t};return P.runKernel(Bo,e)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HL(){return typeof navigator<"u"&&navigator!=null}let a1;function jL(n){a1=n}function tv(n){if(a1!==void 0)return a1;if(n||HL()){if(n||(n=navigator),n.product==="ReactNative")return!0;const t=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!t){const e=n;return e.userAgentData&&e.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function ev(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}const qL=Object.freeze(Object.defineProperty({__proto__:null,isBrowser:ev,isMobile:tv,mockIsMobile:jL},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const is=rt();is.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});is.registerFlag("IS_BROWSER",()=>ev());is.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");is.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));is.registerFlag("IS_SAFARI",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Safari/.test(navigator.userAgent)&&/Apple/.test(navigator.vendor));is.registerFlag("PROD",()=>!1);is.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>is.getBool("DEBUG"));is.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);is.registerFlag("IS_TEST",()=>!1);is.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>is.getBool("DEBUG"));is.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);is.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);is.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ya(n,t){let e=n;if(gn(n))return t==="string"?[]:[n.length];if(jk(n)){const a=n.channels||"RGBA";return[n.height,n.width*a.length]}else if(qk(n))return[n.buffer.size/(t==null?4:Ih(t))];if(!Array.isArray(n))return[];const s=[];for(;Array.isArray(e)||gn(e)&&t!=="string";)s.push(e.length),e=e[0];return Array.isArray(n)&&rt().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Zk(n,s,[]),s}function Zk(n,t,e){if(e=e||[],!Array.isArray(n)&&!gn(n)){D(t.length===0,()=>`Element arr[${e.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);return}D(t.length>0,()=>`Element arr[${e.join("][")}] should be a primitive, but is an array of ${n.length} elements`),D(n.length===t[0],()=>`Element arr[${e.join("][")}] should have ${t[0]} elements, but has ${n.length} elements`);const s=t.slice(1);for(let a=0;a<n.length;++a)Zk(n[a],s,e.concat(a))}function PC(n,t,e,s){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==t||n==="numeric"&&t==="string")throw new Error(`Argument '${e}' passed to '${s}' must be ${n} tensor, but got ${t} tensor`)}}function O(n,t,e,s="numeric"){if(n instanceof dt())return PC(s,n.dtype,t,e),n;let a=zo(n);if(a!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(a=s),PC(s,a,t,e),n==null||!gn(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const u=n==null?"null":n.constructor.name;throw new Error(`Argument '${t}' passed to '${e}' must be a Tensor or TensorLike, but got '${u}'`)}const r=Ya(n,a);!gn(n)&&!Array.isArray(n)&&(n=[n]);const l=a!=="string"?Ei(n,a):Ka(n,[],!0);return P.makeTensor(l,r,a)}function Fh(n,t,e,s="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${t} passed to ${e} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((r,i)=>O(r,`${t}[${i}]`,e,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nv="__op";function U(n){const t=Object.keys(n);if(t.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let e=t[0];const s=n[e];e.endsWith("_")&&(e=e.substring(0,e.length-1)),e=e+nv;const a=(...r)=>{P.startScope(e);try{const i=s(...r);return xi(i)&&console.error("Cannot return a Promise inside of tidy."),P.endScope(i),i}catch(i){throw P.endScope(null),i}};return Object.defineProperty(a,"name",{value:e,configurable:!0}),a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XL(n,t){const e=O(n,"real","complex"),s=O(t,"imag","complex");An(e.shape,s.shape,`real and imag shapes, ${e.shape} and ${s.shape}, must match in call to tf.complex().`);const a={real:e,imag:s};return P.runKernel(rg,a)}const kr=U({complex_:XL});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ai(n,t,e,s){if(s==null)s=zo(n);else if(s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(qk(n)||jk(n)){if(s!=="float32"&&s!=="int32")throw new Error(`Creating tensor from GPU data only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return P.backend.createTensorFromGPUData(n,t||e,s)}if(!gn(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(t!=null){$s(t);const a=ht(t),r=ht(e);D(a===r,()=>`Based on the provided shape, [${t}], the tensor should have ${a} values but has ${r}`);for(let i=0;i<e.length;++i){const l=e[i],u=i===e.length-1?l!==ht(t.slice(i)):!0;D(e[i]===t[i]||!u,()=>`Error creating a new Tensor. Inferred shape (${e}) does not match the provided shape (${t}). `)}}return!gn(n)&&!Array.isArray(n)&&(n=[n]),t=t||e,n=s!=="string"?Ei(n,s):Ka(n,[],!0),P.makeTensor(n,t,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oa(n,t,e){const s=Ya(n,e);return Ai(n,t,s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const So={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};class Ea{static join(t){return new Ea(t).slice()}constructor(t){if(this.shards=[],this.previousShardIndex=0,t==null||(t instanceof Array||(t=[t]),t=t.map(s=>gn(s)?s.buffer:s),t.length===0))return;this.bufferUniformSize=t[0].byteLength;let e=0;for(let s=0;s<t.length;s++){const a=t[s];s!==t.length-1&&a.byteLength!==this.bufferUniformSize&&(this.bufferUniformSize=void 0);const r=e+a.byteLength;this.shards.push({buffer:a,start:e,end:r}),e=r}this.shards.length===0&&(this.byteLength=0),this.byteLength=this.shards[this.shards.length-1].end}slice(t=0,e=this.byteLength){if(this.shards.length===0)return new ArrayBuffer(0);if(t=isNaN(Number(t))?0:t,e=isNaN(Number(e))?0:e,t=Math.max(0,t),e=Math.min(this.byteLength,e),e<=t)return new ArrayBuffer(0);const s=this.findShardForByte(t);if(s===-1)throw new Error(`Could not find start shard for byte ${t}`);const a=e-t,r=new ArrayBuffer(a),i=new Uint8Array(r);let l=0;for(let u=s;u<this.shards.length;u++){const h=this.shards[u],p=t+l-h.start,m=l,b=Math.min(e,h.end)-h.start,v=new Uint8Array(h.buffer,p,b-p);if(i.set(v,m),l+=v.length,e<h.end)break}return r}findShardForByte(t){if(this.shards.length===0||t<0||t>=this.byteLength)return-1;if(this.bufferUniformSize!=null)return this.previousShardIndex=Math.floor(t/this.bufferUniformSize),this.previousShardIndex;function e(a){return t<a.start?-1:t>=a.end?1:0}if(e(this.shards[this.previousShardIndex])===0)return this.previousShardIndex;const s=KL(this.shards,e);return s===-1?-1:(this.previousShardIndex=s,this.previousShardIndex)}}function KL(n,t){let e=0,s=n.length;for(;e<=s;){const a=Math.floor((s-e)/2)+e,r=t(n[a]);if(r===0)return a;r<0?s=a:e=a+1}return-1}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YL(){rt().set("PROD",!0)}function ZL(){rt().set("DEBUG",!0)}function QL(){rt().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function JL(n){rt().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(n+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function tz(){P.disposeVariables()}function ba(){return P}function r1(){return P.memory()}function ez(n){return P.profile(n)}function at(n,t){return P.tidy(n,t)}function qt(n){J1(n).forEach(e=>e.dispose())}function rn(n){return P.keep(n)}function nz(n){return P.time(n)}function sz(n){return P.setBackend(n)}function az(){return P.ready()}function Qk(){return P.backendName}function rz(n){P.removeBackend(n)}function iz(n){return P.findBackend(n)}function oz(n){return P.findBackendFactory(n)}function sv(n,t,e=1){return P.registerBackend(n,t,e)}function av(){return P.backend}function lz(n,t){rt().setPlatform(n,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vi=4;async function i1(n,t){const e=[],s=[],a=Array.isArray(n)?n.map(i=>i.name):Object.keys(n);for(let i=0;i<a.length;++i){const l=a[i],u=Array.isArray(n)?n[i].tensor:n[l];if(u.dtype!=="float32"&&u.dtype!=="int32"&&u.dtype!=="bool"&&u.dtype!=="string"&&u.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${l}': ${u.dtype}`);const h={name:l,shape:u.shape,dtype:u.dtype};if(u.dtype==="string"){const f=new Promise(async p=>{const m=await u.bytes(),y=m.reduce((w,S)=>w+S.length,0)+vi*m.length,b=new Uint8Array(y);let v=0;for(let w=0;w<m.length;w++){const S=m[w],T=new Uint8Array(new Uint32Array([S.length]).buffer);b.set(T,v),v+=vi,b.set(S,v),v+=S.length}p(b)});s.push(f)}else s.push(u.data());t!=null&&(h.group=t),e.push(h)}const r=await Promise.all(s);return{data:hz(r),specs:e}}function Jk(n,t){const e=new Ea(n),s={};let a=0;for(const r of t){const i=uz(r,(l,u)=>e.slice(a+l,a+u));s[r.name]=tI(r,e.slice(a,a+i)),a+=i}return s}function uz(n,t){const e=ht(n.shape);let s;if("quantization"in n){const a=n.quantization;s=So[a.dtype]}else if(n.dtype==="string"){let a=0;for(let r=0;r<e;r++)a+=vi+new Uint32Array(t(a,a+vi))[0];return a}else s=So[n.dtype];return e*s}async function cz(n,t){const e=ht(n.shape);let s;if("quantization"in n){const a=n.quantization;s=So[a.dtype]}else if(n.dtype==="string"){let a=0;for(let r=0;r<e;r++)a+=vi+new Uint32Array(await t(a,a+vi))[0];return a}else s=So[n.dtype];return e*s}function tI(n,t){const e=n.name,s=n.dtype,a=n.shape,r=ht(a);let i,l=0;if("quantization"in n){const u=n.quantization;if(u.dtype==="uint8"||u.dtype==="uint16"){if(!("min"in u&&"scale"in u))throw new Error(`Weight ${n.name} with quantization ${u.dtype} doesn't have corresponding metadata min and scale.`)}else if(u.dtype==="float16"){if(s!=="float32")throw new Error(`Weight ${n.name} is quantized with ${u.dtype} which only supports weights of type float32 not ${s}.`)}else throw new Error(`Weight ${n.name} has unknown quantization dtype ${u.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);const h=So[u.dtype],f=u.dtype==="uint8"?new Uint8Array(t):new Uint16Array(t);if(s==="float32")if(u.dtype==="uint8"||u.dtype==="uint16"){i=new Float32Array(f.length);for(let p=0;p<f.length;p++){const m=f[p];i[p]=m*u.scale+u.min}}else if(u.dtype==="float16")i=yz()(f);else throw new Error(`Unsupported quantization type ${u.dtype} for weight type float32.`);else if(s==="int32"){if(u.dtype!=="uint8"&&u.dtype!=="uint16")throw new Error(`Unsupported quantization type ${u.dtype} for weight type int32.`);i=new Int32Array(f.length);for(let p=0;p<f.length;p++){const m=f[p];i[p]=Math.round(m*u.scale+u.min)}}else throw new Error(`Unsupported dtype in weight '${e}': ${s}`);l+=r*h}else if(s==="string"){const u=ht(n.shape);i=[];for(let h=0;h<u;h++){const f=new Uint32Array(t.slice(l,l+vi))[0];l+=vi;const p=new Uint8Array(t.slice(l,l+f));i.push(p),l+=f}}else{const u=So[s];if(s==="float32")i=new Float32Array(t);else if(s==="int32")i=new Int32Array(t);else if(s==="bool")i=new Uint8Array(t);else if(s==="complex64"){i=new Float32Array(t);const h=new Float32Array(i.length/2),f=new Float32Array(i.length/2);for(let b=0;b<h.length;b++)h[b]=i[b*2],f[b]=i[b*2+1];const p=oa(h,a,"float32"),m=oa(f,a,"float32"),y=kr(p,m);return p.dispose(),m.dispose(),y}else throw new Error(`Unsupported dtype in weight '${e}': ${s}`);l+=r*u}return oa(i,a,s)}async function UC(n,t,e){let s=new Uint8Array(t);for(;s.byteLength<e;){const{done:a,value:r}=await n.read();if(a&&r==null){const l=e-s.byteLength;throw new Error(`Reader is done but ${l} bytes are still expected`)}const i=new Uint8Array(s.length+r.byteLength);i.set(s,0),i.set(new Uint8Array(r),s.length),s=i}return s.buffer}async function eI(n,t){const e={},s=n.getReader();let a=new ArrayBuffer(0);for(const r of t){const i=await cz(r,async(h,f)=>(a=await UC(s,a,f),a.slice(h,f)));a=await UC(s,a,i);const l=a.slice(0,i);a=a.slice(i);const u=tI(r,l);if(e[r.name]=u,Qk()==="webgpu"){const h=av();"uploadToGPU"in h&&ht(u.shape)>=rt().get("WEBGPU_CPU_HANDOFF_SIZE_THRESHOLD")&&h.uploadToGPU(u.dataId)}}return e}function hz(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let t=0;const e=[];n.forEach(r=>{if(t+=r.byteLength,e.push(r.byteLength===r.buffer.byteLength?r:new r.constructor(r)),!(r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${r.constructor.name}`)});const s=new Uint8Array(t);let a=0;return e.forEach(r=>{s.set(new Uint8Array(r.buffer),a),a+=r.byteLength}),s.buffer}const rv=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function GC(n){return rv?Buffer.byteLength(n,"utf8"):new Blob([n]).size}function dz(n){if(rv)return Buffer.from(n).toString("base64");const t=new Uint8Array(n);let e="";for(let s=0,a=t.length;s<a;s++)e+=String.fromCharCode(t[s]);return btoa(e)}function fz(n){if(rv){const s=Buffer.from(n,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const t=atob(n),e=new Uint8Array(t.length);for(let s=0;s<t.length;++s)e.set([t.charCodeAt(s)],s);return e.buffer}function nI(n){return Ea.join(n)}function WC(n){const t="/";for(n=n.trim();n.endsWith(t);)n=n.slice(0,n.length-1);const e=n.split(t);return e[e.length-1]}function sI(n,t){const e={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:t};return n.signature!=null&&(e.signature=n.signature),n.userDefinedMetadata!=null&&(e.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(e.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(e.initializerSignature=n.initializerSignature),n.trainingConfig!=null&&(e.trainingConfig=n.trainingConfig),e}function iv(n,t,e){const s={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(n.trainingConfig!=null&&(s.trainingConfig=n.trainingConfig),n.weightsManifest!=null){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!e)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=t,s.weightData=e}return n.signature!=null&&(s.signature=n.signature),n.userDefinedMetadata!=null&&(s.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(s.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(s.initializerSignature=n.initializerSignature),s}async function ov(n,t){let e,s;return n.weightsManifest!=null&&([e,s]=await t(n.weightsManifest)),iv(n,e,s)}function Qd(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:GC(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:GC(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:new Ea(n.weightData).byteLength}}function $m(n){const t=[];for(const e of n)t.push(...e.weights);return t}function pz(){const n=e=>{let s=e<<13,a=0;for(;(s&8388608)===0;)a-=8388608,s<<=1;return s&=-8388609,a+=947912704,s|a},t=new Uint32Array(2048);t[0]=0;for(let e=1;e<1024;e++)t[e]=n(e);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}function mz(){const n=new Uint32Array(64);n[0]=0,n[31]=1199570944,n[32]=2147483648,n[63]=3347054592;for(let t=1;t<31;t++)n[t]=t<<23;for(let t=33;t<63;t++)n[t]=2147483648+(t-32<<23);return n}function gz(){const n=new Uint32Array(64);for(let t=0;t<64;t++)n[t]=1024;return n[0]=n[32]=0,n}function yz(){const n=pz(),t=mz(),e=gz();return s=>{const a=new ArrayBuffer(4*s.length),r=new Uint32Array(a);for(let i=0;i<s.length;i++){const l=s[i],u=n[e[l>>10]+(l&1023)]+t[l>>10];r[i]=u}return new Float32Array(a)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fe{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Fe.instance==null&&(Fe.instance=new Fe),Fe.instance}static registerSaveRouter(t){Fe.getInstance().saveRouters.push(t)}static registerLoadRouter(t){Fe.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return Fe.getHandlers(t,"save")}static getLoadHandlers(t,e){return Fe.getHandlers(t,"load",e)}static getHandlers(t,e,s){const a=[];return(e==="load"?Fe.getInstance().loadRouters:Fe.getInstance().saveRouters).forEach(i=>{const l=i(t,s);l!==null&&a.push(l)}),a}}const bz=n=>Fe.registerSaveRouter(n),xz=n=>Fe.registerLoadRouter(n),aI=n=>Fe.getSaveHandlers(n),vz=(n,t)=>Fe.getLoadHandlers(n,t);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o1="tensorflowjs",l1=1,po="models_store",hi="model_info_store";function rI(){if(!rt().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,t=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(t==null)throw new Error("The current browser does not appear to support IndexedDB.");return t}function u1(n){const t=n.result;t.createObjectStore(po,{keyPath:"modelPath"}),t.createObjectStore(hi,{keyPath:"modelPath"})}class No{constructor(t){if(this.indexedDB=rI(),t==null||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise((s,a)=>{const r=this.indexedDB.open(o1,l1);r.onupgradeneeded=()=>u1(r),r.onsuccess=()=>{const i=r.result;if(e==null){const l=i.transaction(po,"readonly"),h=l.objectStore(po).get(this.modelPath);h.onsuccess=()=>{if(h.result==null)return i.close(),a(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(h.result.modelArtifacts)},h.onerror=f=>(i.close(),a(h.error)),l.oncomplete=()=>i.close()}else{e.weightData=Ea.join(e.weightData);const l=Qd(e),u=i.transaction(hi,"readwrite");let h=u.objectStore(hi),f;try{f=h.put({modelPath:this.modelPath,modelArtifactsInfo:l})}catch(m){return a(m)}let p;f.onsuccess=()=>{p=i.transaction(po,"readwrite");const m=p.objectStore(po);let y;try{y=m.put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:l})}catch(b){return a(b)}y.onsuccess=()=>s({modelArtifactsInfo:l}),y.onerror=b=>{h=u.objectStore(hi);const v=h.delete(this.modelPath);v.onsuccess=()=>(i.close(),a(y.error)),v.onerror=w=>(i.close(),a(y.error))}},f.onerror=m=>(i.close(),a(f.error)),u.oncomplete=()=>{p==null?i.close():p.oncomplete=()=>i.close()}}},r.onerror=i=>a(r.error)})}}No.URL_SCHEME="indexeddb://";const iI=n=>rt().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(No.URL_SCHEME)?wz(n.slice(No.URL_SCHEME.length)):null;Fe.registerSaveRouter(iI);Fe.registerLoadRouter(iI);function wz(n){return new No(n)}function Sz(n){return n.startsWith(No.URL_SCHEME)?n.slice(No.URL_SCHEME.length):n}class Nz{constructor(){this.indexedDB=rI()}async listModels(){return new Promise((t,e)=>{const s=this.indexedDB.open(o1,l1);s.onupgradeneeded=()=>u1(s),s.onsuccess=()=>{const a=s.result,r=a.transaction(hi,"readonly"),l=r.objectStore(hi).getAll();l.onsuccess=()=>{const u={};for(const h of l.result)u[h.modelPath]=h.modelArtifactsInfo;t(u)},l.onerror=u=>(a.close(),e(l.error)),r.oncomplete=()=>a.close()},s.onerror=a=>e(s.error)})}async removeModel(t){return t=Sz(t),new Promise((e,s)=>{const a=this.indexedDB.open(o1,l1);a.onupgradeneeded=()=>u1(a),a.onsuccess=()=>{const r=a.result,i=r.transaction(hi,"readwrite"),l=i.objectStore(hi),u=l.get(t);let h;u.onsuccess=()=>{if(u.result==null)return r.close(),s(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const f=l.delete(t),p=()=>{h=r.transaction(po,"readwrite");const y=h.objectStore(po).delete(t);y.onsuccess=()=>e(u.result.modelArtifactsInfo),y.onerror=b=>s(u.error)};f.onsuccess=p,f.onerror=m=>(p(),r.close(),s(u.error))}},u.onerror=f=>(r.close(),s(u.error)),i.oncomplete=()=>{h==null?r.close():h.oncomplete=()=>r.close()}},a.onerror=r=>s(a.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tr="/",Bl="tensorflowjs_models",oI="info",Tz="model_topology",Cz="weight_specs",$z="weight_data",kz="model_metadata";function lI(n){return{info:[Bl,n,oI].join(Tr),topology:[Bl,n,Tz].join(Tr),weightSpecs:[Bl,n,Cz].join(Tr),weightData:[Bl,n,$z].join(Tr),modelMetadata:[Bl,n,kz].join(Tr)}}function uI(n){for(const t of Object.values(n))window.localStorage.removeItem(t)}function Iz(n){const t=n.split(Tr);if(t.length<3)throw new Error(`Invalid key format: ${n}`);return t.slice(1,t.length-1).join(Tr)}function Ez(n){return n.startsWith(To.URL_SCHEME)?n.slice(To.URL_SCHEME.length):n}class To{constructor(t){if(!rt().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,t==null||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=lI(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),s=JSON.stringify(t.weightSpecs),a=Qd(t),r=Ea.join(t.weightData);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,dz(r));const i={format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,signature:t.signature!=null?t.signature:void 0,userDefinedMetadata:t.userDefinedMetadata!=null?t.userDefinedMetadata:void 0,modelInitializer:t.modelInitializer!=null?t.modelInitializer:void 0,initializerSignature:t.initializerSignature!=null?t.initializerSignature:void 0,trainingConfig:t.trainingConfig!=null?t.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(i)),{modelArtifactsInfo:a}}catch{throw uI(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(t==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(t.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=s;const a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(a==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=a;const r=this.LS.getItem(this.keys.modelMetadata);if(r!=null){const l=JSON.parse(r);e.format=l.format,e.generatedBy=l.generatedBy,e.convertedBy=l.convertedBy,l.signature!=null&&(e.signature=l.signature),l.userDefinedMetadata!=null&&(e.userDefinedMetadata=l.userDefinedMetadata),l.modelInitializer!=null&&(e.modelInitializer=l.modelInitializer),l.initializerSignature!=null&&(e.initializerSignature=l.initializerSignature),l.trainingConfig!=null&&(e.trainingConfig=l.trainingConfig)}const i=this.LS.getItem(this.keys.weightData);if(i==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=fz(i),e}}To.URL_SCHEME="localstorage://";const cI=n=>rt().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(To.URL_SCHEME)?Az(n.slice(To.URL_SCHEME.length)):null;Fe.registerSaveRouter(cI);Fe.registerLoadRouter(cI);function Az(n){return new To(n)}class Rz{constructor(){D(rt().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),D(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const t={},e=Bl+Tr,s=Tr+oI;for(let a=0;a<this.LS.length;++a){const r=this.LS.key(a);if(r.startsWith(e)&&r.endsWith(s)){const i=Iz(r);t[i]=JSON.parse(this.LS.getItem(r))}}return t}async removeModel(t){t=Ez(t);const e=lI(t);if(this.LS.getItem(e.info)==null)throw new Error(`Cannot find model at path '${t}'`);const s=JSON.parse(this.LS.getItem(e.info));return uI(e),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vl="://";class qn{constructor(){this.managers={}}static getInstance(){return qn.instance==null&&(qn.instance=new qn),qn.instance}static registerManager(t,e){D(t!=null,()=>"scheme must not be undefined or null."),t.endsWith(Vl)&&(t=t.slice(0,t.indexOf(Vl))),D(t.length>0,()=>"scheme must not be an empty string.");const s=qn.getInstance();D(s.managers[t]==null,()=>`A model store manager is already registered for scheme '${t}'.`),s.managers[t]=e}static getManager(t){const e=qn.getInstance().managers[t];if(e==null)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(qn.getInstance().managers)}}function um(n){if(n.indexOf(Vl)===-1)throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${qn.getSchemes().join(",")}`);return{scheme:n.split(Vl)[0],path:n.split(Vl)[1]}}async function hI(n,t,e=!1){D(n!==t,()=>`Old path and new path are the same: '${n}'`);const s=Fe.getLoadHandlers(n);D(s.length>0,()=>`Copying failed because no load handler is found for source URL ${n}.`),D(s.length<2,()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${n}.`);const a=s[0],r=Fe.getSaveHandlers(t);D(r.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),D(r.length<2,()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${t}.`);const i=r[0],l=um(n).scheme,u=um(n).path,h=l===um(n).scheme,f=await a.load();e&&h&&await qn.getManager(l).removeModel(u);const p=await i.save(f);return e&&!h&&await qn.getManager(l).removeModel(u),p.modelArtifactsInfo}async function Dz(){const n=qn.getSchemes(),t={};for(const e of n){const s=await qn.getManager(e).listModels();for(const a in s){const r=e+Vl+a;t[r]=s[a]}}return t}async function Oz(n){const t=um(n);return qn.getManager(t.scheme).removeModel(t.path)}async function _z(n,t){return hI(n,t,!1)}async function Fz(n,t){return hI(n,t,!0)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lz{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}setTimeoutCustom(t,e){if(typeof window>"u"||!rt().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(t,e);return}this.functionRefs.push(t),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},e),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",s=>{if(s.source===window&&s.data.name===this.messageName){s.stopPropagation();const a=this.functionRefs[s.data.index];a(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}isTypedArray(t){return Bk(t)}}if(rt().get("IS_BROWSER")){rt().setPlatform("browser",new Lz);try{qn.registerManager(To.URL_SCHEME,new Rz)}catch{}try{qn.registerManager(No.URL_SCHEME,new Nz)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zz={importFetch:()=>require("node-fetch")};let Ox;class Mz{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return rt().global.fetch!=null?rt().global.fetch(t,e):(Ox==null&&(Ox=zz.importFetch()),Ox(t,e))}now(){const t=process.hrtime();return t[0]*1e3+t[1]/1e6}encode(t,e){if(e!=="utf-8"&&e!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return t.length===0?"":new this.util.TextDecoder(e).decode(t)}isTypedArray(t){return this.util.types.isFloat32Array(t)||this.util.types.isInt32Array(t)||this.util.types.isUint8Array(t)||this.util.types.isUint8ClampedArray(t)}}rt().get("IS_NODE")&&!rt().get("IS_BROWSER")&&rt().setPlatform("node",new Mz);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gt(n,t="float32",e){return t=t||"float32",$s(n),new en(n,t,e)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bz(n,t){const e=O(n,"x","cast");if(!Ek(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if(t==="string"&&e.dtype!=="string"||t!=="string"&&e.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:e},a={dtype:t};return P.runKernel(du,s,a)}const wt=U({cast_:Bz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vz(n){const e={x:O(n,"x","clone","string_or_numeric")};return P.runKernel(Cu,e)}const Ha=U({clone_:Vz});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lv(n,t=!1){console.log(n.toString(t))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Yk();const Pz={buffer:Gt,cast:wt,clone:Ha,print:lv};ML(Pz);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uz(n,t){let e=O(n,"a","add"),s=O(t,"b","add");[e,s]=Me(e,s);const a={a:e,b:s};return P.runKernel(Bo,a)}const xt=U({add_:Uz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gz(n,t){let e=O(n,"a","floorDiv"),s=O(t,"b","floorDiv");[e,s]=Me(e,s);const a={a:e,b:s};return P.runKernel(Nu,a)}const iy=U({floorDiv_:Gz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wz(n,t){let e=O(n,"a","div"),s=O(t,"b","div");if([e,s]=Me(e,s),e.dtype==="int32"&&s.dtype==="int32")return iy(e,s);const a={a:e,b:s},r={};return P.runKernel(yu,a,r)}const Rt=U({div_:Wz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hz(n,t){let e=O(n,"a","mul"),s=O(t,"b","mul");[e,s]=Me(e,s);const a={a:e,b:s};return P.runKernel(_u,a)}const H=U({mul_:Hz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jz(n){const t=O(n,"x","abs");if(t.dtype==="complex64"){const e={x:t};return P.runKernel(sd,e)}else{const e={x:t};return P.runKernel(Xh,e)}}const Je=U({abs_:jz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qz(n){const e={x:O(n,"x","acos")};return P.runKernel(ru,e)}const uv=U({acos_:qz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xz(n){const e={x:O(n,"x","acosh")};return P.runKernel(iu,e)}const cv=U({acosh_:Xz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kz(n){D(Array.isArray(n),()=>"The argument passed to tf.addN() must be a list of tensors"),D(n.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${n.length}`);const t=n.map((a,r)=>O(a,`tensors${r}`,"addN")),e=t[0];t.forEach(a=>{if(a.dtype!==e.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(a=>{if(!Zt(a.shape,e.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const s=t;return P.runKernel(Kh,s)}const dI=U({addN_:Kz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yz(n,t=null,e=!1){const a={x:O(n,"x","all","bool")},r={axis:t,keepDims:e};return P.runKernel(Jm,a,r)}const oy=U({all_:Yz});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zz(n,t=null,e=!1){const a={x:O(n,"x","any","bool")},r={axis:t,keepDims:e};return P.runKernel(tg,a,r)}const Lh=U({any_:Zz});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qz(n,t=0){const s={x:O(n,"x","argMax")},a={axis:t};return P.runKernel(Yh,s,a)}const Co=U({argMax_:Qz});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jz(n,t=0){const s={x:O(n,"x","argMin")},a={axis:t};return P.runKernel(Zh,s,a)}const hv=U({argMin_:Jz});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tM(n){const e={x:O(n,"x","asin")};return P.runKernel(ou,e)}const dv=U({asin_:tM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eM(n){const e={x:O(n,"x","asinh")};return P.runKernel(lu,e)}const fv=U({asinh_:eM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nM(n){const e={x:O(n,"x","atan")};return P.runKernel(uu,e)}const pv=U({atan_:nM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sM(n,t){let e=O(n,"a","atan2"),s=O(t,"b","atan2");[e,s]=Me(e,s);const a={a:e,b:s};return P.runKernel(hu,a)}const mv=U({atan2_:sM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aM(n){const e={x:O(n,"x","atanh")};return P.runKernel(cu,e)}const gv=U({atanh_:aM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jd(n,t,e,s,a="NHWC",r){const i=n[3],l=[...t,i],u=_r(a);return vn(n,l,e,r,s,null,null,u)}function ua(n,t,e,s,a,r,i="channelsLast"){const[l,u]=zh(t);let h;if(i==="channelsLast")h=[l,u,n[3],n[3]];else if(i==="channelsFirst")h=[l,u,n[1],n[1]];else throw new Error(`Unknown dataFormat ${i}`);return vn(n,h,e,s,a,r,!1,i)}function Or(n,t,e,s,a,r,i="NDHWC"){const[l,u,h]=c1(t);let f,p;if(i==="NDHWC")p="channelsLast",f=[l,u,h,n[4],n[4]];else if(i==="NCDHW")p="channelsFirst",f=[l,u,h,n[1],n[1]];else throw new Error(`Unknown dataFormat ${i}`);return Ri(n,f,e,s,a,!1,p,r)}function vn(n,t,e,s,a,r,i=!1,l="channelsLast"){let[u,h,f,p]=[-1,-1,-1,-1];if(l==="channelsLast")[u,h,f,p]=n;else if(l==="channelsFirst")[u,p,h,f]=n;else throw new Error(`Unknown dataFormat ${l}`);const[m,y,,b]=t,[v,w]=zh(e),[S,T]=zh(s),$=Pl(m,S),C=Pl(y,T),{padInfo:I,outHeight:R,outWidth:F}=oM(a,h,f,v,w,$,C,r,l),B=i?b*p:b;let L;return l==="channelsFirst"?L=[u,B,R,F]:l==="channelsLast"&&(L=[u,R,F,B]),{batchSize:u,dataFormat:l,inHeight:h,inWidth:f,inChannels:p,outHeight:R,outWidth:F,outChannels:B,padInfo:I,strideHeight:v,strideWidth:w,filterHeight:m,filterWidth:y,effectiveFilterHeight:$,effectiveFilterWidth:C,dilationHeight:S,dilationWidth:T,inShape:n,outShape:L,filterShape:t}}function Ri(n,t,e,s,a,r=!1,i="channelsLast",l){let[u,h,f,p,m]=[-1,-1,-1,-1,-1];if(i==="channelsLast")[u,h,f,p,m]=n;else if(i==="channelsFirst")[u,m,h,f,p]=n;else throw new Error(`Unknown dataFormat ${i}`);const[y,b,v,,w]=t,[S,T,$]=c1(e),[C,I,R]=c1(s),F=Pl(y,C),B=Pl(b,I),L=Pl(v,R),{padInfo:z,outDepth:A,outHeight:G,outWidth:Q}=lM(a,h,f,p,S,T,$,F,B,L,l),tt=r?w*m:w;let J;return i==="channelsFirst"?J=[u,tt,A,G,Q]:i==="channelsLast"&&(J=[u,A,G,Q,tt]),{batchSize:u,dataFormat:i,inDepth:h,inHeight:f,inWidth:p,inChannels:m,outDepth:A,outHeight:G,outWidth:Q,outChannels:tt,padInfo:z,strideDepth:S,strideHeight:T,strideWidth:$,filterDepth:y,filterHeight:b,filterWidth:v,effectiveFilterDepth:F,effectiveFilterHeight:B,effectiveFilterWidth:L,dilationDepth:C,dilationHeight:I,dilationWidth:R,inShape:n,outShape:J,filterShape:t}}function rM(n,t,e,s,a){s==null&&(s=yv(n,t,e));const r=n[0],i=n[1],l=Mh((r-t+2*s)/e+1,a),u=Mh((i-t+2*s)/e+1,a);return[l,u]}function iM(n,t,e,s,a,r){a==null&&(a=yv(n,t[0],s[0]));const i=[0,0,0,e];for(let l=0;l<3;l++)n[l]+2*a>=t[l]&&(i[l]=Mh((n[l]-t[l]+2*a)/s[l]+1,r));return i}function yv(n,t,e,s=1){const a=Pl(t,s);return Math.floor((n[0]*(e-1)-e+a)/2)}function zh(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function c1(n){return typeof n=="number"?[n,n,n]:n}function Pl(n,t){return t<=1?n:n+(n-1)*(t-1)}function oM(n,t,e,s,a,r,i,l,u){let h,f,p;if(typeof n=="number"){h={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const y=rM([t,e],r,s,n,l);f=y[0],p=y[1]}else if(n==="same"){f=Math.ceil(t/s),p=Math.ceil(e/a);const m=Math.max(0,(f-1)*s+r-t),y=Math.max(0,(p-1)*a+i-e),b=Math.floor(m/2),v=m-b,w=Math.floor(y/2),S=y-w;h={top:b,bottom:v,left:w,right:S,type:"SAME"}}else if(n==="valid")h={top:0,bottom:0,left:0,right:0,type:"VALID"},f=Math.ceil((t-r+1)/s),p=Math.ceil((e-i+1)/a);else if(typeof n=="object"){const m=u==="channelsLast"?n[1][0]:n[2][0],y=u==="channelsLast"?n[1][1]:n[2][1],b=u==="channelsLast"?n[2][0]:n[3][0],v=u==="channelsLast"?n[2][1]:n[3][1];h={top:m,bottom:y,left:b,right:v,type:m===0&&y===0&&b===0&&v===0?"VALID":"EXPLICIT"},f=Mh((t-r+m+y)/s+1,l),p=Mh((e-i+b+v)/a+1,l)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:h,outHeight:f,outWidth:p}}function lM(n,t,e,s,a,r,i,l,u,h,f){let p,m,y,b;if(n==="valid"&&(n=0),typeof n=="number"){p={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const w=iM([t,e,s,1],[l,u,h],1,[a,r,i],n,f);m=w[0],y=w[1],b=w[2]}else if(n==="same"){m=Math.ceil(t/a),y=Math.ceil(e/r),b=Math.ceil(s/i);const v=(m-1)*a+l-t,w=(y-1)*r+u-e,S=(b-1)*i+h-s,T=Math.floor(v/2),$=v-T,C=Math.floor(w/2),I=w-C,R=Math.floor(S/2),F=S-R;p={top:C,bottom:I,left:R,right:F,front:T,back:$,type:"SAME"}}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:p,outDepth:m,outHeight:y,outWidth:b}}function Mh(n,t){if(!t)return Math.trunc(n);switch(t){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${t}`)}}function wi(n){const[t,e,s]=zh(n);return t===1&&e===1&&s===1}function Rn(n,t){return wi(n)||wi(t)}function $o(n){return zh(n).every(t=>t>0)}function _r(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function Qn(n,t,e){if(e!=null){if(typeof t=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);if(typeof t=="number")D(wo(t),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${t}.`);else if(typeof t=="object")t.forEach(s=>{s.forEach(a=>{D(wo(a),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${e} but got pad ${a}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${t}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uM(n,t){const s={x:O(n,"x","reshape","string_or_numeric")},a={shape:t};return P.runKernel(zd,s,a)}const X=U({reshape_:uM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cM(n,t,e,s,a){const r=O(n,"x","avgPool","float32"),i=1;D(Rn(e,i),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`);let l=r,u=!1;r.rank===3&&(u=!0,l=X(r,[1,r.shape[0],r.shape[1],r.shape[2]])),D(l.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${l.rank}.`),Qn("avgPool",s,a);const h={x:l},f={filterSize:t,strides:e,pad:s,dimRoundingMode:a};let p=P.runKernel(Qh,h,f);return p=wt(p,r.dtype),u?X(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const tf=U({avgPool_:cM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hM(n,t,e,s,a,r="NDHWC"){const i=O(n,"x","avgPool3d","float32");let l=i,u=!1;i.rank===4&&(u=!0,l=X(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),D(l.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${l.rank}.`),D(r==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`),D(typeof e=="number"&&e>0||Array.isArray(e)&&e[0]>0&&e[1]>0&&e[2]>0,()=>`Error in avgPool3d: Stride must be > 0, but got '${e}'`),Qn("avgPool3d",s,a);const h={x:l},f={filterSize:t,strides:e,pad:s,dimRoundingMode:a,dataFormat:r};let p=P.runKernel(Jh,h,f);return p=wt(p,l.dtype),u?X(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const bv=U({avgPool3d_:hM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dM(n,t=0){D(n.length>=1,()=>"Pass at least one tensor to concat");const e=Fh(n,"tensors","concat","string_or_numeric");if(e[0].dtype==="complex64"&&e.forEach(r=>{if(r.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${r.dtype}. `)}),e.length===1)return Ha(e[0]);const s=e,a={axis:t};return P.runKernel(ad,s,a)}const He=U({concat_:dM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fM(n,t,e=!1,s=!1){let a=O(n,"a","matMul"),r=O(t,"b","matMul");[a,r]=Me(a,r);const i={a,b:r},l={transposeA:e,transposeB:s};return P.runKernel(td,i,l)}const jt=U({matMul_:fM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pM(n){const e={x:O(n,"x","sigmoid","float32")};return P.runKernel(Hu,e)}const Na=U({sigmoid_:pM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mM(n,t,e){const s=O(n,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const a={x:s},r={begin:t,size:e};return P.runKernel(Ud,a,r)}const ne=U({slice_:mM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gM(n){const e={x:O(n,"x","tanh","float32")};return P.runKernel(Zu,e)}const Si=U({tanh_:gM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yM(n,t,e,s,a,r){const i=O(n,"forgetBias","basicLSTMCell"),l=O(t,"lstmKernel","basicLSTMCell"),u=O(e,"lstmBias","basicLSTMCell"),h=O(s,"data","basicLSTMCell"),f=O(a,"c","basicLSTMCell"),p=O(r,"h","basicLSTMCell"),m=He([h,p],1),y=jt(m,l),b=xt(y,u),v=b.shape[0],w=b.shape[1]/4,S=[v,w],T=ne(b,[0,0],S),$=ne(b,[0,w],S),C=ne(b,[0,w*2],S),I=ne(b,[0,w*3],S),R=xt(H(Na(T),Si($)),H(f,Na(xt(i,C)))),F=H(Si(R),Na(I));return[R,F]}const fI=U({basicLSTMCell_:yM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bM(n,t,e){const s=O(n,"x","batchToSpaceND"),a=t.reduce((l,u)=>l*u);D(s.rank>=1+t.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`),D(e.length===t.length,()=>`crops.length is ${e.length} but should be equal to blockShape.length  ${t.length}`),D(s.shape[0]%a===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`);const r={x:s},i={blockShape:t,crops:e};return P.runKernel(ed,r,i)}const ef=U({batchToSpaceND_:bM});function xM(n){let t;return n.rank===0||n.rank===1?t=X(n,[1,1,1,n.size]):n.rank===2?t=X(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?t=X(n,[1,n.shape[0],n.shape[1],n.shape[2]]):t=n,t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vM(n,t,e,s,a,r){r==null&&(r=.001);const i=O(n,"x","batchNorm"),l=O(t,"mean","batchNorm"),u=O(e,"variance","batchNorm");let h;a!=null&&(h=O(a,"scale","batchNorm"));let f;s!=null&&(f=O(s,"offset","batchNorm")),D(l.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),D(f==null||l.rank===f.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),D(h==null||l.rank===h.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const m={x:xM(i),scale:h,offset:f,mean:l,variance:u},y={varianceEpsilon:r},b=P.runKernel(fd,m,y);return X(b,i.shape)}const tc=U({batchNorm_:vM});function wM(n,t,e,s,a,r){const i=O(n,"x","batchNorm"),l=O(t,"mean","batchNorm"),u=O(e,"variance","batchNorm");let h;a!=null&&(h=O(a,"scale","batchNorm"));let f;return s!=null&&(f=O(s,"offset","batchNorm")),D(i.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),D(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${l.rank}.`),D(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),h!=null&&D(h.rank===2||h.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${h.rank}.`),f!=null&&D(f.rank===2||f.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${f.rank}.`),tc(i,l,u,f,h,r)}const xv=U({batchNorm2d_:wM});function SM(n,t,e,s,a,r){const i=O(n,"x","batchNorm"),l=O(t,"mean","batchNorm"),u=O(e,"variance","batchNorm");let h;a!=null&&(h=O(a,"scale","batchNorm"));let f;return s!=null&&(f=O(s,"offset","batchNorm")),D(i.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),D(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${l.rank}.`),D(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),h!=null&&D(h.rank===3||h.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${h.rank}.`),f!=null&&D(f.rank===3||f.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${f.rank}.`),tc(i,l,u,f,h,r)}const vv=U({batchNorm3d_:SM});function NM(n,t,e,s,a,r){const i=O(n,"x","batchNorm"),l=O(t,"mean","batchNorm"),u=O(e,"variance","batchNorm");let h;a!=null&&(h=O(a,"scale","batchNorm"));let f;return s!=null&&(f=O(s,"offset","batchNorm")),D(i.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),D(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${l.rank}.`),D(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),h!=null&&D(h.rank===4||h.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${h.rank}.`),f!=null&&D(f.rank===4||f.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${f.rank}.`),tc(i,l,u,f,h,r)}const wv=U({batchNorm4d_:NM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TM(n,t,e){const s=O(n,"x","bincount"),a=O(t,"weights","bincount");D(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),D(e>=0,()=>`size must be non-negative, but got ${e}.`),D(a.size===s.size||a.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${a.shape}.`);const r={x:s,weights:a},i={size:e};return P.runKernel(sg,r,i)}const Sv=U({bincount_:TM});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CM(n,t){const e=O(n,"x","bitwiseAnd"),s=O(t,"y","bitwiseAnd");if(!Zt(e.shape,s.shape))throw new Error(`BitwiseAnd: Tensors must have the same shape. x: ${e.shape}, y: ${s.shape}`);if(e.dtype!=="int32"||s.dtype!=="int32")throw new Error(`BitwiseAnd: Only supports 'int32' values in tensor, found type of x: ${e.dtype} and type of y: ${s.dtype}`);const a={a:e,b:s};return P.runKernel(nd,a)}const pI=U({bitwiseAnd_:CM});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $M(n,t){const e=O(n,"s0","broadcastArgs","int32"),s=O(t,"s1","broadcastArgs","int32");if(e.rank!==1)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${e.rank}`);if(s.rank!==1)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);const a={s0:e,s1:s};return P.runKernel(ag,a)}const mI=U({broadcastArgs_:$M});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kM(n,t){let e=O(n,"broadcastTo","x");const s=e.shape;if($s(t),t.length<e.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${e.rank}.`);if(t.length>e.rank){const h=e.shape.slice();for(;h.length<t.length;)h.unshift(1);e=X(e,h)}const a=e.shape,r=Array.from(t);for(let h=t.length-1;h>=0;h--)if(a[h]===t[h])r[h]=1;else if(e.shape[h]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(r.map((h,f)=>h>1?f:-1).filter(h=>h>=0).length===0)return Ha(e);const l={x:e},u={reps:r};return P.runKernel(Qu,l,u)}const bo=U({broadcastTo_:kM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IM(n){const e={x:O(n,"x","ceil","float32")};return P.runKernel(fu,e)}const Nv=U({ceil_:IM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vo(n,t,e){$s(n),e=e||zo(t);const s={shape:n,value:t,dtype:e};return P.runKernel(vg,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EM(n,t,e){const s=O(n,"x","clipByValue");if(D(t<=e,()=>`Error in clip: min (${t}) must be less than or equal to max (${e}).`),t===e)return Vo(s.shape,t,s.dtype);const a={x:s},r={clipValueMin:t,clipValueMax:e};return P.runKernel(pu,a,r)}const os=U({clipByValue_:EM});function AM(n){return He(n,0)}const Tv=U({concat1d_:AM});function RM(n,t){return He(n,t)}const Cv=U({concat2d_:RM});function DM(n,t){return He(n,t)}const $v=U({concat3d_:DM});function OM(n,t){return He(n,t)}const kv=U({concat4d_:OM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _M(n,t,e,s,a="NHWC",r=[1,1],i){const l=O(n,"x","conv2d","float32"),u=O(t,"filter","conv2d","float32");let h=l,f=!1;l.rank===3&&(f=!0,h=X(l,[1,l.shape[0],l.shape[1],l.shape[2]])),D(h.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${h.rank}.`),D(u.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),Qn("conv2d",s,i);const p=a==="NHWC"?h.shape[3]:h.shape[1];D(p===u.shape[2],()=>`Error in conv2d: depth of input (${p}) must match input depth for filter ${u.shape[2]}.`),D(Rn(e,r),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${r}'`),D($o(r),()=>"Error in conv2D: Dilated rates should be larger than 0."),D($o(e),()=>"Error in conv2D: Strides should be larger than 0.");const m={x:h,filter:u},y={strides:e,pad:s,dataFormat:a,dilations:r,dimRoundingMode:i},b=P.runKernel(rd,m,y);return f?X(b,[b.shape[1],b.shape[2],b.shape[3]]):b}const Ir=U({conv2d_:_M});function FM(n,t,e,s,a="NWC",r=1,i){const l=O(n,"x","conv1d"),u=O(t,"filter","conv1d");let h=l,f=!1;l.rank===2&&(f=!0,h=X(l,[1,l.shape[0],l.shape[1]])),D(h.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${h.rank}.`),D(u.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),Qn("conv1d",s,i),D(h.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${h.shape[2]}) must match input depth for filter ${u.shape[1]}.`),D(Rn(e,r),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${e} and dilation '${r}'`),D($o(r),()=>"Error in conv1D: Dilated rates should be larger than 0."),D($o(e),()=>"Error in conv1D: Stride should be larger than 0."),D(a==="NWC",()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`);const p=X(u,[1,u.shape[0],u.shape[1],u.shape[2]]),m=X(h,[h.shape[0],1,h.shape[1],h.shape[2]]),w=Ir(m,p,[1,e],s,"NHWC",[1,r],i);return f?X(w,[w.shape[2],w.shape[3]]):X(w,[w.shape[0],w.shape[2],w.shape[3]])}const ly=U({conv1d_:FM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LM(n,t,e,s,a,r="NHWC",i){D(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let l=n,u=t,h=!1;t.rank===3&&(h=!0,u=X(t,[1,t.shape[0],t.shape[1],t.shape[2]]),l=[1,n[0],n[1],n[2]]),D(l.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${l.length}.`),D(u.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),D(e.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${e.rank}`);const f=r==="NHWC"?l[3]:l[1],p=r==="NHWC"?u.shape[3]:u.shape[1];D(f===e.shape[2],()=>`Error in conv2dDerInput: depth of input (${f}) must match input depth for filter ${e.shape[2]}.`),D(p===e.shape[3],()=>`Error in conv2dDerInput: depth of output (${p}) must match output depth for filter ${e.shape[3]}.`),Qn("conv2dDerInput",a,i);const m={dy:u,filter:e},y={strides:s,pad:a,dataFormat:r,dimRoundingMode:i,inputShape:l},b=P.runKernel(id,m,y);return h?X(b,[b.shape[1],b.shape[2],b.shape[3]]):b}const Iv=U({conv2DBackpropInput_:LM});function zM(n,t,e,s,a,r){const i=O(n,"x","conv2dTranspose"),l=O(t,"filter","conv2dTranspose");return Iv(e,i,l,s,a,"NHWC",r)}const uy=U({conv2dTranspose_:zM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MM(n,t,e,s,a="NDHWC",r=[1,1,1]){const i=O(n,"x","conv3d"),l=O(t,"filter","conv3d");let u=i,h=!1;i.rank===4&&(h=!0,u=X(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),D(u.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),D(l.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${l.rank}.`),D(u.shape[4]===l.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${l.shape[3]}.`),D(Rn(e,r),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${e} and dilations '${r}'`),D(a==="NDHWC",()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`),D($o(r),()=>"Error in conv3D: Dilated rates should be larger than 0."),D($o(e),()=>"Error in conv3D: Strides should be larger than 0.");const f={x:u,filter:l},p={strides:e,pad:s,dataFormat:a,dilations:r},m=P.runKernel(od,f,p);return h?X(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}const Ev=U({conv3d_:MM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BM(n,t,e,s,a){D(n.length===t.rank,()=>`Length of inShape (${n.length}) and rank of dy (${t.rank}) must match`);let r=n,i=t,l=!1;t.rank===4&&(l=!0,i=X(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),r=[1,n[0],n[1],n[2],n[3]]);const u=r[4],h=i.shape[4];D(r.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${r.length}.`),D(i.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),D(e.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${e.rank}`),D(u===e.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${e.shape[3]}.`),D(h===e.shape[4],()=>`Error in conv3dDerInput: depth of output (${h}) must match output depth for filter ${e.shape[4]}.`);const f={dy:i,filter:e},p={pad:a,strides:s,inputShape:r},m=P.runKernel(lg,f,p);return l?X(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}const gI=U({conv3DBackpropInput_:BM});function VM(n,t,e,s,a){const r=O(n,"x","conv3dTranspose"),i=O(t,"filter","conv3dTranspose");return gI(e,r,i,s,a)}const Av=U({conv3dTranspose_:VM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PM(n){const e={x:O(n,"x","cos","float32")};return P.runKernel(mu,e)}const nf=U({cos_:PM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UM(n){const e={x:O(n,"x","cosh","float32")};return P.runKernel(gu,e)}const cy=U({cosh_:UM});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GM(n,t=0,e=!1,s=!1){const r={x:O(n,"x","cumprod")},i={axis:t,exclusive:e,reverse:s};return P.runKernel(ug,r,i)}const Bh=U({cumprod_:GM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WM(n,t=0,e=!1,s=!1){const r={x:O(n,"x","cumsum")},i={axis:t,exclusive:e,reverse:s};return P.runKernel(ld,r,i)}const hy=U({cumsum_:WM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HM(n,t,e,s=!1){const a=O(n,"x","denseBincount"),r=O(t,"weights","denseBincount");D(a.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`),D(a.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`),D(e>=0,()=>`size must be non-negative, but got ${e}.`),D(r.size===a.size||r.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${r.shape}.`);const i={x:a,weights:r},l={size:e,binaryOutput:s};return P.runKernel(hg,i,l)}const km=U({denseBincount_:HM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jM(n,t,e="NHWC"){const s=O(n,"x","depthToSpace","float32"),a=e==="NHWC"?s.shape[1]:s.shape[2],r=e==="NHWC"?s.shape[2]:s.shape[3],i=e==="NHWC"?s.shape[3]:s.shape[1];D(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),D(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${a} and ${t}  for depthToSpace with input shape
    ${s.shape}`),D(r*t>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${t} for depthToSpace with input shape
        ${s.shape}`),D(i%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${s.shape}`);const l={x:s},u={blockSize:t,dataFormat:e};return P.runKernel(dg,l,u)}const Rv=U({depthToSpace_:jM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qM(n,t,e,s,a="NHWC",r=[1,1],i){const l=O(n,"x","depthwiseConv2d","float32"),u=O(t,"filter","depthwiseConv2d","float32");let h=l,f=!1;l.rank===3&&(f=!0,h=X(l,[1,l.shape[0],l.shape[1],l.shape[2]])),D(h.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${h.rank}.`),D(u.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`);const p=a==="NHWC"?h.shape[3]:h.shape[1];D(p===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${p}) must match the inChannels dimension in filter ${u.shape[2]}.`),Qn("depthwiseConv2d",s,i);const m={x:h,filter:u},y={strides:e,pad:s,dataFormat:a,dilations:r,dimRoundingMode:i},b=P.runKernel(ud,m,y);return f?X(b,[b.shape[1],b.shape[2],b.shape[3]]):b}const ec=U({depthwiseConv2d_:qM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XM(n){const e={x:O(n,"x","diag")};return P.runKernel(mg,e)}const yI=U({diag_:XM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KM(n,t,e,s,a=[1,1],r="NHWC"){const i=O(n,"x","dilation2d"),l=O(t,"filter","dilation2d");D(i.rank===3||i.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),D(l.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${l.rank}.`),D(r==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${r}`);let u=i,h=!1;i.rank===3&&(u=X(i,[1,i.shape[0],i.shape[1],i.shape[2]]),h=!0),D(u.shape[3]===l.shape[2],()=>`Error in dilation2d:  input and filter must have the same depth: ${u.shape[3]} vs ${l.shape[2]}`);const f={x:u,filter:l},p={strides:e,pad:s,dilations:a},m=P.runKernel(cd,f,p);return h?X(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const Dv=U({dilation2d_:KM});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ko(n,t){const e=n.length,s=[];for(let a=0;a<e;a++){const r=e-1-a,i=n[r]||1;(t[t.length-1-a]||1)>1&&i===1&&s.unshift(r)}return s}function nn(n,t){const e=[];for(let s=0;s<t.length;s++){const a=n[n.length-s-1],r=t.length-s-1,i=t[r];(a==null||a===1&&i>1)&&e.unshift(r)}return e}function Ut(n,t){const e=Math.max(n.length,t.length),s=new Array(e);for(let a=0;a<e;a++){let r=n[n.length-a-1];r==null&&(r=1);let i=t[t.length-a-1];if(i==null&&(i=1),r===1)s[e-a-1]=i;else if(i===1)s[e-a-1]=r;else if(r!==i){const l=`Operands could not be broadcast together with shapes ${n} and ${t}.`;throw Error(l)}else s[e-a-1]=r}return s}const YM=Object.freeze(Object.defineProperty({__proto__:null,assertAndGetBroadcastShape:Ut,getBroadcastDims:ko,getReductionAxes:nn},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZM(n,t){let e=O(n,"a","equal","string_or_numeric"),s=O(t,"b","equal","string_or_numeric");[e,s]=Me(e,s),Ut(e.shape,s.shape);const a={a:e,b:s};return P.runKernel(hd,a)}const la=U({equal_:ZM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QM(n,t,e){const s=O(t,"a","where"),a=O(e,"b","where"),r=O(n,"condition","where","bool"),i=Ut(Ut(r.shape,s.shape),a.shape),l=bo(r,i),u=bo(s,i),h=bo(a,i),f={condition:l,t:u,e:h};return P.runKernel(Pd,f)}const In=U({where_:QM});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JM(n){const e={x:O(n,"x","zerosLike")};return P.runKernel(Yd,e)}const se=U({zerosLike_:JM});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tB(n,t){let e=O(n,"a","div"),s=O(t,"b","div");[e,s]=Me(e,s);const a=Rt(e,s),r=se(a),i=la(s,r);return In(i,r,a)}const Ov=U({divNoNan_:tB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eB(n,t){const e=O(n,"t1","dot"),s=O(t,"t2","dot");D((e.rank===1||e.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${e.rank} and ${s.rank}.`);const a=e.rank===1?e.size:e.shape[1],r=s.rank===1?s.size:s.shape[0];if(D(a===r,()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${r}.`),e.rank===1&&s.rank===1){const i=X(e,[1,-1]),l=X(s,[-1,1]),u=jt(i,l);return X(u,[])}else if(e.rank===1&&s.rank===2){const i=X(e,[1,-1]),l=X(s,[s.shape[0],s.shape[1]]),u=jt(i,l);return X(u,[u.size])}else if(e.rank===2&&s.rank===1){const i=X(s,[-1,1]),l=jt(e,i);return X(l,[l.size])}else{const i=X(s,[s.shape[0],s.shape[1]]);return jt(e,i)}}const _v=U({dot_:eB});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nB(n,...t){const e=t.map((a,r)=>O(a,`tensors${r}`,"einsum")),s={equation:n};return P.runKernel(yg,e,s)}const uo=U({einsum_:nB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sB(n){const e={x:O(n,"x","elu","float32")};return P.runKernel(bu,e)}const nc=U({elu_:sB});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aB(n,t){const e=O(n,"x","ensureShape","string_or_numeric");if(!kk(e.shape,t))throw new Error(`EnsureShape: Shape of tensor ${e.shape} is not compatible with expected shape ${t}`);return n}const bI=U({ensureShape_:aB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rB(n){let t=O(n,"x","erf");D(t.dtype==="int32"||t.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),t.dtype==="int32"&&(t=wt(t,"float32"));const e={x:t};return P.runKernel(xu,e)}const dy=U({erf_:rB});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fv(n,t){for(let e=0;e<n.length;++e)if(n[n.length-e-1]!==t-1-e)return!1;return!0}function xI(n,t,e){const s=n.length+t.length,a=[];let r=0,i=0;for(let l=0;l<s;l++)e.indexOf(l)===-1?a.push(n[r++]):a.push(t[i++]);return a}function wn(n,t){const e=[],s=n.length;for(let r=0;r<s;r++)t.indexOf(r)===-1&&e.push(n[r]);const a=t.map(r=>n[r]);return[e,a]}function je(n,t){const e=t.map(s=>1);return xI(n,e,t)}function Dn(n,t,e){D(Fv(t,e),()=>`${n} supports only inner-most axes for now. Got axes ${t} and rank-${e} input.`)}function Be(n,t){if(Fv(n,t))return null;const e=[];for(let s=0;s<t;++s)n.indexOf(s)===-1&&e.push(s);return n.forEach(s=>e.push(s)),e}function Di(n){return n.map((t,e)=>[e,t]).sort((t,e)=>t[1]-e[1]).map(t=>t[0])}function qe(n,t){const e=[];for(let s=t-n;s<t;++s)e.push(s);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iB(n,t=null,e=!1){const a={x:O(n,"x","max")},r={reductionIndices:t,keepDims:e};return P.runKernel(Nd,a,r)}const Ps=U({max_:iB});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oB(n,t=null,e=!1){const a={x:O(n,"x","min")},r={axis:t,keepDims:e};return P.runKernel(kd,a,r)}const ql=U({min_:oB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lB(n,t){let e=O(n,"base","pow"),s=O(t,"exp","pow");[e,s]=Me(e,s);const a={a:e,b:s};return P.runKernel(Fu,a)}const Za=U({pow_:lB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _t(n,t){if((gn(n)&&t!=="string"||Array.isArray(n))&&t!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(t==="string"&&gn(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Ai(n,[],[],t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uB(n){const e={x:O(n,"x","sqrt","float32")};return P.runKernel(qu,e)}const xn=U({sqrt_:uB});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cB(n){const t=O(n,"x","square"),e={};return P.runKernel("Square",{x:t},e)}const xe=U({square_:cB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hB(n,t=null,e=!1){let s=O(n,"x","sum");s.dtype==="bool"&&(s=wt(s,"int32"));const a={x:s},r={axis:t,keepDims:e};return P.runKernel(Gd,a,r)}const kt=U({sum_:hB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dB(n,t="euclidean",e=null,s=!1){n=O(n,"x","norm");const a=vI(n,t,e);let r=a.shape;if(s){const i=Xt(e,n.shape);r=je(a.shape,i)}return X(a,r)}function vI(n,t,e=null){if(n.rank===0)return Je(n);if(n.rank!==1&&e===null)return vI(X(n,[-1]),t,e);if(n.rank===1||typeof e=="number"||Array.isArray(e)&&e.length===1){if(t===1)return kt(Je(n),e);if(t===1/0)return Ps(Je(n),e);if(t===-1/0)return ql(Je(n),e);if(t==="euclidean"||t===2)return xn(kt(Za(Je(n),_t(2,"int32")),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(e)&&e.length===2){if(t===1)return Ps(kt(Je(n),e[0]),e[1]-1);if(t===1/0)return Ps(kt(Je(n),e[1]),e[0]);if(t===-1/0)return ql(kt(Je(n),e[1]),e[0]);if(t==="fro"||t==="euclidean")return xn(kt(xe(n),e));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${e}`)}const sc=U({norm_:dB});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fB(n,t=null,e=!1){return sc(n,"euclidean",t,e)}const Lv=U({euclideanNorm_:fB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pB(n){const e={x:O(n,"x","exp")};return P.runKernel(vu,e)}const ls=U({exp_:pB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mB(n,t=0){const e=O(n,"x","expandDims","string_or_numeric");D(t<=e.rank,()=>"Axis must be <= rank of the tensor");const s={input:e},a={dim:t};return P.runKernel(dd,s,a)}const Bn=U({expandDims_:mB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gB(n){const e={x:O(n,"x","expm1")};return P.runKernel(wu,e)}const zv=U({expm1_:gB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yB(n,t){const e=O(n,"x","tile","string_or_numeric");D(e.rank===t.length,()=>`Error in transpose: rank of input ${e.rank} must match length of reps ${t}.`);const s={x:e},a={reps:t};return P.runKernel(Qu,s,a)}const Ms=U({tile_:yB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bB(n,t,e,s="float32"){t==null&&(t=n);const a=Gt([n,t],s),r=n<=t?n:t;for(let l=0;l<r;++l)a.set(1,l,l);const i=X(a.toTensor(),[n,t]);if(e==null)return i;if(e.length===1)return Ms(Bn(i,0),[e[0],1,1]);if(e.length===2)return Ms(Bn(Bn(i,0),0),[e[0],e[1],1,1]);if(e.length===3)return Ms(Bn(Bn(Bn(i,0),0),0),[e[0],e[1],e[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${e.length}D.`)}const fy=U({eye_:bB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xB(n){const e={x:O(n,"x","floor","float32")};return P.runKernel(Su,e)}const ac=U({floor_:xB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vB(n,t,e=0,s=0){const a=O(n,"x","gather"),r=O(t,"indices","gather","int32"),i={x:a,indices:r},l={axis:e,batchDims:s};return P.runKernel(pd,i,l)}const rc=U({gather_:vB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wB(n,t){let e=O(n,"a","greater","string_or_numeric"),s=O(t,"b","greater","string_or_numeric");[e,s]=Me(e,s),Ut(e.shape,s.shape);const a={a:e,b:s};return P.runKernel(md,a)}const hs=U({greater_:wB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SB(n,t){let e=O(n,"a","greaterEqual","string_or_numeric"),s=O(t,"b","greaterEqual","string_or_numeric");[e,s]=Me(e,s),Ut(e.shape,s.shape);const a={a:e,b:s};return P.runKernel(Tu,a)}const Fr=U({greaterEqual_:SB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NB(n){const e={input:O(n,"input","imag")};return P.runKernel(Tg,e)}const sf=U({imag_:NB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TB(n){const e={x:O(n,"x","isFinite")};return P.runKernel($u,e)}const Mv=U({isFinite_:TB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CB(n){const e={x:O(n,"x","isInf")};return P.runKernel(ku,e)}const Bv=U({isInf_:CB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $B(n){const e={x:O(n,"x","isNaN")};return P.runKernel(Iu,e)}const Vv=U({isNaN_:$B});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kB(n,t=.2){const s={x:O(n,"x","leakyRelu")},a={alpha:t};return P.runKernel(gd,s,a)}const af=U({leakyRelu_:kB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IB(n,t){let e=O(n,"a","less","string_or_numeric"),s=O(t,"b","less","string_or_numeric");[e,s]=Me(e,s),Ut(e.shape,s.shape);const a={a:e,b:s};return P.runKernel(yd,a)}const Xl=U({less_:IB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EB(n,t){let e=O(n,"a","lessEqual","string_or_numeric"),s=O(t,"b","lessEqual","string_or_numeric");[e,s]=Me(e,s),Ut(e.shape,s.shape);const a={a:e,b:s};return P.runKernel(bd,a)}const Oi=U({lessEqual_:EB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wI(n,t,e){if(e<=0)throw new Error("The number of values should be positive.");const s={start:n,stop:t,num:e};return P.runKernel(Cg,{},s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AB(n,t=5,e=1,s=1,a=.5){const r=O(n,"x","localResponseNormalization");D(r.rank===4||r.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${r.rank}.`),D(wo(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=r,l=!1;r.rank===3&&(l=!0,i=X(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const u={x:i},h={depthRadius:t,bias:e,alpha:s,beta:a},f=P.runKernel(Sd,u,h);return l?X(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Pv=U({localResponseNormalization_:AB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RB(n){const e={x:O(n,"x","log","float32")};return P.runKernel(Eu,e)}const Ss=U({log_:RB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DB(n){const e={x:O(n,"x","log1p")};return P.runKernel(Au,e)}const rf=U({log1p_:DB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OB(n){return D(bi(n),()=>"The f passed in grad(f) must be a function"),(t,e)=>{const s=O(t,"x","tf.grad","string_or_numeric"),a=e!=null?O(e,"dy","tf.grad"):null;return P.tidy(()=>{const{value:r,grads:i}=P.gradients(()=>n(s),[s],a);return a!=null&&An(r.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),py(i),i[0]})}}function _B(n){return D(bi(n),()=>"The f passed in grads(f) must be a function"),(t,e)=>{D(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const s=Fh(t,"args","tf.grads","string_or_numeric"),a=e!=null?O(e,"dy","tf.grads"):null;return P.tidy(()=>{const{value:r,grads:i}=P.gradients(()=>n(...s),s,a);return a!=null&&An(r.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),py(i),i})}}function FB(n){return D(bi(n),()=>"The f passed in valueAndGrad(f) must be a function"),(t,e)=>{D(t instanceof fe,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),D(e==null||e instanceof fe,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:s,value:a}=P.gradients(()=>n(t),[t],e);return py(s),{grad:s[0],value:a}}}function LB(n){return D(bi(n),()=>"The f passed in valueAndGrads(f) must be a function"),(t,e)=>{D(Array.isArray(t)&&t.every(a=>a instanceof fe),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),D(e==null||e instanceof fe,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const s=P.gradients(()=>n(...t),t,e);return e!=null&&An(s.value.shape,e.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),py(s.grads),s}}function SI(n,t){D(bi(n),()=>"The f passed in variableGrads(f) must be a function"),D(t==null||Array.isArray(t)&&t.every(h=>h instanceof _h),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const e=t!=null;if(!e){t=[];for(const h in P.registeredVariables)t.push(P.registeredVariables[h])}const s=e?t.filter(h=>!h.trainable):null,a=t.length;t=t.filter(h=>h.trainable),D(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`);const r=!0,{value:i,grads:l}=P.gradients(n,t,null,r);D(l.some(h=>h!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),D(i.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${i.rank} tensor`);const u={};return t.forEach((h,f)=>{l[f]!=null&&(u[h.name]=l[f])}),s?.forEach(h=>u[h.name]=null),{value:i,grads:u}}function Qa(n){return P.customGrad(n)}function py(n){if(n.filter(e=>e==null).length>0)throw new Error(`Cannot compute gradient of y=f(x) with respect to x. Make sure that
    the f you passed encloses all operations that lead from x to y.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zB(n){const e={x:O(n,"x","neg")};return P.runKernel(Ed,e)}const Ee=U({neg_:zB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MB(n){const e={x:O(n,"x","softplus")};return P.runKernel(ju,e)}const Po=U({softplus_:MB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BB(n){const t=O(n,"x","logSigmoid");return Qa(s=>({value:Ee(Po(Ee(s))),gradFunc:i=>H(i,Na(Ee(s)))}))(t)}const Uv=U({logSigmoid_:BB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VB(n,t){let e=O(n,"a","sub"),s=O(t,"b","sub");[e,s]=Me(e,s);const a={a:e,b:s};return P.runKernel(Ku,a)}const $t=U({sub_:VB});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PB(n,t=-1){const e=O(n,"logits","logSoftmax");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and axis was ${t}`);return Qa((a,r)=>{const l=Ps(a,t,!0),u=$t(a,l),h=$t(wt(u,"float32"),Ss(kt(ls(u),t,!0)));return r([h]),{value:h,gradFunc:(p,m)=>{const[y]=m,b=!0,v=ls(y);return $t(p,H(kt(p,t,b),v))}}})(e)}const my=U({logSoftmax_:PB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UB(n,t=null,e=!1){const s=O(n,"x","logSumExp"),a=Xt(t,s.shape),r=Ps(s,a,!0),i=$t(s,r),l=ls(i),u=kt(l,a),h=Ss(u),f=xt(X(r,h.shape),h);if(e){const p=je(f.shape,a);return X(f,p)}return f}const of=U({logSumExp_:UB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GB(n,t){const e=O(n,"a","logicalAnd","bool"),s=O(t,"b","logicalAnd","bool");Ut(e.shape,s.shape);const a={a:e,b:s};return P.runKernel(xd,a)}const Ca=U({logicalAnd_:GB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WB(n){const e={x:O(n,"x","logicalNot","bool")};return P.runKernel(vd,e)}const lf=U({logicalNot_:WB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HB(n,t){const e=O(n,"a","logicalOr","bool"),s=O(t,"b","logicalOr","bool");Ut(e.shape,s.shape);const a={a:e,b:s};return P.runKernel(wd,a)}const gy=U({logicalOr_:HB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jB(n,t){const e=O(n,"a","logicalXor","bool"),s=O(t,"b","logicalXor","bool");return Ut(e.shape,s.shape),Ca(gy(n,t),lf(Ca(n,t)))}const Gv=U({logicalXor_:jB});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qp=2147483648;function qB(n,t,e="left"){const s=O(n,"sortedSequence","searchSorted"),a=O(t,"values","searchSorted"),r=s.shape[s.shape.length-1],i=a.shape[a.shape.length-1],l=X(s,[-1,r]),u=X(a,[-1,i]);if(l.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(l.shape[0]!==u.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(ht(u.shape)>=qp)throw new Error(`values tensor size must less than ${qp}`);if(l.shape[1]>=qp)throw new Error(`trailing dim_size must less than ${qp} for int32 output type, was ${l.shape[1]}`);const h={sortedSequence:l,values:u},f={side:e};return P.runKernel(Gg,h,f)}const yy=U({searchSorted_:qB});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NI(n,t){return yy(n,t,"left")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XB(n,t,e,s,a){const r=O(n,"x","maxPool"),i=1;let l=r,u=!1;r.rank===3&&(u=!0,l=X(r,[1,r.shape[0],r.shape[1],r.shape[2]])),D(l.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${l.rank}.`),D(Rn(e,i),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${e} and dilations '${i}'`),Qn("maxPool",s,a);const h={x:l},f={filterSize:t,strides:e,pad:s,dimRoundingMode:a},p=P.runKernel(Td,h,f);return u?X(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const uf=U({maxPool_:XB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KB(n,t=[1,1,1],e,s,a,r="NDHWC"){const i=O(n,"x","maxPool3d");let l=i,u=!1;i.rank===4&&(u=!0,l=X(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),D(l.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${l.rank}.`),D(r==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`),Qn("maxPool3d",s,a);const h={x:l},f={filterSize:t,strides:e,pad:s,dimRoundingMode:a,dataFormat:r},p=P.runKernel(Cd,h,f);return u?X(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const Wv=U({maxPool3d_:KB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YB(n,t,e,s,a=!1){const i={x:O(n,"x","maxPoolWithArgmax")},l={filterSize:t,strides:e,pad:s,includeBatchInIndex:a},u=P.runKernel(Eg,i,l);return{result:u[0],indexes:u[1]}}const TI=U({maxPoolWithArgmax_:YB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZB(n,t){let e=O(n,"a","maximum"),s=O(t,"b","maximum");[e,s]=Me(e,s),e.dtype==="bool"&&(e=wt(e,"int32"),s=wt(s,"int32")),Ut(e.shape,s.shape);const a={a:e,b:s};return P.runKernel(Ru,a)}const er=U({maximum_:ZB});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QB(n,t=null,e=!1){const a={x:O(n,"x","mean")},r={axis:t,keepDims:e};return P.runKernel($d,a,r)}const Le=U({mean_:QB});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tn(n,t="float32"){if($s(n),t==="complex64"){const s=tn(n,"float32"),a=tn(n,"float32");return kr(s,a)}const e=En(ht(n),t);return P.makeTensor(e,n,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ss(n,t="float32"){if($s(n),t==="complex64"){const s=ss(n,"float32"),a=tn(n,"float32");return kr(s,a)}const e=Qm(ht(n),t);return P.makeTensor(e,n,t)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CI(n,t,{indexing:e="xy"}={}){if(e!=="xy"&&e!=="ij")throw new TypeError(`${e} is not a valid third argument to meshgrid`);if(n===void 0)return[];let s=O(n,"x","meshgrid",n instanceof fe?n.dtype:"float32");if(t===void 0)return[s];let a=O(t,"y","meshgrid",t instanceof fe?t.dtype:"float32");const r=ht(s.shape),i=ht(a.shape);return e==="xy"?(s=X(s,[1,-1]),a=X(a,[-1,1]),[jt(ss([i,1],s.dtype),s),jt(a,ss([1,r],a.dtype))]):(s=X(s,[-1,1]),a=X(a,[1,-1]),[jt(s,ss([1,i],s.dtype)),jt(ss([r,1],a.dtype),a)])}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JB(n,t){let e=O(n,"a","minimum"),s=O(t,"b","minimum");[e,s]=Me(e,s),e.dtype==="bool"&&(e=wt(e,"int32"),s=wt(s,"int32")),Ut(e.shape,s.shape);const a={a:e,b:s};return P.runKernel(Du,a)}const Ni=U({minimum_:JB});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t4(n,t,e){D(e==="reflect"||e==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${e}.`);const s=O(n,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");D(t.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`);const a=e==="reflect"?1:0;for(let l=0;l<s.rank;l++)D(t[l].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),D(t[l][0]>=0&&t[l][0]<=s.shape[l]-a&&t[l][1]>=0&&t[l][1]<=s.shape[l]-a,()=>`Padding in dimension ${l} cannot be greater than or equal to ${s.shape[l]-a} or less than 0 for input of shape ${s.shape}`);const r={paddings:t,mode:e},i={x:s};return P.runKernel(Id,i,r)}const Hv=U({mirrorPad_:t4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e4(n,t){let e=O(n,"a","mod"),s=O(t,"b","mod");[e,s]=Me(e,s);const a={a:e,b:s};return P.runKernel(Ou,a)}const jv=U({mod_:e4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n4(n,t=null,e=!1){n=O(n,"x","moments");const s=Xt(t,n.shape),a=Le(n,s,e);let r=a.shape;e||(r=je(a.shape,s));const i=xe($t(wt(n,"float32"),X(a,r))),l=Le(i,s,e);return{mean:a,variance:l}}const cf=U({moments_:n4});function s4(n,t,e,s){const a=O(t,"data","multiRNNCell"),r=Fh(e,"c","multiRNNCell"),i=Fh(s,"h","multiRNNCell");let l=a;const u=[];for(let p=0;p<n.length;p++){const m=n[p](l,r[p],i[p]);u.push(m[0]),u.push(m[1]),l=m[1]}const h=[],f=[];for(let p=0;p<u.length;p+=2)h.push(u[p]),f.push(u[p+1]);return[h,f]}const $I=U({multiRNNCell_:s4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a4(n,t,e,s=!1){const a=O(n,"logits","multinomial"),r=a.size,i=a.rank;if(r<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${r}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);e=e||Math.random();const u={logits:i===1?X(a,[1,-1]):a},h={numSamples:t,seed:e,normalized:s},f=P.runKernel(Ag,u,h);return i===1?X(f,[f.size]):f}const kI=U({multinomial_:a4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r4(n,t){let e=O(n,"a","notEqual","string_or_numeric"),s=O(t,"b","notEqual","string_or_numeric");[e,s]=Me(e,s),Ut(e.shape,s.shape);const a={a:e,b:s};return P.runKernel(Ad,a)}const Io=U({notEqual_:r4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i4(n,t,e=1,s=0,a="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const i={indices:O(n,"indices","oneHot","int32")},l={dtype:a,depth:t,onValue:e,offValue:s};return P.runKernel(Dd,i,l)}const Kl=U({oneHot_:i4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o4(n){const e={x:O(n,"x","onesLike")};return P.runKernel(Rd,e)}const Ns=U({onesLike_:o4});function l4(n,t){const e=O(n,"v1","outerProduct"),s=O(t,"v2","outerProduct");D(e.rank===1&&s.rank===1,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${e.rank} and ${s.rank}.`);const a=X(e,[-1,1]),r=X(s,[1,-1]);return jt(a,r)}const II=U({outerProduct_:l4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u4(n,t,e=0){const s=O(n,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const a={paddings:t,constantValue:e},r={x:s};return P.runKernel(_d,r,a)}const Lr=U({pad_:u4});function c4(n,t,e=0){return D(t.length===2,()=>"Invalid number of paddings. Must be length of 2."),Lr(n,[t],e)}const EI=U({pad1d_:c4});function h4(n,t,e=0){return D(t.length===2&&t[0].length===2&&t[1].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Lr(n,t,e)}const AI=U({pad2d_:h4});function d4(n,t,e=0){return D(t.length===3&&t[0].length===2&&t[1].length===2&&t[2].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Lr(n,t,e)}const RI=U({pad3d_:d4});function f4(n,t,e=0){return D(t.length===4&&t[0].length===2&&t[1].length===2&&t[2].length===2&&t[3].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),Lr(n,t,e)}const DI=U({pad4d_:f4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p4(n,t,e){const s=O(n,"x","spaceToBatchND");D(s.rank>=1+t.length,()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`),D(e.length===t.length,()=>`paddings.shape[0] ${e.length} must be equal to [blockShape] ${t.length}`),D(s.shape.reduce((i,l,u)=>u>0&&u<=t.length?i&&(l+e[u-1][0]+e[u-1][1])%t[u-1]===0:i,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${e.toString()} must be divisible by blockShapes ${t.toString()}`);const a={x:s},r={blockShape:t,paddings:e};return P.runKernel(Wd,a,r)}const hf=U({spaceToBatchND_:p4});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m4(n,t,e,s,a,r,i){a==null&&(a=[1,1]),r==null&&(r=1),s===0&&(s="valid");const l=O(n,"x","maxPool");let u=l,h=!1;l.rank===3&&(h=!0,u=X(l,[1,l.shape[0],l.shape[1],l.shape[2]])),D(Rn(r,a),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${r} and dilations '${a}'`);const f=ua(u.shape,t,r,a,s),p=[f.dilationHeight,f.dilationWidth];let m;s==="same"?m=y4([f.filterHeight,f.filterWidth],p):m=[[0,0],[0,0]];const y=p[0]===1&&p[1]===1,[b,v]=g4([f.inHeight,f.inWidth],p,m),w=y?s:"valid",S=y?u:hf(u,p,b),$=(e==="avg"?()=>tf(S,t,r,w,i):()=>uf(S,t,r,w,i))(),C=y?$:ef($,p,v);return h?X(C,[C.shape[1],C.shape[2],C.shape[3]]):C}function g4(n,t,e){const s=e.map(f=>f[0]),a=e.map(f=>f[1]),r=n.concat(s,a),i=t.map((f,p)=>(f-r[p]%f)%f),l=a.map((f,p)=>f+i[p]),u=t.map((f,p)=>[s[p],l[p]]),h=t.map((f,p)=>[0,i[p]]);return[u,h]}function y4(n,t){const s=n.map((i,l)=>i+(i-1)*(t[l]-1)).map(i=>i-1),a=s.map(i=>Math.floor(i/2)),r=s.map((i,l)=>i-a[l]);return s.map((i,l)=>[a[l],r[l]])}const qv=U({pool_:m4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b4(n,t){const e=O(n,"x","prelu"),s=O(t,"alpha","prelu"),a={x:e,alpha:s};return P.runKernel(Fd,a)}const df=U({prelu_:b4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x4(n,t=null,e=!1){let s=O(n,"x","prod");s.dtype==="bool"&&(s=wt(s,"int32"));const a={x:s},r={axis:t,keepDims:e};return P.runKernel(Ld,a,r)}const Xv=U({prod_:x4});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v4(n,t,e,s){const a=n.map((f,p)=>O(f,`tensors${p}`,"raggedGather","int32")),r=O(t,"paramsDenseValues","raggedGather"),i=O(e,"indices","raggedGather","int32"),l={paramsNestedSplits:a,paramsDenseValues:r,indices:i},u={outputRaggedRank:s},h=P.runKernel(_g,l,u);return{outputNestedSplits:h.slice(0,h.length-1),outputDenseValues:h[h.length-1]}}const OI=U({raggedGather_:v4});/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w4(n,t,e){const s=O(n,"starts","raggedRange"),a=O(t,"limits","raggedRange",s.dtype),r=O(e,"deltas","raggedRange",s.dtype),i={starts:s,limits:a,deltas:r},l=P.runKernel(Fg,i);return{rtNestedSplits:l[0],rtDenseValues:l[1]}}const _I=U({raggedRange_:w4});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S4(n,t,e,s,a){const r=O(n,"shape","raggedTensorToTensor","int32"),i=O(t,"values","raggedTensorToTensor"),l=O(e,"defaultValue","raggedTensorToTensor",i.dtype),u=s.map((p,m)=>O(p,`tensors${m}`,"raggedTensorToTensor","int32")),h={shape:r,values:i,defaultValue:l,rowPartitionTensors:u},f={rowPartitionTypes:a};return P.runKernel(Lg,h,f)}const FI=U({raggedTensorToTensor_:S4});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N4(n,t,e){$s(n);const s=ht(n);let a=null;if(e==null||e==="float32")a=new Float32Array(s);else if(e==="int32")a=new Int32Array(s);else if(e==="bool")a=new Uint8Array(s);else throw new Error(`Unknown data type ${e}`);for(let r=0;r<s;r++)a[r]=t();return P.makeTensor(a,n,e)}const LI=U({rand_:N4});var cm={exports:{}},T4=cm.exports,HC;function C4(){return HC||(HC=1,function(n){(function(t,e,s){function a(u){var h=this,f=l();h.next=function(){var p=2091639*h.s0+h.c*23283064365386963e-26;return h.s0=h.s1,h.s1=h.s2,h.s2=p-(h.c=p|0)},h.c=1,h.s0=f(" "),h.s1=f(" "),h.s2=f(" "),h.s0-=f(u),h.s0<0&&(h.s0+=1),h.s1-=f(u),h.s1<0&&(h.s1+=1),h.s2-=f(u),h.s2<0&&(h.s2+=1),f=null}function r(u,h){return h.c=u.c,h.s0=u.s0,h.s1=u.s1,h.s2=u.s2,h}function i(u,h){var f=new a(u),p=h&&h.state,m=f.next;return m.int32=function(){return f.next()*4294967296|0},m.double=function(){return m()+(m()*2097152|0)*11102230246251565e-32},m.quick=m,p&&(typeof p=="object"&&r(p,f),m.state=function(){return r(f,{})}),m}function l(){var u=4022871197,h=function(f){f=String(f);for(var p=0;p<f.length;p++){u+=f.charCodeAt(p);var m=.02519603282416938*u;u=m>>>0,m-=u,m*=u,u=m>>>0,m-=u,u+=m*4294967296}return(u>>>0)*23283064365386963e-26};return h}e&&e.exports?e.exports=i:this.alea=i})(T4,n)}(cm)),cm.exports}var hm={exports:{}},$4=hm.exports,jC;function k4(){return jC||(jC=1,function(n){(function(t,e,s){function a(l){var u=this,h="";u.x=0,u.y=0,u.z=0,u.w=0,u.next=function(){var p=u.x^u.x<<11;return u.x=u.y,u.y=u.z,u.z=u.w,u.w^=u.w>>>19^p^p>>>8},l===(l|0)?u.x=l:h+=l;for(var f=0;f<h.length+64;f++)u.x^=h.charCodeAt(f)|0,u.next()}function r(l,u){return u.x=l.x,u.y=l.y,u.z=l.z,u.w=l.w,u}function i(l,u){var h=new a(l),f=u&&u.state,p=function(){return(h.next()>>>0)/4294967296};return p.double=function(){do var m=h.next()>>>11,y=(h.next()>>>0)/4294967296,b=(m+y)/(1<<21);while(b===0);return b},p.int32=h.next,p.quick=p,f&&(typeof f=="object"&&r(f,h),p.state=function(){return r(h,{})}),p}e&&e.exports?e.exports=i:this.xor128=i})($4,n)}(hm)),hm.exports}var dm={exports:{}},I4=dm.exports,qC;function E4(){return qC||(qC=1,function(n){(function(t,e,s){function a(l){var u=this,h="";u.next=function(){var p=u.x^u.x>>>2;return u.x=u.y,u.y=u.z,u.z=u.w,u.w=u.v,(u.d=u.d+362437|0)+(u.v=u.v^u.v<<4^(p^p<<1))|0},u.x=0,u.y=0,u.z=0,u.w=0,u.v=0,l===(l|0)?u.x=l:h+=l;for(var f=0;f<h.length+64;f++)u.x^=h.charCodeAt(f)|0,f==h.length&&(u.d=u.x<<10^u.x>>>4),u.next()}function r(l,u){return u.x=l.x,u.y=l.y,u.z=l.z,u.w=l.w,u.v=l.v,u.d=l.d,u}function i(l,u){var h=new a(l),f=u&&u.state,p=function(){return(h.next()>>>0)/4294967296};return p.double=function(){do var m=h.next()>>>11,y=(h.next()>>>0)/4294967296,b=(m+y)/(1<<21);while(b===0);return b},p.int32=h.next,p.quick=p,f&&(typeof f=="object"&&r(f,h),p.state=function(){return r(h,{})}),p}e&&e.exports?e.exports=i:this.xorwow=i})(I4,n)}(dm)),dm.exports}var fm={exports:{}},A4=fm.exports,XC;function R4(){return XC||(XC=1,function(n){(function(t,e,s){function a(l){var u=this;u.next=function(){var f=u.x,p=u.i,m,y;return m=f[p],m^=m>>>7,y=m^m<<24,m=f[p+1&7],y^=m^m>>>10,m=f[p+3&7],y^=m^m>>>3,m=f[p+4&7],y^=m^m<<7,m=f[p+7&7],m=m^m<<13,y^=m^m<<9,f[p]=y,u.i=p+1&7,y};function h(f,p){var m,y=[];if(p===(p|0))y[0]=p;else for(p=""+p,m=0;m<p.length;++m)y[m&7]=y[m&7]<<15^p.charCodeAt(m)+y[m+1&7]<<13;for(;y.length<8;)y.push(0);for(m=0;m<8&&y[m]===0;++m);for(m==8?y[7]=-1:y[m],f.x=y,f.i=0,m=256;m>0;--m)f.next()}h(u,l)}function r(l,u){return u.x=l.x.slice(),u.i=l.i,u}function i(l,u){l==null&&(l=+new Date);var h=new a(l),f=u&&u.state,p=function(){return(h.next()>>>0)/4294967296};return p.double=function(){do var m=h.next()>>>11,y=(h.next()>>>0)/4294967296,b=(m+y)/(1<<21);while(b===0);return b},p.int32=h.next,p.quick=p,f&&(f.x&&r(f,h),p.state=function(){return r(h,{})}),p}e&&e.exports?e.exports=i:this.xorshift7=i})(A4,n)}(fm)),fm.exports}var pm={exports:{}},D4=pm.exports,KC;function O4(){return KC||(KC=1,function(n){(function(t,e,s){function a(l){var u=this;u.next=function(){var f=u.w,p=u.X,m=u.i,y,b;return u.w=f=f+1640531527|0,b=p[m+34&127],y=p[m=m+1&127],b^=b<<13,y^=y<<17,b^=b>>>15,y^=y>>>12,b=p[m]=b^y,u.i=m,b+(f^f>>>16)|0};function h(f,p){var m,y,b,v,w,S=[],T=128;for(p===(p|0)?(y=p,p=null):(p=p+"\0",y=0,T=Math.max(T,p.length)),b=0,v=-32;v<T;++v)p&&(y^=p.charCodeAt((v+32)%p.length)),v===0&&(w=y),y^=y<<10,y^=y>>>15,y^=y<<4,y^=y>>>13,v>=0&&(w=w+1640531527|0,m=S[v&127]^=y+w,b=m==0?b+1:0);for(b>=128&&(S[(p&&p.length||0)&127]=-1),b=127,v=4*128;v>0;--v)y=S[b+34&127],m=S[b=b+1&127],y^=y<<13,m^=m<<17,y^=y>>>15,m^=m>>>12,S[b]=y^m;f.w=w,f.X=S,f.i=b}h(u,l)}function r(l,u){return u.i=l.i,u.w=l.w,u.X=l.X.slice(),u}function i(l,u){l==null&&(l=+new Date);var h=new a(l),f=u&&u.state,p=function(){return(h.next()>>>0)/4294967296};return p.double=function(){do var m=h.next()>>>11,y=(h.next()>>>0)/4294967296,b=(m+y)/(1<<21);while(b===0);return b},p.int32=h.next,p.quick=p,f&&(f.X&&r(f,h),p.state=function(){return r(h,{})}),p}e&&e.exports?e.exports=i:this.xor4096=i})(D4,n)}(pm)),pm.exports}var mm={exports:{}},_4=mm.exports,YC;function F4(){return YC||(YC=1,function(n){(function(t,e,s){function a(l){var u=this,h="";u.next=function(){var p=u.b,m=u.c,y=u.d,b=u.a;return p=p<<25^p>>>7^m,m=m-y|0,y=y<<24^y>>>8^b,b=b-p|0,u.b=p=p<<20^p>>>12^m,u.c=m=m-y|0,u.d=y<<16^m>>>16^b,u.a=b-p|0},u.a=0,u.b=0,u.c=-1640531527,u.d=1367130551,l===Math.floor(l)?(u.a=l/4294967296|0,u.b=l|0):h+=l;for(var f=0;f<h.length+20;f++)u.b^=h.charCodeAt(f)|0,u.next()}function r(l,u){return u.a=l.a,u.b=l.b,u.c=l.c,u.d=l.d,u}function i(l,u){var h=new a(l),f=u&&u.state,p=function(){return(h.next()>>>0)/4294967296};return p.double=function(){do var m=h.next()>>>11,y=(h.next()>>>0)/4294967296,b=(m+y)/(1<<21);while(b===0);return b},p.int32=h.next,p.quick=p,f&&(typeof f=="object"&&r(f,h),p.state=function(){return r(h,{})}),p}e&&e.exports?e.exports=i:this.tychei=i})(_4,n)}(mm)),mm.exports}var gm={exports:{}};const L4={},z4=Object.freeze(Object.defineProperty({__proto__:null,default:L4},Symbol.toStringTag,{value:"Module"})),M4=W1(z4);var B4=gm.exports,ZC;function V4(){return ZC||(ZC=1,function(n){(function(t,e,s){var a=256,r=6,i=52,l="random",u=s.pow(a,r),h=s.pow(2,i),f=h*2,p=a-1,m;function y(C,I,R){var F=[];I=I==!0?{entropy:!0}:I||{};var B=S(w(I.entropy?[C,$(e)]:C??T(),3),F),L=new b(F),z=function(){for(var A=L.g(r),G=u,Q=0;A<h;)A=(A+Q)*a,G*=a,Q=L.g(1);for(;A>=f;)A/=2,G/=2,Q>>>=1;return(A+Q)/G};return z.int32=function(){return L.g(4)|0},z.quick=function(){return L.g(4)/4294967296},z.double=z,S($(L.S),e),(I.pass||R||function(A,G,Q,tt){return tt&&(tt.S&&v(tt,L),A.state=function(){return v(L,{})}),Q?(s[l]=A,G):A})(z,B,"global"in I?I.global:this==s,I.state)}function b(C){var I,R=C.length,F=this,B=0,L=F.i=F.j=0,z=F.S=[];for(R||(C=[R++]);B<a;)z[B]=B++;for(B=0;B<a;B++)z[B]=z[L=p&L+C[B%R]+(I=z[B])],z[L]=I;(F.g=function(A){for(var G,Q=0,tt=F.i,J=F.j,V=F.S;A--;)G=V[tt=p&tt+1],Q=Q*a+V[p&(V[tt]=V[J=p&J+G])+(V[J]=G)];return F.i=tt,F.j=J,Q})(a)}function v(C,I){return I.i=C.i,I.j=C.j,I.S=C.S.slice(),I}function w(C,I){var R=[],F=typeof C,B;if(I&&F=="object")for(B in C)try{R.push(w(C[B],I-1))}catch{}return R.length?R:F=="string"?C:C+"\0"}function S(C,I){for(var R=C+"",F,B=0;B<R.length;)I[p&B]=p&(F^=I[p&B]*19)+R.charCodeAt(B++);return $(I)}function T(){try{var C;return m&&(C=m.randomBytes)?C=C(a):(C=new Uint8Array(a),(t.crypto||t.msCrypto).getRandomValues(C)),$(C)}catch{var I=t.navigator,R=I&&I.plugins;return[+new Date,t,R,t.screen,$(e)]}}function $(C){return String.fromCharCode.apply(0,C)}if(S(s.random(),e),n.exports){n.exports=y;try{m=M4}catch{}}else s["seed"+l]=y})(typeof self<"u"?self:B4,[],Math)}(gm)),gm.exports}var _x,QC;function P4(){if(QC)return _x;QC=1;var n=C4(),t=k4(),e=E4(),s=R4(),a=O4(),r=F4(),i=V4();return i.alea=n,i.xor128=t,i.xorwow=e,i.xorshift7=s,i.xor4096=a,i.tychei=r,_x=i,_x}var by=P4();/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U4=.001,zI=.1;function G4(n,t,e){return e==null&&(e=Kv()),h1(n,t,(s,a)=>Yv(s,a,e))}function Kv(){return P.backend.floatPrecision()===32?U4:zI}function h1(n,t,e){let s=!0;if((gn(n)||gn(t))&&(s=!1),gn(n)&&gn(t)&&(s=!0),s){const i=n.constructor.name,l=t.constructor.name;if(i!==l)throw new Error(`Arrays are of different type. Actual: ${i}. Expected: ${l}`)}if(Array.isArray(n)&&Array.isArray(t)){const i=Ya(n),l=Ya(t);if(!Zt(i,l))throw new Error(`Arrays have different shapes. Actual: [${i}]. Expected: [${l}]`)}const a=gn(n)?n:Ka(n),r=gn(t)?t:Ka(t);if(a.length!==r.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${r.length}.
Actual:   ${a}.
Expected: ${r}.`);for(let i=0;i<r.length;++i){const l=a[i],u=r[i];if(!e(l,u))throw new Error(`Arrays differ: actual[${i}] = ${l}, expected[${i}] = ${u}.
Actual:   ${a}.
Expected: ${r}.`)}typeof expect<"u"&&expect().nothing()}function W4(n,t){n().then(()=>t.fail(),()=>t()),typeof expect<"u"&&expect().nothing()}function H4(n,t){const e=typeof t=="string"||typeof t=="number"||typeof t=="boolean"?[t]:t;return Ua(n)||Ua(n[0])||Ua(t)||Ua(t[0])?h1(n,e,(s,a)=>s==a):h1(n,t,(s,a)=>Yv(s,a,0))}function j4(n,t,e){if(e==null&&(e=Kv()),!Yv(n,t,e))throw new Error(`Numbers differ: actual === ${n}, expected === ${t}`);typeof expect<"u"&&expect().nothing()}function Yv(n,t,e){return!isFinite(n)&&!isFinite(t)?!0:!(isNaN(n)||isNaN(t)||Math.abs(n-t)>e)}function q4(n,t,e){for(let s=0;s<n.length;s++)if(n[s]<t||n[s]>e)throw new Error(`Value out of range:${n[s]} low: ${t}, high: ${e}`)}function X4(n,t){const e=new Float32Array(n),s=new Float32Array(t);if(e.length!==s.length)throw new Error(`Expected ArrayBuffer to be of length ${s.length}, but it was ${e.length}`);for(let a=0;a<s.length;a++)if(e[a]!==s[a])throw new Error(`Expected ArrayBuffer value at ${a} to be ${s[a]} but got ${e[a]} instead`)}function MI(n){for(let t=0;t<n.length;t++){const e=n[t];Array.isArray(e)?MI(e):n[t]=Wa(e)}return n}function K4(n){const t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(n),new Promise(e=>{t.addEventListener("loadeddata",s=>e(t)),t.load()})}async function Y4(n){await n.play(),"requestVideoFrameCallback"in n&&await new Promise(t=>{n.requestVideoFrameCallback(t)})}const Z4=Object.freeze(Object.defineProperty({__proto__:null,TEST_EPSILON_FLOAT16:zI,createVideoElement:K4,encodeStrings:MI,expectArrayBuffersEqual:X4,expectArraysClose:G4,expectArraysEqual:H4,expectNumbersClose:j4,expectPromiseToFail:W4,expectValuesInRange:q4,play:Y4,testEpsilon:Kv},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zv{constructor(t,e,s,a,r){this.mean=t,this.stdDev=e,this.dtype=s,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const i=r||Math.random();this.random=by.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const a=this.nextVal;return this.nextVal=NaN,a}let t,e,s=!1;for(;!s;){let a,r,i;do a=2*this.random()-1,r=2*this.random()-1,i=a*a+r*r;while(i>=1||i===0);const l=Math.sqrt(-2*Math.log(i)/i);t=this.mean+this.stdDev*a*l,e=this.mean+this.stdDev*r*l,(!this.truncated||this.isValidTruncated(t))&&(s=!0)}return(!this.truncated||this.isValidTruncated(e))&&(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return this.dtype==null||this.dtype==="float32"?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class Q4{constructor(t,e,s,a){this.alpha=t,this.beta=1/e,this.dtype=s;const r=a||Math.random();this.randu=by.alea(r.toString()),this.randn=new Zv(0,1,s,!1,this.randu()),t<1?this.d=t+2/3:this.d=t-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let t,e,s,a,r,i;for(;;){do a=this.randn.nextValue(),i=1+this.c*a;while(i<=0);if(i*=i*i,t=a*a,e=1-.331*t*t,s=.5*t+this.d*(1-i+Math.log(i)),r=this.randu(),r<e||Math.log(r)<s)break}return i=1/this.beta*this.d*i,this.alpha<1&&(i*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(i)}convertValue(t){return this.dtype==="float32"?t:Math.round(t)}}class J4{constructor(t=0,e=1,s,a){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=t,this.range=e-t,this.dtype=s,a==null&&(a=Math.random()),typeof a=="number"&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=by.alea(a)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tV(n,t,e=1,s="float32",a){if($s(n),e==null&&(e=1),s==null&&(s="float32"),s!=="float32"&&s!=="int32")throw new Error(`Unsupported data type ${s}`);const r=new Q4(t,e,s,a),i=Gt(n,s);for(let l=0;l<i.values.length;l++)i.values[l]=r.nextValue();return i.toTensor()}const BI=U({randomGamma_:tV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eV(n,t=0,e=1,s,a){if($s(n),s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const r=new Zv(t,e,s,!1,a),i=Gt(n,s);for(let l=0;l<i.values.length;l++)i.values[l]=r.nextValue();return i.toTensor()}const xy=U({randomNormal_:eV});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nV(n,t,e){if(t!=null&&t==="bool")throw new Error(`Unsupported data type ${t}`);return xy(n,0,1,t,e)}const VI=U({randomStandardNormal_:nV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sV(n,t=0,e=1,s="float32",a){$s(n);const r=Gt(n,s),i=new J4(t,e,null,a);for(let l=0;l<r.values.length;l++)r.values[l]=i.nextValue();return r.toTensor()}const _i=U({randomUniform_:sV});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aV(n,t,e,s){return _i(n,t,e,"int32",s)}const PI=U({randomUniformInt_:aV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eo(n,t,e=1,s="float32"){if(e===0)throw new Error("Cannot have a step of zero");const a={start:n,stop:t,step:e,dtype:s};return P.runKernel(zg,{},a)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rV(n){const e={input:O(n,"input","real")};return P.runKernel(Mg,e)}const Yl=U({real_:rV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iV(n){const e={x:O(n,"x","reciprocal")};return P.runKernel(Lu,e)}const Qv=U({reciprocal_:iV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oV(n){const e={x:O(n,"x","relu")};return P.runKernel(zu,e)}const Aa=U({relu_:oV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lV(n){const e={x:O(n,"x","relu6")};return P.runKernel(Mu,e)}const vy=U({relu6_:lV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uV(n,t){const s={x:O(n,"x","reverse")},a={dims:t};return P.runKernel(Vd,s,a)}const Us=U({reverse_:uV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cV(n){const t=O(n,"x","reverse");return D(t.rank===1,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Us(t,0)}const UI=U({reverse1d_:cV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hV(n,t){const e=O(n,"x","reverse");return D(e.rank===2,()=>`Error in reverse2D: x must be rank 2 but got rank ${e.rank}.`),Us(e,t)}const GI=U({reverse2d_:hV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dV(n,t){const e=O(n,"x","reverse");return D(e.rank===3,()=>`Error in reverse3D: x must be rank 3 but got rank ${e.rank}.`),Us(e,t)}const WI=U({reverse3d_:dV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fV(n,t){const e=O(n,"x","reverse");return D(e.rank===4,()=>`Error in reverse4D: x must be rank 4 but got rank ${e.rank}.`),Us(e,t)}const HI=U({reverse4d_:fV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pV(n){const e={x:O(n,"x","round")};return P.runKernel(Bu,e)}const wy=U({round_:pV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mV(n){const e={x:O(n,"x","rsqrt","float32")};return P.runKernel(Vu,e)}const Sy=U({rsqrt_:mV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gV(n){const e={x:O(n,"x","selu")};return P.runKernel(Pu,e)}const Ny=U({selu_:gV});function yV(n,t,e,s,a,r=[1,1],i="NHWC"){const l=O(n,"x","separableConv2d"),u=O(t,"depthwiseFilter","separableConv2d"),h=O(e,"pointwiseFilter","separableConv2d");let f=l,p=!1;if(l.rank===3&&(p=!0,f=X(l,[1,l.shape[0],l.shape[1],l.shape[2]])),i==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");D(f.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${f.rank}.`),D(u.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),D(h.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),D(h.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${h.shape[0]}.`),D(h.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${h.shape[1]}.`);const m=u.shape[2],y=u.shape[3];D(h.shape[2]===m*y,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${m*y}, but got ${h.shape[2]}.`);const b=ec(f,u,s,a,i,r),w=Ir(b,h,1,"valid",i);return p?X(w,[w.shape[1],w.shape[2],w.shape[3]]):w}const Ty=U({separableConv2d_:yV});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function bV(n,t){const e=O(n,"x","setdiff1d"),s=O(t,"y","setdiff1d");D(e.dtype===s.dtype,()=>`x and y should have the same dtype, but got x (${e.dtype}) and y (${s.dtype}).`),D(e.rank===1,()=>`x should be 1D tensor, but got x (${e.shape}).`),D(s.rank===1,()=>`y should be 1D tensor, but got y (${s.shape}).`);const a=await e.data(),r=await s.data(),i=new Set(r);let l=0;for(let f=0;f<a.length;f++)i.has(a[f])||l++;const u=new en([l],e.dtype),h=new en([l],"int32");for(let f=0,p=0;f<a.length;f++)i.has(a[f])||(u.values[p]=a[f],h.values[p]=f,p++);return[u.toTensor(),h.toTensor()]}const jI=bV;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xV(n){const e={x:O(n,"x","sign")};return P.runKernel(Wu,e)}const Jv=U({sign_:xV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vV(n){const e={x:O(n,"x","sin","float32")};return P.runKernel(Uu,e)}const Cy=U({sin_:vV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wV(n){const e={x:O(n,"x","sinh")};return P.runKernel(Gu,e)}const $y=U({sinh_:wV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SV(n,t,e){const s=O(n,"x","slice1d");return D(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),ne(s,[t],[e])}const ff=U({slice1d_:SV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NV(n,t,e){const s=O(n,"x","slice2d");return D(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),ne(s,t,e)}const ky=U({slice2d_:NV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TV(n,t,e){const s=O(n,"x","slice3d");return D(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),ne(s,t,e)}const pf=U({slice3d_:TV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CV(n,t,e){const s=O(n,"x","slice4d");return D(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),ne(s,t,e)}const Zl=U({slice4d_:CV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $V(n,t=-1){const e=O(n,"logits","softmax","float32");if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${e.rank} and dim was ${t}`);const s={logits:e},a={dim:t};return P.runKernel(jd,s,a)}const mf=U({softmax_:$V});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kV(n){D(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const t={input:n};return P.runKernel(xg,t)}const gf=U({fft_:kV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IV(n){D(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const t={input:n};return P.runKernel(Ng,t)}const Ql=U({ifft_:IV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EV(n){const t=n.shape[n.shape.length-1],e=n.size/t;let s;if(t<=2){const a=X(n,[e,t]);s=Ql(a)}else{const a=[e,2*(t-1)],r=X(Yl(n),[e,t]),i=X(sf(n),[e,t]),l=Us(ne(r,[0,1],[e,t-2]),1),u=H(Us(ne(i,[0,1],[e,t-2]),1),_t(-1)),h=He([r,l],1),f=He([i,u],1),p=X(kr(h,f),[a[0],a[1]]);s=Ql(p)}if(s=Yl(s),n.rank===3&&n.shape[0]!==0){const a=s,r=n.shape[0];s=X(s,[r,s.shape[0]/r,s.shape[1]]),a.dispose()}return s}const Iy=U({irfft_:EV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AV(n,t,e=0){const a={x:O(n,"x","split")},r={numOrSizeSplits:t,axis:e};return P.runKernel(Hd,a,r)}const as=U({split_:AV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RV(n,t){D(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let e=n.shape[n.shape.length-1];const s=n.size/e;let a;if(t!=null&&t<e){const b=n.shape.map(w=>0),v=n.shape.map(w=>w);v[n.shape.length-1]=t,a=ne(n,b,v),e=t}else if(t!=null&&t>e){const b=n.shape.map(v=>v);b[n.shape.length-1]=t-e,a=He([n,tn(b)],n.shape.length-1),e=t}else a=n;const r=se(a),i=X(kr(a,r),[s,e]),l=gf(i),u=Math.floor(e/2)+1,h=Yl(l),f=sf(l),p=as(h,[u,e-u],h.shape.length-1),m=as(f,[u,e-u],f.shape.length-1),y=a.shape.slice();return y[a.shape.length-1]=u,X(kr(p[0],m[0]),y)}const yf=U({rfft_:RV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DV(n,t){let e=O(n,"a","squaredDifference"),s=O(t,"b","squaredDifference");[e,s]=Me(e,s),Ut(e.shape,s.shape);const a={a:e,b:s},r={};return P.runKernel(Xu,a,r)}const Ey=U({squaredDifference_:DV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OV(n,t){const e=O(n,"x","squeeze","string_or_numeric");return X(e,Rr(e.shape,t).newShape)}const Fi=U({squeeze_:OV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _V(n,t=0){const e=Fh(n,"tensors","stack","string_or_numeric");D(e.length>=1,()=>"Pass at least one tensor to tf.stack"),e.length>0&&D(t<=e[0].rank,()=>"Axis must be <= rank of the tensor");const s=e,a={axis:t};return P.runKernel(Od,s,a)}const us=U({stack_:_V});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FV(n,t=0){const s={x:O(n,"x","step")},a={alpha:t};return P.runKernel(Ju,s,a)}const Uo=U({step_:FV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LV(n,t,e,s,a=0,r=0,i=0,l=0,u=0){const f={x:O(n,"x","stridedSlice","string_or_numeric")},p={begin:t,end:e,strides:s,beginMask:a,endMask:r,ellipsisMask:i,newAxisMask:l,shrinkAxisMask:u};return P.runKernel(Yg,f,p)}const tw=U({stridedSlice_:LV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zV(n){const e={x:O(n,"x","tan","float32")};return P.runKernel(Yu,e)}const ew=U({tan_:zV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vn(n,t){Lo(n);const e=Ya(n,t);if(e.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Ai(n,null,e,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ul(n,t,e){if(Lo(n),t!=null&&t.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=Ya(n,e);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Ai(n,t,s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nw(n,t,e){if(Lo(n),t!=null&&t.length!==3)throw new Error("tensor3d() requires shape to have three numbers");const s=Ya(n,e);if(s.length!==3&&s.length!==1)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Ai(n,t,s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qI(n,t,e){if(Lo(n),t!=null&&t.length!==4)throw new Error("tensor4d() requires shape to have four numbers");const s=Ya(n,e);if(s.length!==4&&s.length!==1)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Ai(n,t,s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XI(n,t,e){if(Lo(n),t!=null&&t.length!==5)throw new Error("tensor5d() requires shape to have five numbers");const s=Ya(n,e);if(s.length!==5&&s.length!==1)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Ai(n,t,s,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KI(n,t,e){if(Lo(n),t!=null&&t.length!==6)throw new Error("tensor6d() requires shape to have six numbers");const s=Ya(n,e);if(s.length!==6&&s.length!==1)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(s.length===1&&t==null)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||s,Ai(n,t,s,e)}function sw(n,t,e){const s=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,r=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${e.shape}, indices.shape: ${t.shape}, shape: ${n}, sliceDim: ${s}, and batchDim: ${a}.`;if(e.rank<a)throw new Error(r+` update.rank < ${a}. `);if(n.length<s+(e.rank-a))throw new Error(r+` Output shape length < ${s+(e.rank-a)}`);if(e.rank!==a+n.length-s)throw new Error(r+` update.rank != ${a+n.length-s}`);for(let i=0;i<a;++i)if(e.shape[i]!==t.shape[i])throw new Error(r+` updates.shape[${i}] (${e.shape[i]}) != indices.shape[${i}] (${t.shape[i]}).`);for(let i=0;i<e.rank-a;++i)if(e.shape[i+a]!==n[i+s])throw new Error(r+` updates.shape[${i+a}] (${e.shape[i+a]}) != shape[${i+a}] (${n[i+a]})`)}function Ay(n,t,e){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(t.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(e.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${e}`);if(e.length===0){if(t.size===0)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}sw(e,t,n)}function Li(n,t,e){const s=t.shape.length,a=s>1?t.shape[s-1]:1,r=e.length;let i=1;for(let p=a;p<r;++p)i*=e[p];const l=a<1?1:a,u=ht(t.shape)/l,h=[...Ot(e.slice(0,a)),1],f=ht(e);return{sliceRank:a,numUpdates:u,sliceSize:i,strides:h,outputSize:f}}const MV=Object.freeze(Object.defineProperty({__proto__:null,calculateShapes:Li,validateInput:Ay,validateUpdateShape:sw},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BV(n,t,e){const s=O(n,"tensor","tensorScatterupdate"),a=O(t,"indices","tensorScatterupdate","int32"),r=O(e,"updates","tensorScatterupdate");if(Ay(r,a,s.shape),s.dtype!==r.dtype)throw new Error(`tensor and updates must have the same dtype, instead they are ${s.dtype} and ${r.dtype}.`);const i={tensor:s,indices:a,updates:r},l={};return P.runKernel(Ug,i,l)}const YI=U({tensorScatterUpdate_:BV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VV(n,t=1,e=!0){const s=O(n,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const a=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);const r={x:s},i={k:t,sorted:e},[l,u]=P.runKernel(ty,r,i);return{values:l,indices:u}}const aw=U({topk_:VV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PV(n,t=0,e=1,s,a){if($s(n),s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const r=new Zv(t,e,s,!0,a),i=Gt(n,s);for(let l=0;l<i.values.length;l++)i.values[l]=r.nextValue();return i.toTensor()}const Ry=U({truncatedNormal_:PV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UV(n,t=0){const e=O(n,"x","unique","string_or_numeric");D(e.rank>0,()=>"The input tensor must be at least 1D");const s={x:e},a={axis:t},[r,i]=P.runKernel(ny,s,a);return{values:r,indices:i}}const rw=U({unique_:UV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GV(n,t,e){const s=O(n,"x","unsortedSegmentSum"),a=O(t,"segmentIds","unsortedSegmentSum","int32");D(wo(e),()=>"numSegments must be of dtype int");const r={x:s,segmentIds:a},i={numSegments:e};return P.runKernel(Kd,r,i)}const Dy=U({unsortedSegmentSum_:GV});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WV(n,t=0){const e=O(n,"x","unstack","string_or_numeric");D(t>=-e.shape.length&&t<e.shape.length,()=>`Axis = ${t} is not in [-${e.shape.length}, ${e.shape.length})`);const s={value:e},a={axis:t};return P.runKernel(Xd,s,a)}const Gs=U({unstack_:WV});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZI(n,t){return yy(n,t,"right")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iw(n,t=!0,e,s){return P.makeVariable(n,t,e,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oy(n,t){const e=[];for(let r=0;r<t.length;r++)t[r]&&e.push(r);const s=Gt(n,"int32"),a=Gt([e.length,n.length],"int32");for(let r=0;r<e.length;r++){const i=s.indexToLoc(e[r]),l=r*n.length;a.values.set(i,l)}return a.toTensor()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function HV(n){const t=O(n,"condition","whereAsync","bool"),e=await t.data(),s=Oy(t.shape,e);return n!==t&&t.dispose(),s}const ow=HV;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function jV(n,t,e){const s=O(n,"tensor","boolMask"),a=O(t,"mask","boolMask","bool"),r=e??0,i=a.rank,l=s.shape;D(i>0,()=>"mask cannot be scalar"),An(l.slice(r,r+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let v=r;v<r+i;v++)u*=l[v];const h=l.slice(0,r).concat([u],l.slice(r+i)),f=X(s,h),p=X(a,[-1]),m=await ow(p),y=Fi(m,[1]),b=rc(f,y,r);return n!==s&&s.dispose(),t!==a&&a.dispose(),y.dispose(),f.dispose(),p.dispose(),m.dispose(),b}const QI=jV;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qV(n,t,e){const s=O(n,"x","transpose");if(t==null&&(t=s.shape.map((i,l)=>l).reverse()),D(s.rank===t.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${t}.`),t.forEach(i=>{D(i>=0&&i<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${t}`)}),s.rank<=1)return s.clone();const a={x:s},r={perm:t};return s.dtype==="complex64"?at(()=>{let i=Yl(s),l=sf(s);return i=P.runKernel(yo,{x:i},r),l=P.runKernel(yo,{x:l},r),e&&(l=Ee(l)),kr(i,l)}):P.runKernel(yo,a,r)}const Jt=U({transpose_:qV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XV(n,t,e,s,a=!0){const r=O(n,"v","movingAverage"),i=O(t,"x","movingAverage"),l=O(e,"decay","movingAverage");Xk(r,i),D(Zt(r.shape,i.shape),()=>"Shape mismatch in v and x");const u=_t(1),h=$t(u,l);let f=H($t(i,r),h);if(a){D(s!=null,()=>"When using zeroDebias: true, step is required.");const p=O(s,"step","movingAverage");f=Rt(f,$t(u,Za(l,p)))}return xt(r,f)}const JI=U({movingAverage_:XV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KV(n,t,e){$s(e);const s=O(n,"indices","scatterND","int32"),a=O(t,"updates","scatterND");Ay(a,s,e);const r={indices:s,updates:a},i={shape:e};return P.runKernel(Pg,r,i)}const tE=U({scatterND_:KV});function YV(n,t,e,s){if(n.dtype!=="int32")throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${n.dtype}.`);if(n.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${n.shape}.`);const a=n.rank>0?n.shape[0]:1,r=n.rank>1?n.shape[1]:1;if(e.length!==r)throw new Error(`outputShape has incorrect number of elements:, ${e.length}, should be: ${r}.`);const i=t.size;if(!(t.rank===0||t.rank===1&&i===a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZV(n,t,e,s=0){$s(e);const a=O(n,"sparseIndices","sparseToDense","int32"),r=O(t,"sparseValues","sparseToDense","string_or_numeric"),i=O(s,"defaultValue","sparseToDense",r.dtype);YV(a,r,e,i);const l={sparseIndices:a,sparseValues:r,defaultValue:i},u={outputShape:e};return P.runKernel(Xg,l,u)}const eE=U({sparseToDense_:ZV});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QV(n,t){const e=O(t,"indices","gatherND","int32"),a={params:O(n,"x","gatherND","string_or_numeric"),indices:e};return P.runKernel(Sg,a)}const nE=U({gatherND_:QV});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JV(n,t){if(t==null)return n.shape.slice();if(Zt(n.shape,t))return t;if(n.shape.length===t.length){const e=[];for(let s=0;s<n.shape.length;s++)t[s]==null&&n.shape[s]!=null?e.push(n.shape[s]):e.push(t[s]);return e}return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tP(n,t,e,s){const a=O(n,"x","dropout");if(D(a.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`),D(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),t===0)return n instanceof fe?a.clone():a;const r=JV(a,e),i=1-t,l=Rt(ac(xt(_i(r,0,1,"float32",s),i)),i);return H(a,l)}const lw=U({dropout_:tP});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uw(n){return Math.floor(Math.pow(2,Math.ceil(Math.log(n)/Math.log(2))))}function _y(n,t,e){const s=1-n%2,a=new Float32Array(n);for(let r=0;r<n;++r){const i=2*Math.PI*r/(n+s-1);a[r]=t-e*Math.cos(i)}return Vn(a,"float32")}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function eP(n,t,e=1){const s=O(n,"predictions","inTopK"),a=O(t,"targets","inTopK");D(s.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`),D(s.rank-1===a.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${a.rank}`),An(s.shape.slice(0,s.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const r=s.shape[s.shape.length-1];D(e>0&&e<=r,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${r}), but got ${e}`);const i=await s.data(),l=await a.data(),[u,h]=[i.length/r,r],f=bn("bool",u);for(let p=0;p<u;p++){const m=p*h,y=i.subarray(m,m+h),b=[];for(let v=0;v<y.length;v++)b.push({value:y[v],index:v});b.sort((v,w)=>w.value-v.value),f[p]=0;for(let v=0;v<e;v++)if(b[v].index===l[p]){f[p]=1;break}}return n!==s&&s.dispose(),t!==a&&a.dispose(),oa(f,a.shape,"bool")}const sE=eP;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nP(n,t,e,s,a,r="NHWC",i){let l=n;n.rank===3&&(l=X(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let u=t;u.rank===3&&(u=X(t,[1,t.shape[0],t.shape[1],t.shape[2]])),D(l.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${l.shape}.`),D(u.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),D(e.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${e}.`);const h=r==="NHWC"?l.shape[3]:l.shape[1],f=r==="NHWC"?u.shape[3]:u.shape[1];D(h===e[2],()=>`Error in conv2dDerFilter: depth of input ${h}) must match input depth in filter (${e[2]}.`),D(f===e[3],()=>`Error in conv2dDerFilter: depth of dy (${f}) must match output depth for filter (${e[3]}).`),Qn("conv2dDerFilter",a,i);const p={x:l,dy:u},m={strides:s,pad:a,dataFormat:r,dimRoundingMode:i,filterShape:e};return P.runKernel(ig,p,m)}const cw=U({conv2DBackpropFilter_:nP});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fy(n,t,e){if(e==null||e==="linear")return n;if(e==="relu")return H(n,Uo(t));throw new Error(`Cannot compute gradient for fused activation ${e}.`)}function Ly(n,t){let e=t;const s=nn(n.shape,t.shape);return s.length>0&&(e=kt(e,s)),X(e,n.shape)}function zy(n,t,e,s){if(t==="linear")return n;if(t==="relu")return Aa(n);if(t==="elu")return nc(n);if(t==="relu6")return vy(n);if(t==="prelu")return df(n,e);if(t==="leakyrelu")return af(n,s);if(t==="sigmoid")return Na(n);throw new Error(`Unknown fused activation ${t}.`)}const My=(n,t)=>!(n>0)||t==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sP({x:n,filter:t,strides:e,pad:s,dataFormat:a="NHWC",dilations:r=[1,1],dimRoundingMode:i,bias:l,activation:u="linear",preluActivationWeights:h,leakyreluAlpha:f}){if(u=u||"linear",My(P.state.gradientDepth,u)===!1){D(a==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${a} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let R=Ir(n,t,e,s,a,r,i);return l!=null&&(R=xt(R,l)),zy(R,u,h,f)}const p=O(n,"x","conv2d","float32"),m=O(t,"filter","conv2d","float32");let y=p,b=!1;p.rank===3&&(b=!0,y=X(p,[1,p.shape[0],p.shape[1],p.shape[2]])),D(y.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${y.rank}.`),D(m.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${m.rank}.`),Qn("fused conv2d",s,i);const v=a==="NHWC"?y.shape[3]:y.shape[1];D(m.shape[2]===v,()=>`Error in conv2d: depth of input (${v}) must match input depth for filter ${m.shape[2]}.`),D(Rn(e,r),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${e} and dilations '${r}'`);const w=vn(y.shape,m.shape,e,r,s,i);let S;l!=null&&(S=O(l,"bias","fused conv2d"),[S]=Me(S,p),a==="NHWC"?Ut(w.outShape,S.shape):(D(S.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${S.shape.length}.`),D(S.shape.length===0||S.shape[0]===w.outChannels||S.shape[0]===1,()=>`Error in fused conv2d: bias shape (${S.shape}) is not compatible with the number of output channels (${w.outChannels})`)));let T;if(h!=null){const R=h.shape;if(D(R.length<=1||R.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${R.length}.`),R.length===1)D(R[0]===1||R[0]===w.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${R}) is not compatible with the number of output channels (${w.outChannels}).`);else if(R.length===3)try{Ut(R,w.outShape)}catch{const B=`Error in fused conv2d: PReLU activation weights (${R}) is not compatible with the output shape of the conv2d (${w.outShape}).`;throw Error(B)}T=O(h,"prelu weights","fused conv2d")}const $=(R,F)=>{D(a==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${a} but only NHWC is currently supported.`);const[B,L,z,A]=F,G=Fy(R,z,u);D(wi(r),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const Q=Iv(L.shape,G,B,e,s),tt=cw(L,G,B.shape,e,s),J=[Q,tt];if(A!=null){const V=Ly(A,G);J.push(V)}return J},C={x:y,filter:m,bias:S,preluActivationWeights:T},I={strides:e,pad:s,dataFormat:a,dilations:r,dimRoundingMode:i,activation:u,leakyreluAlpha:f};return l==null?Qa((F,B,L)=>{let z=P.runKernel(Ah,C,I);return L([B,F,z]),b&&(z=X(z,[z.shape[1],z.shape[2],z.shape[3]])),{value:z,gradFunc:$}})(y,m):Qa((F,B,L,z)=>{let A=P.runKernel(Ah,C,I);return z([B,F,A,L]),b&&(A=X(A,[A.shape[1],A.shape[2],A.shape[3]])),{value:A,gradFunc:$}})(y,m,S)}const aE=U({fusedConv2d_:sP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aP(n,t,e,s,a,r=[1,1],i){let l=n;n.rank===3&&(l=X(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let u=t;u.rank===3&&(u=X(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={x:l,dy:u},f={strides:s,pad:a,dimRoundingMode:i,dilations:r,filterShape:e};return P.runKernel(fg,h,f)}const rE=U({depthwiseConv2dNativeBackpropFilter_:aP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rP(n,t,e,s,a,r=[1,1],i){let l=t,u=!1;t.rank===3&&(u=!0,l=X(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={dy:l,filter:e},f={strides:s,pad:a,dimRoundingMode:i,dilations:r,inputShape:n},p=P.runKernel(pg,h,f);return u?X(p,[p.shape[1],p.shape[2],p.shape[3]]):p}const iE=U({depthwiseConv2dNativeBackpropInput_:rP});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iP({x:n,filter:t,strides:e,pad:s,dataFormat:a="NHWC",dilations:r=[1,1],dimRoundingMode:i,bias:l,activation:u="linear",preluActivationWeights:h,leakyreluAlpha:f}){if(My(P.state.gradientDepth,u)===!1){let I=ec(n,t,e,s,a,r,i);return l!=null&&(I=xt(I,l)),zy(I,u,h,f)}const p=O(n,"x","depthwiseConv2d","float32"),m=O(t,"filter","depthwiseConv2d","float32");let y=p,b=!1;p.rank===3&&(b=!0,y=X(p,[1,p.shape[0],p.shape[1],p.shape[2]])),D(y.rank===4,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${y.rank}.`),D(m.rank===4,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${m.rank}.`),D(y.shape[3]===m.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${y.shape[3]}) must match the inChannels dimension in filter ${m.shape[2]}.`),r==null&&(r=[1,1]),D(Rn(e,r),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${e} and dilations '${r}'`),Qn("fused depthwiseConv2d",s,i);const v=vn(y.shape,m.shape,e,r,s,i,!0);let w;l!=null&&(w=O(l,"bias","fused conv2d"),[w]=Me(w,p),Ut(v.outShape,w.shape));let S;h!=null&&(S=O(h,"prelu weights","fused depthwiseConv2d"));const T=(I,R)=>{D(wi(r),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${r}'`);const[F,B,L,z]=R,A=Fy(I,L,u),G=iE(B.shape,A,F,e,s,r,i),Q=rE(B,A,F.shape,e,s,r,i);if(z!=null){const tt=Ly(w,A);return[G,Q,tt]}return[G,Q]},$={x:y,filter:m,bias:w,preluActivationWeights:S},C={strides:e,pad:s,dataFormat:a,dilations:r,dimRoundingMode:i,activation:u,leakyreluAlpha:f};return l==null?Qa((R,F,B)=>{let L=P.runKernel(Rh,$,C);return B([F,R,L]),b&&(L=X(L,[L.shape[1],L.shape[2],L.shape[3]])),{value:L,gradFunc:T}})(y,m):Qa((R,F,B,L)=>{let z=P.runKernel(Rh,$,C);return L([F,R,z,B]),b&&(z=X(z,[z.shape[1],z.shape[2],z.shape[3]])),{value:z,gradFunc:T}})(y,m,w)}const oP=U({fusedDepthwiseConv2d_:iP});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lP({a:n,b:t,transposeA:e=!1,transposeB:s=!1,bias:a,activation:r="linear",preluActivationWeights:i,leakyreluAlpha:l=.2}){if(My(P.state.gradientDepth,r)===!1){let A=jt(n,t,e,s);return a!=null&&(A=xt(A,a)),zy(A,r,i,l)}let u=O(n,"a","fused matMul"),h=O(t,"b","fused matMul");[u,h]=Me(u,h);const f=e?u.shape[u.rank-2]:u.shape[u.rank-1],p=s?h.shape[h.rank-1]:h.shape[h.rank-2],m=e?u.shape[u.rank-1]:u.shape[u.rank-2],y=s?h.shape[h.rank-2]:h.shape[h.rank-1],b=u.shape.slice(0,-2),v=h.shape.slice(0,-2),w=ht(b),S=ht(v);D(f===p,()=>`Error in fused matMul: inner shapes (${f}) and (${p}) of Tensors with shapes ${u.shape} and ${h.shape} and transposeA=${e} and transposeB=${s} must match.`);const $=Ut(u.shape.slice(0,-2),h.shape.slice(0,-2)).concat([m,y]),C=e?X(u,[w,f,m]):X(u,[w,m,f]),I=s?X(h,[S,y,p]):X(h,[S,p,y]);let R;a!=null&&(R=O(a,"bias","fused matMul"),[R]=Me(R,u),Ut($,R.shape));let F;i!=null&&(F=O(i,"prelu weights","fused matMul"));const B=(A,G)=>{const[Q,tt,J,V]=G,q=Fy(X(A,J.shape),J,r);let Y,it;if(!e&&!s?(Y=jt(q,tt,!1,!0),it=jt(Q,q,!0,!1)):!e&&s?(Y=jt(q,tt,!1,!1),it=jt(q,Q,!0,!1)):e&&!s?(Y=jt(tt,q,!1,!0),it=jt(Q,q,!1,!1)):(Y=jt(tt,q,!0,!0),it=jt(q,Q,!0,!0)),a!=null){const M=Ly(V,q);return[Y,it,M]}else return[Y,it]},L={a:C,b:I,bias:R,preluActivationWeights:F},z={transposeA:e,transposeB:s,activation:r,leakyreluAlpha:l};return a==null?Qa((G,Q,tt)=>{const J=P.runKernel(Eh,L,z);return tt([G,Q,J]),{value:X(J,$),gradFunc:B}})(C,I):Qa((G,Q,tt,J)=>{const V=P.runKernel(Eh,L,z);return J([G,Q,V,tt]),{value:X(V,$),gradFunc:B}})(C,I,R)}const d1=U({fusedMatMul_:lP});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oE=Object.freeze(Object.defineProperty({__proto__:null,conv2d:aE,depthwiseConv2d:oP,matMul:d1},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uP(n){return _y(n,.54,.46)}const cP=U({hammingWindow_:uP});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hP(n){return _y(n,.5,.5)}const lE=U({hannWindow_:hP});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dP(n,t,e,s=!1,a=0){let r=0;const i=[];for(;r+t<=n.size;)i.push(ne(n,r,t)),r+=e;if(s)for(;r<n.size;){const l=r+t-n.size,u=He([ne(n,r,t-l),Vo([l],a)]);i.push(u),r+=e}return i.length===0?Ul([],[0,t]):X(He(i),[i.length,t])}const uE=U({frame_:dP});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fP(n,t,e,s,a=lE){s==null&&(s=uw(t));const r=uE(n,t,e),i=H(r,a(t));return yf(i,s)}const pP=U({stft_:fP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mP(n,t,e,s,a="bilinear",r=0){const i=O(n,"image","cropAndResize"),l=O(t,"boxes","cropAndResize","float32"),u=O(e,"boxInd","cropAndResize","int32"),h=l.shape[0];D(i.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),D(l.rank===2&&l.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${h},4] but had shape ${l.shape}.`),D(u.rank===1&&u.shape[0]===h,()=>`Error in cropAndResize: boxInd must be have size [${h}] but had shape ${l.shape}.`),D(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),D(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),D(a==="bilinear"||a==="nearest",()=>`method must be bilinear or nearest, but was ${a}`);const f={image:i,boxes:l,boxInd:u},p={method:a,extrapolationValue:r,cropSize:s};return P.runKernel(cg,f,p)}const gP=U({cropAndResize_:mP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yP(n){const t=O(n,"image","flipLeftRight","float32");D(t.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);const e={image:t};return P.runKernel(wg,e,{})}const bP=U({flipLeftRight_:yP});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xP(n){const t=O(n,"image","grayscaleToRGB"),e=t.rank-1,s=t.shape[e];D(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),D(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const a=new Array(t.rank);return a.fill(1,0,e),a[e]=3,Ms(t,a)}const vP=U({grayscaleToRGB_:xP});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wP(n){const t=O(n,"image","RGBToGrayscale"),e=t.rank-1,s=t.shape[e];D(t.rank>=2,()=>`Error in RGBToGrayscale: images must be at least rank 2, but got rank ${t.rank}.`),D(s===3,()=>`Error in RGBToGrayscale: last dimension of an RGB image should be size 3, but got size ${s}.`);const a=t.dtype,r=wt(t,"float32"),i=Vn([.2989,.587,.114]);let l;switch(t.rank){case 2:l=uo("ij,j->i",r,i);break;case 3:l=uo("ijk,k->ij",r,i);break;case 4:l=uo("ijkl,l->ijk",r,i);break;case 5:l=uo("ijklm,m->ijkl",r,i);break;case 6:l=uo("ijklmn,n->ijklm",r,i);break;default:throw new Error("Not a valid tensor rank.")}return l=Bn(l,-1),wt(l,a)}const SP=U({rgbToGrayscale_:wP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NP(n,t,e=0,s=.5){const a=O(n,"image","rotateWithOffset","float32");D(a.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`);const r={image:a},i={radians:t,fillValue:e,center:s};return P.runKernel(sy,r,i)}const TP=U({rotateWithOffset_:NP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ic(n,t,e,s,a,r){s==null&&(s=.5),a==null&&(a=Number.NEGATIVE_INFINITY),r==null&&(r=0);const i=n.shape[0];return e=Math.min(e,i),D(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),D(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),D(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),D(t.rank===1,()=>"scores must be a 1D tensor"),D(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),D(0<=r&&r<=1,()=>`softNmsSigma must be in [0, 1], but was '${r}'`),{maxOutputSize:e,iouThreshold:s,scoreThreshold:a,softNmsSigma:r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CP(n,t,e,s=.5,a=Number.NEGATIVE_INFINITY){const r=O(n,"boxes","nonMaxSuppression","float32"),i=O(t,"scores","nonMaxSuppression","float32"),l=ic(r,i,e,s,a);e=l.maxOutputSize,s=l.iouThreshold,a=l.scoreThreshold;const u={maxOutputSize:e,iouThreshold:s,scoreThreshold:a};return P.runKernel(Rg,{boxes:r,scores:i},u)}const $P=U({nonMaxSuppression_:CP});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kP(n,t,e){const s=IP(n,t,e),a=s<0?-(s+1):s;n.splice(a,0,t)}function IP(n,t,e){return AP(n,t,e||EP)}function EP(n,t){return n>t?1:n<t?-1:0}function AP(n,t,e){let s=0,a=n.length,r=0,i=!1;for(;s<a;){r=s+(a-s>>>1);const l=e(t,n[r]);l>0?s=r+1:(a=r,i=!l)}return i?s:-s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function By(n,t,e,s,a){return hw(n,t,e,s,a,0)}function Vy(n,t,e,s,a,r){return hw(n,t,e,s,a,0,!1,r,!0)}function Py(n,t,e,s,a,r){return hw(n,t,e,s,a,r,!0)}function hw(n,t,e,s,a,r,i=!1,l=!1,u=!1){const h=[];for(let w=0;w<t.length;w++)t[w]>a&&h.push({score:t[w],boxIndex:w,suppressBeginIndex:0});h.sort(JC);const f=r>0?-.5/r:0,p=[],m=[];for(;p.length<e&&h.length>0;){const w=h.pop(),{score:S,boxIndex:T,suppressBeginIndex:$}=w;if(S<a)break;let C=!1;for(let I=p.length-1;I>=$;--I){const R=RP(n,T,p[I]);if(R>=s){C=!0;break}if(w.score=w.score*DP(s,f,R),w.score<=a)break}w.suppressBeginIndex=p.length,C||(w.score===S?(p.push(T),m.push(w.score)):w.score>a&&kP(h,w,JC))}const y=p.length,b=e-y;l&&b>0&&(p.push(...new Array(b).fill(0)),m.push(...new Array(b).fill(0)));const v={selectedIndices:p};return i&&(v.selectedScores=m),u&&(v.validOutputs=y),v}function RP(n,t,e){const s=n.subarray(t*4,t*4+4),a=n.subarray(e*4,e*4+4),r=Math.min(s[0],s[2]),i=Math.min(s[1],s[3]),l=Math.max(s[0],s[2]),u=Math.max(s[1],s[3]),h=Math.min(a[0],a[2]),f=Math.min(a[1],a[3]),p=Math.max(a[0],a[2]),m=Math.max(a[1],a[3]),y=(l-r)*(u-i),b=(p-h)*(m-f);if(y<=0||b<=0)return 0;const v=Math.max(r,h),w=Math.max(i,f),S=Math.min(l,p),T=Math.min(u,m),$=Math.max(S-v,0)*Math.max(T-w,0);return $/(y+b-$)}function DP(n,t,e){const s=Math.exp(t*e*e);return e<=n?s:0}function JC(n,t){return n.score-t.score||n.score===t.score&&t.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function OP(n,t,e,s=.5,a=Number.NEGATIVE_INFINITY){const r=O(n,"boxes","nonMaxSuppressionAsync"),i=O(t,"scores","nonMaxSuppressionAsync"),l=ic(r,i,e,s,a);e=l.maxOutputSize,s=l.iouThreshold,a=l.scoreThreshold;const u=await Promise.all([r.data(),i.data()]),h=u[0],f=u[1],{selectedIndices:p}=By(h,f,e,s,a);return r!==n&&r.dispose(),i!==t&&i.dispose(),Vn(p,"int32")}const _P=OP;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FP(n,t,e,s=.5,a=Number.NEGATIVE_INFINITY,r=0){const i=O(n,"boxes","nonMaxSuppression"),l=O(t,"scores","nonMaxSuppression"),u=ic(i,l,e,s,a,r);e=u.maxOutputSize,s=u.iouThreshold,a=u.scoreThreshold,r=u.softNmsSigma;const h={boxes:i,scores:l},f={maxOutputSize:e,iouThreshold:s,scoreThreshold:a,softNmsSigma:r},p=P.runKernel(Og,h,f);return{selectedIndices:p[0],selectedScores:p[1]}}const LP=U({nonMaxSuppressionWithScore_:FP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function zP(n,t,e,s=.5,a=Number.NEGATIVE_INFINITY,r=0){const i=O(n,"boxes","nonMaxSuppressionAsync"),l=O(t,"scores","nonMaxSuppressionAsync"),u=ic(i,l,e,s,a,r);e=u.maxOutputSize,s=u.iouThreshold,a=u.scoreThreshold,r=u.softNmsSigma;const h=await Promise.all([i.data(),l.data()]),f=h[0],p=h[1],{selectedIndices:m,selectedScores:y}=Py(f,p,e,s,a,r);return i!==n&&i.dispose(),l!==t&&l.dispose(),{selectedIndices:Vn(m,"int32"),selectedScores:Vn(y)}}const MP=zP;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BP(n,t,e,s=.5,a=Number.NEGATIVE_INFINITY,r=!1){const i=O(n,"boxes","nonMaxSuppression"),l=O(t,"scores","nonMaxSuppression"),u=ic(i,l,e,s,a,null),h=u.maxOutputSize,f=u.iouThreshold,p=u.scoreThreshold,m={boxes:i,scores:l},y={maxOutputSize:h,iouThreshold:f,scoreThreshold:p,padToMaxOutputSize:r},b=P.runKernel(Dg,m,y);return{selectedIndices:b[0],validOutputs:b[1]}}const VP=U({nonMaxSuppressionPadded_:BP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function PP(n,t,e,s=.5,a=Number.NEGATIVE_INFINITY,r=!1){const i=O(n,"boxes","nonMaxSuppressionAsync"),l=O(t,"scores","nonMaxSuppressionAsync"),u=ic(i,l,e,s,a,null),h=u.maxOutputSize,f=u.iouThreshold,p=u.scoreThreshold,[m,y]=await Promise.all([i.data(),l.data()]),{selectedIndices:b,validOutputs:v}=Vy(m,y,h,f,p,r);return i!==n&&i.dispose(),l!==t&&l.dispose(),{selectedIndices:Vn(b,"int32"),validOutputs:_t(v,"int32")}}const UP=PP;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GP(n,t,e=!1,s=!1){const a=O(n,"images","resizeBilinear");D(a.rank===3||a.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`),D(t.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),D(s===!1||e===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let r=a,i=!1;a.rank===3&&(i=!0,r=X(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l={images:r},u={alignCorners:e,halfPixelCenters:s,size:t},h=P.runKernel(Bd,l,u);return i?X(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const cE=U({resizeBilinear_:GP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WP(n,t,e=!1,s=!1){const a=O(n,"images","resizeNearestNeighbor");D(a.rank===3||a.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`),D(t.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),D(a.dtype==="float32"||a.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),D(s===!1||e===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let r=a,i=!1;a.rank===3&&(i=!0,r=X(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l={images:r},u={alignCorners:e,halfPixelCenters:s,size:t},h=P.runKernel(Md,l,u);return i?X(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const hE=U({resizeNearestNeighbor_:WP});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HP(n,t="binary",e=!1,s=.5){const a=O(n,"image","threshold"),r=.2989,i=.587,l=.114,u=a.shape[0]*a.shape[1];let h=H(Vn([s]),255),f,p,m,y;if(D(a.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`),D(a.shape[2]===3||a.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`),D(a.dtype==="int32"||a.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`),D(t==="otsu"||t==="binary",()=>`Method must be binary or otsu, but was ${t}`),a.shape[2]===3){[f,p,m]=as(a,[1,1,1],-1);const w=H(f,r),S=H(p,i),T=H(m,l);y=xt(xt(w,S),T)}else y=n;if(t==="otsu"){const w=Sv(wt(wy(y),"int32"),oa([]),256);h=jP(w,u)}const b=e?Oi(y,h):hs(y,h);return wt(H(b,255),"int32")}function jP(n,t){let e=Vn([-1]),s=Vn([0]),a=Vn([0]),r,i,l,u,h,f;for(let p=0;p<n.size-1;p++){r=ne(n,0,p+1),i=ne(n,p+1),h=Rt(kt(r),t),f=Rt(kt(i),t);const m=kt(H(r,Eo(0,r.size)));l=Rt(m,kt(r));const y=Vo(i.shape,r.size),b=xt(Eo(0,i.size),y),v=H(i,b);u=Rt(kt(v),kt(i));const w=$t(l,u),S=$t(l,u),T=H(h,f);a=H(H(T,w),S);const $=hs(a,s);s=In($,a,s),e=In($,Vn([p]),e)}return e}const qP=U({threshold_:HP});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XP(n,t,e="nearest",s="constant",a=0,r){const i=O(n,"image","transform","float32"),l=O(t,"transforms","transform","float32");D(i.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),D(l.rank===2&&(l.shape[0]===i.shape[0]||l.shape[0]===1)&&l.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),D(r==null||r.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${r}.`);const u={image:i,transforms:l},h={interpolation:e,fillMode:s,fillValue:a,outputShape:r};return P.runKernel(ey,u,h)}const KP=U({transform_:XP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YP(n,t,e){const s=O(n,"a","bandPart");D(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const a=s.shape,[r,i]=s.shape.slice(-2);let l,u;typeof t=="number"?(D(t%1===0,()=>`bandPart(): numLower must be an integer, got ${t}.`),D(t<=r,()=>`bandPart(): numLower (${t}) must not be greater than the number of rows (${r}).`),l=O(t<0?r:t,"numLower","bandPart")):(D(t.dtype==="int32",()=>"bandPart(): numLower's dtype must be an int32."),l=In(Xl(t,0),r,Ni(t,r))),typeof e=="number"?(D(e%1===0,()=>`bandPart(): numUpper must be an integer, got ${e}.`),D(e<=i,()=>`bandPart(): numUpper (${e}) must not be greater than the number of columns (${i}).`),u=O(e<0?i:e,"numUpper","bandPart")):(D(e.dtype==="int32",()=>"bandPart(): numUpper's dtype must be an int32."),u=In(Xl(e,0),i,Ni(e,i)));const h=X(Eo(0,r,1,"int32"),[-1,1]),f=Eo(0,i,1,"int32"),p=$t(h,f),m=Ca(Oi(p,l),Fr(p,Ee(u))),y=tn([r,i],s.dtype);return X(us(Gs(X(s,[-1,r,i])).map(b=>In(m,b,y))),a)}const ZP=U({bandPart_:YP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QP(n){let t;if(Array.isArray(n)){t=!1,D(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const a=n[0].shape[0];for(let r=1;r<n.length;++r)D(n[r].shape[0]===a,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[r].shape[0]} vs. ${a})`)}else t=!0,n=as(n,n.shape[0],0).map(a=>Fi(a,[0]));D(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const e=[],s=n;for(let a=0;a<n.length;++a)e.push(P.tidy(()=>{let r=s[a];if(a>0)for(let i=0;i<a;++i){const l=H(kt(H(e[i],r)),e[i]);r=$t(r,l)}return Rt(r,sc(r,"euclidean"))}));return t?us(e,0):e}const JP=U({gramSchmidt_:QP});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tU(n,t=!1){if(D(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return t$(n,t);{const e=n.shape.slice(0,n.shape.length-2).reduce((u,h)=>u*h),s=Gs(X(n,[e,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),a=[],r=[];s.forEach(u=>{const[h,f]=t$(u,t);a.push(h),r.push(f)});const i=X(us(a,0),n.shape),l=X(us(r,0),n.shape);return[i,l]}}function t$(n,t=!1){return P.tidy(()=>{D(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const e=n.shape[0],s=n.shape[1];let a=fy(e),r=Ha(n);const i=Ul([[1]],[1,1]);let l=Ha(i);const u=e>=s?s:e;for(let h=0;h<u;++h){const f=r,p=l,m=a;[l,r,a]=P.tidy(()=>{const y=ne(r,[h,h],[e-h,1]),b=sc(y),v=ne(r,[h,h],[1,1]),w=In(hs(v,0),Ul([[-1]]),Ul([[1]])),S=$t(v,H(w,b)),T=Rt(y,S);T.shape[0]===1?l=Ha(i):l=He([i,ne(T,[1,0],[T.shape[0]-1,T.shape[1]])],0);const $=Ee(Rt(jt(w,S),b)),C=ne(r,[h,0],[e-h,s]),I=H($,l),R=Jt(l);if(h===0)r=$t(C,jt(I,jt(R,C)));else{const L=$t(C,jt(I,jt(R,C)));r=He([ne(r,[0,0],[h,s]),L],0)}const F=Jt(I),B=ne(a,[0,h],[e,a.shape[1]-h]);if(h===0)a=$t(B,jt(jt(B,l),F));else{const L=$t(B,jt(jt(B,l),F));a=He([ne(a,[0,0],[e,h]),L],1)}return[l,r,a]}),qt([f,p,m])}return!t&&e>s&&(a=ne(a,[0,0],[e,s]),r=ne(r,[0,0],[s,s])),[a,r]})}const eU=U({qr_:tU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Kn;(function(n){n[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(Kn||(Kn={}));function nU(n,t,e=Kn.SUM_BY_NONZERO_WEIGHTS){const s=O(n,"losses","computeWeightedLoss");let a=null;t!=null&&(a=O(t,"weights","computeWeightedLoss"));const r=a==null?s:H(s,a);if(e===Kn.NONE)return r;if(e===Kn.SUM)return kt(r);if(e===Kn.MEAN){if(a==null)return Le(r);{const i=s.size/a.size,l=Rt(kt(r),kt(a));return i>1?Rt(l,_t(i)):l}}if(e===Kn.SUM_BY_NONZERO_WEIGHTS){if(a==null)return Rt(kt(r),_t(s.size));{const i=H(a,ss(s.shape)),l=wt(kt(Io(i,_t(0))),"float32");return Rt(kt(r),l)}}throw Error(`Unknown reduction: ${e}`)}const zr=U({computeWeightedLoss_:nU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sU(n,t,e,s=Kn.SUM_BY_NONZERO_WEIGHTS){const a=O(n,"labels","absoluteDifference"),r=O(t,"predictions","absoluteDifference");let i=null;e!=null&&(i=O(e,"weights","absoluteDifference")),An(a.shape,r.shape,"Error in absoluteDifference: ");const l=Je($t(a,r));return zr(l,i,s)}const aU=U({absoluteDifference_:sU});function rU(n,t,e,s,a=Kn.SUM_BY_NONZERO_WEIGHTS){const r=O(n,"labels","cosineDistance"),i=O(t,"predictions","cosineDistance");let l=null;s!=null&&(l=O(s,"weights","cosineDistance")),An(r.shape,i.shape,"Error in cosineDistance: ");const u=_t(1),h=$t(u,kt(H(r,i),e,!0));return zr(h,l,a)}const iU=U({cosineDistance_:rU});function oU(n,t,e,s=Kn.SUM_BY_NONZERO_WEIGHTS){let a=O(n,"labels","hingeLoss");const r=O(t,"predictions","hingeLoss");let i=null;e!=null&&(i=O(e,"weights","hingeLoss")),An(a.shape,r.shape,"Error in hingeLoss: ");const l=_t(1);a=$t(H(_t(2),a),l);const u=Aa($t(l,H(a,r)));return zr(u,i,s)}const lU=U({hingeLoss_:oU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uU(n,t,e,s=1,a=Kn.SUM_BY_NONZERO_WEIGHTS){const r=O(n,"labels","huberLoss"),i=O(t,"predictions","huberLoss");let l=null;e!=null&&(l=O(e,"weights","huberLoss")),An(r.shape,i.shape,"Error in huberLoss: ");const u=_t(s),h=Je($t(i,r)),f=Ni(h,u),p=$t(h,f),m=xt(H(_t(.5),xe(f)),H(u,p));return zr(m,l,a)}const cU=U({huberLoss_:uU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hU(n,t,e,s=1e-7,a=Kn.SUM_BY_NONZERO_WEIGHTS){const r=O(n,"labels","logLoss"),i=O(t,"predictions","logLoss");let l=null;e!=null&&(l=O(e,"weights","logLoss")),An(r.shape,i.shape,"Error in logLoss: ");const u=_t(1),h=_t(s),f=Ee(H(r,Ss(xt(i,h)))),p=H($t(u,r),Ss(xt($t(u,i),h))),m=$t(f,p);return zr(m,l,a)}const dU=U({logLoss_:hU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fU(n,t,e,s=Kn.SUM_BY_NONZERO_WEIGHTS){const a=O(n,"labels","meanSquaredError"),r=O(t,"predictions","meanSquaredError");let i=null;e!=null&&(i=O(e,"weights","meanSquaredError")),An(a.shape,r.shape,"Error in meanSquaredError: ");const l=Ey(a,r);return zr(l,i,s)}const pU=U({meanSquaredError_:fU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mU(n,t){const e=O(n,"labels","sigmoidCrossEntropyWithLogits"),s=O(t,"logits","sigmoidCrossEntropyWithLogits");An(e.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=Aa(s),r=H(s,e),i=rf(ls(Ee(Je(s))));return xt($t(a,r),i)}function gU(n,t,e,s=0,a=Kn.SUM_BY_NONZERO_WEIGHTS){let r=O(n,"multiClassLabels","sigmoidCrossEntropy");const i=O(t,"logits","sigmoidCrossEntropy");let l=null;if(e!=null&&(l=O(e,"weights","sigmoidCrossEntropy")),An(r.shape,i.shape,"Error in sigmoidCrossEntropy: "),s>0){const h=_t(s),f=_t(1),p=_t(.5);r=xt(H(r,$t(f,h)),H(p,h))}const u=mU(r,i);return zr(u,l,a)}const yU=U({sigmoidCrossEntropy_:gU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bU(n,t,e=-1){if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${e}`);return Qa((a,r,i)=>{const u=of(r,[e],!0),h=$t(wt(r,"float32"),u);i([a,h]);const f=Ee(H(h,a));return{value:kt(f,[e]),gradFunc:(y,b)=>{const[v,w]=b,S=je(y.shape,[e]);return[H(X(y,S),$t(wt(v,"float32"),ls(w))),H(X(y,S),$t(ls(w),wt(v,"float32")))]}}})(n,t)}function xU(n,t,e,s=0,a=Kn.SUM_BY_NONZERO_WEIGHTS){let r=O(n,"onehotLabels","softmaxCrossEntropy");const i=O(t,"logits","softmaxCrossEntropy");let l=null;if(e!=null&&(l=O(e,"weights","softmaxCrossEntropy")),An(r.shape,i.shape,"Error in softmaxCrossEntropy: "),s>0){const h=_t(s),f=_t(1),p=_t(r.shape[1]);r=xt(H(r,$t(f,h)),Rt(h,p))}const u=bU(r,i);return zr(u,l,a)}const vU=U({softmaxCrossEntropy_:xU});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wU(n,t,e,s){const a=O(n,"indices","sparseFillEmptyRows","int32"),r=O(t,"values","sparseFillEmptyRows"),i=O(e,"denseShape","sparseFillEmptyRows","int32"),l=O(s,"defaultValue","sparseFillEmptyRows",r.dtype);if(a.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${a.shape}`);if(r.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${r.shape}`);if(i.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(l.rank!==0)throw new Error(`Default value should be a scalar but received shape ${l.shape}`);const u={indices:a,values:r,denseShape:i,defaultValue:l},h=P.runKernel(Wg,u);return{outputIndices:h[0],outputValues:h[1],emptyRowIndicator:h[2],reverseIndexMap:h[3]}}const SU=U({sparseFillEmptyRows_:wU});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NU(n,t,e){const s=O(n,"inputIndices","sparseReshape","int32"),a=O(t,"inputShape","sparseReshape","int32"),r=O(e,"newShape","sparseReshape","int32");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(a.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(r.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${r.shape}`);const i={inputIndices:s,inputShape:a,newShape:r},l=P.runKernel(Hg,i);return{outputIndices:l[0],outputShape:l[1]}}const TU=U({sparseReshape_:NU});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CU(n,t,e){const s=O(n,"data","sparseSegmentMean"),a=O(t,"indices","sparseSegmentMean","int32"),r=O(e,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${a.shape}`);if(r.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${r.shape}`);const i={data:s,indices:a,segmentIds:r};return P.runKernel(jg,i)}const $U=U({sparseSegmentMean_:CU});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kU(n,t,e){const s=O(n,"data","sparseSegmentSum"),a=O(t,"indices","sparseSegmentSum","int32"),r=O(e,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${a.shape}`);if(r.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${r.shape}`);const i={data:s,indices:a,segmentIds:r};return P.runKernel(qg,i)}const IU=U({sparseSegmentSum_:kU});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EU(n,t,e,s,a,r,i,l){const u=O(n,"data","stringNGrams","string");if(u.dtype!=="string")throw new Error("Data must be of datatype string");if(u.shape.length!==1)throw new Error(`Data must be a vector, saw: ${u.shape}`);const h=O(t,"dataSplits","stringNGrams");if(h.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const f={separator:e,nGramWidths:s,leftPad:a,rightPad:r,padWidth:i,preserveShortSequences:l},p={data:u,dataSplits:h},m=P.runKernel(Zg,p,f);return{nGrams:m[0],nGramsSplits:m[1]}}const AU=U({stringNGrams_:EU});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RU(n,t,e=!0){const s=O(n,"input","stringSplit","string"),a=O(t,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(a.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);const r={skipEmpty:e},i={input:s,delimiter:a},l=P.runKernel(Qg,i,r);return{indices:l[0],values:l[1],shape:l[2]}}const DU=U({stringSplit_:RU});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OU(n,t){const e=O(n,"input","stringToHashBucketFast","string"),s={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const a={input:e};return P.runKernel(Jg,a,s)}const _U=U({stringToHashBucketFast_:OU});/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FU(n,t,e,s=!0){const a=O(n,"input","staticRegexReplace","string"),r={pattern:t,rewrite:e,replaceGlobal:s};return P.runKernel(qd,{x:a},r)}const LU=U({staticRegexReplace_:FU});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dE={fft:gf,ifft:Ql,rfft:yf,irfft:Iy},fE={hammingWindow:cP,hannWindow:lE,frame:uE,stft:pP},wa={flipLeftRight:bP,grayscaleToRGB:vP,resizeNearestNeighbor:hE,resizeBilinear:cE,rgbToGrayscale:SP,rotateWithOffset:TP,cropAndResize:gP,nonMaxSuppression:$P,nonMaxSuppressionAsync:_P,nonMaxSuppressionWithScore:LP,nonMaxSuppressionWithScoreAsync:MP,nonMaxSuppressionPadded:VP,nonMaxSuppressionPaddedAsync:UP,threshold:qP,transform:KP},dw={bandPart:ZP,gramSchmidt:JP,qr:eU},pE={absoluteDifference:aU,computeWeightedLoss:zr,cosineDistance:iU,hingeLoss:lU,huberLoss:cU,logLoss:dU,meanSquaredError:pU,sigmoidCrossEntropy:yU,softmaxCrossEntropy:vU},mE={sparseFillEmptyRows:SU,sparseReshape:TU,sparseSegmentMean:$U,sparseSegmentSum:IU},gE={stringNGrams:AU,stringSplit:DU,stringToHashBucketFast:_U,staticRegexReplace:LU};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zU=new Map,f1=new Map;class Go{getClassName(){return this.constructor.className}static fromConfig(t,e){return new t(e)}}class zs{constructor(){this.classNameMap={}}static getMap(){return zs.instance==null&&(zs.instance=new zs),zs.instance}static register(t){zs.getMap().classNameMap[t.className]=[t,t.fromConfig]}}function vt(n,t,e){D(n.className!=null,()=>"Class being registered does not have the static className property defined."),D(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),D(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),typeof t>"u"&&(t="Custom"),typeof e>"u"&&(e=n.className);const s=e,a=t+">"+s;return zs.register(n),zU.set(a,n),f1.set(n,a),n}function MU(n){return f1.has(n)?f1.get(n):n.className}const BU=Object.freeze(Object.defineProperty({__proto__:null,Serializable:Go,SerializationMap:zs,getRegisteredName:MU,registerClass:vt},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mr extends Go{minimize(t,e=!1,s){const{value:a,grads:r}=this.computeGradients(t,s);if(s!=null){const i=s.map(l=>({name:l.name,tensor:r[l.name]}));this.applyGradients(i)}else this.applyGradients(r);return qt(r),e?a:(a.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(t,e){return SI(t,e)}dispose(){this.iterations_!=null&&qt(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:_t(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(t){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(t){return this.iterations_=(await t[0].tensor.data())[0],t.slice(1)}}Object.defineProperty(Mr,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fw extends Mr{static get className(){return"Adadelta"}constructor(t,e,s=null){super(),this.learningRate=t,this.rho=e,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=P.backend.epsilon())}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,a)=>{const r=P.registeredVariables[s],i=!1;this.accumulatedGrads[a]==null&&(this.accumulatedGrads[a]={originalName:`${s}/accum_grad`,variable:at(()=>se(r).variable(i))}),this.accumulatedUpdates[a]==null&&(this.accumulatedUpdates[a]={originalName:`${s}/accum_var`,variable:at(()=>se(r).variable(i))});const l=Array.isArray(t)?t[a].tensor:t[s];if(l==null)return;const u=this.accumulatedGrads[a].variable,h=this.accumulatedUpdates[a].variable;at(()=>{const f=xt(H(u,this.rho),H(xe(l),1-this.rho)),p=H(Rt(xn(xt(h,this.epsilon)),xn(xt(u,this.epsilon))),l),m=xt(H(h,this.rho),H(xe(p),1-this.rho));u.assign(f),h.assign(m);const y=xt(H(p,-this.learningRate),r);r.assign(y)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(qt(this.accumulatedGrads.map(t=>t.variable)),qt(this.accumulatedUpdates.map(t=>t.variable)))}async getWeights(){const t=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=t.length/2,s=!1;this.accumulatedGrads=t.slice(0,e).map(a=>({originalName:a.name,variable:a.tensor.variable(s)})),this.accumulatedUpdates=t.slice(e,e*2).map(a=>({originalName:a.name,variable:a.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.rho,e.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pw extends Mr{static get className(){return"Adagrad"}constructor(t,e=.1){super(),this.learningRate=t,this.initialAccumulatorValue=e,this.accumulatedGrads=[]}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,a)=>{const r=P.registeredVariables[s];this.accumulatedGrads[a]==null&&(this.accumulatedGrads[a]={originalName:`${s}/accumulator`,variable:at(()=>Vo(r.shape,this.initialAccumulatorValue).variable(!1))});const i=Array.isArray(t)?t[a].tensor:t[s];if(i==null)return;const l=this.accumulatedGrads[a].variable;at(()=>{const u=xt(l,xe(i));l.assign(u);const h=xt(H(Rt(i,xn(xt(u,P.backend.epsilon()))),-this.learningRate),r);r.assign(h)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&qt(this.accumulatedGrads.map(t=>t.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=!1;this.accumulatedGrads=t.map(s=>({originalName:s.name,variable:s.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(t,e){return new t(e.learningRate,e.initialAccumulatorValue)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mw extends Mr{static get className(){return"Adam"}constructor(t,e,s,a=null){super(),this.learningRate=t,this.beta1=e,this.beta2=s,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],at(()=>{this.accBeta1=_t(e).variable(),this.accBeta2=_t(s).variable()}),a==null&&(this.epsilon=P.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(s=>s.name):Object.keys(t);at(()=>{const s=$t(1,this.accBeta1),a=$t(1,this.accBeta2);e.forEach((r,i)=>{const l=P.registeredVariables[r],u=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${r}/m`,variable:at(()=>se(l).variable(u))}),this.accumulatedSecondMoment[i]==null&&(this.accumulatedSecondMoment[i]={originalName:`${r}/v`,variable:at(()=>se(l).variable(u))});const h=Array.isArray(t)?t[i].tensor:t[r];if(h==null)return;const f=this.accumulatedFirstMoment[i].variable,p=this.accumulatedSecondMoment[i].variable,m=xt(H(f,this.beta1),H(h,1-this.beta1)),y=xt(H(p,this.beta2),H(xe(h),1-this.beta2)),b=Rt(m,s),v=Rt(y,a);f.assign(m),p.assign(y);const w=xt(H(Rt(b,xt(xn(v),this.epsilon)),-this.learningRate),l);l.assign(w)}),this.accBeta1.assign(H(this.accBeta1,this.beta1)),this.accBeta2.assign(H(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&qt(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedSecondMoment!=null&&qt(this.accumulatedSecondMoment.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t),at(()=>{this.accBeta1.assign(Za(this.beta1,this.iterations_+1)),this.accBeta2.assign(Za(this.beta2,this.iterations_+1))});const e=t.length/2,s=!1;this.accumulatedFirstMoment=t.slice(0,e).map(a=>({originalName:a.name,variable:a.tensor.variable(s)})),this.accumulatedSecondMoment=t.slice(e,e*2).map(a=>({originalName:a.name,variable:a.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gw extends Mr{static get className(){return"Adamax"}constructor(t,e,s,a=null,r=0){super(),this.learningRate=t,this.beta1=e,this.beta2=s,this.epsilon=a,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],at(()=>{this.iteration=_t(0).variable(),this.accBeta1=_t(e).variable()}),a==null&&(this.epsilon=P.backend.epsilon())}applyGradients(t){const e=Array.isArray(t)?t.map(s=>s.name):Object.keys(t);at(()=>{const s=$t(1,this.accBeta1),a=Rt(-this.learningRate,xt(H(this.iteration,this.decay),1));e.forEach((r,i)=>{const l=P.registeredVariables[r],u=!1;this.accumulatedFirstMoment[i]==null&&(this.accumulatedFirstMoment[i]={originalName:`${r}/m`,variable:se(l).variable(u)}),this.accumulatedWeightedInfNorm[i]==null&&(this.accumulatedWeightedInfNorm[i]={originalName:`${r}/v`,variable:se(l).variable(u)});const h=Array.isArray(t)?t[i].tensor:t[r];if(h==null)return;const f=this.accumulatedFirstMoment[i].variable,p=this.accumulatedWeightedInfNorm[i].variable,m=xt(H(f,this.beta1),H(h,1-this.beta1)),y=H(p,this.beta2),b=Je(h),v=er(y,b);f.assign(m),p.assign(v);const w=xt(H(Rt(a,s),Rt(m,xt(v,this.epsilon))),l);l.assign(w)}),this.iteration.assign(xt(this.iteration,1)),this.accBeta1.assign(H(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&qt(this.accumulatedFirstMoment.map(t=>t.variable)),this.accumulatedWeightedInfNorm!=null&&qt(this.accumulatedWeightedInfNorm.map(t=>t.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(t){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Uy extends Mr{static get className(){return"SGD"}constructor(t){super(),this.learningRate=t,this.setLearningRate(t)}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,a)=>{const r=Array.isArray(t)?t[a].tensor:t[s];if(r==null)return;const i=P.registeredVariables[s];at(()=>{const l=xt(H(this.c,r),i);i.assign(l)})}),this.incrementIterations()}setLearningRate(t){this.learningRate=t,this.c!=null&&this.c.dispose(),this.c=rn(_t(-t))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(t){if(t=await this.extractIterations(t),t.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(t,e){return new t(e.learningRate)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yw extends Uy{static get className(){return"Momentum"}constructor(t,e,s=!1){super(t),this.learningRate=t,this.momentum=e,this.useNesterov=s,this.accumulations=[],this.m=_t(this.momentum)}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,a)=>{const r=P.registeredVariables[s];this.accumulations[a]==null&&(this.accumulations[a]={originalName:`${s}/momentum`,variable:at(()=>se(r).variable(!1))});const i=this.accumulations[a].variable,l=Array.isArray(t)?t[a].tensor:t[s];l!=null&&at(()=>{let u;const h=xt(H(this.m,i),l);this.useNesterov?u=xt(H(this.c,xt(l,H(h,this.m))),r):u=xt(H(this.c,h),r),i.assign(h),r.assign(u)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&qt(this.accumulations.map(t=>t.variable))}setMomentum(t){this.momentum=t}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=!1;this.accumulations=t.map(s=>({originalName:s.name,variable:s.tensor.variable(e)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bw extends Mr{static get className(){return"RMSProp"}constructor(t,e=.9,s=0,a=null,r=!1){if(super(),this.learningRate=t,this.decay=e,this.momentum=s,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,a==null&&(this.epsilon=P.backend.epsilon()),t==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(t){(Array.isArray(t)?t.map(s=>s.name):Object.keys(t)).forEach((s,a)=>{const r=P.registeredVariables[s],i=!1;this.accumulatedMeanSquares[a]==null&&(this.accumulatedMeanSquares[a]={originalName:`${s}/rms`,variable:at(()=>se(r).variable(i))}),this.accumulatedMoments[a]==null&&(this.accumulatedMoments[a]={originalName:`${s}/momentum`,variable:at(()=>se(r).variable(i))}),this.accumulatedMeanGrads[a]==null&&this.centered&&(this.accumulatedMeanGrads[a]={originalName:`${s}/mg`,variable:at(()=>se(r).variable(i))});const l=Array.isArray(t)?t[a].tensor:t[s];if(l==null)return;const u=this.accumulatedMeanSquares[a].variable,h=this.accumulatedMoments[a].variable;at(()=>{const f=xt(H(u,this.decay),H(xe(l),1-this.decay));if(this.centered){const p=this.accumulatedMeanGrads[a].variable,m=xt(H(p,this.decay),H(l,1-this.decay)),y=Rt(H(l,this.learningRate),xn($t(f,xt(xe(m),this.epsilon)))),b=xt(H(h,this.momentum),y);u.assign(f),p.assign(m),h.assign(b);const v=$t(r,b);r.assign(v)}else{const p=xt(H(u,this.decay),H(xe(l),1-this.decay)),m=xt(H(h,this.momentum),Rt(H(l,this.learningRate),xn(xt(p,this.epsilon))));u.assign(p),h.assign(m);const y=$t(r,m);r.assign(y)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&qt(this.accumulatedMeanSquares.map(t=>t.variable)),this.accumulatedMeanGrads!=null&&this.centered&&qt(this.accumulatedMeanGrads.map(t=>t.variable)),this.accumulatedMoments!=null&&qt(this.accumulatedMoments.map(t=>t.variable))}async getWeights(){const t=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&t.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(t.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(t){t=await this.extractIterations(t);const e=this.centered?t.length/3:t.length/2,s=!1;this.accumulatedMeanSquares=t.slice(0,e).map(a=>({originalName:a.name,variable:a.tensor.variable(s)})),this.accumulatedMoments=t.slice(e,e*2).map(a=>({originalName:a.name,variable:a.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=t.slice(e*2,e*3).map(a=>({originalName:a.name,variable:a.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)}}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VU=[fw,pw,mw,gw,yw,bw,Uy];function PU(){for(const n of VU)vt(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UU="model",GU=".json",WU=".weights.bin";function e$(n){return new Promise(t=>setTimeout(t)).then(n)}class Ao{constructor(t){if(!rt().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(Ao.URL_SCHEME)&&(t=t.slice(Ao.URL_SCHEME.length)),(t==null||t.length===0)&&(t=UU),this.modelJsonFileName=t+GU,this.weightDataFileName=t+WU}async save(t){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=Ea.join(t.weightData),s=window.URL.createObjectURL(new Blob([e],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const a=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],r=sI(t,a),i=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),l=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(l.download=this.modelJsonFileName,l.href=i,await e$(()=>l.dispatchEvent(new MouseEvent("click"))),t.weightData!=null){const u=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;u.download=this.weightDataFileName,u.href=s,await e$(()=>u.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Qd(t)}}}}Ao.URL_SCHEME="downloads://";class HU{constructor(t){if(t==null||t.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${t}`);this.jsonFile=t[0],this.weightsFiles=t.slice(1)}async load(){return new Promise((t,e)=>{const s=new FileReader;s.onload=a=>{const r=JSON.parse(a.target.result),i=r.modelTopology;if(i==null){e(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));return}if(r.weightsManifest==null){e(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));return}if(this.weightsFiles.length===0){t({modelTopology:i});return}const u=ov(r,h=>this.loadWeights(h));t(u)},s.onerror=a=>e(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),s.readAsText(this.jsonFile)})}loadWeights(t){const e=[],s=[];for(const i of t)e.push(...i.weights),s.push(...i.paths);const a=this.checkManifestAndWeightFiles(t),r=s.map(i=>this.loadWeightsFile(i,a[i]));return Promise.all(r).then(i=>[e,i])}loadWeightsFile(t,e){return new Promise((s,a)=>{const r=new FileReader;r.onload=i=>{const l=i.target.result;s(l)},r.onerror=i=>a(`Failed to weights data from file of path '${t}'.`),r.readAsArrayBuffer(e)})}checkManifestAndWeightFiles(t){const e=[],s=this.weightsFiles.map(r=>WC(r.name)),a={};for(const r of t)r.paths.forEach(i=>{const l=WC(i);if(e.indexOf(l)!==-1)throw new Error(`Duplicate file basename found in weights manifest: '${l}'`);if(e.push(l),s.indexOf(l)===-1)throw new Error(`Weight file with basename '${l}' is not provided.`);a[i]=this.weightsFiles[s.indexOf(l)]});if(e.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${e.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return a}}const jU=n=>rt().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(Ao.URL_SCHEME)?qU(n.slice(Ao.URL_SCHEME.length)):null;Fe.registerSaveRouter(jU);function qU(n="model"){return new Ao(n)}function XU(n){return new HU(n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n$(n,t,e,s){i(n),e=e??0,s=s??1,l(e,s);let a=0;const r=u=>(u.then(h=>{const f=e+ ++a/n.length*(s-e);return t(f),h}),u);function i(u){D(u!=null&&Array.isArray(u)&&u.length>0,()=>"promises must be a none empty array")}function l(u,h){D(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${u}`),D(h>=0&&h<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${h}`),D(h>=u,()=>`startFraction must be no more than endFraction, but got startFraction ${u} and endFraction ${h}`)}return Promise.all(n.map(r))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function yE(n,t){t==null&&(t={});const e=t.fetchFunc==null?rt().platform.fetch:t.fetchFunc,s=n.map(p=>e(p,t.requestInit,{isBinary:!0})),l=(t.onProgress==null?await Promise.all(s):await n$(s,t.onProgress,0,.5)).map(p=>p.arrayBuffer());return t.onProgress==null?await Promise.all(l):await n$(l,t.onProgress,.5,1)}function KU(n,t){var e;const s=t.fetchFunc==null?rt().platform.fetch:t.fetchFunc;let a=0,r;return(e=t.onProgress)===null||e===void 0||e.call(t,0),new ReadableStream({pull:async i=>{for(var l;a<n.length;){r||(r=(await s(n[a],t.requestInit,{isBinary:!0})).body.getReader());const{done:u,value:h}=await r.read();if(u){a++,r=void 0,(l=t.onProgress)===null||l===void 0||l.call(t,a/n.length);continue}i.enqueue(h);return}i.close()}})}async function YU(n,t="",e,s){return bE(i=>yE(i,{requestInit:s}))(n,t,e)}function bE(n){return async(t,e="",s)=>{const a=t.map(()=>!1),r={},i=s!=null?s.map(()=>!1):[],l=[];if(t.forEach((y,b)=>{let v=0;y.weights.forEach(w=>{const S="quantization"in w?w.quantization.dtype:w.dtype,T=So[S]*ht(w.shape),$=()=>{a[b]=!0,r[b]==null&&(r[b]=[]),r[b].push({manifestEntry:w,groupOffset:v,sizeBytes:T})};s!=null?s.forEach((C,I)=>{C===w.name&&($(),i[I]=!0)}):$(),l.push(w.name),v+=T})}),!i.every(y=>y)){const y=s.filter((b,v)=>!i[v]);throw new Error(`Could not find weights in manifest with names: ${y.join(", ")}. 
Manifest JSON has weights with names: ${l.join(", ")}.`)}const u=a.reduce((y,b,v)=>(b&&y.push(v),y),[]),h=[];u.forEach(y=>{t[y].paths.forEach(b=>{const v=e+(e.endsWith("/")?"":"/")+b;h.push(v)})});const f=await n(h),p={};let m=0;return u.forEach(y=>{const b=t[y].paths.length,v=new Ea(f.slice(m,m+b));r[y].forEach(S=>{const T=v.slice(S.groupOffset,S.groupOffset+S.sizeBytes),$=Jk(T,[S.manifestEntry]);for(const C in $)p[C]=$[C]}),m+=b}),p}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZU="application/octet-stream",QU="application/json";class xw{constructor(t,e){if(this.DEFAULT_METHOD="POST",e==null&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.weightUrlConverter=e.weightUrlConverter,e.fetchFunc!=null?(D(typeof e.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=e.fetchFunc):this.fetch=rt().platform.fetch,D(t!=null&&t.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(t)&&D(t.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`),this.path=t,e.requestInit!=null&&e.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{},this.loadOptions=e}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const s=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],a=sI(t,s);if(e.body.append("model.json",new Blob([JSON.stringify(a)],{type:QU}),"model.json"),t.weightData!=null){const i=Ea.join(t.weightData);e.body.append("model.weights.bin",new Blob([i],{type:ZU}),"model.weights.bin")}const r=await this.fetch(this.path,e);if(r.ok)return{modelArtifactsInfo:Qd(t),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async loadModelJSON(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch{let i=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?i+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":i+=" Please make sure the server is serving valid JSON for this request.",new Error(i)}const s=e.modelTopology,a=e.weightsManifest;if(s==null&&a==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return e}async load(){if(this.loadOptions.streamWeights)return this.loadStream();const t=await this.loadModelJSON();return ov(t,e=>this.loadWeights(e))}async loadStream(){const t=await this.loadModelJSON(),e=await this.getWeightUrls(t.weightsManifest),s=$m(t.weightsManifest),a=()=>KU(e,this.loadOptions);return Object.assign(Object.assign({},t),{weightSpecs:s,getWeightStream:a})}async getWeightUrls(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[s,a]=JU(e),r=this.weightPathPrefix||s,i=[],l=[];for(const u of t)for(const h of u.paths)this.weightUrlConverter!=null?l.push(this.weightUrlConverter(h)):i.push(r+h+a);return this.weightUrlConverter&&i.push(...await Promise.all(l)),i}async loadWeights(t){const e=await this.getWeightUrls(t),s=$m(t),a=await yE(e,this.loadOptions);return[s,a]}}xw.URL_SCHEME_REGEX=/^https?:\/\//;function JU(n){const t=n.lastIndexOf("/"),e=n.lastIndexOf("?"),s=n.substring(0,t),a=e>t?n.substring(e):"";return[s+"/",a]}function p1(n){return n.match(xw.URL_SCHEME_REGEX)!=null}const xE=(n,t)=>{if(typeof fetch>"u"&&(t==null||t.fetchFunc==null))return null;{let e=!0;if(Array.isArray(n)?e=n.every(s=>p1(s)):e=p1(n),e)return vw(n,t)}return null};Fe.registerSaveRouter(xE);Fe.registerLoadRouter(xE);function vw(n,t){return new xw(n,t)}function tG(n,t){return vw(n,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fx{constructor(t){this.modelArtifacts=t}load(){return this.modelArtifacts}}class vE{constructor(t){this.saveHandler=t}save(t){return this.saveHandler(t)}}class eG{constructor(t){t.load&&(this.load=()=>Promise.resolve(t.load())),t.save&&(this.save=e=>Promise.resolve(t.save(e)))}}function nG(n,t,e,s){const a=arguments;return new eG(Im(...a))}function Im(n,t,e,s){return arguments.length===1?n.modelTopology!=null||n.weightSpecs!=null?new Fx(n):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Fx({modelTopology:n})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Fx({modelTopology:n,weightSpecs:t,weightData:e,trainingConfig:s}))}function sG(n){return new vE(n)}function aG(n){return new vE(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ww=Object.freeze(Object.defineProperty({__proto__:null,CompositeArrayBuffer:Ea,browserFiles:XU,browserHTTPRequest:tG,concatenateArrayBuffers:nI,copyModel:_z,decodeWeights:Jk,decodeWeightsStream:eI,encodeWeights:i1,fromMemory:nG,fromMemorySync:Im,getLoadHandlers:vz,getModelArtifactsForJSON:ov,getModelArtifactsForJSONSync:iv,getModelArtifactsInfoForJSON:Qd,getSaveHandlers:aI,getWeightSpecs:$m,http:vw,isHTTPScheme:p1,listModels:Dz,loadWeights:YU,moveModel:Fz,registerLoadRouter:xz,registerSaveRouter:bz,removeModel:Oz,weightsLoaderFactory:bE,withSaveHandler:sG,withSaveHandlerSync:aG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rG(n,t,e){const s=O(n,"labels","confusionMatrix"),a=O(t,"predictions","confusionMatrix");D(e==null||e>0&&Number.isInteger(e),()=>`If provided, numClasses must be a positive integer, but got ${e}`),D(s.rank===1,()=>`Expected the rank of labels to be 1, but got ${s.rank}`),D(a.rank===1,()=>`Expected the rank of predictions to be 1, but got ${a.rank}`),D(s.shape[0]===a.shape[0],()=>`Mismatch in the number of examples: ${s.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`),D(e>0&&Number.isInteger(e),()=>`numClasses is required to be a positive integer, but got ${e}`);const r=Kl(wt(s,"int32"),e),i=Kl(wt(a,"int32"),e),l=Jt(r),u=jt(l,i);return wt(u,"int32")}const iG=U({confusionMatrix_:rG});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oG=Object.freeze(Object.defineProperty({__proto__:null,confusionMatrix:iG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let so,s$=!1;function wE(n,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(n==null)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let e=!1,s=!1,a=!1,r=!1,i=!1,l=!1;if(n.data instanceof Uint8Array)e=!0;else if(typeof ImageData<"u"&&n instanceof ImageData)s=!0;else if(typeof HTMLVideoElement<"u"&&n instanceof HTMLVideoElement)a=!0;else if(typeof HTMLImageElement<"u"&&n instanceof HTMLImageElement)r=!0;else if(n.getContext!=null)i=!0;else if(typeof ImageBitmap<"u"&&n instanceof ImageBitmap)l=!0;else throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${n.constructor.name}`);if(Oh(Tm,P.backendName)!=null){const b={pixels:n},v={numChannels:t};return P.runKernel(Tm,b,v)}const[h,f]=a?[n.videoWidth,n.videoHeight]:[n.width,n.height];let p;if(i)p=n.getContext("2d").getImageData(0,0,h,f).data;else if(s||e)p=n.data;else if(r||a||l){if(so==null)if(typeof document>"u")if(typeof OffscreenCanvas<"u"&&typeof OffscreenCanvasRenderingContext2D<"u")so=new OffscreenCanvas(1,1).getContext("2d");else throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");else so=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});so.canvas.width=h,so.canvas.height=f,so.drawImage(n,0,0,h,f),p=so.getImageData(0,0,h,f).data}let m;if(t===4)m=new Int32Array(p);else{const b=h*f;m=new Int32Array(b*t);for(let v=0;v<b;v++)for(let w=0;w<t;++w)m[v*t+w]=p[v*4+w]}return nw(m,[f,h,t],"int32")}function lG(n){return n!=null&&n.data instanceof Uint8Array}function uG(){return typeof window<"u"&&typeof ImageBitmap<"u"&&window.hasOwnProperty("createImageBitmap")}function cG(n){return n!=null&&n.width!==0&&n.height!==0}function hG(n){return uG()&&!(n instanceof ImageBitmap)&&cG(n)&&!lG(n)}async function dG(n,t=3){let e=null;if(rt().getBool("WRAP_TO_IMAGEBITMAP")&&hG(n)){let s;try{s=await createImageBitmap(n,{premultiplyAlpha:"none"})}catch{s=null}s!=null&&s.width===n.width&&s.height===n.height?e=s:e=n}else e=n;return wE(e,t)}function SE(n){if(n.rank!==2&&n.rank!==3)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const t=n.rank===2?1:n.shape[2];if(t>4||t===2)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${t}`);if(n.dtype!=="float32"&&n.dtype!=="int32")throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`)}function fG(n){const t=n?.alpha||1;if(t>1||t<0)throw new Error(`Alpha value ${t} is suppoed to be in range [0 - 1].`)}async function pG(n,t){let e=O(n,"img","toPixels");if(!(n instanceof fe)){const h=e;e=wt(h,"int32"),h.dispose()}SE(e);const[s,a]=e.shape.slice(0,2),r=e.rank===2?1:e.shape[2],i=await e.data(),l=e.dtype==="float32"?255:1,u=new Uint8ClampedArray(a*s*4);for(let h=0;h<s*a;++h){const f=[0,0,0,255];for(let m=0;m<r;m++){const y=i[h*r+m];if(e.dtype==="float32"){if(y<0||y>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${y}.`)}else if(e.dtype==="int32"&&(y<0||y>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${y}.`);r===1?(f[0]=y*l,f[1]=y*l,f[2]=y*l):f[m]=y*l}const p=h*4;u[p+0]=Math.round(f[0]),u[p+1]=Math.round(f[1]),u[p+2]=Math.round(f[2]),u[p+3]=Math.round(f[3])}if(t!=null){s$||Oh(gg,P.backendName)!=null&&(console.warn("tf.browser.toPixels is not efficient to draw tensor on canvas. Please try tf.browser.draw instead."),s$=!0),t.width=a,t.height=s;const h=t.getContext("2d"),f=new ImageData(u,a,s);h.putImageData(f,0,0)}return e!==n&&e.dispose(),u}function mG(n,t,e){let s=O(n,"img","draw");if(!(n instanceof fe)){const i=s;s=wt(i,"int32"),i.dispose()}SE(s),fG(e?.imageOptions);const a={image:s},r={canvas:t,options:e};P.runKernel(gg,a,r)}const gG=U({fromPixels_:wE}),yG=Object.freeze(Object.defineProperty({__proto__:null,draw:mG,fromPixels:gG,fromPixelsAsync:dG,toPixels:pG},Symbol.toStringTag,{value:"Module"}));function Gy(n,t){const e=n.shape.length,s=t.shape.length;if(e<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${e}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(t.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>e)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${e}`);if(ht(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const a=t.shape,r=a[a.length-1];let i=1;for(let p=0;p<a.length-1;++p)i*=a[p];const l=n.shape,u=a.slice();u.pop();let h=1;for(let p=r;p<e;++p)h*=l[p],u.push(l[p]);const f=[...Ot(n.shape).map(p=>p/h),1].slice(0,r);return[u,i,h,f]}const bG=Object.freeze(Object.defineProperty({__proto__:null,prepareAndValidate:Gy},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m1=-2,xG=-1;function Sw(n,t,e){const s=n.shape.length;D(s===t.length,()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`),D(s===e.length,()=>`Error in slice${s}D: Length of size ${e} must match the rank of the array (${s}).`);for(let a=0;a<s;++a)D(t[a]+e[a]<=n.shape[a],()=>`Error in slice${s}D: begin[${a}] + size[${a}] (${t[a]+e[a]}) would overflow input.shape[${a}] (${n.shape[a]})`)}function vG(n){const t=[];let e=0;for(;n>0;)n&1&&t.push(e),n/=2,e++;return t}function Nw(n,t,e){const s=[];for(let a=0;a<n.length;a++)s[a]=Math.ceil((t[a]-n[a])/e[a]);return s}function NE(n,t,e,s){const a=[...n];for(let r=a.length;r<s.length;r++)a.push(1);for(let r=0;r<e;r++)r===0?a[t]=1:(a.splice(t,0,1),a.pop());return a}function TE(n,t,e){return e<=n?e:e-(t-1)}function CE(n,t){const e=[];for(let s=0;s<n;s++)e.push(t+s);return e}function wG(n,t,e,s,a,r,i,l,u){const h=n.length;let f=new Array(h),p=new Array(h),m=new Array(h);if(t.length&&e>0){const y=t[0],b=e+1;f=$E(i,y,b,s,n),p=kE(l,y,b,a,n),m=NE(r,y,b,n)}else for(let y=0;y<h;y++)f[y]=EE(i,s,r,n,y,u),p[y]=AE(l,a,r,n,y,u),m[y]=IE(r,y,u);return{begin:f,end:p,strides:m}}function $E(n,t,e,s,a){const r=[...a],i=CE(e,t);for(let l=0;l<r.length;l++)if(i.indexOf(l)>-1)r[l]=0;else{const u=TE(t,e,l);let h=s[u];n&1<<u&&(h=0),r[l]=h}return r}function kE(n,t,e,s,a){const r=[...a],i=CE(e,t);for(let l=0;l<r.length;l++)if(i.indexOf(l)>-1)r[l]=Number.MAX_SAFE_INTEGER;else{const u=TE(t,e,l);let h=s[u];n&1<<u&&(h=Number.MAX_SAFE_INTEGER),r[l]=h}for(let l=0;l<r.length;l++){const u=a[l];r[l]<0&&(r[l]+=u),r[l]=yi(0,r[l],a[l])}return r}function IE(n,t,e){let s=n[t];return(e&1<<t||s==null)&&(s=1),s}function EE(n,t,e,s,a,r){let i=t[a];const l=e[a]||1;(n&1<<a||r&1<<a||i==null)&&(l>0?i=Number.MIN_SAFE_INTEGER:i=Number.MAX_SAFE_INTEGER);const u=s[a];return i<0&&(i+=u),i=yi(0,i,u-1),i}function AE(n,t,e,s,a,r){let i=t[a];const l=e[a]||1;(n&1<<a||r&1<<a||i==null)&&(l>0?i=Number.MAX_SAFE_INTEGER:i=Number.MIN_SAFE_INTEGER);const u=s[a];return i<0&&(i+=u),l>0?i=yi(0,i,u):i=yi(-1,i,u-1),i}function Tw(n,t,e){let s=e.length;for(let a=0;a<e.length;a++)if(e[a]>1){s=a;break}for(let a=s+1;a<e.length;a++)if(t[a]>0||e[a]!==n[a])return!1;return!0}function Cw(n,t){let e=n.length>0?n[n.length-1]:1;for(let s=0;s<n.length-1;s++)e+=n[s]*t[s];return e}function Wy(n,t,e){let s;const a=n.shape.length;typeof t=="number"?s=[t,...new Array(a-1).fill(0)]:t.length<a?s=t.concat(new Array(a-t.length).fill(0)):s=t.slice(),s.forEach(i=>{D(i!==-1,()=>"slice() does not support negative begin indexing.")});let r;return e==null?r=new Array(a).fill(-1):typeof e=="number"?r=[e,...new Array(a-1).fill(-1)]:e.length<a?r=e.concat(new Array(a-e.length).fill(-1)):r=e,r=r.map((i,l)=>i>=0?i:(D(i===-1,()=>`Negative size values should be exactly -1 but got ${i} for the slice() size at index ${l}.`),n.shape[l]-s[l])),[s,r]}function $w(n,t,e,s,a,r,i,l,u){let h;if(s==null?(h=new Array(t.length),h.fill(1)):h=s,i!=null&&(i&i-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let f=!1;const p={dims:h.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:e.slice(),strides:h.slice(),beginMask:a,endMask:r,ellipsisMask:i,newAxisMask:l,shrinkAxisMask:u};for(let $=0;$<p.dims;$++)f&&(1<<$&l)!==0&&p.numAddAxisAfterEllipsis++,1<<$&i&&(f=!0);f||(p.ellipsisMask|=1<<p.dims,p.dims++);const m={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};SG(p,m);let y=!0,b=!0,v=!0;const w=[],S=[];for(let $=0;$<n.length;++$){if(m.strides[$]===0)throw Error(`strides[${$}] must be non-zero`);const C=!!(m.shrinkAxisMask&1<<$),I=n[$];if(I===-1){w.push(C?1:-1);continue}const R=[m.beginMask&1<<$,m.endMask&1<<$],F=[m.strides[$]>0?0:-1,m.strides[$]>0?I:I-1];if(C&&m.strides[$]<=0)throw Error("only stride 1 allowed on non-range indexing.");v=v&&m.strides[$]===1;const B=!!(m.beginMask&1<<$&&m.endMask&1<<$);if(m.beginValid&&m.endValid){if(C){const G=m.begin[$]<0?I+m.begin[$]:m.begin[$];if(m.begin[$]=G,m.end[$]=m.begin[$]+1,G<0||G>=I)throw Error(`slice index ${m.begin[$]} of dimension ${$} out of bounds.`)}else m.begin[$]=a$(m.begin[$],0,m.strides[$],I,R,F),m.end[$]=a$(m.end[$],1,m.strides[$],I,R,F);const A=m.strides[$]===1&&m.begin[$]===0&&m.end[$]===I;y=y&&A,b=b&&($===0&&m.strides[$]===1||A)}else y=y&&m.strides[$]===1&&B,b=b&&($===0&&m.strides[$]===1||B);let L,z=!1;if(m.beginValid&&m.endValid?(L=m.end[$]-m.begin[$],z=!0):C?(L=1,z=!0):B&&I>=0&&(m.strides[$]<0?L=-I:L=I,z=!0),z){let A;L===0||L<0!=m.strides[$]<0?A=0:A=Math.trunc(L/m.strides[$])+(L%m.strides[$]!==0?1:0),w.push(A)}else w.push(-1)}for(let $=0;$<m.finalShapeGatherIndices.length;++$){const C=m.finalShapeGatherIndices[$];C>=0?S.push(w[C]):C===m1&&S.push(1)}return{finalShapeSparse:S.filter(($,C)=>m.finalShapeGatherIndices[C]!==m1),finalShape:S,isIdentity:y,sliceDim0:b,isSimpleSlice:v,begin:m.begin,end:m.end,strides:m.strides}}function SG(n,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let e=0;t.beginValid=n.begin!=null,t.endValid=n.end!=null,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<n.dims;s++)if(1<<s&n.ellipsisMask){const a=Math.min(t.dims-(n.dims-s)+1+n.numAddAxisAfterEllipsis,t.dims);for(;e<a;e++)t.begin[e]=0,t.end[e]=0,t.strides[e]=1,t.beginMask|=1<<e,t.endMask|=1<<e,t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[e]=s}else if(1<<s&n.newAxisMask)t.finalShapeGatherIndices.push(m1),t.finalShapeGatherIndicesSparse.push(-1);else{if(e===t.begin.length)throw Error(`Index out of range using input dim ${e}; input has only ${t.dims} dims, ${t.begin.length}.`);n.begin!=null&&(t.begin[e]=n.begin[s]),n.end!=null&&(t.end[e]=n.end[s]),t.strides[e]=n.strides[s],n.beginMask&1<<s&&(t.beginMask|=1<<e),n.endMask&1<<s&&(t.endMask|=1<<e),n.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(xG),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<e):(t.finalShapeGatherIndices.push(e),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[e]=s,e++}}function a$(n,t,e,s,a,r){if(a[t])return e>0?r[t]:r[t+1&1];{const i=n<0?s+n:n;return i<r[0]?r[0]:i>r[1]?r[1]:i}}const RE=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:Sw,computeFlatOffset:Cw,computeOutShape:Nw,getNormalizedAxes:wG,isSliceContinous:Tw,maskToAxes:vG,parseSliceParams:Wy,sliceInfo:$w,startForAxis:EE,startIndicesWithElidedDims:$E,stopForAxis:AE,stopIndicesWithElidedDims:kE,stridesForAxis:IE,stridesWithElidedDims:NE},Symbol.toStringTag,{value:"Module"}));/** @license See the LICENSE file. */const NG="4.22.0";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DE{static sgd(t){return new Uy(t)}static momentum(t,e,s=!1){return new yw(t,e,s)}static rmsprop(t,e=.9,s=0,a=null,r=!1){return new bw(t,e,s,a,r)}static adam(t=.001,e=.9,s=.999,a=null){return new mw(t,e,s,a)}static adadelta(t=.001,e=.95,s=null){return new fw(t,e,s)}static adamax(t=.002,e=.9,s=.999,a=null,r=0){return new gw(t,e,s,a,r)}static adagrad(t,e=.1){return new pw(t,e)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oo=DE;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TG=typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n();function kw(){return new Promise(n=>TG(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iw(n,t){const e=n[0].length;n.forEach((a,r)=>{D(a.length===e,()=>`Error in concat${e}D: rank of tensors[${r}] must be the same as the rank of the rest (${e})`)}),D(t>=0&&t<e,()=>`Error in concat${e}D: axis must be between 0 and ${e-1}.`);const s=n[0];n.forEach((a,r)=>{for(let i=0;i<e;i++)D(i===t||a[i]===s[i],()=>`Error in concat${e}D: Shape of tensors[${r}] (${a}) does not match the shape of the rest (${s}) along the non-concatenated axis ${r}.`)})}function ja(n,t){const e=n[0].slice();for(let s=1;s<n.length;s++)e[t]+=n[s][t];return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var va;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(va||(va={}));function OE(n,t,e){let s=new Array;if(e==null&&t==null)return s;if(t==null)for(;s.length<n+e.length;)s.push(-1);else s=t.slice();if(e==null)return s;if(n+e.length!==s.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${n+e.length}, but shape.rank = ${s.length}`);for(let a=1;a<e.length;++a){const r=e[a],i=s[s.length-e.length+a],l=s[i];if(r>=0)if(l>=0){if(l!==r)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${a+n}] = ${r} but shape[${a+n}] = ${l}`)}else s[i]=r}return s}function _E(n){const t={FIRST_DIM_SIZE:va.FIRST_DIM_SIZE,VALUE_ROWIDS:va.VALUE_ROWIDS,ROW_LENGTHS:va.ROW_LENGTHS,ROW_SPLITS:va.ROW_SPLITS,ROW_LIMITS:va.ROW_LIMITS,ROW_STARTS:va.ROW_STARTS},e=[];for(const s of n)if(s in t)e.push(t[s]);else break;return e}function FE(n){return n.length===0?0:n[0]===va.FIRST_DIM_SIZE?n.length-1:n.length}function LE(n,t){if(n==null||t==null)return;const e=n.length,s=t.length;if(e>=s)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${e} must be less than ragged tensor input flatValues.rank = ${s})`);for(let a=0;a<Math.min(e,s-1);++a){const r=n[a],i=t[a+1];if(r>=0&&i>=0&&r!==1&&r!==i)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${a-n.length}] = ${r} but ragged tensor input.flatValues.shape[${a-n.length}] = ${i}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ew=30;function Hy(n){return n<=Ew?n:wm(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Aw(n,t,e){const s=e*(typeof n=="number"?n:n[0]),a=t*(typeof n=="number"?n:n[1]);return[s,a]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bf(n,t,e,s=!0){let a=[];if(s)a=a.concat(t.slice(0)),a.push(n[0]/e),a=a.concat(n.slice(1));else{a=a.concat(n[0]);const r=t.length;for(let i=0;i<r;++i)a=a.concat([n[i+1]/t[i],t[i]]);a=a.concat(n.slice(r+1))}return a}function xf(n,t,e=!0){const s=[];if(e){s.push(t);for(let a=t+1;a<n;++a)a<=2*t?(s.push(a),s.push(a-(t+1))):s.push(a)}else{const a=[],r=[];for(let i=1;i<n;++i)i>=t*2+1||i%2===1?r.push(i):a.push(i);s.push(...a),s.push(0),s.push(...r)}return s}function vf(n,t,e,s=!0){const a=[];s?a.push(n[0]/e):a.push(n[0]*e);for(let r=1;r<n.length;++r)r<=t.length?s?a.push(t[r-1]*n[r]):a.push(n[r]/t[r-1]):a.push(n[r]);return a}function Rw(n,t){const e=[0];for(let s=0;s<t;++s)e.push(n[s][0]);return e}function Dw(n,t,e){const s=n.slice(0,1);for(let a=0;a<e;++a)s.push(n[a+1]-t[a][0]-t[a][1]);return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jy=1.7580993408473768,qy=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ow=.3275911,_w=.254829592,Fw=-.284496736,Lw=1.421413741,zw=-1.453152027,Mw=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Er(n,t){if(n.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${t.length}.`);const e=new Float32Array(n.length*2);for(let s=0;s<e.length;s+=2)e[s]=n[s/2],e[s+1]=t[s/2];return e}function zE(n){const t=new Float32Array(n.length/2),e=new Float32Array(n.length/2);for(let s=0;s<n.length;s+=2)t[s/2]=n[s],e[s/2]=n[s+1];return{real:t,imag:e}}function ME(n){const t=Math.ceil(n.length/4),e=new Float32Array(t),s=new Float32Array(t);for(let a=0;a<n.length;a+=4)e[Math.floor(a/4)]=n[a],s[Math.floor(a/4)]=n[a+1];return{real:e,imag:s}}function BE(n){const t=Math.floor(n.length/4),e=new Float32Array(t),s=new Float32Array(t);for(let a=2;a<n.length;a+=4)e[Math.floor(a/4)]=n[a],s[Math.floor(a/4)]=n[a+1];return{real:e,imag:s}}function Bw(n,t){const e=n[t*2],s=n[t*2+1];return{real:e,imag:s}}function VE(n,t,e,s){n[s*2]=t,n[s*2+1]=e}function PE(n,t){const e=new Float32Array(n/2),s=new Float32Array(n/2);for(let a=0;a<Math.ceil(n/2);a++){const r=(t?2:-2)*Math.PI*(a/n);e[a]=Math.cos(r),s[a]=Math.sin(r)}return{real:e,imag:s}}function UE(n,t,e){const s=(e?2:-2)*Math.PI*(n/t),a=Math.cos(s),r=Math.sin(s);return{real:a,imag:r}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lx="->",CG=/->/g,r$=",",i$="...";function Vw(n,t){n=n.replace(/\s/g,"");const e=(n.length-n.replace(CG,"").length)/Lx.length;if(e<1)throw new Error("Equations without an arrow are not supported.");if(e>1)throw new Error(`Equation must contain exactly one arrow ("${Lx}").`);const[s,a]=n.split(Lx);D(s.indexOf(i$)===-1,()=>`The ellipsis notation ("${i$}") is not supported yet.`);const r=s.split(r$),i=r.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const l=[];for(let m=0;m<a.length;++m){const y=a[m];if(!r.some(b=>b.indexOf(y)!==-1))throw new Error(`Output subscripts contain the label ${y} not present in the input subscripts.`);l.indexOf(y)===-1&&l.push(y)}for(let m=0;m<s.length;++m){const y=s[m];l.indexOf(y)===-1&&y!==r$&&l.push(y)}const u=new Array(r.length);for(let m=0;m<i;++m){if(new Set(r[m].split("")).size!==r[m].length)throw new Error(`Found duplicate axes in input component ${r[m]}. Support for duplicate axes in input is not implemented yet.`);u[m]=[];for(let y=0;y<r[m].length;++y)u[m].push(l.indexOf(r[m][y]))}const h=l.length,f=a.length,p=[];for(let m=f;m<h;++m)p.push(m);return{allDims:l,summedDims:p,idDims:u}}function Pw(n,t){let e=new Array(n);e.fill(-1);for(let a=0;a<t.length;++a)e[t[a]]=a;const s=[];for(let a=0;a<n;++a)e[a]===-1&&s.push(a);return e=e.filter(a=>a!==-1),{permutationIndices:e,expandDims:s}}function Uw(n,t,e){const s=new Array(n);for(let a=0;a<e.length;++a){const r=e[a].shape;for(let i=0;i<t[a].length;++i)s[t[a][i]]===void 0?s[t[a][i]]=r[i]:D(s[t[a][i]]===r[i],()=>`Expected dimension ${s[t[a][i]]} at axis ${i} of input shaped ${JSON.stringify(r)}, but got dimension ${r[i]}`)}}function Gw(n,t){const e=n,s=[];let a=0;n.length===0&&e.push(-1),a=n.length+1;for(let i=0;i<a;++i)s.push([]);const r=[];for(let i=0;i<e.length;++i){const l=e[i],u=$G(t,l);for(const h of u)r.indexOf(h)===-1&&(s[i].push(h),r.push(h))}return{path:e,steps:s}}function Ww(n){return n.every((t,e)=>t===e)}function $G(n,t){const e=[];for(let s=0;s<n.length;++s)(n[s].length===0||n[s].indexOf(t)!==-1||t===-1)&&e.push(s);return e}function Hw(n,t,e=0){let s=[];if(typeof t=="number")D(n.shape[e]%t===0,()=>"Number of splits must evenly divide the axis."),s=new Array(t).fill(n.shape[e]/t);else{const a=t.reduce((i,l)=>(l===-1&&(i+=1),i),0);D(a<=1,()=>"There should be only one negative value in split array.");const r=t.indexOf(-1);if(r!==-1){const i=t.reduce((l,u)=>u>0?l+u:l);t[r]=n.shape[e]-i}D(n.shape[e]===t.reduce((i,l)=>i+l),()=>"The sum of sizes must match the size of the axis dimension."),s=t}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GE(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function WE(n,t){return`indices(${n}, 0) is invalid: ${t} < 0`}function HE(n,t,e){return`indices(${n}, 0) is invalid: ${t} >= ${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jE(n,t){return`only one output dimension may be -1, not both ${n} and ${t}`}function qE(n,t){return`size ${n} must be non-negative, not ${t}`}function XE(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function KE(n,t){const e=ht(n),s=ht(t);return`Input to reshape is a SparseTensor with ${e}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${n} outputShape= ${t}`}function YE(n,t){const e=ht(n),s=ht(t);return`Input to reshape is a tensor with ${e} dense values, but the requested shape has ${s}. inputShape=${n} outputShape=${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g1(){return"segment ids must be >= 0"}function ZE(){return"segment ids are not increasing"}function QE(n,t){return`Segment id ${n} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function JE(n,t,e){return`Bad: indices[${n}] == ${t} out of range [0, ${e})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tA(n,t){let e=!1,s;for(n<=Ew?(s=n,e=!0):s=wm(n,Math.floor(Math.sqrt(n)));!e;)s>t||s===n?e=!0:s=wm(n,s+1);return s}function eA(n,t,e){const s=[],a=n.length;for(let r=0;r<a;r++)r!==t?s.push(n[r]):s.push(e);return s}function jw(n,t,e,s){const a=t.shape.length,r=n.shape.length;if(s!==0&&(s<-a||s>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${s}`);if(s<0&&(s+=a),s>r)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${r}).`);if(e<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${e}).`);for(let p=0;p<s;++p)if(n.shape[p]!==t.shape[p])throw new Error(`x.shape[${p}]: ${n.shape[p]} should be equal to indices.shape[${p}]: ${t.shape[p]}.`);const i=n.shape[e],l=[];let u=1,h=1,f=1;for(let p=0;p<s;++p)l.push(n.shape[p]),u*=n.shape[p];for(let p=s;p<e;p++)l.push(n.shape[p]),h*=n.shape[p];for(let p=s;p<a;p++)l.push(t.shape[p]);for(let p=e+1;p<r;p++)l.push(n.shape[p]),f*=n.shape[p];return{batchSize:u,sliceSize:f,outerSize:h,dimSize:i,outputShape:l}}const kG=Object.freeze(Object.defineProperty({__proto__:null,collectGatherOpShapeInfo:jw,computeOutShape:eA,segOpComputeOptimalWindowSize:tA},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ar(n){try{return n.map(t=>$r(t))}catch(t){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${t}`)}}function nA(n){return n.map(t=>Wa(t))}const sA=Object.freeze(Object.defineProperty({__proto__:null,ERF_A1:_w,ERF_A2:Fw,ERF_A3:Lw,ERF_A4:zw,ERF_A5:Mw,ERF_P:Ow,PARALLELIZE_THRESHOLD:Ew,get RowPartitionType(){return va},SELU_SCALE:qy,SELU_SCALEALPHA:jy,applyActivation:zy,assertAndGetBroadcastShape:Ut,assertAxesAreInnerMostDims:Dn,assertParamsConsistent:Iw,assignToTypedArray:VE,axesAreInnerMostDims:Fv,calculateShapes:Li,checkEinsumDimSizes:Uw,checkPadOnDimRoundingMode:Qn,combineLocations:xI,combineRaggedTensorToTensorShapes:OE,complexWithEvenIndex:ME,complexWithOddIndex:BE,computeConv2DInfo:vn,computeConv3DInfo:Ri,computeDefaultPad:yv,computeDilation2DInfo:Jd,computeOptimalWindowSize:Hy,computeOutAndReduceShapes:wn,computeOutShape:ja,computePool2DInfo:ua,computePool3DInfo:Or,convertConv2DDataFormat:_r,decodeEinsumEquation:Vw,eitherStridesOrDilationsAreOne:Rn,expandShapeToKeepDim:je,exponent:UE,exponents:PE,fromStringArrayToUint8:nA,fromUint8ToStringArray:Ar,getAxesPermutation:Be,getBroadcastDims:ko,getComplexWithIndex:Bw,getEinsumComputePath:Gw,getEinsumPermutation:Pw,getFusedBiasGradient:Ly,getFusedDyActivation:Fy,getImageCenter:Aw,getInnerMostAxes:qe,getPermuted:xf,getRaggedRank:FE,getReductionAxes:nn,getReshaped:bf,getReshapedPermuted:vf,getRowPartitionTypesHelper:_E,getSliceBeginCoords:Rw,getSliceSize:Dw,getSparseFillEmptyRowsIndicesDenseShapeMismatch:GE,getSparseFillEmptyRowsNegativeIndexErrorMessage:WE,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:HE,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:XE,getSparseReshapeInputOutputMismatchErrorMessage:YE,getSparseReshapeInputOutputMultipleErrorMessage:KE,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:jE,getSparseReshapeNegativeOutputDimErrorMessage:qE,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:JE,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:g1,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:ZE,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:QE,getUndoAxesPermutation:Di,isIdentityPermutation:Ww,log:yL,mergeRealAndImagArrays:Er,prepareAndValidate:Gy,prepareSplitSize:Hw,segment_util:kG,shouldFuse:My,slice_util:RE,splitRealAndImagArrays:zE,stridesOrDilationsArePositive:$o,tupleValuesAreOne:wi,upcastType:rs,validateDefaultValueShape:LE,validateInput:Ay,validateUpdateShape:sw,warn:Ls},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IG=Object.freeze(Object.defineProperty({__proto__:null,nonMaxSuppressionV3Impl:By,nonMaxSuppressionV4Impl:Vy,nonMaxSuppressionV5Impl:Py,whereImpl:Oy},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */PU();const EG=Object.freeze(Object.defineProperty({__proto__:null,Abs:Xh,Acos:ru,Acosh:iu,AdadeltaOptimizer:fw,AdagradOptimizer:pw,AdamOptimizer:mw,AdamaxOptimizer:gw,Add:Bo,AddN:Kh,All:Jm,Any:tg,ArgMax:Yh,ArgMin:Zh,Asin:ou,Asinh:lu,Atan:uu,Atan2:hu,Atanh:cu,AvgPool:Qh,AvgPool3D:Jh,AvgPool3DGrad:ng,AvgPoolGrad:eg,BatchMatMul:td,BatchToSpaceND:ed,Bincount:sg,BitwiseAnd:nd,BroadcastArgs:ag,BroadcastTo:Lk,Cast:du,Ceil:fu,ClipByValue:pu,Complex:rg,ComplexAbs:sd,Concat:ad,Conv2D:rd,Conv2DBackpropFilter:ig,Conv2DBackpropInput:id,Conv3D:od,Conv3DBackpropFilterV2:og,Conv3DBackpropInputV2:lg,Cos:mu,Cosh:gu,CropAndResize:cg,Cumprod:ug,Cumsum:ld,DataStorage:H1,DenseBincount:hg,DepthToSpace:dg,DepthwiseConv2dNative:ud,DepthwiseConv2dNativeBackpropFilter:fg,DepthwiseConv2dNativeBackpropInput:pg,Diag:mg,Dilation2D:cd,Dilation2DBackpropFilter:Nm,Dilation2DBackpropInput:Sm,Draw:gg,get ENV(){return Y1},Einsum:yg,Elu:bu,EluGrad:bg,Environment:_k,Equal:hd,Erf:xu,Exp:vu,ExpandDims:dd,Expm1:wu,FFT:xg,Fill:vg,FlipLeftRight:wg,Floor:Su,FloorDiv:Nu,FromPixels:Tm,FusedBatchNorm:fd,FusedConv2D:Ah,FusedDepthwiseConv2D:Rh,GatherNd:Sg,GatherV2:pd,Greater:md,GreaterEqual:Tu,IFFT:Ng,Identity:Cu,Imag:Tg,IsFinite:$u,IsInf:ku,IsNan:Iu,KernelBackend:Ym,LRN:Sd,LRNGrad:$g,LeakyRelu:gd,Less:yd,LessEqual:bd,LinSpace:Cg,Log:Eu,Log1p:Au,LogSoftmax:zk,LogicalAnd:xd,LogicalNot:vd,LogicalOr:wd,LogicalXor:dL,LowerBound:fL,MatrixBandPart:pL,Max:Nd,MaxPool:Td,MaxPool3D:Cd,MaxPool3DGrad:Ig,MaxPoolGrad:kg,MaxPoolWithArgmax:Eg,Maximum:Ru,Mean:$d,Min:kd,Minimum:Du,MirrorPad:Id,Mod:Ou,MomentumOptimizer:yw,Multinomial:Ag,Multiply:_u,Neg:Ed,NonMaxSuppressionV3:Rg,NonMaxSuppressionV4:Dg,NonMaxSuppressionV5:Og,NotEqual:Ad,OP_SCOPE_SUFFIX:nv,OneHot:Dd,OnesLike:Rd,Optimizer:Mr,OptimizerConstructors:DE,Pack:Od,PadV2:_d,Pool:mL,Pow:Fu,Prelu:Fd,Prod:Ld,RMSPropOptimizer:bw,RaggedGather:_g,RaggedRange:Fg,RaggedTensorToTensor:Lg,Range:zg,get Rank(){return Jx},Real:Mg,RealDiv:yu,Reciprocal:Lu,get Reduction(){return Kn},Relu:zu,Relu6:Mu,Reshape:zd,ResizeBilinear:Bd,ResizeBilinearGrad:Vg,ResizeNearestNeighbor:Md,ResizeNearestNeighborGrad:Bg,Reverse:Vd,RotateWithOffset:sy,Round:Bu,Rsqrt:Vu,SGDOptimizer:Uy,ScatterNd:Pg,SearchSorted:Gg,Select:Pd,Selu:Pu,Sigmoid:Hu,Sign:Wu,Sin:Uu,Sinh:Gu,Slice:Ud,Softmax:jd,Softplus:ju,SpaceToBatchND:Wd,SparseFillEmptyRows:Wg,SparseReshape:Hg,SparseSegmentMean:jg,SparseSegmentSum:qg,SparseToDense:Xg,SplitV:Hd,Sqrt:qu,Square:Kg,SquaredDifference:Xu,StaticRegexReplace:qd,Step:Ju,StridedSlice:Yg,StringNGrams:Zg,StringSplit:Qg,StringToHashBucketFast:Jg,Sub:Ku,Sum:Gd,Tan:Yu,Tanh:Zu,Tensor:fe,TensorBuffer:en,TensorScatterUpdate:Ug,Tile:Qu,TopK:ty,Transform:ey,Transpose:yo,Unique:ny,Unpack:Xd,UnsortedSegmentSum:Kd,UpperBound:gL,Variable:_h,ZerosLike:Yd,_FusedMatMul:Eh,abs:Je,acos:uv,acosh:cv,add:xt,addN:dI,all:oy,any:Lh,argMax:Co,argMin:hv,asin:dv,asinh:fv,atan:pv,atan2:mv,atanh:gv,avgPool:tf,avgPool3d:bv,backend:av,backend_util:sA,basicLSTMCell:fI,batchNorm:tc,batchNorm2d:xv,batchNorm3d:vv,batchNorm4d:wv,batchToSpaceND:ef,bincount:Sv,bitwiseAnd:pI,booleanMaskAsync:QI,broadcastArgs:mI,broadcastTo:bo,broadcast_util:YM,browser:yG,buffer:Gt,cast:wt,ceil:Nv,clipByValue:os,clone:Ha,complex:kr,concat:He,concat1d:Tv,concat2d:Cv,concat3d:$v,concat4d:kv,conv1d:ly,conv2d:Ir,conv2dTranspose:uy,conv3d:Ev,conv3dTranspose:Av,copyRegisteredKernels:vL,cos:nf,cosh:cy,cosineWindow:_y,cumprod:Bh,cumsum:hy,customGrad:Qa,denseBincount:km,deprecationWarn:JL,depthToSpace:Rv,depthwiseConv2d:ec,device_util:qL,diag:yI,dilation2d:Dv,disableDeprecationWarnings:QL,dispose:qt,disposeVariables:tz,div:Rt,divNoNan:Ov,dot:_v,dropout:lw,einsum:uo,elu:nc,enableDebugMode:ZL,enableProdMode:YL,enclosingPowerOfTwo:uw,engine:ba,ensureShape:bI,env:rt,equal:la,erf:dy,euclideanNorm:Lv,exp:ls,expandDims:Bn,expm1:zv,eye:fy,fft:gf,fill:Vo,findBackend:iz,findBackendFactory:oz,floor:ac,floorDiv:iy,fused:oE,gather:rc,gatherND:nE,gather_util:bG,getBackend:Qk,getGradient:Zx,getKernel:Oh,getKernelsForBackend:Cm,grad:OB,grads:_B,greater:hs,greaterEqual:Fr,ifft:Ql,imag:sf,image:wa,inTopKAsync:sE,io:ww,irfft:Iy,isFinite:Mv,isInf:Bv,isNaN:Vv,keep:rn,kernel_impls:IG,leakyRelu:af,less:Xl,lessEqual:Oi,linalg:dw,linspace:wI,localResponseNormalization:Pv,log:Ss,log1p:rf,logSigmoid:Uv,logSoftmax:my,logSumExp:of,logicalAnd:Ca,logicalNot:lf,logicalOr:gy,logicalXor:Gv,losses:pE,lowerBound:NI,matMul:jt,math:oG,max:Ps,maxPool:uf,maxPool3d:Wv,maxPoolWithArgmax:TI,maximum:er,mean:Le,memory:r1,meshgrid:CI,min:ql,minimum:Ni,mirrorPad:Hv,mod:jv,moments:cf,movingAverage:JI,mul:H,multiRNNCell:$I,multinomial:kI,neg:Ee,nextFrame:kw,norm:sc,notEqual:Io,oneHot:Kl,ones:ss,onesLike:Ns,op:U,outerProduct:II,pad:Lr,pad1d:EI,pad2d:AI,pad3d:RI,pad4d:DI,pool:qv,pow:Za,prelu:df,print:lv,prod:Xv,profile:ez,raggedGather:OI,raggedRange:_I,raggedTensorToTensor:FI,rand:LI,randomGamma:BI,randomNormal:xy,randomStandardNormal:VI,randomUniform:_i,randomUniformInt:PI,range:Eo,ready:az,real:Yl,reciprocal:Qv,registerBackend:sv,registerGradient:Mk,registerKernel:ay,relu:Aa,relu6:vy,removeBackend:rz,reshape:X,reverse:Us,reverse1d:UI,reverse2d:GI,reverse3d:WI,reverse4d:HI,rfft:yf,round:wy,rsqrt:Sy,scalar:_t,scatterND:tE,scatter_util:MV,searchSorted:yy,selu:Ny,separableConv2d:Ty,serialization:BU,setBackend:sz,setPlatform:lz,setdiff1dAsync:jI,sigmoid:Na,sign:Jv,signal:fE,sin:Cy,sinh:$y,slice:ne,slice1d:ff,slice2d:ky,slice3d:pf,slice4d:Zl,slice_util:RE,softmax:mf,softplus:Po,spaceToBatchND:hf,sparse:mE,sparseToDense:eE,spectral:dE,split:as,sqrt:xn,square:xe,squaredDifference:Ey,squeeze:Fi,stack:us,step:Uo,stridedSlice:tw,string:gE,sub:$t,sum:kt,sumOutType:ry,tan:ew,tanh:Si,tensor:oa,tensor1d:Vn,tensor2d:Ul,tensor3d:nw,tensor4d:qI,tensor5d:XI,tensor6d:KI,tensorScatterUpdate:YI,tensor_util:UL,test_util:Z4,tidy:at,tile:Ms,time:nz,topk:aw,train:oo,transpose:Jt,truncatedNormal:Ry,unique:rw,unregisterGradient:xL,unregisterKernel:bL,unsortedSegmentSum:Dy,unstack:Gs,upcastType:rs,upperBound:ZI,util:EL,valueAndGrad:FB,valueAndGrads:LB,variable:iw,variableGrads:SI,version_core:NG,where:In,whereAsync:ow,zeros:tn,zerosLike:se},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AG=rt();AG.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var xs;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(xs||(xs={}));var o$;(function(n){(function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(o$||(o$={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qw={};function RG(n,t){const e={tfOpName:n,category:"custom",inputs:[],attrs:[],customExecutor:t};qw[n]=e}function aA(n){return qw[n]}function DG(n){delete qw[n]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k(n,t,e,s,a){const r=t.inputParams[n];if(r&&r.inputIndexStart!==void 0){const l=r.inputIndexStart,u=r.inputIndexEnd===0?void 0:r.inputIndexEnd===void 0?l+1:r.inputIndexEnd,h=l<0?t.inputNames.length+l:l;if(r.type==="tensor")return $n(t.inputNames[h],e,s,a);if(r.type==="tensors"){const m=t.inputs.slice(l,u);return t.inputNames.slice(l,u).filter((b,v)=>{var w;return((w=m[v])===null||w===void 0?void 0:w.op)!=="NoOp"}).map(b=>$n(b,e,s,a))}const f=$n(t.inputNames[h],e,s,a),p=f.dataSync();return r.type==="number"?p[0]:Vs(f.shape,p)}const i=t.attrParams[n];return i&&i.value}function $n(n,t,e,s){const[a,r]=vs(n,e);if(s!=null){const l=s.getHashTableHandleByName(a);if(l!=null)return l}const i=e.currentContextIds.find(l=>!!t[Em(a,l)]);return i!==void 0?t[Em(a,i)][r]:void 0}function l$(n,t,e){return t[Em(n,e.currentContextId)]}function vr(n,t){const[e,s,a]=vs(n,t);return[Em(e,t&&t.currentContextId),s,a]}function Em(n,t){return t?`${n}-${t}`:n}function vs(n,t){if(n==="")return["",0,void 0];const e=t!=null&&t.parseNodeNameCache!=null;if(e){const r=t.parseNodeNameCache.get(n);if(r!=null)return r}const s=n.split(":");let a;if(s.length===1)a=[n,0,void 0];else{const r=s[0],i=s.length===3?s[1]:void 0,l=Number(s[s.length-1]);a=[r,l,i]}return e&&t.parseNodeNameCache.set(n,a),a}function ym(n,t,e){let s=k("pad",n,t,e);if(s==="explicit"){s=k("explicitPaddings",n,t,e);const a=[[0,0],[0,0],[0,0],[0,0]];for(let r=0;r<4;r++)a[r][0]=s[r*2],a[r][1]=s[r*2+1];return a}return s}function wr(n){return n.kept?n:Ha(n)}/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OG=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],_G=Object.freeze(Object.defineProperty({__proto__:null,json:OG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FG=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsFinite",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsInf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],LG=Object.freeze(Object.defineProperty({__proto__:null,json:FG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zG=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],MG=Object.freeze(Object.defineProperty({__proto__:null,json:zG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BG=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],VG=Object.freeze(Object.defineProperty({__proto__:null,json:BG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PG=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniformInt",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number"},{tfName:"maxval",name:"maxval",type:"number"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],UG=Object.freeze(Object.defineProperty({__proto__:null,json:PG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GG=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],WG=Object.freeze(Object.defineProperty({__proto__:null,json:GG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HG=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],jG=Object.freeze(Object.defineProperty({__proto__:null,json:HG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qG=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],XG=Object.freeze(Object.defineProperty({__proto__:null,json:qG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KG=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],YG=Object.freeze(Object.defineProperty({__proto__:null,json:KG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZG=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],QG=Object.freeze(Object.defineProperty({__proto__:null,json:ZG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JG=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BitwiseAnd",category:"logical",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}]}],tW=Object.freeze(Object.defineProperty({__proto__:null,json:JG},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eW=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"MatrixBandPart",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"numLower",type:"tensor"},{start:1,name:"numUpper",type:"tensor"}]}],nW=Object.freeze(Object.defineProperty({__proto__:null,json:eW},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sW=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]}],aW=Object.freeze(Object.defineProperty({__proto__:null,json:sW},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rW=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],iW=Object.freeze(Object.defineProperty({__proto__:null,json:rW},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oW=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]},{tfOpName:"TensorScatterUpdate",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],lW=Object.freeze(Object.defineProperty({__proto__:null,json:oW},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uW=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],cW=Object.freeze(Object.defineProperty({__proto__:null,json:uW},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hW=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],dW=Object.freeze(Object.defineProperty({__proto__:null,json:hW},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fW=[{tfOpName:"StaticRegexReplace",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"pattern",name:"pattern",type:"string"},{tfName:"rewrite",name:"rewrite",type:"string"},{tfName:"replace_global",name:"replaceGlobal",type:"bool"}]},{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],pW=Object.freeze(Object.defineProperty({__proto__:null,json:fW},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mW=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"EnsureShape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],gW=Object.freeze(Object.defineProperty({__proto__:null,json:mW},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class u${static get Instance(){return this._instance||(this._instance=new this)}constructor(){const t=[_G,LG,MG,VG,UG,WG,jG,XG,YG,QG,tW,nW,aW,iW,lW,cW,dW,pW,gW],e=[].concat(...t.map(s=>s.json));this.opMappers=e.reduce((s,a)=>(s[a.tfOpName]=a,s),{})}transformGraph(t,e={}){const s=t.node,a=[],r=[],i=[],l=s.reduce((v,w)=>(v[w.name]=this.mapNode(w),w.op.startsWith("Placeholder")?a.push(v[w.name]):w.op==="Const"?r.push(v[w.name]):(w.input==null||w.input.length===0)&&i.push(v[w.name]),v),{});let u=[];const h=[];let f={},p={};e!=null&&(f=this.mapSignatureEntries(e.inputs),p=this.mapSignatureEntries(e.outputs));const m=Object.keys(l);m.forEach(v=>{const w=l[v];w.inputNames.forEach((S,T)=>{const[$,,C]=vr(S),I=l[$];if(I.outputs!=null){const R=I.outputs.indexOf(C);if(R!==-1){const F=`${$}:${R}`;w.inputNames[T]=F}}w.inputs.push(I),I.children.push(w)})}),Object.keys(p).length===0?m.forEach(v=>{const w=l[v];w.children.length===0&&h.push(w)}):Object.keys(p).forEach(v=>{const[w]=vr(v),S=l[w];S!=null&&(S.signatureKey=p[v],h.push(S))}),Object.keys(f).length>0?Object.keys(f).forEach(v=>{const[w]=vr(v),S=l[w];S&&(S.signatureKey=f[v],u.push(S))}):u=a;let y={};t.library!=null&&t.library.function!=null&&(y=t.library.function.reduce((v,w)=>(v[w.signature.name]=this.mapFunction(w),v),{}));const b={nodes:l,inputs:u,outputs:h,weights:r,placeholders:a,signature:e,functions:y};return i.length>0&&(b.initNodes=i),b}mapSignatureEntries(t){return Object.keys(t||{}).reduce((e,s)=>(e[t[s].name]=s,e),{})}mapNode(t){const e=aA(t.op)||this.opMappers[t.op]||{};t.attr==null&&(t.attr={});const s={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map(a=>a.startsWith("^")?a.slice(1):a),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr,outputs:e.outputs};return e.inputs!=null&&(s.inputParams=e.inputs.reduce((a,r)=>(a[r.name]={type:r.type,inputIndexStart:r.start,inputIndexEnd:r.end},a),{})),e.attrs!=null&&(s.attrParams=e.attrs.reduce((a,r)=>{const i=r.type;let l;switch(r.type){case"string":l=y1(t.attr,r.tfName,r.defaultValue),l===void 0&&r.tfDeprecatedName&&(l=y1(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"string[]":l=T1(t.attr,r.tfName,r.defaultValue),l===void 0&&r.tfDeprecatedName&&(l=T1(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"number":l=x1(t.attr,r.tfName,r.defaultValue||0),l===void 0&&r.tfDeprecatedName&&(l=x1(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"number[]":l=N1(t.attr,r.tfName,r.defaultValue),l===void 0&&r.tfDeprecatedName&&(l=N1(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool":l=b1(t.attr,r.tfName,r.defaultValue),l===void 0&&r.tfDeprecatedName&&(l=b1(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"bool[]":l=$1(t.attr,r.tfName,r.defaultValue),l===void 0&&r.tfDeprecatedName&&(l=$1(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape":l=S1(t.attr,r.tfName,r.defaultValue),l===void 0&&r.tfDeprecatedName&&(l=S1(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"shape[]":l=C1(t.attr,r.tfName,r.defaultValue),l===void 0&&r.tfDeprecatedName&&(l=C1(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype":l=v1(t.attr,r.tfName,r.defaultValue),l===void 0&&r.tfDeprecatedName&&(l=v1(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"dtype[]":l=w1(t.attr,r.tfName,r.defaultValue),l===void 0&&r.tfDeprecatedName&&(l=w1(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"func":l=c$(t.attr,r.tfName,r.defaultValue),l===void 0&&r.tfDeprecatedName&&(l=c$(t.attr,r.tfDeprecatedName,r.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${r.type} for op: ${t.op}`)}return a[r.name]={value:l,type:i},a},{})),s}mapFunction(t){const e=t.nodeDef,s=[],a=[];let r={};e!=null&&(r=e.reduce((p,m)=>(p[m.name]=this.mapNode(m),m.op==="Const"&&a.push(p[m.name]),p),{}));const i=[],l=[];t.signature.inputArg.forEach(p=>{const[m]=vr(p.name),y={name:m,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:Xw(p.type),type:"dtype"}},children:[]};y.signatureKey=p.name,i.push(y),r[m]=y}),Object.keys(r).forEach(p=>{const m=r[p];m.inputNames.forEach((y,b)=>{const[v,,w]=vr(y),S=r[v];if(S.outputs!=null){const T=S.outputs.indexOf(w);if(T!==-1){const $=`${v}:${T}`;m.inputNames[b]=$}}m.inputs.push(S),S.children.push(m)})});const h=t.ret;t.signature.outputArg.forEach(p=>{const[m,y]=vr(h[p.name]),b=r[m];b!=null&&(b.defaultOutput=y,l.push(b))});const f=this.mapArgsToSignature(t);return{nodes:r,inputs:i,outputs:l,weights:a,placeholders:s,signature:f}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce((e,s)=>(e[s.name]=this.mapArgToTensorInfo(s),e),{}),outputs:t.signature.outputArg.reduce((e,s)=>(e[s.name]=this.mapArgToTensorInfo(s,t.ret),e),{})}}mapArgToTensorInfo(t,e){let s=t.name;return e!=null&&(s=e[s]),{name:s,dtype:t.type}}}function yW(n){const t=rt().global;if(typeof t.atob<"u")return t.atob(n);if(typeof Buffer<"u")return new Buffer(n,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function rA(n,t){const e=Array.isArray(n)?String.fromCharCode.apply(null,n):yW(n);return t?e:e.toLowerCase()}function y1(n,t,e,s=!1){const a=n[t];return a!=null?rA(a.s,s):e}function b1(n,t,e){const s=n[t];return s?s.b:e}function x1(n,t,e){const s=n[t]||{},a=s.i!=null?s.i:s.f!=null?s.f:e;return typeof a=="number"?a:parseInt(a,10)}function Xw(n){switch(typeof n=="string"&&(n=xs[n]),n){case xs.DT_FLOAT:case xs.DT_HALF:return"float32";case xs.DT_INT32:case xs.DT_INT64:case xs.DT_INT8:case xs.DT_UINT8:return"int32";case xs.DT_BOOL:return"bool";case xs.DT_DOUBLE:return"float32";case xs.DT_STRING:return"string";case xs.DT_COMPLEX64:case xs.DT_COMPLEX128:return"complex64";default:return null}}function c$(n,t,e){const s=n[t];return s&&s.func?s.func.name:e}function v1(n,t,e){const s=n[t];return s&&s.type?Xw(s.type):e}function w1(n,t,e){const s=n[t];return s&&s.list&&s.list.type?s.list.type.map(a=>Xw(a)):e}function iA(n){if(!n.unknownRank)return n.dim!=null?n.dim.map(t=>typeof t.size=="number"?t.size:parseInt(t.size,10)):[]}function S1(n,t,e){const s=n[t];return s&&s.shape?iA(s.shape):e}function N1(n,t,e){const s=n[t];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map(a=>typeof a=="number"?a:parseInt(a,10)):e}function T1(n,t,e,s=!1){const a=n[t];return a&&a.list&&a.list.s?a.list.s.map(r=>rA(r,s)):e}function C1(n,t,e){const s=n[t];return s&&s.list&&s.list.shape?s.list.shape.map(a=>iA(a)):e}function $1(n,t,e){const s=n[t];return s&&s.list&&s.list.b?s.list.b:e}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bW{constructor(t,e,s){this.node=t,this.tensorMap=e,this.context=s,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map(a=>this.getInput(a)),t.rawAttrs!=null&&(this.attrs=Object.keys(t.rawAttrs).reduce((a,r)=>(a[r]=this.getAttr(r),a),{}))}getInput(t){return $n(t,this.tensorMap,this.context)}getAttr(t,e){const s=this.node.rawAttrs[t];if(s.tensor!=null)return $n(t,this.tensorMap,this.context);if(s.i!=null||s.f!=null)return x1(this.node.rawAttrs,t,e);if(s.s!=null)return y1(this.node.rawAttrs,t,e);if(s.b!=null)return b1(this.node.rawAttrs,t,e);if(s.shape!=null)return S1(this.node.rawAttrs,t,e);if(s.type!=null)return v1(this.node.rawAttrs,t,e);if(s.list!=null){if(s.list.i!=null||s.list.f!=null)return N1(this.node.rawAttrs,t,e);if(s.list.s!=null)return T1(this.node.rawAttrs,t,e);if(s.list.shape!=null)return C1(this.node.rawAttrs,t,e);if(s.list.b!=null)return $1(this.node.rawAttrs,t,e);if(s.list.type!=null)return w1(this.node.rawAttrs,t,e)}return e}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const On=Object.freeze(Object.defineProperty({__proto__:null,OP_SCOPE_SUFFIX:nv,abs:Je,acos:uv,acosh:cv,add:xt,addN:dI,all:oy,any:Lh,argMax:Co,argMin:hv,asin:dv,asinh:fv,atan:pv,atan2:mv,atanh:gv,avgPool:tf,avgPool3d:bv,basicLSTMCell:fI,batchNorm:tc,batchNorm2d:xv,batchNorm3d:vv,batchNorm4d:wv,batchToSpaceND:ef,bincount:Sv,bitwiseAnd:pI,booleanMaskAsync:QI,broadcastArgs:mI,broadcastTo:bo,buffer:Gt,cast:wt,ceil:Nv,clipByValue:os,clone:Ha,complex:kr,concat:He,concat1d:Tv,concat2d:Cv,concat3d:$v,concat4d:kv,conv1d:ly,conv2d:Ir,conv2dTranspose:uy,conv3d:Ev,conv3dTranspose:Av,cos:nf,cosh:cy,cosineWindow:_y,cumprod:Bh,cumsum:hy,denseBincount:km,depthToSpace:Rv,depthwiseConv2d:ec,diag:yI,dilation2d:Dv,div:Rt,divNoNan:Ov,dot:_v,dropout:lw,einsum:uo,elu:nc,enclosingPowerOfTwo:uw,ensureShape:bI,equal:la,erf:dy,euclideanNorm:Lv,exp:ls,expandDims:Bn,expm1:zv,eye:fy,fft:gf,fill:Vo,floor:ac,floorDiv:iy,fused:oE,gather:rc,gatherND:nE,greater:hs,greaterEqual:Fr,ifft:Ql,imag:sf,image:wa,inTopKAsync:sE,irfft:Iy,isFinite:Mv,isInf:Bv,isNaN:Vv,leakyRelu:af,less:Xl,lessEqual:Oi,linalg:dw,linspace:wI,localResponseNormalization:Pv,log:Ss,log1p:rf,logSigmoid:Uv,logSoftmax:my,logSumExp:of,logicalAnd:Ca,logicalNot:lf,logicalOr:gy,logicalXor:Gv,losses:pE,lowerBound:NI,matMul:jt,max:Ps,maxPool:uf,maxPool3d:Wv,maxPoolWithArgmax:TI,maximum:er,mean:Le,meshgrid:CI,min:ql,minimum:Ni,mirrorPad:Hv,mod:jv,moments:cf,movingAverage:JI,mul:H,multiRNNCell:$I,multinomial:kI,neg:Ee,norm:sc,notEqual:Io,oneHot:Kl,ones:ss,onesLike:Ns,op:U,outerProduct:II,pad:Lr,pad1d:EI,pad2d:AI,pad3d:RI,pad4d:DI,pool:qv,pow:Za,prelu:df,print:lv,prod:Xv,raggedGather:OI,raggedRange:_I,raggedTensorToTensor:FI,rand:LI,randomGamma:BI,randomNormal:xy,randomStandardNormal:VI,randomUniform:_i,randomUniformInt:PI,range:Eo,real:Yl,reciprocal:Qv,relu:Aa,relu6:vy,reshape:X,reverse:Us,reverse1d:UI,reverse2d:GI,reverse3d:WI,reverse4d:HI,rfft:yf,round:wy,rsqrt:Sy,scalar:_t,scatterND:tE,searchSorted:yy,selu:Ny,separableConv2d:Ty,setdiff1dAsync:jI,sigmoid:Na,sign:Jv,signal:fE,sin:Cy,sinh:$y,slice:ne,slice1d:ff,slice2d:ky,slice3d:pf,slice4d:Zl,softmax:mf,softplus:Po,spaceToBatchND:hf,sparse:mE,sparseToDense:eE,spectral:dE,split:as,sqrt:xn,square:xe,squaredDifference:Ey,squeeze:Fi,stack:us,step:Uo,stridedSlice:tw,string:gE,sub:$t,sum:kt,tan:ew,tanh:Si,tensor:oa,tensor1d:Vn,tensor2d:Ul,tensor3d:nw,tensor4d:qI,tensor5d:XI,tensor6d:KI,tensorScatterUpdate:YI,tile:Ms,topk:aw,transpose:Jt,truncatedNormal:Ry,unique:rw,unsortedSegmentSum:Dy,unstack:Gs,upperBound:ZI,variable:iw,where:In,whereAsync:ow,zeros:tn,zerosLike:se},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xW=(n,t,e,s=On)=>{switch(n.op){case"BiasAdd":case"AddV2":case"Add":return[s.add(k("a",n,t,e),k("b",n,t,e))];case"AddN":return[s.addN(k("tensors",n,t,e))];case"FloorMod":case"Mod":return[s.mod(k("a",n,t,e),k("b",n,t,e))];case"Mul":return[s.mul(k("a",n,t,e),k("b",n,t,e))];case"RealDiv":case"Div":return[s.div(k("a",n,t,e),k("b",n,t,e))];case"DivNoNan":return[s.divNoNan(k("a",n,t,e),k("b",n,t,e))];case"FloorDiv":return[s.floorDiv(k("a",n,t,e),k("b",n,t,e))];case"Sub":return[s.sub(k("a",n,t,e),k("b",n,t,e))];case"Minimum":return[s.minimum(k("a",n,t,e),k("b",n,t,e))];case"Maximum":return[s.maximum(k("a",n,t,e),k("b",n,t,e))];case"Pow":return[s.pow(k("a",n,t,e),k("b",n,t,e))];case"SquaredDifference":return[s.squaredDifference(k("a",n,t,e),k("b",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vW=(n,t,e,s=On)=>{switch(n.op){case"Abs":case"ComplexAbs":return[s.abs(k("x",n,t,e))];case"Acos":return[s.acos(k("x",n,t,e))];case"Acosh":return[s.acosh(k("x",n,t,e))];case"Asin":return[s.asin(k("x",n,t,e))];case"Asinh":return[s.asinh(k("x",n,t,e))];case"Atan":return[s.atan(k("x",n,t,e))];case"Atan2":return[s.atan2(k("x",n,t,e),k("y",n,t,e))];case"Atanh":return[s.atanh(k("x",n,t,e))];case"Ceil":return[s.ceil(k("x",n,t,e))];case"Complex":return[s.complex(k("real",n,t,e),k("imag",n,t,e))];case"Cos":return[s.cos(k("x",n,t,e))];case"Cosh":return[s.cosh(k("x",n,t,e))];case"Elu":return[s.elu(k("x",n,t,e))];case"Erf":return[s.erf(k("x",n,t,e))];case"Exp":return[s.exp(k("x",n,t,e))];case"Expm1":return[s.expm1(k("x",n,t,e))];case"Floor":return[s.floor(k("x",n,t,e))];case"Log":return[s.log(k("x",n,t,e))];case"Log1p":return[s.log1p(k("x",n,t,e))];case"Imag":return[s.imag(k("x",n,t,e))];case"Neg":return[s.neg(k("x",n,t,e))];case"Reciprocal":return[s.reciprocal(k("x",n,t,e))];case"Real":return[s.real(k("x",n,t,e))];case"Relu":return[s.relu(k("x",n,t,e))];case"Round":return[s.round(k("x",n,t,e))];case"Selu":return[s.selu(k("x",n,t,e))];case"Sigmoid":return[s.sigmoid(k("x",n,t,e))];case"Sin":return[s.sin(k("x",n,t,e))];case"Sign":return[s.sign(k("x",n,t,e))];case"Sinh":return[s.sinh(k("x",n,t,e))];case"Softplus":return[s.softplus(k("x",n,t,e))];case"Sqrt":return[s.sqrt(k("x",n,t,e))];case"Square":return[s.square(k("x",n,t,e))];case"Tanh":return[s.tanh(k("x",n,t,e))];case"Tan":return[s.tan(k("x",n,t,e))];case"ClipByValue":return[s.clipByValue(k("x",n,t,e),k("clipValueMin",n,t,e),k("clipValueMax",n,t,e))];case"Relu6":return[s.relu6(k("x",n,t,e))];case"Rsqrt":return[s.rsqrt($n(n.inputNames[0],t,e))];case"LeakyRelu":return[s.leakyRelu(k("x",n,t,e),k("alpha",n,t,e))];case"Prelu":return[s.prelu(k("x",n,t,e),k("alpha",n,t,e))];case"IsNan":return[s.isNaN($n(n.inputNames[0],t,e))];case"IsInf":return[s.isInf($n(n.inputNames[0],t,e))];case"IsFinite":return[s.isFinite($n(n.inputNames[0],t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aa(n,t,e=""){if(!(typeof n=="number"||typeof t=="number")){D(n.length===t.length,()=>e+` Shapes ${n} and ${t} must match`);for(let s=0;s<n.length;s++){const a=n[s],r=t[s];D(a<0||r<0||a===r,()=>e+` Shapes ${n} and ${t} must match`)}}}function h$(n){return!(typeof n=="number"||n.some(t=>t<0))}function yh(n,t,e){let s=k1(n,e);const a=!h$(s);if(a&&t.length===0)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(a&&t.forEach(r=>{s=k1(r.shape,s)}),!h$(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function k1(n,t){if(typeof n=="number")return t;if(typeof t=="number")return n;if(n.length!==t.length)throw new Error(`Incompatible ranks during merge: ${n} vs. ${t}`);const e=[];for(let s=0;s<n.length;++s){const a=n[s],r=t[s];if(a>=0&&r>=0&&a!==r)throw new Error(`Incompatible shape during merge: ${n} vs. ${t}`);e[s]=a>=0?a:r}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wW{constructor(t,e,s,a,r,i,l){this.name=t,this.dtype=e,this.maxSize=s,this.elementShape=a,this.identicalElementShapes=r,this.dynamicSize=i,this.clearAfterRead=l,this.tensors=[],this.closed_=!1,this.idTensor=_t(0),rn(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach(e=>{(t==null||!t.has(e.tensor.id))&&e.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);const e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map(e=>this.read(e))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);const s=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},
          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(this.size()===0&&(this.elementShape==null||this.elementShape.length===0)&&(this.elementShape=e.shape),aa(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),s.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(s.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);s.tensor=e,rn(e),s.written=!0,this.tensors[t]=s}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach((s,a)=>this.write(s,e[a]))}gather(t,e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let a=0;a<this.size();a++)t.push(a)}if(t.length===0)return oa([],[0].concat(this.elementShape));const s=this.readMany(t);return aa(this.elementShape,s[0].shape,"TensorArray shape mismatch: "),us(s,0)}concat(t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(this.size()===0)return oa([],[0].concat(this.elementShape));const e=[];for(let a=0;a<this.size();a++)e.push(a);const s=this.readMany(e);return aa(this.elementShape,s[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${s[0].shape})`),He(s,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const s=Math.max(...t);if(!this.dynamicSize&&s>=this.maxSize)throw new Error(`Max index must be < array size (${s}  vs. ${this.maxSize})`);this.writeMany(t,Gs(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let s=0;const a=t.map(u=>(s+=u,s));if(s!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);const r=s===0?0:e.size/s,i=[];at(()=>{e=X(e,[1,s,r]);for(let u=0;u<t.length;++u){const f=[0,u===0?0:a[u-1],0],p=[1,t[u],r];i[u]=X(ne(e,f,p),this.elementShape)}return i});const l=[];for(let u=0;u<t.length;u++)l[u]=u;this.writeMany(l,i)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ro{get id(){return this.idTensor.id}constructor(t,e,s,a=-1){this.tensors=t,this.elementShape=e,this.elementDtype=s,t?.forEach(r=>{if(s!==r.dtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${r.dtype}`);aa(e,r.shape,"TensorList shape mismatch: "),rn(r)}),this.idTensor=_t(0),this.maxNumElements=a,rn(this.idTensor)}copy(){return new Ro([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach(e=>{(t==null||!t.has(e.id))&&e.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,s=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(s!==-1&&this.tensors.length!==s)throw new Error(`Operation expected a list with ${s} elements but got a list with ${this.tensors.length} elements.`);aa(t,this.elementShape,"TensorList shape mismatch: ");const a=yh(this.elementShape,this.tensors,t);return at(()=>{const r=this.tensors.map(i=>X(i,a));return us(r,0)})}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(this.size()===0)throw new Error("Trying to pop from an empty list.");const s=yh(this.elementShape,this.tensors,t),a=this.tensors.pop();return a.kept=!1,aa(a.shape,t,"TensorList shape mismatch: "),X(a,s)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(aa(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");rn(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(this.maxNumElements!==-1&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);const e=new Ro([],this.elementShape,this.elementDtype,this.maxNumElements);e.tensors.length=t;for(let s=0;s<Math.min(this.tensors.length,t);++s)e.tensors[s]=this.tensors[s];return e}getItem(t,e,s){if(s!==this.elementDtype)throw new Error(`Invalid data types; op elements ${s}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(this.tensors[t]==null)throw new Error(`element at index ${t} is null.`);aa(this.tensors[t].shape,e,"TensorList shape mismatch: ");const a=yh(this.elementShape,this.tensors,e);return X(this.tensors[t],a)}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(t<0||this.maxNumElements!==-1&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);aa(this.elementShape,e.shape,"TensorList shape mismatch: "),rn(e),this.tensors[t]!=null&&(this.tensors[t].kept=!1),this.tensors[t]=e}gather(t,e,s){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);aa(this.elementShape,s,"TensorList shape mismatch: "),t=t.slice(0,this.size());const a=yh(this.elementShape,this.tensors,s);return t.length===0?oa([],[0].concat(a)):at(()=>{const r=t.map(i=>X(this.tensors[i],a));return us(r,0)})}concat(t,e){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);aa(this.elementShape,e,"TensorList shape mismatch: ");const s=yh(this.elementShape,this.tensors,e);return this.size()===0?oa([],[0].concat(s)):at(()=>{const a=this.tensors.map(r=>X(r,s));return He(a,0)})}}function SW(n,t,e){const s=n.dtype;if(n.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${n.shape}`);if(n.dtype!==e)throw new Error(`Invalid data types; op elements ${n.dtype}, but list elements ${e}`);const a=n.shape.slice(1);aa(a,t,"TensorList shape mismatch: ");const r=Gs(n);return new Ro(r,t,s)}function NW(n,t,e,s){return new Ro([],n,t,s)}function TW(n,t,e,s){if(t.length!==n.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${n.shape[0]}`);const a=Math.max(...t);if(s!=null&&s!==-1&&a>=s)throw new Error(`Max index must be < array size (${a}  vs. ${s})`);const r=new Ro([],e,n.dtype,s),i=Gs(n,0);return t.forEach((l,u)=>{r.setItem(l,i[u])}),r}function CW(n,t,e){let s=0;const a=t.map(f=>(s+=f,s));if(s!==n.shape[0])throw new Error(`Expected sum of lengths to be equal to
          tensor.shape[0], but sum of lengths is
        ${s}, and tensor's shape is: ${n.shape}`);const r=n.shape.slice(1),i=k1(r,e),l=s===0?0:n.size/s,u=at(()=>{const f=[];n=X(n,[1,s,l]);for(let p=0;p<t.length;++p){const y=[0,p===0?0:a[p-1],0],b=[1,t[p],l];f[p]=X(ne(n,y,b),i)}return n.dispose(),f}),h=new Ro([],e,n.dtype,t.length);for(let f=0;f<u.length;f++)h.setItem(f,u[f]);return h}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $W=async(n,t,e)=>{switch(n.op){case"If":case"StatelessIf":{const s=k("thenBranch",n,t,e),a=k("elseBranch",n,t,e),r=k("cond",n,t,e),i=k("args",n,t,e);return(await r.data())[0]?e.functionMap[s].executeFunctionAsync(i,e.tensorArrayMap,e.tensorListMap):e.functionMap[a].executeFunctionAsync(i,e.tensorArrayMap,e.tensorListMap)}case"While":case"StatelessWhile":{const s=k("body",n,t,e),a=k("cond",n,t,e),r=k("args",n,t,e),i=await e.functionMap[a].executeFunctionAsync(r,e.tensorArrayMap,e.tensorListMap),l=r.map(f=>f.id);let u=await i[0].data();i.forEach(f=>{!f.kept&&l.indexOf(f.id)===-1&&f.dispose()});let h=r;for(;u[0];){const f=h;h=await e.functionMap[s].executeFunctionAsync(h,e.tensorArrayMap,e.tensorListMap);const p=h.map(y=>y.id);f.forEach(y=>{!y.kept&&l.indexOf(y.id)===-1&&p.indexOf(y.id)===-1&&y.dispose()});const m=await e.functionMap[a].executeFunctionAsync(h,e.tensorArrayMap,e.tensorListMap);u=await m[0].data(),m.forEach(y=>{!y.kept&&l.indexOf(y.id)===-1&&p.indexOf(y.id)===-1&&y.dispose()})}return h}case"LoopCond":{const s=k("pred",n,t,e);return[wr(s)]}case"Switch":{const s=k("pred",n,t,e);let a=k("data",n,t,e);return a.kept||(a=wr(a)),(await s.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const s=n.inputNames.find(a=>$n(a,t,e)!==void 0);if(s){const a=$n(s,t,e);return[wr(a)]}return}case"Enter":{const s=k("frameName",n,t,e),a=k("tensor",n,t,e);return e.enterFrame(s),[wr(a)]}case"Exit":{const s=k("tensor",n,t,e);return e.exitFrame(),[wr(s)]}case"NextIteration":{const s=k("tensor",n,t,e);return e.nextIteration(),[wr(s)]}case"TensorArrayV3":{const s=k("size",n,t,e),a=k("dtype",n,t,e),r=k("elementShape",n,t,e),i=k("dynamicSize",n,t,e),l=k("clearAfterRead",n,t,e),u=k("identicalElementShapes",n,t,e),h=k("name",n,t,e),f=new wW(h,a,s,r,u,i,l);return e.addTensorArray(f),[f.idTensor,_t(1)]}case"TensorArrayWriteV3":{const s=k("tensorArrayId",n,t,e),a=k("index",n,t,e),r=k("tensor",n,t,e),i=e.getTensorArray(s.id);return i.write(a,r),[i.idTensor]}case"TensorArrayReadV3":{const s=k("tensorArrayId",n,t,e),a=k("index",n,t,e);return[e.getTensorArray(s.id).read(a)]}case"TensorArrayGatherV3":{const s=k("tensorArrayId",n,t,e),a=k("indices",n,t,e),r=k("dtype",n,t,e);return[e.getTensorArray(s.id).gather(a,r)]}case"TensorArrayScatterV3":{const s=k("tensorArrayId",n,t,e),a=k("indices",n,t,e),r=k("tensor",n,t,e),i=e.getTensorArray(s.id);return i.scatter(a,r),[i.idTensor]}case"TensorArrayConcatV3":{const s=k("tensorArrayId",n,t,e),a=e.getTensorArray(s.id),r=k("dtype",n,t,e);return[a.concat(r)]}case"TensorArraySplitV3":{const s=k("tensorArrayId",n,t,e),a=k("tensor",n,t,e),r=k("lengths",n,t,e),i=e.getTensorArray(s.id);return i.split(r,a),[i.idTensor]}case"TensorArraySizeV3":{const s=k("tensorArrayId",n,t,e),a=e.getTensorArray(s.id);return[_t(a.size(),"int32")]}case"TensorArrayCloseV3":{const s=k("tensorArrayId",n,t,e),a=e.getTensorArray(s.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const s=k("tensorListId",n,t,e),a=k("index",n,t,e),r=k("tensor",n,t,e),i=e.getTensorList(s.id);return i.setItem(a,r),[i.idTensor]}case"TensorListGetItem":{const s=k("tensorListId",n,t,e),a=k("index",n,t,e),r=k("elementShape",n,t,e),i=k("elementDType",n,t,e);return[e.getTensorList(s.id).getItem(a,r,i)]}case"TensorListScatterV2":case"TensorListScatter":{const s=k("indices",n,t,e),a=k("tensor",n,t,e),r=k("elementShape",n,t,e),i=k("numElements",n,t,e),l=TW(a,s,r,i);return e.addTensorList(l),[l.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=k("elementShape",n,t,e),a=k("elementDType",n,t,e);let r;n.op==="TensorListReserve"?r="numElements":r="maxNumElements";const i=k(r,n,t,e),l=n.op==="TensorListReserve"?-1:i,u=NW(s,a,i,l);return e.addTensorList(u),[u.idTensor]}case"TensorListGather":{const s=k("tensorListId",n,t,e),a=k("indices",n,t,e),r=k("elementShape",n,t,e),i=k("elementDType",n,t,e);return[e.getTensorList(s.id).gather(a,i,r)]}case"TensorListStack":{const s=k("tensorListId",n,t,e),a=k("elementShape",n,t,e),r=k("elementDType",n,t,e),i=k("numElements",n,t,e);return[e.getTensorList(s.id).stack(a,r,i)]}case"TensorListFromTensor":{const s=k("tensor",n,t,e),a=k("elementShape",n,t,e),r=k("elementDType",n,t,e),i=SW(s,a,r);return e.addTensorList(i),[i.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{const s=k("tensorListId",n,t,e),a=e.getTensorList(s.id),r=k("dtype",n,t,e),i=k("elementShape",n,t,e);return[a.concat(r,i)]}case"TensorListPushBack":{const s=k("tensorListId",n,t,e),a=k("tensor",n,t,e),r=e.getTensorList(s.id);return r.pushBack(a),[r.idTensor]}case"TensorListPopBack":{const s=k("tensorListId",n,t,e),a=k("elementShape",n,t,e),r=k("elementDType",n,t,e);return[e.getTensorList(s.id).popBack(a,r)]}case"TensorListSplit":{const s=k("tensor",n,t,e),a=k("elementShape",n,t,e),r=k("lengths",n,t,e),i=CW(s,r,a);return e.addTensorList(i),[i.idTensor]}case"TensorListLength":{const s=k("tensorListId",n,t,e),a=e.getTensorList(s.id);return[_t(a.size(),"int32")]}case"TensorListResize":{const s=k("tensorListId",n,t,e),a=k("size",n,t,e),i=e.getTensorList(s.id).resize(a);return e.addTensorList(i),[i.idTensor]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d$(n,t,e){const[s,a]=k("fusedOps",n,t,e),r=s==="biasadd",i=!r,l=a==="prelu",u=s==="fusedbatchnorm",h=k("numArgs",n,t,e);if(r){if(l&&h!==2)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!l&&r&&h!==1)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const f=k("strides",n,t,e),p=ym(n,t,e),m=k("dataFormat",n,t,e).toUpperCase(),y=k("dilations",n,t,e);let[b,v]=k("args",n,t,e);i&&(v=b,b=void 0);const w=k("leakyreluAlpha",n,t,e);return{stride:f,pad:p,dataFormat:m,dilations:y,biasArg:b,preluArg:v,activationFunc:a,leakyreluAlpha:w}}const kW=(n,t,e,s=On)=>{switch(n.op){case"Conv1D":{const a=k("stride",n,t,e),r=k("pad",n,t,e),i=k("dataFormat",n,t,e).toUpperCase(),l=k("dilation",n,t,e);return[s.conv1d(k("x",n,t,e),k("filter",n,t,e),a,r,i,l)]}case"Conv2D":{const a=k("strides",n,t,e),r=ym(n,t,e),i=k("dataFormat",n,t,e).toUpperCase(),l=k("dilations",n,t,e);return[s.conv2d(k("x",n,t,e),k("filter",n,t,e),[a[1],a[2]],r,i,[l[1],l[2]])]}case"_FusedConv2D":{const{stride:a,pad:r,dataFormat:i,dilations:l,biasArg:u,preluArg:h,activationFunc:f,leakyreluAlpha:p}=d$(n,t,e);return[s.fused.conv2d({x:k("x",n,t,e),filter:k("filter",n,t,e),strides:[a[1],a[2]],pad:r,dataFormat:i,dilations:[l[1],l[2]],bias:u,activation:f,preluActivationWeights:h,leakyreluAlpha:p})]}case"FusedDepthwiseConv2dNative":{const{stride:a,pad:r,dataFormat:i,dilations:l,biasArg:u,preluArg:h,activationFunc:f,leakyreluAlpha:p}=d$(n,t,e);return[s.fused.depthwiseConv2d({x:k("x",n,t,e),filter:k("filter",n,t,e),strides:[a[1],a[2]],pad:r,dataFormat:i,dilations:[l[1],l[2]],bias:u,activation:f,preluActivationWeights:h,leakyreluAlpha:p})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const a=k("outputShape",n,t,e),r=k("strides",n,t,e),i=ym(n,t,e);return[s.conv2dTranspose(k("x",n,t,e),k("filter",n,t,e),a,[r[1],r[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const a=k("strides",n,t,e),r=ym(n,t,e),i=k("dilations",n,t,e),l=k("dataFormat",n,t,e).toUpperCase();return[s.depthwiseConv2d(k("input",n,t,e),k("filter",n,t,e),[a[1],a[2]],r,l,[i[1],i[2]])]}case"Conv3D":{const a=k("strides",n,t,e),r=k("pad",n,t,e),i=k("dataFormat",n,t,e).toUpperCase(),l=k("dilations",n,t,e);return[s.conv3d(k("x",n,t,e),k("filter",n,t,e),[a[1],a[2],a[3]],r,i,[l[1],l[2],l[3]])]}case"AvgPool":{const a=k("strides",n,t,e),r=k("pad",n,t,e),i=k("kernelSize",n,t,e);return[s.avgPool(k("x",n,t,e),[i[1],i[2]],[a[1],a[2]],r)]}case"MaxPool":{const a=k("strides",n,t,e),r=k("pad",n,t,e),i=k("kernelSize",n,t,e);return[s.maxPool(k("x",n,t,e),[i[1],i[2]],[a[1],a[2]],r)]}case"MaxPoolWithArgmax":{const a=k("strides",n,t,e),r=k("pad",n,t,e),i=k("kernelSize",n,t,e),l=k("includeBatchInIndex",n,t,e),{result:u,indexes:h}=s.maxPoolWithArgmax(k("x",n,t,e),[i[1],i[2]],[a[1],a[2]],r,l);return[u,h]}case"AvgPool3D":{const a=k("strides",n,t,e),r=k("pad",n,t,e),i=k("kernelSize",n,t,e);return[s.avgPool3d(k("x",n,t,e),[i[1],i[2],i[3]],[a[1],a[2],a[3]],r)]}case"MaxPool3D":{const a=k("strides",n,t,e),r=k("pad",n,t,e),i=k("kernelSize",n,t,e);return[s.maxPool3d(k("x",n,t,e),[i[1],i[2],i[3]],[a[1],a[2],a[3]],r)]}case"Dilation2D":{const a=k("strides",n,t,e),r=k("pad",n,t,e),i=k("dilations",n,t,e),l=a[1],u=a[2],h=i[1],f=i[2];return[s.dilation2d(k("x",n,t,e),k("filter",n,t,e),[l,u],r,[h,f],"NHWC")]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IW=(n,t,e,s=On)=>{switch(n.op){case"Fill":{const a=k("shape",n,t,e),r=k("dtype",n,t,e),i=k("value",n,t,e);return[s.fill(a,i,r)]}case"LinSpace":{const a=k("start",n,t,e),r=k("stop",n,t,e),i=k("num",n,t,e);return[s.linspace(a,r,i)]}case"Multinomial":{const a=k("logits",n,t,e),r=k("numSamples",n,t,e),i=k("seed",n,t,e);return[s.multinomial(a,r,i)]}case"OneHot":{const a=k("indices",n,t,e),r=k("depth",n,t,e),i=k("onValue",n,t,e),l=k("offValue",n,t,e),u=k("dtype",n,t,e);return[s.oneHot(a,r,i,l,u)]}case"Ones":return[s.ones(k("shape",n,t,e),k("dtype",n,t,e))];case"OnesLike":return[s.onesLike(k("x",n,t,e))];case"RandomStandardNormal":return[s.randomStandardNormal(k("shape",n,t,e),k("dtype",n,t,e),k("seed",n,t,e))];case"RandomUniform":return[s.randomUniform(k("shape",n,t,e),k("minval",n,t,e),k("maxval",n,t,e),k("dtype",n,t,e))];case"RandomUniformInt":return[s.randomUniformInt(k("shape",n,t,e),k("minval",n,t,e),k("maxval",n,t,e),k("seed",n,t,e))];case"Range":{const a=k("start",n,t,e),r=k("stop",n,t,e),i=k("step",n,t,e);return[s.range(a,r,i,k("dtype",n,t,e))]}case"TruncatedNormal":{const a=k("shape",n,t,e),r=k("mean",n,t,e),i=k("stdDev",n,t,e),l=k("seed",n,t,e);return[s.truncatedNormal(a,r,i,k("dtype",n,t,e),l)]}case"Zeros":return[s.zeros(k("shape",n,t,e),k("dtype",n,t,e))];case"ZerosLike":return[s.zerosLike(k("x",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zx(n,t,e){const s=k("boxes",n,t,e),a=k("scores",n,t,e),r=k("maxOutputSize",n,t,e),i=k("iouThreshold",n,t,e),l=k("scoreThreshold",n,t,e),u=k("softNmsSigma",n,t,e);return{boxes:s,scores:a,maxOutputSize:r,iouThreshold:i,scoreThreshold:l,softNmsSigma:u}}const EW=async(n,t,e,s,a=On)=>{switch(n.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:i,maxOutputSize:l,iouThreshold:u,scoreThreshold:h,softNmsSigma:f}=zx(n,t,e),p=await a.image.nonMaxSuppressionWithScoreAsync(r,i,l,u,h,f);return[p.selectedIndices,p.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:i,maxOutputSize:l,iouThreshold:u,scoreThreshold:h}=zx(n,t,e),f=k("padToMaxOutputSize",n,t,e),p=await a.image.nonMaxSuppressionPaddedAsync(r,i,l,u,h,f);return[p.selectedIndices,p.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:i,maxOutputSize:l,iouThreshold:u,scoreThreshold:h}=zx(n,t,e);return[await a.image.nonMaxSuppressionAsync(r,i,l,u,h)]}case"Where":{const r=a.cast(k("condition",n,t,e),"bool"),i=[await a.whereAsync(r)];return r.dispose(),i}case"ListDiff":return a.setdiff1dAsync(k("x",n,t,e),k("y",n,t,e));default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AW=(n,t,e,s=On)=>{switch(n.op){case"LowerBound":{const a=k("sortedSequence",n,t,e),r=k("values",n,t,e);return[s.lowerBound(a,r)]}case"TopKV2":{const a=k("x",n,t,e),r=k("k",n,t,e),i=k("sorted",n,t,e),l=s.topk(a,r,i);return[l.values,l.indices]}case"UpperBound":{const a=k("sortedSequence",n,t,e),r=k("values",n,t,e);return[s.upperBound(a,r)]}case"Unique":{const a=k("x",n,t,e),r=s.unique(a);return[r.values,r.indices]}case"UniqueV2":{const a=k("x",n,t,e),r=k("axis",n,t,e),i=s.unique(a,r);return[i.values,i.indices]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RW=(n,t,e,s=On)=>{switch(n.op){case"Const":return t[n.name];case"PlaceholderWithDefault":const a=k("default",n,t,e);return[$n(n.name,t,e)||a];case"Placeholder":return[$n(n.name,t,e)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const f=k("x",n,t,e);return[wr(f)]}case"IdentityN":return k("x",n,t,e).map(f=>wr(f));case"Snapshot":const r=k("x",n,t,e);return[wr(r)];case"Shape":return[s.tensor1d(k("x",n,t,e).shape,"int32")];case"ShapeN":return k("x",n,t,e).map(f=>s.tensor1d(f.shape));case"Size":return[s.scalar(k("x",n,t,e).size,"int32")];case"Rank":return[s.scalar(k("x",n,t,e).rank,"int32")];case"NoOp":return[s.scalar(1)];case"Print":const i=k("x",n,t,e),l=k("data",n,t,e),u=k("message",n,t,e),h=k("summarize",n,t,e);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(u);for(let f=0;f<l.length;f++)console.log(Array.prototype.slice.call(l[f].dataSync()).slice(0,h));return[i];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DW{get id(){return this.handle.id}constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=_t(0),this.tensorMap=new Map,rn(this.handle)}clearAndClose(){this.tensorMap.forEach(t=>t.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return _t(this.size(),"int32")}async import(t,e){this.checkKeyAndValueTensor(t,e);const s=await t.data();return this.tensorMap.forEach(a=>a.dispose()),this.tensorMap.clear(),at(()=>{const a=Gs(e),r=s.length,i=a.length;D(r===i,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${i} elements.`);for(let l=0;l<r;l++){const u=s[l],h=a[l];rn(h),this.tensorMap.set(u,h)}return this.handle})}async find(t,e){this.checkKeyAndValueTensor(t,e);const s=await t.data();return at(()=>{const a=[];for(let r=0;r<s.length;r++){const i=s[r],l=this.findWithDefault(i,e);a.push(l)}return us(a)})}findWithDefault(t,e){const s=this.tensorMap.get(t);return s??e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${t.dtype}`);if(e.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${e.dtype}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OW=async(n,t,e,s)=>{switch(n.op){case"HashTable":case"HashTableV2":{const a=s.getHashTableHandleByName(n.name);if(a!=null)return[a];{const r=k("keyDType",n,t,e),i=k("valueDType",n,t,e),l=new DW(r,i);return s.addHashTable(n.name,l),[l.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{const a=k("tableHandle",n,t,e,s),r=k("keys",n,t,e),i=k("values",n,t,e);return[await s.getHashTableById(a.id).import(r,i)]}case"LookupTableFind":case"LookupTableFindV2":{const a=k("tableHandle",n,t,e,s),r=k("keys",n,t,e),i=k("defaultValue",n,t,e);return[await s.getHashTableById(a.id).find(r,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=k("tableHandle",n,t,e,s);return[s.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _W=(n,t,e,s=On)=>{switch(n.op){case"ResizeBilinear":{const a=k("images",n,t,e),r=k("size",n,t,e),i=k("alignCorners",n,t,e),l=k("halfPixelCenters",n,t,e);return[s.image.resizeBilinear(a,[r[0],r[1]],i,l)]}case"ResizeNearestNeighbor":{const a=k("images",n,t,e),r=k("size",n,t,e),i=k("alignCorners",n,t,e),l=k("halfPixelCenters",n,t,e);return[s.image.resizeNearestNeighbor(a,[r[0],r[1]],i,l)]}case"CropAndResize":{const a=k("image",n,t,e),r=k("boxes",n,t,e),i=k("boxInd",n,t,e),l=k("cropSize",n,t,e),u=k("method",n,t,e),h=k("extrapolationValue",n,t,e);return[s.image.cropAndResize(a,r,i,l,u,h)]}case"ImageProjectiveTransformV3":{const a=k("images",n,t,e),r=k("transforms",n,t,e),i=k("outputShape",n,t,e),l=k("fillValue",n,t,e),u=k("interpolation",n,t,e),h=k("fillMode",n,t,e);return[s.image.transform(a,r,u.toLowerCase(),h.toLowerCase(),l,i)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FW=(n,t,e,s=On)=>{switch(n.op){case"Equal":return[s.equal(k("a",n,t,e),k("b",n,t,e))];case"NotEqual":return[s.notEqual(k("a",n,t,e),k("b",n,t,e))];case"Greater":return[s.greater(k("a",n,t,e),k("b",n,t,e))];case"GreaterEqual":return[s.greaterEqual(k("a",n,t,e),k("b",n,t,e))];case"Less":return[s.less(k("a",n,t,e),k("b",n,t,e))];case"LessEqual":return[s.lessEqual(k("a",n,t,e),k("b",n,t,e))];case"LogicalAnd":return[s.logicalAnd(k("a",n,t,e),k("b",n,t,e))];case"LogicalNot":return[s.logicalNot(k("a",n,t,e))];case"LogicalOr":return[s.logicalOr(k("a",n,t,e),k("b",n,t,e))];case"Select":case"SelectV2":return[s.where(k("condition",n,t,e),k("a",n,t,e),k("b",n,t,e))];case"BitwiseAnd":return[s.bitwiseAnd(k("a",n,t,e),k("b",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LW=(n,t,e,s=On)=>{switch(n.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[s.matMul(k("a",n,t,e),k("b",n,t,e),k("transposeA",n,t,e),k("transposeB",n,t,e))];case"Einsum":return[s.einsum(k("equation",n,t,e),...k("tensors",n,t,e))];case"Transpose":return[s.transpose(k("x",n,t,e),k("perm",n,t,e))];case"_FusedMatMul":const[a,r]=k("fusedOps",n,t,e),i=a==="biasadd",l=r==="prelu",u=k("numArgs",n,t,e),h=k("leakyreluAlpha",n,t,e);if(i){if(l&&u!==2)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!l&&u!==1)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[f,p]=k("args",n,t,e);return[s.fused.matMul({a:k("a",n,t,e),b:k("b",n,t,e),transposeA:k("transposeA",n,t,e),transposeB:k("transposeB",n,t,e),bias:f,activation:r,preluActivationWeights:p,leakyreluAlpha:h})];case"MatrixBandPart":return[s.linalg.bandPart(k("a",n,t,e),k("numLower",n,t,e),k("numUpper",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zW=(n,t,e,s=On)=>{switch(n.op){case"EuclideanNorm":return[s.euclideanNorm(k("x",n,t,e),k("axis",n,t,e),k("keepDims",n,t,e))];case"FusedBatchNorm":case"FusedBatchNormV2":return[s.batchNorm(k("x",n,t,e),k("mean",n,t,e),k("variance",n,t,e),k("offset",n,t,e),k("scale",n,t,e),k("epsilon",n,t,e))];case"FusedBatchNormV3":return[s.batchNorm(k("x",n,t,e),k("mean",n,t,e),k("variance",n,t,e),k("offset",n,t,e),k("scale",n,t,e),k("epsilon",n,t,e))];case"LRN":return[s.localResponseNormalization(k("x",n,t,e),k("radius",n,t,e),k("bias",n,t,e),k("alpha",n,t,e),k("beta",n,t,e))];case"Softmax":return[s.softmax(k("x",n,t,e))];case"LogSoftmax":return[s.logSoftmax(k("x",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MW=(n,t,e,s=On)=>{switch(n.op){case"RaggedGather":{const{outputNestedSplits:a,outputDenseValues:r}=s.raggedGather(k("paramsNestedSplits",n,t,e),k("paramsDenseValues",n,t,e),k("indices",n,t,e),k("outputRaggedRank",n,t,e));return a.concat(r)}case"RaggedRange":{const{rtNestedSplits:a,rtDenseValues:r}=s.raggedRange(k("starts",n,t,e),k("limits",n,t,e),k("splits",n,t,e));return[a,r]}case"RaggedTensorToTensor":return[s.raggedTensorToTensor(k("shape",n,t,e),k("values",n,t,e),k("defaultValue",n,t,e),k("rowPartitionTensors",n,t,e),k("rowPartitionTypes",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BW=(n,t,e,s=On)=>{switch(n.op){case"Max":{const l=k("axis",n,t,e),u=k("keepDims",n,t,e);return[s.max(k("x",n,t,e),l,u)]}case"Mean":{const l=k("axis",n,t,e),u=k("keepDims",n,t,e);return[s.mean(k("x",n,t,e),l,u)]}case"Min":{const l=k("axis",n,t,e),u=k("keepDims",n,t,e);return[s.min(k("x",n,t,e),l,u)]}case"Sum":{const l=k("axis",n,t,e),u=k("keepDims",n,t,e);return[s.sum(k("x",n,t,e),l,u)]}case"All":{const l=k("axis",n,t,e),u=k("keepDims",n,t,e);return[s.all(k("x",n,t,e),l,u)]}case"Any":{const l=k("axis",n,t,e),u=k("keepDims",n,t,e);return[s.any(k("x",n,t,e),l,u)]}case"ArgMax":{const l=k("axis",n,t,e);return[s.argMax(k("x",n,t,e),l)]}case"ArgMin":{const l=k("axis",n,t,e);return[s.argMin(k("x",n,t,e),l)]}case"Prod":{const l=k("axis",n,t,e),u=k("keepDims",n,t,e);return[s.prod(k("x",n,t,e),l,u)]}case"Cumprod":{const l=k("axis",n,t,e),u=k("exclusive",n,t,e),h=k("reverse",n,t,e);return[s.cumprod(k("x",n,t,e),l,u,h)]}case"Cumsum":{const l=k("axis",n,t,e),u=k("exclusive",n,t,e),h=k("reverse",n,t,e);return[s.cumsum(k("x",n,t,e),l,u,h)]}case"Bincount":const a=k("x",n,t,e),r=k("weights",n,t,e),i=k("size",n,t,e);return[s.bincount(a,r,i)];case"DenseBincount":{const l=k("x",n,t,e),u=k("weights",n,t,e),h=k("size",n,t,e),f=k("binaryOutput",n,t,e);return[s.denseBincount(l,u,h,f)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VW=(n,t,e,s=On)=>{switch(n.op){case"ConcatV2":case"Concat":{const a=k("n",n,t,e),r=k("axis",n,t,e);let i=k("tensors",n,t,e);return i=i.slice(0,a),[s.concat(i,r)]}case"Gather":{const a=k("x",n,t,e),r=k("indices",n,t,e);return[s.gather(a,s.cast(r,"int32"),0)]}case"GatherV2":{const a=k("axis",n,t,e),r=k("batchDims",n,t,e),i=k("x",n,t,e),l=k("indices",n,t,e);return[s.gather(i,s.cast(l,"int32"),a,r)]}case"Reverse":{const a=k("dims",n,t,e),r=[];for(let l=0;l<a.length;l++)a[l]&&r.push(l);const i=k("x",n,t,e);return[s.reverse(i,r)]}case"ReverseV2":{const a=k("axis",n,t,e),r=k("x",n,t,e);return[s.reverse(r,a)]}case"Slice":{const a=k("begin",n,t,e),r=k("size",n,t,e);return[s.slice(k("x",n,t,e),a,r)]}case"StridedSlice":{const a=k("begin",n,t,e),r=k("end",n,t,e),i=k("strides",n,t,e),l=k("beginMask",n,t,e),u=k("endMask",n,t,e),h=k("ellipsisMask",n,t,e),f=k("newAxisMask",n,t,e),p=k("shrinkAxisMask",n,t,e),m=k("x",n,t,e);return[s.stridedSlice(m,a,r,i,l,u,h,f,p)]}case"Pack":return at(()=>{const a=k("axis",n,t,e),r=k("tensors",n,t,e),i=r[0].shape,l=s.squeeze(r[0]).shape,u=r.map(h=>{const f=Zt(h.shape,i);if(!f&&!Zt(s.squeeze(h).shape,l))throw new Error("the input tensors shape does not match");return f?h:s.reshape(h,i)});return[s.stack(u,a)]});case"Unpack":{const a=k("axis",n,t,e),r=k("tensor",n,t,e);return s.unstack(r,a)}case"Tile":{const a=k("reps",n,t,e);return[s.tile(k("x",n,t,e),a)]}case"Split":case"SplitV":{const a=k("axis",n,t,e),r=k("numOrSizeSplits",n,t,e),i=k("x",n,t,e);return s.split(i,r,a)}case"ScatterNd":{const a=k("indices",n,t,e),r=k("values",n,t,e),i=k("shape",n,t,e);return[s.scatterND(a,r,i)]}case"GatherNd":{const a=k("x",n,t,e),r=k("indices",n,t,e);return[s.gatherND(a,r)]}case"SparseToDense":{const a=k("sparseIndices",n,t,e),r=k("outputShape",n,t,e),i=k("sparseValues",n,t,e),l=k("defaultValue",n,t,e);return[s.sparseToDense(a,i,r,i.dtype===l.dtype?l:s.cast(l,i.dtype))]}case"TensorScatterUpdate":{const a=k("indices",n,t,e),r=k("values",n,t,e),i=k("tensor",n,t,e);return[s.tensorScatterUpdate(i,a,r)]}default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PW=(n,t,e,s=On)=>{switch(n.op){case"SparseFillEmptyRows":{const{outputIndices:a,outputValues:r,emptyRowIndicator:i,reverseIndexMap:l}=s.sparse.sparseFillEmptyRows(k("indices",n,t,e),k("values",n,t,e),k("denseShape",n,t,e),k("defaultValue",n,t,e));return[a,r,i,l]}case"SparseReshape":{const{outputIndices:a,outputShape:r}=s.sparse.sparseReshape(k("inputIndices",n,t,e),k("inputShape",n,t,e),k("newShape",n,t,e));return[a,r]}case"SparseSegmentMean":return[s.sparse.sparseSegmentMean(k("data",n,t,e),k("indices",n,t,e),k("segmentIds",n,t,e))];case"SparseSegmentSum":return[s.sparse.sparseSegmentSum(k("data",n,t,e),k("indices",n,t,e),k("segmentIds",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UW=(n,t,e,s=On)=>{switch(n.op){case"FFT":return[s.fft(k("x",n,t,e))];case"IFFT":return[s.ifft(k("x",n,t,e))];case"RFFT":return[s.rfft(k("x",n,t,e))];case"IRFFT":return[s.irfft(k("x",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GW=(n,t,e,s=On)=>{switch(n.op){case"StaticRegexReplace":return[s.string.staticRegexReplace(k("input",n,t,e),k("pattern",n,t,e),k("rewrite",n,t,e),k("replaceGlobal",n,t,e))];case"StringNGrams":{const{nGrams:a,nGramsSplits:r}=s.string.stringNGrams(k("data",n,t,e),k("dataSplits",n,t,e),k("separator",n,t,e),k("nGramWidths",n,t,e),k("leftPad",n,t,e),k("rightPad",n,t,e),k("padWidth",n,t,e),k("preserveShortSequences",n,t,e));return[a,r]}case"StringSplit":{const{indices:a,values:r,shape:i}=s.string.stringSplit(k("input",n,t,e),k("delimiter",n,t,e),k("skipEmpty",n,t,e));return[a,r,i]}case"StringToHashBucketFast":return[s.string.stringToHashBucketFast(k("input",n,t,e),k("numBuckets",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WW=(n,t,e,s=On)=>{switch(n.op){case"Cast":return[s.cast(k("x",n,t,e),k("dtype",n,t,e))];case"ExpandDims":{const a=k("axis",n,t,e);return[s.expandDims(k("x",n,t,e),a)]}case"Squeeze":{const a=k("axis",n,t,e);return[s.squeeze(k("x",n,t,e),a)]}case"Reshape":return[s.reshape(k("x",n,t,e),k("shape",n,t,e))];case"EnsureShape":return[s.ensureShape(k("x",n,t,e),k("shape",n,t,e))];case"MirrorPad":return[s.mirrorPad(k("x",n,t,e),k("padding",n,t,e),k("mode",n,t,e))];case"PadV2":case"Pad":return[s.pad(k("x",n,t,e),k("padding",n,t,e),k("constantValue",n,t,e))];case"SpaceToBatchND":{const a=k("blockShape",n,t,e),r=k("paddings",n,t,e);return[s.spaceToBatchND(k("x",n,t,e),a,r)]}case"BatchToSpaceND":{const a=k("blockShape",n,t,e),r=k("crops",n,t,e);return[s.batchToSpaceND(k("x",n,t,e),a,r)]}case"DepthToSpace":{const a=k("blockSize",n,t,e),r=k("dataFormat",n,t,e).toUpperCase();return[s.depthToSpace(k("x",n,t,e),a,r)]}case"BroadcastTo":return[s.broadcastTo(k("x",n,t,e),k("shape",n,t,e))];case"BroadcastArgs":return[s.broadcastArgs(k("s0",n,t,e),k("s1",n,t,e))];default:throw TypeError(`Node type ${n.op} is not implemented`)}};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f$(n,t,e,s,a=at){const r=((i,l,u)=>{switch(i.category){case"arithmetic":return a(()=>xW(i,l,u));case"basic_math":return a(()=>vW(i,l,u));case"control":return $W(i,l,u);case"convolution":return a(()=>kW(i,l,u));case"creation":return a(()=>IW(i,l,u));case"dynamic":return EW(i,l,u);case"evaluation":return a(()=>AW(i,l,u));case"image":return a(()=>_W(i,l,u));case"graph":return a(()=>RW(i,l,u));case"logical":return a(()=>FW(i,l,u));case"matrices":return a(()=>LW(i,l,u));case"normalization":return a(()=>zW(i,l,u));case"ragged":return a(()=>MW(i,l,u));case"reduction":return a(()=>BW(i,l,u));case"slice_join":return a(()=>VW(i,l,u));case"sparse":return a(()=>PW(i,l,u));case"spectral":return a(()=>UW(i,l,u));case"string":return a(()=>GW(i,l,u));case"transformation":return a(()=>WW(i,l,u));case"hash_table":return OW(i,l,u,s);case"custom":const h=aA(i.op);if(h&&h.customExecutor)return h.customExecutor(new bW(i,l,u));throw TypeError(`Custom op ${i.op} is not registered.`);default:throw TypeError(`Unknown op '${i.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(n,t,e);return xi(r)?r.then(i=>[].concat(i)):[].concat(r)}class p${constructor(t={},e={},s={},a={},r){this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=s,this.functionMap=a,this.parseNodeNameCache=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const t=[];for(let e=0;e<this.contexts.length-1;e++){const s=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(s))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map(e=>e.id===0&&e.iterationId===0?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(this.contexts&&this.contexts.length>1)this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift();else throw new Error("Cannot exit frame, the context is empty")}nextIteration(){if(this.contexts&&this.contexts.length>0){this.contexts=this.contexts.slice(),this.lastId++;const t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}else throw new Error("Cannot increase frame iteration, the context is empty")}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(const e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(const e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m$(n,t,e,s){const a=new Set,r=[];let i=null,l=null;const u=new Set,h=new Set(Object.keys(n).map(m=>vs(m)[0]));s=s||[];const f=new Set(s.map(m=>vs(m.name)[0])),p=[...t];for(;p.length>0;){const m=p.pop();if((co(m)||QW(m)||JW(m))&&i==null&&(i=m,l=i.children.map(y=>y.name).filter(y=>a.has(y))),a.add(m.name),e[m.name]==null&&!h.has(m.name)&&!f.has(m.name)){if(m.inputs.length===0){r.push(m.name);continue}m.inputs.forEach(y=>{u.has(y.name)||(u.add(y.name),p.push(y))})}}return{inputs:n,outputs:t,usedNodes:a,missingInputs:r,dynamicNode:i,syncInputs:l}}function HW(n,t){const{usedNodes:e,inputs:s}=t,a=Object.keys(s).map(w=>vs(w)[0]).map(w=>n.nodes[w]),r=n.initNodes||[],i=w=>e.has(typeof w=="string"?w:w.name);function l(w){return[...new Map(w.map(S=>[S.name,S])).values()]}const u=l([...a,...n.weights,...r]).filter(i),h=l([...u,...Object.values(n.nodes)]).filter(i),f=new Map(h.map(w=>[w.name,w])),p={};for(const w of h){p[w.name]=p[w.name]||0;for(const S of w.children)i(S)||(p[S.name]=Number.POSITIVE_INFINITY),p[S.name]=(p[S.name]||0)+1}const m=Object.entries(p).filter(([,w])=>w===0).map(([w])=>w),y=[...m];for(;m.length>0;){const w=m.pop(),S=f.get(w);for(const T of S.children.filter(i))--p[T.name]===0&&(y.push(T.name),m.push(T.name))}const b=y.map(w=>f.get(w)),v=jW(b,u);return qW(v,u),v}function jW(n,t){const e=new Map(n.map(i=>[i.name,i])),s=t.map(i=>i.name),a=new Set(s);for(;s.length>0;){const i=s.pop(),l=e.get(i);for(const u of l.children)!e.has(u.name)||a.has(u.name)||(a.add(u.name),s.push(u.name))}return n.filter(i=>a.has(i.name))}class Xp extends Error{constructor(t){super(`NodesExecutionOrderError: ${t}`)}}function qW(n,t){const e=new Map(n.map((l,u)=>[l.name,u])),s=new Set(t.map(l=>l.name)),a=l=>s.has(typeof l=="string"?l:l.name),r=new Set(n.map(l=>l.name)),i=l=>r.has(typeof l=="string"?l:l.name);for(const l of n){for(const u of l.children.filter(i)){if(!e.has(u.name))throw new Xp(`Child ${u.name} of node ${l.name} is unreachable.`);if(e.get(l.name)>e.get(u.name))throw new Xp(`Node ${l.name} is scheduled to run after its child ${u.name}.`)}if(!a(l))for(const u of l.inputs){if(!e.has(u.name))throw new Xp(`Input ${u.name} of node ${l.name} is unreachable.`);if(e.get(u.name)>e.get(l.name))throw new Xp(`Node ${l.name} is scheduled to run before its input ${u.name}.`)}}}function XW(n){const t=new Map(n.map((l,u)=>[l.name,u])),e=Number.MAX_SAFE_INTEGER,s=n.map((l,u)=>co(l)?e:u),a=l=>{const u=s[t.get(l.name)];return u??-1},r=n.map((l,u)=>l.children.map(a).reduce((h,f)=>Math.max(h,f),s[u])),i=new Map;for(let l=0;l<n.length;++l){const u=r[l];if(u===e)continue;const h=n[l],f=n[u];i.has(f.name)||i.set(f.name,[]),i.get(f.name).push(h)}return i}const KW=new Set(["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"]),YW=new Set(["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"]),ZW=new Set(["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"]);function co(n){return KW.has(n.op)}function QW(n){return YW.has(n.op)}function JW(n){return ZW.has(n.op)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Am{get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){const e=Object.keys(t).map(s=>t[s].map(a=>a.id));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(t=>t.signatureKey||t.name)}get outputNodes(){return this._outputs.map(t=>{const e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e})}get functions(){return Object.keys(this._functions).reduce((t,e)=>(t[e]=this._functions[e].signature,t),{})}constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this.parseNodeNameCache=new Map,this._weightMap={},this.SEPARATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,t.functions!=null&&Object.keys(t.functions).forEach(s=>{this._functionExecutorMap[s]=new Am(t.functions[s],this)})}getCompilationKey(t,e){const s=t.map(r=>r.name).sort(),a=e.map(r=>r.name).sort();return s.join(this.SEPARATOR)+"--"+a.join(this.SEPARATOR)}compile(t,e){const s=m$(t,e,this.weightMap,this._initNodes),{missingInputs:a,dynamicNode:r,syncInputs:i}=s;if(r!=null)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${i}]`);if(a.length>0){const h=e.map(p=>p.name),f=Object.keys(t);throw new Error(`Cannot compute the outputs [${h}] from the provided inputs [${f}]. Missing the following inputs: [${a}]`)}const l=HW(this.graph,s),u=XW(l);return{orderedNodes:l,nodeLiveUntilMap:u}}cloneAndKeepTensor(t){if(t==null)return null;const e=t.clone();return rn(e),e}cloneTensorList(t){return t?t.map(s=>this.cloneAndKeepTensor(s)):null}cloneTensorMap(t){return Object.fromEntries(Object.entries(t).map(([e,s])=>[e,this.cloneTensorList(s)]))}execute(t,e){this.disposeIntermediateTensors(),t=this.mapInputs(t);const s=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);const a=s.map(m=>this.graph.nodes[vs(m)[0]]),r=e.map(m=>vs(m)[0]),i=new Set(r);let l=r.map(m=>this.graph.nodes[m]);l.length===0&&(l=this._outputs);const u=this.getCompilationKey(a,l);let h=this.compiledMap.get(u);h==null&&(h=this.compile(t,l),this.compiledMap.set(u,h));try{this.keepIntermediateTensors=rt().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(m){this.keepIntermediateTensors=!1,console.warn(m.message)}const f={},p={};return at(()=>{const m=new p$(this.weightMap,f,p,this.functionExecutorMap,this.parseNodeNameCache),y=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(t).forEach(S=>{const[T,$]=vs(S,m),C=[];C[$]=t[S],y[T]=C,this.keepIntermediateTensors&&(this.clonedTensorsMap[T]=this.cloneTensorList(C))});const b=this.getFrozenTensorIds(y),{orderedNodes:v,nodeLiveUntilMap:w}=h;for(const S of v){if(y[S.name])continue;const T=f$(S,y,m,this._resourceManager);if(xi(T))throw new Error(`The execution of the op '${S.op}' returned a promise. Please use model.executeAsync() instead.`);y[S.name]=T,this.keepIntermediateTensors&&(this.clonedTensorsMap[S.name]=this.cloneTensorList(T)),this.checkTensorForDisposalWithNodeLiveUntilInfo(S,y,m,b,i,w.get(S.name))}return this.parent==null&&m.dispose(b),e.map(S=>$n(S,y,m))})}getFrozenTensorIds(t){const e=[].concat.apply([],Object.keys(t).map(s=>t[s]).map(s=>s.map(a=>a.id)));return new Set(e)}checkTensorForDisposal(t,e,s,a,r,i,l){if(!(co(e)||i.has(t))){for(const u of s[t])u!=null&&(l[u.id]=(l[u.id]||0)+e.children.length);for(const u of e.inputs){if(co(u))continue;const h=l$(u.name,s,a);if(h!=null)for(const f of h){if(!f||f.kept||r.has(f.id))continue;const p=l[f.id];p===1?(f.dispose(),delete l[f.id]):p!=null&&l[f.id]--}}}}checkTensorForDisposalWithNodeLiveUntilInfo(t,e,s,a,r,i){function l(u){return co(u)||r.has(u.name)}if(!(co(t)||i==null))for(const u of i){if(l(u))continue;const h=l$(u.name,e,s);for(const f of h)!f||f.kept||a.has(f.id)||f.dispose()}}async executeAsync(t,e){return this._executeAsync(t,e)}disposeIntermediateTensors(){this.clonedTensorsMap&&(Object.values(this.clonedTensorsMap).forEach(t=>{for(const e of t)e&&!e.isDisposed&&e.dispose()}),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(t,e,s=!1,a={},r={}){this.disposeIntermediateTensors(),s||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));try{this.keepIntermediateTensors=rt().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(m){this.keepIntermediateTensors=!1,console.warn(m.message)}const i=new p$(this.weightMap,a,r,this.functionExecutorMap,this.parseNodeNameCache);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));const l=await this.executeWithControlFlow(t,i,e,s),u=e.map(m=>$n(m,l,i)),h=u.map(m=>m.id),f=Object.keys(t).map(m=>t[m].id),p=new Set([...h,...f,...this.weightIds]);return Object.values(l).forEach(m=>{m.forEach(y=>{y&&!y.isDisposed&&!p.has(y.id)&&y.dispose()})}),this.parent==null&&i.dispose(p),u}async executeFunctionAsync(t,e,s){const a=t.reduce((r,i,l)=>(r[this.inputs[l].name]=i,r),{});return this._executeAsync(a,this.outputNodes,!0,e,s)}async executeWithControlFlow(t,e,s,a){const r=Object.keys(t),i=r.map(C=>this.graph.nodes[vs(C)[0]]),l=s.map(C=>vs(C)[0]),u=new Set(l);let h=l.map(C=>this.graph.nodes[C]);h.length===0&&(h=this._outputs);const{usedNodes:f,missingInputs:p,dynamicNode:m,syncInputs:y}=m$(t,h,this.weightMap,this._initNodes),b=[...i,...this.graph.weights,...this._initNodes||[]].map(C=>({node:C,contexts:e.currentContext})),v=Object.assign({},this.weightMap);Object.keys(t).forEach(C=>{const[I,R]=vs(C),F=[];F[R]=t[C],v[I]=F});const w={},S=this.getFrozenTensorIds(v),T={};for(;b.length>0;){const C=this.processStack(i,b,e,v,T,S,u,w,f);await Promise.all(C)}m==null&&!a&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const $=h.filter(C=>!co(C)&&!$n(C.name,v,e)).map(C=>C.name);if($.length>0){let C="";throw m!=null&&(C=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${y}]`),new Error(`Cannot compute the outputs [${$}] from the provided inputs [${r}]. Consider providing the following inputs: [${p}]. ${C}`)}return v}processStack(t,e,s,a,r,i,l,u,h){const f=[];for(;e.length>0;){const p=e.pop();s.currentContext=p.contexts;let m="";if(p.node.op==="Enter"&&k("isConstant",p.node,a,s)&&([m]=vr(p.node.name,s)),a[p.node.name]==null){const y=f$(p.node,a,s,this._resourceManager);m||([m]=vr(p.node.name,s));const b=s.currentContext;xi(y)?f.push(y.then(v=>(a[m]=v,this.keepIntermediateTensors&&(this.clonedTensorsMap[m]=this.cloneTensorList(v)),s.currentContext=b,this.checkTensorForDisposal(m,p.node,a,s,i,l,u),this.processChildNodes(p.node,e,s,a,r,h),v))):(a[m]=y,this.keepIntermediateTensors&&(this.clonedTensorsMap[m]=this.cloneTensorList(y)),this.checkTensorForDisposal(m,p.node,a,s,i,l,u),this.processChildNodes(p.node,e,s,a,r,h))}else this.processChildNodes(p.node,e,s,a,r,h)}return f}processChildNodes(t,e,s,a,r,i){t.children.forEach(l=>{const[u]=vr(l.name,s);r[u]||!i.has(l.name)||(l.op==="Merge"?l.inputNames.some(h=>!!$n(h,a,s))&&(r[u]=!0,e.push({contexts:s.currentContext,node:l})):l.inputNames.every(h=>!!$n(h,a,s))&&(r[u]=!0,e.push({contexts:s.currentContext,node:l})))})}dispose(){Object.keys(this.weightMap).forEach(t=>this.weightMap[t].forEach(e=>e.dispose()))}checkInputShapeAndType(t){Object.keys(t).forEach(e=>{const s=t[e],[a]=vs(e),r=this.graph.nodes[a];if(r.attrParams.shape&&r.attrParams.shape.value){const i=r.attrParams.shape.value,l=i.length===s.shape.length&&s.shape.every((u,h)=>i[h]===-1||i[h]===u);D(l,()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${i}], but was [${s.shape}]`)}r.attrParams.dtype&&r.attrParams.dtype.value&&D(s.dtype===r.attrParams.dtype.value,()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${s.dtype}`)})}mapInputs(t){var e,s;const a={};for(const r in t){const i=(s=(e=this._signature)===null||e===void 0?void 0:e.inputs)===null||s===void 0?void 0:s[r];i!=null?a[i.name]=t[r]:a[r]=t[r]}return a}checkInputs(t){const e=Object.keys(t).filter(s=>{const[a]=vs(s);return this.graph.nodes[a]==null});if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map(e=>{var s,a;const r=(a=(s=this._signature)===null||s===void 0?void 0:s.outputs)===null||a===void 0?void 0:a[e];return r!=null?r.name:e},{})}checkOutputs(t){t.forEach(e=>{const[s]=vs(e);if(!this.graph.nodes[s])throw new Error(`The output '${e}' is not found in the graph`)})}}class tH{constructor(t={},e={}){this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(const t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(const t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eH="?tfjs-format=file",nH="model.json";class Kw{get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}constructor(t,e={},s=ww){this.modelUrl=t,this.loadOptions=e,this.version="n/a",this.io=s,e==null&&(this.loadOptions={}),this.resourceManager=new tH}findIOHandler(){const t=this.modelUrl;if(t.load!=null)this.handler=t;else if(this.loadOptions.requestInit!=null)this.handler=this.io.browserHTTPRequest(t,this.loadOptions);else{const e=this.io.getLoadHandlers(t,this.loadOptions);if(e.length===0)e.push(this.io.browserHTTPRequest(t,this.loadOptions));else if(e.length>1)throw new Error(`Found more than one (${e.length}) load handlers for URL '${[t]}'`);this.handler=e[0]}}load(){if(this.findIOHandler(),this.handler.load==null)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const t=this.handler.load();return xi(t)?t.then(e=>e.getWeightStream==null?this.loadSync(e):this.loadStreaming(e)):this.loadSync(t)}loadSync(t){const e=this.io.decodeWeights(t.weightData,t.weightSpecs);return this.loadWithWeightMap(t,e)}async loadStreaming(t){if(t.getWeightStream==null)throw new Error("Model artifacts missing streamWeights function");const e=await eI(t.getWeightStream(),t.weightSpecs);return this.loadWithWeightMap(t,e)}loadWithWeightMap(t,e){this.artifacts=t;const s=this.artifacts.modelTopology;let a=this.artifacts.signature;if(this.artifacts.userDefinedMetadata!=null){const r=this.artifacts.userDefinedMetadata;r.signature!=null&&(a=r.signature),r.structuredOutputKeys!=null&&(this.structuredOutputKeys=r.structuredOutputKeys)}if(this.signature=a,this.version=`${s.versions.producer}.${s.versions.minConsumer}`,this.executor=new Am(u$.Instance.transformGraph(s,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(e),this.executor.resourceManager=this.resourceManager,t.modelInitializer!=null&&t.modelInitializer.node!=null){const r=u$.Instance.transformGraph(t.modelInitializer);this.initializer=new Am(r),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=t.initializerSignature}return!0}async save(t,e){if(typeof t=="string"){const s=this.io.getSaveHandlers(t);if(s.length===0)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(s.length>1)throw new Error(`Found more than one (${s.length}) save handlers for URL '${t}'`);t=s[0]}if(t.save==null)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}addStructuredOutputNames(t){if(this.structuredOutputKeys){const e=t instanceof fe?[t]:t,s={};return e.forEach((a,r)=>s[this.structuredOutputKeys[r]]=a),s}return t}predict(t,e){const s=this.execute(t,this.outputNodes);return this.addStructuredOutputNames(s)}async predictAsync(t,e){const s=await this.executeAsync(t,this.outputNodes);return this.addStructuredOutputNames(s)}normalizeInputs(t){var e;if(!(t instanceof fe)&&!Array.isArray(t)){const r=(e=this.signature)===null||e===void 0?void 0:e.inputs;if(r!=null)for(const i in r){const l=r[i];l.resourceId!=null&&(t[i]=this.resourceIdToCapturedInput[l.resourceId])}return t}t=Array.isArray(t)?t:[t];const s=Object.keys(this.resourceIdToCapturedInput).length;if(t.length+s!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-s} non-resource placeholders, while there are ${t.length} input tensors provided.`);let a=0;return this.inputNodes.reduce((r,i)=>{var l,u,h;const f=(h=(u=(l=this.signature)===null||l===void 0?void 0:l.inputs)===null||u===void 0?void 0:u[i])===null||h===void 0?void 0:h.resourceId;return f!=null?r[i]=this.resourceIdToCapturedInput[f]:r[i]=t[a++],r},{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}executeInitializerGraph(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return this.initializer==null?[]:this.initializerSignature==null?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(t){if(this.resourceIdToCapturedInput={},this.initializerSignature){const e=this.initializerSignature.outputs,s=Object.keys(e);for(let a=0;a<s.length;a++){const r=s[a],i=e[r];this.resourceIdToCapturedInput[i.resourceId]=t[a]}}}execute(t,e){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const s=this.executor.execute(t,e);return s.length>1?s:s[0]}async executeAsync(t,e){this.resourceIdToCapturedInput==null&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const s=await this.executor.executeAsync(t,e);return s.length>1?s:s[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce((e,s)=>(e[s]=[t[s]],e),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&qt(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}}async function sH(n,t={},e=ww){if(n==null)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");t==null&&(t={}),t.fromTFHub&&typeof n=="string"&&(n=rH(n));const s=new Kw(n,t,e);return await s.load(),s}function aH(n){if(n==null)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let t;if(n instanceof Array){const[s,a]=n;if(!s)throw new Error("modelJSON must be the first element of the array");if(!a||!(a instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in s))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in s))throw new Error("Model JSON is missing 'weightsManifest'");const r=$m(s.weightsManifest),i=iv(s,r,a);t=Im(i)}else if("load"in n)t=n;else if("modelTopology"in n&&"weightSpecs"in n&&"weightData"in n)t=Im(n);else throw new Error("Unknown model format");const e=new Kw(t);return e.load(),e}function rH(n){return n.endsWith("/")||(n=n+"/"),`${n}${nH}${eH}`}/** @license See the LICENSE file. */const iH="4.22.0";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oH=Object.freeze(Object.defineProperty({__proto__:null,GraphModel:Kw,deregisterOp:DG,loadGraphModel:sH,loadGraphModelSync:aH,registerOp:RG,version_converter:iH},Symbol.toStringTag,{value:"Module"})),lH=W1(oH),uH=W1(EG);/**
 * @license
 * Copyright 2023 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var cH=vh.exports,g$;function hH(){return g$||(g$=1,function(n,t){(function(e,s){s(t,lH,uH)})(cH,function(e,s,a){const r={1:{name:"/m/01g317",id:1,displayName:"person"},2:{name:"/m/0199g",id:2,displayName:"bicycle"},3:{name:"/m/0k4j",id:3,displayName:"car"},4:{name:"/m/04_sv",id:4,displayName:"motorcycle"},5:{name:"/m/05czz6l",id:5,displayName:"airplane"},6:{name:"/m/01bjv",id:6,displayName:"bus"},7:{name:"/m/07jdr",id:7,displayName:"train"},8:{name:"/m/07r04",id:8,displayName:"truck"},9:{name:"/m/019jd",id:9,displayName:"boat"},10:{name:"/m/015qff",id:10,displayName:"traffic light"},11:{name:"/m/01pns0",id:11,displayName:"fire hydrant"},13:{name:"/m/02pv19",id:13,displayName:"stop sign"},14:{name:"/m/015qbp",id:14,displayName:"parking meter"},15:{name:"/m/0cvnqh",id:15,displayName:"bench"},16:{name:"/m/015p6",id:16,displayName:"bird"},17:{name:"/m/01yrx",id:17,displayName:"cat"},18:{name:"/m/0bt9lr",id:18,displayName:"dog"},19:{name:"/m/03k3r",id:19,displayName:"horse"},20:{name:"/m/07bgp",id:20,displayName:"sheep"},21:{name:"/m/01xq0k1",id:21,displayName:"cow"},22:{name:"/m/0bwd_0j",id:22,displayName:"elephant"},23:{name:"/m/01dws",id:23,displayName:"bear"},24:{name:"/m/0898b",id:24,displayName:"zebra"},25:{name:"/m/03bk1",id:25,displayName:"giraffe"},27:{name:"/m/01940j",id:27,displayName:"backpack"},28:{name:"/m/0hnnb",id:28,displayName:"umbrella"},31:{name:"/m/080hkjn",id:31,displayName:"handbag"},32:{name:"/m/01rkbr",id:32,displayName:"tie"},33:{name:"/m/01s55n",id:33,displayName:"suitcase"},34:{name:"/m/02wmf",id:34,displayName:"frisbee"},35:{name:"/m/071p9",id:35,displayName:"skis"},36:{name:"/m/06__v",id:36,displayName:"snowboard"},37:{name:"/m/018xm",id:37,displayName:"sports ball"},38:{name:"/m/02zt3",id:38,displayName:"kite"},39:{name:"/m/03g8mr",id:39,displayName:"baseball bat"},40:{name:"/m/03grzl",id:40,displayName:"baseball glove"},41:{name:"/m/06_fw",id:41,displayName:"skateboard"},42:{name:"/m/019w40",id:42,displayName:"surfboard"},43:{name:"/m/0dv9c",id:43,displayName:"tennis racket"},44:{name:"/m/04dr76w",id:44,displayName:"bottle"},46:{name:"/m/09tvcd",id:46,displayName:"wine glass"},47:{name:"/m/08gqpm",id:47,displayName:"cup"},48:{name:"/m/0dt3t",id:48,displayName:"fork"},49:{name:"/m/04ctx",id:49,displayName:"knife"},50:{name:"/m/0cmx8",id:50,displayName:"spoon"},51:{name:"/m/04kkgm",id:51,displayName:"bowl"},52:{name:"/m/09qck",id:52,displayName:"banana"},53:{name:"/m/014j1m",id:53,displayName:"apple"},54:{name:"/m/0l515",id:54,displayName:"sandwich"},55:{name:"/m/0cyhj_",id:55,displayName:"orange"},56:{name:"/m/0hkxq",id:56,displayName:"broccoli"},57:{name:"/m/0fj52s",id:57,displayName:"carrot"},58:{name:"/m/01b9xk",id:58,displayName:"hot dog"},59:{name:"/m/0663v",id:59,displayName:"pizza"},60:{name:"/m/0jy4k",id:60,displayName:"donut"},61:{name:"/m/0fszt",id:61,displayName:"cake"},62:{name:"/m/01mzpv",id:62,displayName:"chair"},63:{name:"/m/02crq1",id:63,displayName:"couch"},64:{name:"/m/03fp41",id:64,displayName:"potted plant"},65:{name:"/m/03ssj5",id:65,displayName:"bed"},67:{name:"/m/04bcr3",id:67,displayName:"dining table"},70:{name:"/m/09g1w",id:70,displayName:"toilet"},72:{name:"/m/07c52",id:72,displayName:"tv"},73:{name:"/m/01c648",id:73,displayName:"laptop"},74:{name:"/m/020lf",id:74,displayName:"mouse"},75:{name:"/m/0qjjc",id:75,displayName:"remote"},76:{name:"/m/01m2v",id:76,displayName:"keyboard"},77:{name:"/m/050k8",id:77,displayName:"cell phone"},78:{name:"/m/0fx9l",id:78,displayName:"microwave"},79:{name:"/m/029bxz",id:79,displayName:"oven"},80:{name:"/m/01k6s3",id:80,displayName:"toaster"},81:{name:"/m/0130jx",id:81,displayName:"sink"},82:{name:"/m/040b_t",id:82,displayName:"refrigerator"},84:{name:"/m/0bt_c3",id:84,displayName:"book"},85:{name:"/m/01x3z",id:85,displayName:"clock"},86:{name:"/m/02s195",id:86,displayName:"vase"},87:{name:"/m/01lsmm",id:87,displayName:"scissors"},88:{name:"/m/0kmg4",id:88,displayName:"teddy bear"},89:{name:"/m/03wvsk",id:89,displayName:"hair drier"},90:{name:"/m/012xff",id:90,displayName:"toothbrush"}};class i{constructor(u,h){this.modelPath=h||`https://storage.googleapis.com/tfjs-models/savedmodel/${this.getPrefix(u)}/model.json`}getPrefix(u){return u==="lite_mobilenet_v2"?`ssd${u}`:`ssd_${u}`}async load(){this.model=await s.loadGraphModel(this.modelPath);const u=a.zeros([1,300,300,3],"int32"),h=await this.model.executeAsync(u);await Promise.all(h.map(f=>f.data())),h.map(f=>f.dispose()),u.dispose()}async infer(u,h,f){const p=a.tidy(()=>(u instanceof a.Tensor||(u=a.browser.fromPixels(u)),a.expandDims(u))),m=p.shape[1],y=p.shape[2],b=await this.model.executeAsync(p),v=b[0].dataSync(),w=b[1].dataSync();p.dispose(),a.dispose(b);const[S,T]=this.calculateMaxScores(v,b[0].shape[1],b[0].shape[2]),$=a.getBackend();a.getBackend()==="webgl"&&a.setBackend("cpu");const C=a.tidy(()=>{const R=a.tensor2d(w,[b[1].shape[1],b[1].shape[3]]);return a.image.nonMaxSuppression(R,S,h,f,f)}),I=C.dataSync();return C.dispose(),$!==a.getBackend()&&a.setBackend($),this.buildDetectedObjects(y,m,w,S,I,T)}buildDetectedObjects(u,h,f,p,m,y){const b=m.length,v=[];for(let w=0;w<b;w++){const S=[];for(let R=0;R<4;R++)S[R]=f[4*m[w]+R];const T=S[0]*h,$=S[1]*u,C=S[2]*h,I=S[3]*u;S[0]=$,S[1]=T,S[2]=I-$,S[3]=C-T,v.push({bbox:S,class:r[y[m[w]]+1].displayName,score:p[m[w]]})}return v}calculateMaxScores(u,h,f){const p=[],m=[];for(let y=0;y<h;y++){let b=Number.MIN_VALUE,v=-1;for(let w=0;w<f;w++)u[y*f+w]>b&&(b=u[y*f+w],v=w);p[y]=b,m[y]=v}return[p,m]}async detect(u,h=20,f=.5){return this.infer(u,h,f)}dispose(){this.model!=null&&this.model.dispose()}}e.ObjectDetection=i,e.load=async function(l={}){if(a==null)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this model.");const u=l.base||"lite_mobilenet_v2",h=l.modelUrl;if(["mobilenet_v1","mobilenet_v2","lite_mobilenet_v2"].indexOf(u)===-1)throw new Error(`ObjectDetection constructed with invalid base model ${u}. Valid names are 'mobilenet_v1', 'mobilenet_v2' and 'lite_mobilenet_v2'.`);const f=new i(u,h);return await f.load(),f},e.version="2.2.3",Object.defineProperty(e,"__esModule",{value:!0})})}(vh,vh.exports)),vh.exports}var dH=hH();/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oA={kernelName:Xh,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>H(n,Uo(wt(e,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fH={kernelName:ru,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=xe(wt(e,"float32")),a=xn($t(_t(1),s));return Ee(Rt(n,a))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pH={kernelName:iu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=xn($t(xe(wt(e,"float32")),1));return Rt(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mH={kernelName:Bo,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,a=Ut(e.shape,s.shape);return{a:()=>{let l=n;const u=nn(e.shape,a);return u.length>0&&(l=kt(l,u)),X(l,e.shape)},b:()=>{let l=n;const u=nn(s.shape,a);return u.length>0&&(l=kt(l,u)),X(l,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gH={kernelName:Kh,saveAllInputs:!0,gradFunc:(n,t)=>{const e={};return t.forEach((s,a)=>{e[a]=()=>n.clone()}),e}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yH={kernelName:Yh,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>se(e)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bH={kernelName:Zh,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>se(e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xH={kernelName:ou,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Rt(n,xn($t(_t(1),xe(wt(e,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vH={kernelName:lu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=xn(xt(_t(1),xe(wt(e,"float32"))));return Rt(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wH={kernelName:hu,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,a=Ut(e.shape,s.shape);return{a:()=>{const l=xt(xe(e),xe(s));let u=H(n,Rt(s,l));const h=nn(e.shape,a);return h.length>0&&(u=kt(u,h)),X(u,e.shape)},b:()=>{const l=xt(xe(e),xe(s));let u=Ee(H(n,Rt(e,l)));const h=nn(s.shape,a);return h.length>0&&(u=kt(u,h)),X(u,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SH={kernelName:uu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Rt(n,xt(xe(wt(e,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NH={kernelName:cu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Rt(n,$t(_t(1),xe(wt(e,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TH(n,t,e,s,a,r){const i=O(n,"dy","avgPool3dGrad"),l=O(t,"input","avgPool3dGrad");let u=i,h=l,f=!1;l.rank===4&&(f=!0,u=X(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),h=X(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),D(u.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),D(h.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${h.rank}.`),Qn("avgPool3dGrad",a,r);const p={dy:u,input:h},m={filterSize:e,strides:s,pad:a,dimRoundingMode:r},y=P.runKernel(ng,p,m);return f?X(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}const CH=U({avgPool3dGrad_:TH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $H={kernelName:Jh,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{filterSize:a,strides:r,pad:i,dimRoundingMode:l}=e;return{x:()=>CH(n,s,a,r,i,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kH(n,t,e,s,a){const r=O(n,"dy","avgPoolGrad"),i=O(t,"input","avgPoolGrad");D(i.rank===r.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${r.rank})`);let l=i,u=r,h=!1;i.rank===3&&(h=!0,l=X(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=X(r,[1,r.shape[0],r.shape[1],r.shape[2]])),D(u.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`),D(l.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${l.rank}.`);const f={dy:u,input:l},p={filterSize:e,strides:s,pad:a},m=P.runKernel(eg,f,p);return h?X(m,[m.shape[1],m.shape[2],m.shape[3]]):m}const IH=U({avgPoolGrad_:kH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EH={kernelName:Qh,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{filterSize:a,strides:r,pad:i}=e;return{x:()=>IH(n,s,a,r,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AH={kernelName:td,inputsToSave:["a","b"],gradFunc:(n,t,e)=>{const[s,a]=t,{transposeA:r,transposeB:i}=e;return!r&&!i?{a:()=>jt(n,a,!1,!0),b:()=>jt(s,n,!0,!1)}:!r&&i?{a:()=>jt(n,a,!1,!1),b:()=>jt(n,s,!0,!1)}:r&&!i?{a:()=>jt(a,n,!1,!0),b:()=>jt(s,n,!1,!1)}:{a:()=>jt(a,n,!0,!0),b:()=>jt(n,s,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RH={kernelName:ed,gradFunc:(n,t,e)=>{const{blockShape:s,crops:a}=e;return{x:()=>hf(n,s,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DH={kernelName:Lk,gradFunc:(n,t,e)=>{const s=e,a=s.inputShape,r=s.shape,i=Array.from(r);for(let u=a.length-1;u>=0;u--)if(a[u]===r[u])i[u]=1;else if(a[u]!==1)throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${r}].`);const l=[];for(let u=0;u<i.length;u++)i[u]>1&&l.push(u);return{x:()=>kt(n,l,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OH={kernelName:du,gradFunc:n=>({x:()=>n.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _H={kernelName:fu,gradFunc:n=>({x:()=>se(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FH={kernelName:pu,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{clipValueMin:a,clipValueMax:r}=e;return{x:()=>In(Ca(Fr(s,a),Oi(s,r)),n,se(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LH={kernelName:sd,inputsToSave:["x"],gradFunc:oA.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zH={kernelName:ad,saveAllInputs:!0,gradFunc:(n,t,e)=>{const s=t.map(u=>u.shape),{axis:a}=e,r=Xt(a,t[0].shape)[0],i=s.map(u=>u[r]);return as(n,i,r).map(u=>()=>u)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MH={kernelName:rd,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const[s,a]=t,{dilations:r,strides:i,pad:l,dataFormat:u}=e;return D(wi(r),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`),{x:()=>Iv(s.shape,n,a,i,l,u),filter:()=>cw(s,n,a.shape,i,l,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BH={kernelName:id,inputsToSave:["dy","filter"],gradFunc:(n,t,e)=>{const[s,a]=t,{strides:r,pad:i,dataFormat:l,dimRoundingMode:u}=e;return{dy:()=>Ir(n,a,r,i,l,1,u),filter:()=>cw(n,s,a.shape,r,i,l,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VH(n,t,e,s,a){let r=n;n.rank===4&&(r=X(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let i=t;i.rank===4&&(i=X(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),D(r.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${r.shape}.`),D(i.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),D(e.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${e}.`),D(r.shape[4]===e[3],()=>`Error in conv3dDerFilter: depth of input ${r.shape[4]}) must match input depth in filter (${e[3]}.`),D(i.shape[4]===e[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${e[4]}).`);const l={x:r,dy:i},u={strides:s,pad:a,filterShape:e};return P.runKernel(og,l,u)}const PH=U({conv3DBackpropFilter_:VH});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UH={kernelName:od,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const{dilations:s,strides:a,pad:r}=e;D(wi(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[i,l]=t;return{x:()=>gI(i.shape,n,l,a,r),filter:()=>PH(i,n,l.shape,a,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GH={kernelName:mu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>H(Ee(Cy(wt(e,"float32"))),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WH={kernelName:gu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>H($y(wt(e,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HH={kernelName:ld,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:a,exclusive:r,reverse:i}=e;return{x:()=>{const l=Be([a],s.rank);let u=hy(n,a,r,!i);return l!=null&&(u=Jt(u,l)),u}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jH={kernelName:ud,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const{dilations:s,strides:a,pad:r,dimRoundingMode:i}=e,l=s??[1,1];D(wi(l),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${l}'`);const[u,h]=t;return D(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),D(h.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${h.rank}.`),D(u.shape[3]===h.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`),D(Rn(a,l),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${l}'.`),Qn("depthwiseConv2d",r,i),{x:()=>iE(u.shape,n,h,a,r,l,i),filter:()=>rE(u,n,h.shape,a,r,l,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qH={kernelName:cd,inputsToSave:["x","filter"],gradFunc:(n,t,e)=>{const[s,a]=t,r={x:s,filter:a,dy:n},i={x:s,filter:a,dy:n};return{x:()=>P.runKernel(Sm,r,e),filter:()=>P.runKernel(Nm,i,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XH={kernelName:bu,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t,s={dy:n,y:e};return{x:()=>P.runKernel(bg,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KH={kernelName:xu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t,s=H(ls(Ee(xe(e))),2/Math.sqrt(Math.PI));return{x:()=>H(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YH={kernelName:vu,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>H(n,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZH={kernelName:dd,inputsToSave:["input"],gradFunc:(n,t)=>{const[e]=t;return{input:()=>X(n,e.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QH={kernelName:wu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>H(n,ls(e))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JH={kernelName:Su,gradFunc:n=>({x:()=>se(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t6={kernelName:Nu,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,a=Ut(e.shape,s.shape);return{a:()=>{const l=Rt(n,wt(s,"float32")),u=nn(e.shape,a);return u.length>0?X(kt(l,u),e.shape):l},b:()=>{let l=H(n,wt(e,"float32"));const u=nn(s.shape,a);u.length>0&&(l=X(kt(l,u),s.shape));const h=xe(s);return Ee(Rt(l,wt(h,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e6={kernelName:fd,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,t,e)=>{const{varianceEpsilon:s}=e,[a,r,i,l]=t,u=l??_t(1),h=nn(r.shape,a.shape),f=[];if(r.rank===1){for(let C=0;C<a.shape.length-1;++C)f.push(a.shape[C]);f.push(1)}const p=$t(a,r),m=H(n,u),y=Sy(xt(i,_t(s))),b=H(H(H(y,y),y),_t(-.5));return{x:()=>r.rank===1?X(H(H(n,Ms(X(y,[1,1,1,r.shape[0]]),f)),u),a.shape):X(H(H(n,y),u),a.shape),mean:()=>{let C=H(H(y,_t(-1)),m);return r.rank===1&&(C=kt(C,h)),X(C,r.shape)},variance:()=>{let C=H(H(b,p),m);return r.rank===1&&(C=kt(C,h)),X(C,r.shape)},scale:()=>{const C=H(p,y);let I=H(n,C);return r.rank===1&&(I=kt(I,h)),X(I,r.shape)},offset:()=>{let C=n;return r.rank===1&&(C=kt(C,h)),X(C,r.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const n6={kernelName:pd,inputsToSave:["x","indices"],gradFunc:(n,t,e)=>{const[s,a]=t,{axis:r,batchDims:i}=e,l=Xt(r,s.shape)[0],u=(h,f,p)=>()=>{const m=h.shape,y=f.size,b=m.slice(0,l),v=b.length,w=m.slice(r,m.length).slice(1),S=w.length,T=y$(0,v),$=y$(v+1,v+1+S),C=b$([b,[y],w]),I=X(p,C),R=X(f,[y]),F=b$([[v],T,$]),B=Jt(I,F);let L=Dy(B,R,h.shape[l]);const z=Di(F);return L=Jt(L,z),L};if(i===1){const h=s.shape[0],f=s.split(h,0);return{x:()=>us(f.map((y,b)=>u(y,a.slice(b,1),n.slice(b,1))())).reshape(s.shape),indices:()=>a}}else return{x:u(s,a,n),indices:()=>a}}};function y$(n,t){const e=[];for(let s=n;s<t;++s)e.push(s);return e}function b$(n){const t=[];for(let e=0;e<n.length;++e)for(let s=0;s<n[e].length;++s)t.push(n[e][s]);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s6={kernelName:Tu,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>se(e),b:()=>se(s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a6={kernelName:Cu,gradFunc:n=>({x:()=>wt(n,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r6={kernelName:$u,gradFunc:n=>({x:()=>se(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i6={kernelName:ku,gradFunc:n=>({x:()=>se(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o6={kernelName:Iu,gradFunc:n=>({x:()=>se(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l6={kernelName:gd,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{alpha:a}=e,r=hs(s,0);return{x:()=>In(r,n,H(n,a))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u6={kernelName:Au,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Rt(n,xt(e,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const c6={kernelName:Eu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Rt(n,wt(e,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h6={kernelName:zk,inputsToSave:[],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s]=t,{axis:a}=e;return{logits:()=>{const i=ls(s);return $t(n,H(kt(n,a,!0),i))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d6(n,t,e,s=5,a=1,r=1,i=.5){const l={x:n,y:t,dy:e},u={depthRadius:s,bias:a,alpha:r,beta:i};return P.runKernel($g,l,u)}const f6=U({localResponseNormalizationBackprop_:d6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p6={kernelName:Sd,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,a]=t,{depthRadius:r,bias:i,alpha:l,beta:u}=e;return{x:()=>f6(s,a,n,r,i,l,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lA(n,t,e,s){return t.rank<e.rank&&(t=X(t,je(t.shape,s))),n.rank<e.rank&&(n=X(n,je(n.shape,s))),{x:()=>H(n,wt(la(e,t),n.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x$={kernelName:Nd,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const s=e,{reductionIndices:a}=s,r=t[0],i=t[1],l=Xt(a,r.shape),u=lA(n,i,r,l);return{x:()=>u.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m6={kernelName:Ru,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>H(n,wt(Fr(e,s),"float32")),b:()=>H(n,wt(Xl(e,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g6(n,t,e,s,a,r,i){const l=O(n,"dy","maxPool3dGrad"),u=O(t,"input","maxPool3dGrad"),h=O(e,"output","maxPool3dGrad");let f=l,p=u,m=h,y=!1;u.rank===4&&(y=!0,f=X(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=X(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),m=X(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),D(f.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${f.rank}.`),D(p.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${p.rank}.`),D(m.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${m.rank}.`),Qn("maxPool3dGrad",r,i);const b={dy:f,input:p,output:m},v={filterSize:s,strides:a,pad:r,dimRoundingMode:i},w=P.runKernel(Ig,b,v);return y?X(w,[w.shape[1],w.shape[2],w.shape[3],w.shape[4]]):w}const y6=U({maxPool3dGrad_:g6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b6={kernelName:Cd,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,a]=t,{filterSize:r,strides:i,pad:l,dimRoundingMode:u}=e;return{x:()=>y6(n,s,a,r,i,l,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x6(n,t,e,s,a,r,i){const l=O(n,"dy","maxPoolGrad"),u=O(t,"input","maxPoolGrad"),h=O(e,"output","maxPoolGrad");D(u.rank===l.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${l.rank})`),D(l.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${l.rank}.`),D(u.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`),Qn("maxPoolGrad",r,i);const f={dy:l,input:u,output:h},p={filterSize:s,strides:a,pad:r,dimRoundingMode:i};return P.runKernel(kg,f,p)}const v6=U({maxPoolGrad_:x6});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w6={kernelName:Td,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s,a]=t,{filterSize:r,strides:i,pad:l}=e;return{x:()=>v6(n,s,a,r,i,l)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S6={kernelName:$d,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:a}=e,r=Xt(a,s.shape),l=wn(s.shape,r)[1],u=ht(l);return{x:()=>{const f=s.shape.slice();r.forEach(y=>{f[y]=1});const p=X(n,f);return Rt(H(p,ss(s.shape,"float32")),u)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N6={kernelName:kd,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,t,e)=>{const s=e,{axis:a}=s,[r,i]=t,l=Xt(a,r.shape),u=lA(n,i,r,l);return{x:()=>u.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T6={kernelName:Du,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t;return{a:()=>H(n,wt(Oi(e,s),"float32")),b:()=>H(n,wt(hs(e,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C6={kernelName:Id,inputsToSave:["x"],gradFunc:(n,t,e)=>{const s=t[0],{paddings:a}=e,r=a.map(i=>i[0]);return{x:()=>ne(n,r,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $6={kernelName:Ou,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,a=Ut(e.shape,s.shape);return{a:()=>{const l=nn(e.shape,a);return l.length>0?X(kt(n,l),e.shape):n},b:()=>{const l=H(n,Ee(ac(Rt(e,s)))),u=nn(s.shape,a);return u.length>0?X(kt(l,u),s.shape):l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k6={kernelName:_u,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,a=Ut(e.shape,s.shape);return{a:()=>{const l=H(n,wt(s,"float32")),u=nn(e.shape,a);return u.length>0?X(kt(l,u),e.shape):l},b:()=>{const l=H(n,wt(e,"float32")),u=nn(s.shape,a);return u.length>0?X(kt(l,u),s.shape):l}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I6={kernelName:Ed,gradFunc:n=>({x:()=>Ee(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E6={kernelName:Dd,inputsToSave:["indices"],gradFunc:(n,t)=>{const e=t[0];return{indices:()=>tn(e.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A6={kernelName:Rd,gradFunc:n=>({x:()=>se(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R6={kernelName:Od,saveAllInputs:!0,gradFunc:(n,t,e)=>{const{axis:s}=e;return Gs(n,s).map(r=>()=>r)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v$={kernelName:_d,inputsToSave:["x"],gradFunc:(n,t,e)=>{const s=t[0],{paddings:a}=e,r=a.map(i=>i[0]);return{x:()=>ne(n,r,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D6={kernelName:Fu,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,t)=>{const[e,s,a]=t,r=e,i=s,l=Ut(r.shape,i.shape);return{a:()=>{const f=wt(i,"float32");let p=H(n,H(f,Za(r,$t(f,_t(1)))));const m=nn(r.shape,l);return m.length>0&&(p=kt(p,m)),X(p,r.shape)},b:()=>{const f=hs(r,0),p=In(f,Ss(r),se(r));let m=H(n,H(a,p));const y=nn(i.shape,l);return y.length>0&&(m=kt(m,y)),X(m,i.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O6={kernelName:Fd,inputsToSave:["x","alpha"],gradFunc:(n,t)=>{const[e,s]=t,a=hs(e,0);return{x:()=>In(a,n,H(n,s)),alpha:()=>{let r=In(a,se(n),H(n,e));const i=nn(s.shape,n.shape);return i.length>0&&(r=kt(r,i)),X(r,s.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _6(n,t,e){const s=n.shape.slice();s[e]=1;const a=X(t,s),r=Bh(n,e,!0,!1),i=Bh(n,e,!0,!0),l=H(r,i);return H(a,l)}function F6(n,t,e){const s=n.shape.length,a=s-e.length,r=Be(e,s);let i=n;r!=null&&(i=Jt(n,r));const l=i.shape.slice(),h=l.splice(s-e.length,e.length).reduce((m,y)=>m*y,1);l.push(h);const f=i.reshape(l);let p=_6(f,t,a);if(p=p.reshape(i.shape),r!=null){const m=Di(r);p=Jt(p,m)}return p}const L6={kernelName:Ld,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{axis:a}=e;let r=[];return a==null?r=s.shape.map((i,l)=>l):typeof a=="number"?r=[a]:r=a,{x:()=>F6(s,n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z6={kernelName:yu,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,a=Ut(e.shape,s.shape);return{a:()=>{const l=Rt(n,wt(s,"float32")),u=nn(e.shape,a);return u.length>0?X(kt(l,u),e.shape):l},b:()=>{let l=H(n,wt(e,"float32"));const u=nn(s.shape,a);u.length>0&&(l=X(kt(l,u),s.shape));const h=xe(s);return Ee(Rt(l,wt(h,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M6={kernelName:Lu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Rt(n,Ee(xe(e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B6={kernelName:Mu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t,s=H(Oi(e,6),Uo(e));return{x:()=>H(n,wt(s,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V6={kernelName:zu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>H(n,wt(Uo(e),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P6={kernelName:zd,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>X(n,e.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U6={kernelName:Bd,inputsToSave:["images"],gradFunc:(n,t,e)=>{const[s]=t,a={dy:n,images:s};return{images:()=>P.runKernel(Vg,a,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G6={kernelName:Md,inputsToSave:["images"],gradFunc:(n,t,e)=>{const[s]=t,a={dy:n,images:s};return{images:()=>P.runKernel(Bg,a,e)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W6={kernelName:Vd,gradFunc:(n,t,e)=>{const{dims:s}=e,a=Xt(s,n.shape);return{x:()=>Us(n,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H6={kernelName:Bu,gradFunc:n=>({x:()=>se(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j6={kernelName:Vu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Ee(Rt(n,H(Za(e,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q6={kernelName:Pd,inputsToSave:["condition"],gradFunc:(n,t)=>{const[e]=t;return{condition:()=>wt(se(e),"float32"),t:()=>H(n,wt(e,n.dtype)),e:()=>H(n,wt(lf(e),n.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X6={kernelName:Pu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>{const s=hs(e,_t(0)),a=_t(jy),r=_t(qy),i=H(n,r),l=H(H(n,a),ls(wt(e,"float32")));return In(s,i,l)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K6={kernelName:Hu,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>H(n,H(e,$t(_t(1),e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y6={kernelName:Wu,gradFunc:n=>({x:()=>se(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z6={kernelName:Uu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>H(nf(wt(e,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q6={kernelName:Gu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>H(cy(wt(e,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J6={kernelName:Ud,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{begin:a,size:r}=e,i=s.shape,[l,u]=Wy(s,a,r),h=[];for(let f=0;f<n.rank;f++)h.push([l[f],i[f]-l[f]-u[f]]);return{x:()=>Lr(n,h)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tj={kernelName:jd,outputsToSave:[!0],gradFunc:(n,t,e)=>{const[s]=t,{dim:a}=e,r=!0,i=H(n,s);return{logits:()=>$t(i,H(kt(i,[a],r),s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ej={kernelName:ju,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>H(n,Na(e))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w$={kernelName:Wd,gradFunc:(n,t,e)=>{const{blockShape:s,paddings:a}=e;return{x:()=>ef(n,s,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S$={kernelName:Hd,gradFunc:(n,t,e)=>{const{axis:s}=e;return{x:()=>He(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nj={kernelName:qu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Rt(n,H(xn(wt(e,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sj={kernelName:Kg,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>H(n,H(wt(e,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aj={kernelName:Xu,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,a=_t(2);return{a:()=>H(n,H(a,$t(e,s))),b:()=>H(n,H(a,$t(s,e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rj={kernelName:Ju,gradFunc:n=>({x:()=>se(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ij={kernelName:Ku,inputsToSave:["a","b"],gradFunc:(n,t)=>{const[e,s]=t,a=Ut(e.shape,s.shape);return{a:()=>{let l=n;const u=nn(e.shape,a);return u.length>0&&(l=kt(l,u)),X(l,e.shape)},b:()=>{let l=n;const u=nn(s.shape,a);return u.length>0&&(l=kt(l,u)),X(Ee(l),s.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oj={kernelName:Gd,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,a=s.shape.slice(),{axis:r}=e;Xt(r,s.shape).forEach(h=>{a[h]=1});const l=X(n,a),u=H(l,ss(s.shape,"float32"));return{x:()=>u}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lj={kernelName:Yu,inputsToSave:["x"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>Rt(n,xe(nf(e)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uj={kernelName:Zu,outputsToSave:[!0],gradFunc:(n,t)=>{const[e]=t;return{x:()=>H($t(_t(1),xe(e)),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cj={kernelName:Qu,inputsToSave:["x"],gradFunc:(n,t,e)=>{const[s]=t,{reps:a}=e;return{x:()=>{let i=se(s);if(s.rank===1)for(let l=0;l<a[0];++l)i=xt(i,ne(n,[l*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let l=0;l<a[0];++l)for(let u=0;u<a[1];++u)i=xt(i,ne(n,[l*s.shape[0],u*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let l=0;l<a[0];++l)for(let u=0;u<a[1];++u)for(let h=0;h<a[2];++h)i=xt(i,ne(n,[l*s.shape[0],u*s.shape[1],h*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let l=0;l<a[0];++l)for(let u=0;u<a[1];++u)for(let h=0;h<a[2];++h)for(let f=0;f<a[3];++f)i=xt(i,ne(n,[l*s.shape[0],u*s.shape[1],h*s.shape[2],f*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hj={kernelName:yo,gradFunc:(n,t,e)=>{const s=e,{perm:a}=s,r=Di(a);return{x:()=>Jt(n,r)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dj={kernelName:Xd,gradFunc:(n,t,e)=>{const s=e,{axis:a}=s;return{value:()=>us(n,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fj={kernelName:Kd,inputsToSave:["segmentIds"],gradFunc:(n,t)=>{const[e]=t;return{x:()=>pj(n,e)}}};function pj(n,t){const e=er(t,se(t)),s=rc(n,e);let a=Fr(t,_t(0,"int32"));const r=s.rank-a.rank;for(let l=0;l<r;++l)a=Bn(a,l+1);a=Ca(a,ss(s.shape,"bool"));const i=se(s);return In(a,s,i)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mj={kernelName:Yd,gradFunc:n=>({x:()=>se(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gj=[oA,fH,pH,mH,gH,yH,bH,xH,vH,wH,SH,NH,$H,EH,AH,RH,DH,OH,_H,FH,LH,zH,BH,MH,UH,GH,WH,HH,jH,qH,z6,XH,KH,YH,ZH,QH,t6,JH,e6,n6,s6,a6,r6,i6,o6,l6,u6,c6,h6,p6,x$,x$,m6,b6,w6,S6,N6,T6,C6,$6,k6,I6,E6,A6,R6,v$,v$,D6,O6,L6,M6,B6,V6,P6,U6,G6,W6,H6,j6,q6,X6,K6,Y6,Z6,Q6,J6,tj,ej,w$,w$,S$,S$,nj,aj,sj,rj,ij,oj,lj,uj,cj,hj,dj,fj,mj];for(const n of gj)Mk(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.abs=function(){return this.throwIfDisposed(),Je(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.acos=function(){return this.throwIfDisposed(),uv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.acosh=function(){return this.throwIfDisposed(),cv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.add=function(n){return this.throwIfDisposed(),xt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.all=function(n,t){return this.throwIfDisposed(),oy(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.any=function(n,t){return this.throwIfDisposed(),Lh(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.argMax=function(n){return this.throwIfDisposed(),Co(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.argMin=function(n){return this.throwIfDisposed(),hv(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.asScalar=function(){return this.throwIfDisposed(),D(this.size===1,()=>"The array must have only 1 element."),X(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.asType=function(n){return this.throwIfDisposed(),wt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.as1D=function(){return this.throwIfDisposed(),X(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.as2D=function(n,t){return this.throwIfDisposed(),X(this,[n,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.as3D=function(n,t,e){return this.throwIfDisposed(),X(this,[n,t,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.as4D=function(n,t,e,s){return this.throwIfDisposed(),X(this,[n,t,e,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.as5D=function(n,t,e,s,a){return this.throwIfDisposed(),X(this,[n,t,e,s,a])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.asin=function(){return this.throwIfDisposed(),dv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.asinh=function(){return this.throwIfDisposed(),fv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.atan=function(){return this.throwIfDisposed(),pv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.atan2=function(n){return this.throwIfDisposed(),mv(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.atanh=function(){return this.throwIfDisposed(),gv(this)};dt().prototype.avgPool=function(n,t,e,s){return this.throwIfDisposed(),tf(this,n,t,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.batchToSpaceND=function(n,t){return this.throwIfDisposed(),ef(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.batchNorm=function(n,t,e,s,a){return this.throwIfDisposed(),tc(this,n,t,e,s,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.broadcastTo=function(n){return this.throwIfDisposed(),bo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.cast=function(n){return this.throwIfDisposed(),wt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.ceil=function(){return this.throwIfDisposed(),Nv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.clipByValue=function(n,t){return this.throwIfDisposed(),os(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.concat=function(n,t){return this.throwIfDisposed(),n instanceof fe&&(n=[n]),He([this,...n],t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.conv1d=function(n,t,e,s,a,r){return this.throwIfDisposed(),ly(this,n,t,e,s,a,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.conv2dTranspose=function(n,t,e,s,a){return this.throwIfDisposed(),uy(this,n,t,e,s,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.conv2d=function(n,t,e,s,a,r){return this.throwIfDisposed(),Ir(this,n,t,e,s,a,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.cos=function(){return this.throwIfDisposed(),nf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.cosh=function(){return this.throwIfDisposed(),cy(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.cumprod=function(n,t,e){return this.throwIfDisposed(),Bh(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.cumsum=function(n,t,e){return this.throwIfDisposed(),hy(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.depthToSpace=function(n,t){return this.throwIfDisposed(),Rv(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.depthwiseConv2d=function(n,t,e,s,a,r){return this.throwIfDisposed(),ec(this,n,t,e,s,a,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.dilation2d=function(n,t,e,s,a){return this.throwIfDisposed(),Dv(this,n,t,e,s,a)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.divNoNan=function(n){return this.throwIfDisposed(),Ov(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.div=function(n){return this.throwIfDisposed(),Rt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.dot=function(n){return this.throwIfDisposed(),_v(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.elu=function(){return this.throwIfDisposed(),nc(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.equal=function(n){return this.throwIfDisposed(),la(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.erf=function(){return this.throwIfDisposed(),dy(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.euclideanNorm=function(n,t){return this.throwIfDisposed(),Lv(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.exp=function(){return this.throwIfDisposed(),ls(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.expandDims=function(n){return this.throwIfDisposed(),Bn(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.expm1=function(){return this.throwIfDisposed(),zv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.fft=function(){return this.throwIfDisposed(),gf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.flatten=function(){return this.throwIfDisposed(),X(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.floor=function(){return this.throwIfDisposed(),ac(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.floorDiv=function(n){return this.throwIfDisposed(),iy(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.gather=function(n,t,e){return this.throwIfDisposed(),rc(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.greaterEqual=function(n){return this.throwIfDisposed(),Fr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.greater=function(n){return this.throwIfDisposed(),hs(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.ifft=function(){return this.throwIfDisposed(),Ql(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.irfft=function(){return this.throwIfDisposed(),Iy(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.isFinite=function(){return this.throwIfDisposed(),Mv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.isInf=function(){return this.throwIfDisposed(),Bv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.isNaN=function(){return this.throwIfDisposed(),Vv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.leakyRelu=function(n){return this.throwIfDisposed(),af(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.lessEqual=function(n){return this.throwIfDisposed(),Oi(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.less=function(n){return this.throwIfDisposed(),Xl(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.localResponseNormalization=function(n,t,e,s){return this.throwIfDisposed(),Pv(this,n,t,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.logSigmoid=function(){return this.throwIfDisposed(),Uv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.logSoftmax=function(n){return this.throwIfDisposed(),my(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.logSumExp=function(n,t){return this.throwIfDisposed(),of(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.log=function(){return this.throwIfDisposed(),Ss(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.log1p=function(){return this.throwIfDisposed(),rf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.logicalAnd=function(n){return this.throwIfDisposed(),Ca(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.logicalNot=function(){return this.throwIfDisposed(),lf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.logicalOr=function(n){return this.throwIfDisposed(),gy(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.logicalXor=function(n){return this.throwIfDisposed(),Gv(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.matMul=function(n,t,e){return this.throwIfDisposed(),jt(this,n,t,e)};dt().prototype.maxPool=function(n,t,e,s){return this.throwIfDisposed(),uf(this,n,t,e,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.max=function(n,t){return this.throwIfDisposed(),Ps(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.maximum=function(n){return this.throwIfDisposed(),er(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.mean=function(n,t){return this.throwIfDisposed(),Le(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.min=function(n,t){return this.throwIfDisposed(),ql(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.minimum=function(n){return this.throwIfDisposed(),Ni(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.mirrorPad=function(n,t){return this.throwIfDisposed(),Hv(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.mod=function(n){return this.throwIfDisposed(),jv(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.mul=function(n){return this.throwIfDisposed(),H(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.neg=function(){return this.throwIfDisposed(),Ee(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.norm=function(n,t,e){return this.throwIfDisposed(),sc(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.notEqual=function(n){return this.throwIfDisposed(),Io(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.oneHot=function(n,t=1,e=0){return this.throwIfDisposed(),Kl(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.onesLike=function(){return this.throwIfDisposed(),Ns(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.pad=function(n,t){return this.throwIfDisposed(),Lr(this,n,t)};dt().prototype.pool=function(n,t,e,s,a,r){return this.throwIfDisposed(),qv(this,n,t,e,s,a,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.pow=function(n){return this.throwIfDisposed(),Za(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.prelu=function(n){return this.throwIfDisposed(),df(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.prod=function(n,t){return this.throwIfDisposed(),Xv(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.reciprocal=function(){return this.throwIfDisposed(),Qv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.relu=function(){return this.throwIfDisposed(),Aa(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.relu6=function(){return this.throwIfDisposed(),vy(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.reshapeAs=function(n){return this.throwIfDisposed(),X(this,n.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.reshape=function(n){return this.throwIfDisposed(),X(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.resizeBilinear=function(n,t,e){return this.throwIfDisposed(),cE(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.resizeNearestNeighbor=function(n,t,e){return this.throwIfDisposed(),hE(this,n,t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.reverse=function(n){return this.throwIfDisposed(),Us(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.rfft=function(){return this.throwIfDisposed(),yf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.round=function(){return this.throwIfDisposed(),wy(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.rsqrt=function(){return this.throwIfDisposed(),Sy(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.selu=function(){return this.throwIfDisposed(),Ny(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.separableConv2d=function(n,t,e,s,a,r){return this.throwIfDisposed(),Ty(this,n,t,e,s,a,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.sigmoid=function(){return this.throwIfDisposed(),Na(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.sign=function(){return this.throwIfDisposed(),Jv(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.sin=function(){return this.throwIfDisposed(),Cy(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.sinh=function(){return this.throwIfDisposed(),$y(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.slice=function(n,t){return this.throwIfDisposed(),ne(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.softmax=function(n){return this.throwIfDisposed(),mf(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.softplus=function(){return this.throwIfDisposed(),Po(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.spaceToBatchND=function(n,t){return this.throwIfDisposed(),hf(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.split=function(n,t){return this.throwIfDisposed(),as(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.sqrt=function(){return this.throwIfDisposed(),xn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.square=function(){return this.throwIfDisposed(),xe(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.squaredDifference=function(n){return this.throwIfDisposed(),Ey(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.squeeze=function(n){return this.throwIfDisposed(),Fi(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.stack=function(n,t){this.throwIfDisposed();const e=n instanceof fe?[this,n]:[this,...n];return us(e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.step=function(n){return this.throwIfDisposed(),Uo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.stridedSlice=function(n,t,e,s,a,r,i,l){return this.throwIfDisposed(),tw(this,n,t,e,s,a,r,i,l)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.sub=function(n){return this.throwIfDisposed(),$t(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.sum=function(n,t){return this.throwIfDisposed(),kt(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.tan=function(){return this.throwIfDisposed(),ew(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.tanh=function(){return this.throwIfDisposed(),Si(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.tile=function(n){return this.throwIfDisposed(),Ms(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.toBool=function(){return this.throwIfDisposed(),wt(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.toFloat=function(){return this.throwIfDisposed(),wt(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.toInt=function(){return this.throwIfDisposed(),wt(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.topk=function(n,t){return this.throwIfDisposed(),aw(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.transpose=function(n){return this.throwIfDisposed(),Jt(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.unique=function(n){return this.throwIfDisposed(),rw(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.unsortedSegmentSum=function(n,t){return this.throwIfDisposed(),Dy(this,n,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.unstack=function(n){return this.throwIfDisposed(),Gs(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.where=function(n,t){return this.throwIfDisposed(),In(n,this,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */dt().prototype.zerosLike=function(){return this.throwIfDisposed(),se(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ba extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Ba.prototype)}}class ra extends Error{constructor(t){super(t),Object.setPrototypeOf(this,ra.prototype)}}class K extends Error{constructor(t){super(t),Object.setPrototypeOf(this,K.prototype)}}class Wt extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Wt.prototype)}}class Yw extends Error{constructor(t){super(t),Object.setPrototypeOf(this,Yw.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class uA{constructor(t){this.maxEntries=t||100,this.cache=new Map}get(t){let e;return this.cache.has(t)&&(e=this.cache.get(t),this.cache.delete(t),this.cache.set(t,e)),e}put(t,e){if(this.cache.has(t))this.cache.delete(t);else if(this.cache.size>=this.maxEntries){const s=this.cache.keys().next().value;this.cache.delete(s)}this.cache.set(t,e)}getMaxEntries(){return this.maxEntries}setMaxEntries(t){if(t<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${t}.`);if(this.maxEntries>t)for(let e=0;e<this.maxEntries-t;e++){const s=this.cache.keys().next().value;this.cache.delete(s)}this.maxEntries=t}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Do(n,t){if(Array.isArray(n)){let e=[];for(let s=0;s<t;s++)e=e.concat(n);return e}else{const e=new Array(t);return e.fill(n),e}}function Va(n,t){if(!n)throw new Yw(t)}function N$(n,t){let e=0;for(const s of n)s===t&&e++;return e}function ns(n){return n.length===1?n[0]:n}function pe(n){return Array.isArray(n)?n:[n]}function Sr(n){const e=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return e[0]!=="_"?e:"private"+e}function ho(n){return n.length<=1||n.indexOf("_")===-1?n:n.replace(/[_]+(\w|$)/g,(t,e)=>e.toUpperCase())}let ea={};function Zw(n){if(n==null)return null;const t={};return t.className=n.getClassName(),t.config=n.getConfig(),t}function I1(n){if(!(n==null||typeof n!="object"))if(Array.isArray(n))n.forEach(t=>I1(t));else{const t=Object.keys(n);for(const e of t){const s=n[e];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?n[e]=s.value:I1(s))}}}function wf(n,t={},e={},s="object",a=!1){if(typeof n=="string"){const r=n;let i;if(r in e)i=e[r];else if(r in ea)i=ea[r];else if(i=t[r],i==null)throw new K(`Unknown ${s}: ${n}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return i}else{const r=n;if(r.className==null||r.config==null)throw new K(`${s}: Improper config format: ${JSON.stringify(r)}.
'className' and 'config' must set.`);const i=r.className;let l,u;if(i in e?[l,u]=e[i]:i in ea?[l,u]=ea.className:i in t&&([l,u]=t[i]),l==null)throw new K(`Unknown ${s}: ${i}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(u!=null){const h={};for(const y of Object.keys(ea))h[y]=ea[y];for(const y of Object.keys(e))h[y]=e[y];const f=r.config;f.customObjects=h;const p=Object.assign({},ea);for(const y of Object.keys(e))ea[y]=e[y];I1(r.config);const m=u(l,r.config,e,a);return ea=Object.assign({},p),m}else{const h=Object.assign({},ea);for(const p of Object.keys(e))ea[p]=e[p];const f=new l(r.config);return ea=Object.assign({},h),f}}}function yj(n,t){return n<t?-1:n>t?1:0}function Kp(n,t){return-1*yj(n,t)}function mi(n){if(n==null)return n;const t=[];for(const e of n)t.indexOf(e)===-1&&t.push(e);return t}function bj(n){if(n==null)throw new K(`Invalid value in obj: ${JSON.stringify(n)}`);for(const t in n)if(n.hasOwnProperty(t))return!1;return!0}function Wo(n,t,e){if(e!=null&&n.indexOf(e)<0)throw new K(`${e} is not a valid ${t}.  Valid values are ${n} or null/undefined.`)}function Qw(n,t,e=0,s=1/0){return Va(e>=0),Va(s>=e),Array.isArray(n)&&n.length>=e&&n.length<=s&&n.every(a=>typeof a===t)}function yn(n,t){Array.isArray(n)?(D(n.length>0,()=>`${t} is unexpectedly an empty array.`),n.forEach((e,s)=>yn(e,`element ${s+1} of ${t}`))):D(Number.isInteger(n)&&n>0,()=>`Expected ${t} to be a positive integer, but got ${cA(n)}.`)}function cA(n){return n===null?"null":Array.isArray(n)?"["+n.map(t=>cA(t)).join(",")+"]":typeof n=="string"?`"${n}"`:`${n}`}function xj(n,t,e){let s=e!=null?e():jn(),a;return(...i)=>{const l=e!=null?e():jn();return l-s<t||(s=l,a=n(...i)),a}}function hA(n){return n==="relu"?"relu":n==="linear"?"linear":n==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let vj=0;function dA(){return vj++}const Yp={};function Xy(n=""){return n in Yp||(Yp[n]=0),Yp[n]+=1,n+Yp[n].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const wj=["channelsFirst","channelsLast"],Sj=["nearest","bilinear"],Nj=["valid","same","causal"],Tj=["max","avg"],Cj=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Ll=new Map;function Xe(n){Wo(wj,"DataFormat",n)}function $j(n){Wo(Sj,"InterpolationFormat",n)}function Ws(n){Wo(Nj,"PaddingMode",n)}function fA(n){Wo(Tj,"PoolMode",n)}const kh=[],T$="/";function xo(n,t){kh.push(n);try{const e=t();return kh.pop(),e}catch(e){throw kh.pop(),e}}function kj(){return kh.length===0?"":kh.join(T$)+T$}function pA(n){if(!gA(n))throw new Error("Not a valid tensor name: '"+n+"'");return kj()+n}function mA(n){if(!gA(n))throw new Error("Not a valid tensor name: '"+n+"'");Ll.has(n)||Ll.set(n,0);const t=Ll.get(n);if(Ll.set(n,Ll.get(n)+1),t>0){const e=`${n}_${t}`;return Ll.set(e,1),e}else return n}const Ij=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function gA(n){return!!n.match(Ij)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ej(n){return n===parseInt(n.toString(),10)}function gi(n,t,e){t==null&&(t=0),e==null&&(e=n.length);let s=1;for(let a=t;a<e;++a)s*=n[a];return s}function Jl(n){if(n.length===0)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let e=0;e<n.length;e++){const s=n[e];s<t&&(t=s)}return t}function Ti(n){if(n.length===0)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let e=0;e<n.length;e++){const s=n[e];s>t&&(t=s)}return t}function $a(n,t){if(t<n)throw new K(`end (${t}) < begin (${n}) is forbidden.`);const e=[];for(let s=n;s<t;++s)e.push(s);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Mx;function on(){return Mx==null&&(Mx=av().epsilon()),Mx}function ka(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function qa(n,t){return wt(n,t)}function Sf(n,t=-1){const e=n.shape.slice();return t<0&&(t=e.length+t+1),e.splice(t,0,1),X(n,e)}function Aj(n,t){return at(()=>{if(n.shape.length!==2)throw new K(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);const e=Sf(n,1);return E1(e,[1,t,1])})}function Rj(n){const t=[gi(n.shape)];return X(n,t)}function Dj(n){if(n.rank<=1)throw new K(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);const t=[n.shape[0],gi(n.shape,1)];return X(n,t)}function vo(n,t,e){return at(()=>{switch(n.rank){case 1:return ff(n,t,e);case 2:return ky(n,[t,0],[e,n.shape[1]]);case 3:return pf(n,[t,0,0],[e,n.shape[1],n.shape[2]]);case 4:return Zl(n,[t,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3]]);case 5:return ne(n,[t,0,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return ne(n,[t,0,0,0,0,0],[e,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new K(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Bx(n,t,e){return at(()=>{switch(n.rank){case 1:return ff(n,t,e);case 2:return ky(n,[0,t],[n.shape[0],e]);case 3:return pf(n,[0,0,t],[n.shape[0],n.shape[1],e]);case 4:return Zl(n,[0,0,0,t],[n.shape[0],n.shape[1],n.shape[2],e]);default:throw new K(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Zp(n,t,e,s){return at(()=>{switch(n.rank){case 1:return ff(n,t,e);case 2:switch(s){case 1:return vo(n,t,e);case 2:return Bx(n,t,e);default:throw new K(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return vo(n,t,e);case 2:return pf(n,[0,t,0],[n.shape[0],e,n.shape[2]]);case 3:return Bx(n,t,e);default:throw new K(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return vo(n,t,e);case 2:return Zl(n,[0,t,0,0],[n.shape[0],e,n.shape[2],n.shape[3]]);case 3:return Zl(n,[0,0,t,0],[n.shape[0],n.shape[1],e,n.shape[3]]);case 4:return Bx(n,t,e);default:throw new K(`The axis is not within the rank of the tensor ${s}`)}default:throw new K(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Jw(n,t=-1){let e;return t<0&&(e=n[0].rank,e!==0?t=e:t=0),t===n[0].rank&&(t=-1),He(n,t)}function C$(n,t){switch(n.rank){case 1:return Tv([n,t]);case 2:return Cv([n,t],0);case 3:return $v([n,t],0);case 4:return kv([n,t],0);default:throw new K(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function E1(n,t){if(Array.isArray(t)||(t=[t]),n.rank!==t.length)throw new K(`The length of input n (${t.length}) does not match the number of dimensions in input x (${n.rank})`);return Ms(n,t)}function Ky(n,t=0,e=1,s,a){return xy(n,t,e,s,a)}function Xa(n,t,e,s){if(n.rank<2||t.rank<2)throw new Wt(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${t.shape}`);if(t.rank>=3){const a=n.shape.slice(-1)[0],r=t.shape.slice(-2)[0];if(a!==r)throw new Wt(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${t.shape}`)}if(n.rank===2&&t.rank===2)return d1({a:n,b:t,transposeA:!1,transposeB:!1,bias:s?A1(n.rank,s,ka()):null,activation:e});{const a=n.shape.slice(),r=a.pop();n=X(n,[-1,r]);const i=t.shape.slice(),l=i.pop(),u=i.pop(),h=[...i,l],f=Array.from({length:t.rank},(b,v)=>v===0?t.rank-2:v<=t.rank-2?v-1:v);t=X(Jt(t,f),[u,-1]);const p=[...a,...h];return X(d1({a:n,b:t,transposeA:!1,transposeB:!1,bias:s?A1(n.rank,s,ka()):null,activation:e}),p)}}function yA(n,t,e){return at(()=>(Array.isArray(t)?t=Vn(t,"int32"):t=wt(t,"int32"),rc(n,t,e)))}function Nf(n){return H(n,n)}function A1(n,t,e){const s=t.shape;if(t.rank!==1&&t.rank!==n)throw new K(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${n}`);if(n===5){if(e==="channelsFirst")return s.length===1?X(t,[1,s[0],1,1,1]):X(t,[1,s[3],s[0],s[1],s[2]]);if(e==="channelsLast")return s.length===1?X(t,[1,1,1,1,s[0]]):X(t,[1].concat(s))}else if(n===4){if(e==="channelsFirst")return s.length===1?X(t,[1,s[0],1,1]):X(t,[1,s[2],s[0],s[1]]);if(e==="channelsLast")return s.length===1?X(t,[1,1,1,s[0]]):X(t,[1].concat(s))}else if(n===3){if(e==="channelsFirst")return s.length===1?X(t,[1,s[0],1]):X(t,[1,s[1],s[0]]);if(e==="channelsLast")return s.length===1?X(t,[1,1,s[0]]):X(t,[1].concat(s))}else if(n<3)return t;throw new K(`Unsupported input rank by biasAdd: ${t.rank}`)}function Ra(n,t,e){return at(()=>(e==null&&(e=ka()),Xe(e),xt(n,A1(n.rank,t,e))))}function Oj(n,t=1){if(t!==1)throw new Wt(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return nc(n)}function _j(n){return at(()=>Rt(n,xt(Je(n),1)))}function bA(n,t,e,s){return at(()=>lw(n,t,e,s))}function Fj(n){return at(()=>{const t=xt(.5,H(.2,n));return os(t,0,1)})}function Tf(n,t,e=!1){return e?n():t()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Lj=["fanIn","fanOut","fanAvg"],zj=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Mj(n){Wo(Lj,"FanMode",n)}function Bj(n){Wo(zj,"Distribution",n)}class ca extends Go{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class xA extends ca{apply(t,e){return tn(t,e)}}xA.className="Zeros";vt(xA);class tS extends ca{apply(t,e){return ss(t,e)}}tS.className="Ones";vt(tS);class vA extends ca{constructor(t){if(super(),typeof t!="object")throw new K(`Expected argument of type ConstantConfig but got ${t}`);if(t.value===void 0)throw new K(`config must have value set but got ${t}`);this.value=t.value}apply(t,e){return at(()=>H(_t(this.value),ss(t,e)))}getConfig(){return{value:this.value}}}vA.className="Constant";vt(vA);class wA extends ca{constructor(t){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=t.minval||this.DEFAULT_MINVAL,this.maxval=t.maxval||this.DEFAULT_MAXVAL,this.seed=t.seed}apply(t,e){return _i(t,this.minval,this.maxval,e,this.seed)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}wA.className="RandomUniform";vt(wA);class SA extends ca{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new Wt(`randomNormal does not support dType ${e}.`);return Ky(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}SA.className="RandomNormal";vt(SA);class NA extends ca{constructor(t){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=t.mean||this.DEFAULT_MEAN,this.stddev=t.stddev||this.DEFAULT_STDDEV,this.seed=t.seed}apply(t,e){if(e=e||"float32",e!=="float32"&&e!=="int32")throw new Wt(`truncatedNormal does not support dType ${e}.`);return Ry(t,this.mean,this.stddev,e,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}NA.className="TruncatedNormal";vt(NA);class TA extends ca{constructor(t){super(),this.gain=t.gain!=null?t.gain:1}apply(t,e){return at(()=>{if(t.length!==2||t[0]!==t[1])throw new K("Identity matrix initializer can only be used for 2D square matrices.");return H(this.gain,fy(t[0]))})}getConfig(){return{gain:this.gain}}}TA.className="Identity";vt(TA);function Vj(n,t="channelsLast"){let e,s;if(Xe(t),n.length===2)e=n[0],s=n[1];else if([3,4,5].indexOf(n.length)!==-1){if(t==="channelsFirst"){const a=gi(n,2);e=n[1]*a,s=n[0]*a}else if(t==="channelsLast"){const a=gi(n,0,n.length-2);e=n[n.length-2]*a,s=n[n.length-1]*a}}else{const a=gi(n);e=Math.sqrt(a),s=Math.sqrt(a)}return[e,s]}class Ts extends ca{constructor(t){if(super(),t.scale<0)throw new K(`scale must be a positive float. Got: ${t.scale}`);this.scale=t.scale==null?1:t.scale,this.mode=t.mode==null?"fanIn":t.mode,Mj(this.mode),this.distribution=t.distribution==null?"normal":t.distribution,Bj(this.distribution),this.seed=t.seed}apply(t,e){const s=Vj(t),a=s[0],r=s[1];let i=this.scale;if(this.mode==="fanIn"?i/=Math.max(1,a):this.mode==="fanOut"?i/=Math.max(1,r):i/=Math.max(1,(a+r)/2),this.distribution==="normal"){const l=Math.sqrt(i);if(e=e||"float32",e!=="float32"&&e!=="int32")throw new Wt(`${this.getClassName()} does not support dType ${e}.`);return Ry(t,0,l,e,this.seed)}else{const l=Math.sqrt(3*i);return _i(t,-l,l,e,this.seed)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Ts.className="VarianceScaling";vt(Ts);class eS extends Ts{constructor(t){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return Ts.className}}eS.className="GlorotUniform";vt(eS);class nS extends Ts{constructor(t){super({scale:1,mode:"fanAvg",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return Ts.className}}nS.className="GlorotNormal";vt(nS);class sS extends Ts{constructor(t){super({scale:2,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return Ts.className}}sS.className="HeNormal";vt(sS);class aS extends Ts{constructor(t){super({scale:2,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return Ts.className}}aS.className="HeUniform";vt(aS);class rS extends Ts{constructor(t){super({scale:1,mode:"fanIn",distribution:"normal",seed:t==null?null:t.seed})}getClassName(){return Ts.className}}rS.className="LeCunNormal";vt(rS);class iS extends Ts{constructor(t){super({scale:1,mode:"fanIn",distribution:"uniform",seed:t==null?null:t.seed})}getClassName(){return Ts.className}}iS.className="LeCunUniform";vt(iS);class CA extends ca{constructor(t){super(),this.DEFAULT_GAIN=1,this.ELEMENTS_WARN_SLOW=2e3,this.gain=t.gain==null?this.DEFAULT_GAIN:t.gain,this.seed=t.seed}apply(t,e){return at(()=>{if(t.length<2)throw new Wt("Shape must be at least 2D.");if(e!=="int32"&&e!=="float32"&&e!==void 0)throw new TypeError(`Unsupported data type ${e}.`);e=e;const s=ht(t.slice(0,-1)),a=t[t.length-1],r=s*a;r>this.ELEMENTS_WARN_SLOW&&console.warn(`Orthogonal initializer is being called on a matrix with more than ${this.ELEMENTS_WARN_SLOW} (${r}) elements: Slowness may result.`);const i=[Math.max(a,s),Math.min(a,s)],l=Ky(i,0,1,e,this.seed),u=dw.qr(l,!1);let h=u[0];const p=u[1].flatten().stridedSlice([0],[Math.min(a,s)*Math.min(a,s)],[Math.min(a,s)+1]);return h=H(h,p.sign()),s<a&&(h=h.transpose()),H(_t(this.gain),h.reshape(t))})}getConfig(){return{gain:this.gain,seed:this.seed}}}CA.className="Orthogonal";vt(CA);const $$={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function k$(n,t={}){return wf(n,zs.getMap().classNameMap,t,"initializer")}function ze(n){return Zw(n)}function De(n){if(typeof n=="string"){const t=n in $$?$$[n]:n;if(t==="GlorotNormal")return new nS;if(t==="GlorotUniform")return new eS;if(t==="HeNormal")return new sS;if(t==="HeUniform")return new aS;if(t==="LeCunNormal")return new rS;if(t==="LeCunUniform")return new iS;{const e={};return e.className=t,e.config={},k$(e)}}else return n instanceof ca?n:k$(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function R1(n){return Array.isArray(n)&&Array.isArray(n[0])}function Rm(n){return n.length===0?[]:Array.isArray(n[0])?n:[n]}function Mt(n){let t;if(Array.isArray(n)){if(n.length!==1)throw new K(`Expected Tensor length to be 1; got ${n.length}`);t=n[0]}else t=n;return t}function le(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(n.length===1)return n=n,n[0];throw new K(`Expected exactly 1 Shape; got ${n.length}`)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Dm(n){let t=0;for(const e of n)e.shape.length===0?t+=1:t+=e.shape.reduce((s,a)=>s*a);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const I$="Variable";class Pj{constructor(t,e="float32",s=I$,a=!0,r=null){this.dtype=e??"float32",this.shape=t.shape,this.id=dA(),s=s??I$,this.originalName=pA(s),this.name=mA(this.originalName),this.trainable_=a,this.constraint=r,this.val=iw(t,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(t){return this.assertNotDisposed(),Uj(this.val,t),this.val.id!==t.id&&(this.val.assign(t),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(t){this.trainable_=t,this.val.trainable=t}}function Uj(n,t){if(n.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(t.shape))}function D1(n){return n.map(t=>t.read())}function oS(n){n.forEach(t=>{t[0].write(t[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ln{constructor(t){this.dtype=t.dtype,this.shape=t.shape,t.shape!=null?this.ndim=t.shape.length:this.ndim=t.ndim,this.maxNDim=t.maxNDim,this.minNDim=t.minNDim,this.axes=t.axes||{}}}class Ja{constructor(t,e,s,a,r,i,l){this.dtype=t,this.shape=e,this.sourceLayer=s,this.inputs=a,this.callArgs=r,this.outputTensorIndex=l,this.id=dA(),i!=null&&(this.originalName=pA(i),this.name=mA(this.originalName)),this.rank=e.length}}let Gj=0;class Yy{constructor(t,e){this.callArgs=e,this.id=Gj++,this.outboundLayer=t.outboundLayer,this.inboundLayers=t.inboundLayers,this.nodeIndices=t.nodeIndices,this.tensorIndices=t.tensorIndices,this.inputTensors=t.inputTensors,this.outputTensors=t.outputTensors,this.inputMasks=t.inputMasks,this.outputMasks=t.outputMasks,this.inputShapes=t.inputShapes,this.outputShapes=t.outputShapes;for(const s of t.inboundLayers)s?.outboundNodes.push(this);t.outboundLayer.inboundNodes.push(this)}getConfig(){const t=[];for(const e of this.inboundLayers)e!=null?t.push(e.name):t.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:t,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Wj=0;class Kt extends Go{constructor(t={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Wj++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let e=t.name;if(!e){const s=this.getClassName();e=Sr(s)+"_"+Xy(s)}if(this.name=e,this.trainable_=t.trainable==null?!0:t.trainable,t.inputShape!=null||t.batchInputShape!=null){let s;if(t.batchInputShape!=null)s=t.batchInputShape;else if(t.inputShape!=null){let r=null;t.batchSize!=null&&(r=t.batchSize),s=[r].concat(t.inputShape)}this.batchInputShape=s;let a=t.dtype;a==null&&(a=t.inputDType),a==null&&(a="float32"),this.dtype=a}t.weights!=null?this.initialWeights=t.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(t,e){return t.name+"_ib-"+e.toString()}getNodeAtIndex(t,e){if(this.inboundNodes.length===0)throw new ra(`The layer has never been called and thus has no defined ${e}.`);if(this.inboundNodes.length<=t)throw new K(`Asked to get ${e} at node ${t}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[t]}getInputAt(t){return ns(this.getNodeAtIndex(t,"input").inputTensors)}getOutputAt(t){return ns(this.getNodeAtIndex(t,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Ba(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Ba(`Layer ${this.name} is not connected, no input to return.`);return ns(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Ba(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Ba(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return ns(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(t=>t())}get updates(){return this._updates}get built(){return this._built}set built(t){this._built=t}get trainable(){return this.trainable_}set trainable(t){this._trainableWeights.forEach(e=>e.trainable=t),this.trainable_=t}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(t=>t.trainable):[]}set trainableWeights(t){this._trainableWeights=t}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(t=>!t.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(t){this._nonTrainableWeights=t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(t){const e=pe(t);if(this.inputSpec==null||this.inputSpec.length===0)return;const s=pe(this.inputSpec);if(e.length!==s.length)throw new K(`Layer ${this.name} expects ${s.length} inputs, but it received ${e.length} input tensors. Input received: ${t}`);for(let a=0;a<e.length;a++){const r=e[a],i=s[a];if(i==null)continue;const l=r.rank;if(i.ndim!=null&&l!==i.ndim)throw new K(`Input ${a} is incompatible with layer ${this.name}: expected ndim=${i.ndim}, found ndim=${l}`);if(i.maxNDim!=null&&l>i.maxNDim)throw new K(`Input ${a} is incompatible with layer ${this.name}: expected max_ndim=${i.maxNDim}, found ndim=${l}`);if(i.minNDim!=null&&l<i.minNDim)throw new K(`Input ${a} is incompatible with layer ${this.name}: expected min_ndim=${i.minNDim}, found ndim=${l}.`);if(i.dtype!=null&&r.dtype!==i.dtype)throw new K(`Input ${a} is incompatible with layer ${this.name} : expected dtype=${i.dtype}, found dtype=${r.dtype}.`);if(i.axes){const u=r.shape;for(const h in i.axes){const f=Number(h),p=i.axes[h],m=f>=0?u[f]:u[u.length+f];if(p!=null&&[p,null].indexOf(m)===-1)throw new K(`Input ${a} is incompatible with layer ${this.name}: expected axis ${f} of input shape to have value ${p} but got shape ${u}.`)}}if(i.shape!=null)for(let u=0;u<i.shape.length;++u){const h=i.shape[u],f=r.shape[u];if(h!=null&&f!=null&&h!==f)throw new K(`Input ${a} is incompatible with layer ${this.name}: expected shape=${i.shape}, found shape=${r.shape}.`)}}}call(t,e){return t}invokeCallHook(t,e){this._callHook!=null&&this._callHook(t,e)}setCallHook(t){this._callHook=t}clearCallHook(){this._callHook=null}apply(t,e){e=e||{},this.assertNotDisposed();const s=pe(t),a=qj(t),r=Xj(t);if(a===r)throw new K("Arguments to apply() must be all SymbolicTensors or all Tensors");return xo(this.name,()=>{if(!this.built){this.assertInputCompatibility(t);const i=[];for(const l of pe(t))i.push(l.shape);this.build(ns(i)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&r&&(this._refCount=1)}if(this.assertInputCompatibility(t),r){let i=this.call(t,e);this.supportsMasking&&this.setMaskMetadata(t,i);const l=pe(i),u=[];for(let h of l)s.indexOf(h)!==-1&&(h=h.clone()),u.push(h);if(i=ns(u),this.activityRegularizer!=null)throw new Wt("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return i}else{const i=Hj(t),l=this.computeOutputShape(i);let u;const h=jj(t);if(this.warnOnIncompatibleInputShape(Array.isArray(t)?i[0]:i),l!=null&&l.length>0&&Array.isArray(l[0])?u=l.map((f,p)=>new Ja(h,f,this,pe(t),e,this.name,p)):u=new Ja(h,l,this,pe(t),e,this.name),this.addInboundNode(t,u,null,null,i,l,e),this._refCount++,this.activityRegularizer!=null)throw new Wt("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return u}})}warnOnIncompatibleInputShape(t){if(this.batchInputShape!=null)if(t.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(t)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let e=!1;this.batchInputShape.forEach((s,a)=>{s!=null&&t[a]!=null&&t[a]!==s&&(e=!0)}),e&&console.warn(`The shape of the input tensor (${JSON.stringify(t)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Ba(`The layer ${this.name} has never been called and thus has no defined output shape.`);const t=[];for(const e of this.inboundNodes){const s=JSON.stringify(e.outputShapes);t.indexOf(s)===-1&&t.push(s)}if(t.length===1){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&e.length===1?e[0]:e}else throw new Ba(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new ra(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Dm(this.weights)}build(t){this.built=!0}getWeights(t=!1){return D1(t?this.trainableWeights:this.weights)}setWeights(t){at(()=>{const e=this.weights;if(e.length!==t.length)throw new K(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${t.length}, but the layer was expecting ${e.length} weights. Provided weights: ${t}...`);if(e.length===0)return;const s=[],a=D1(e);for(let r=0;r<a.length;++r){const i=a[r],l=e[r],u=t[r];if(!Zt(i.shape,u.shape))throw new K(`Layer weight shape ${i.shape} not compatible with provided weight shape ${u.shape}`);s.push([l,u])}oS(s)})}addWeight(t,e,s,a,r,i,l,u){if(this._addedWeightNames.indexOf(t)!==-1)throw new K(`Duplicate weight name ${t} for layer ${this.name}`);this._addedWeightNames.push(t),s==null&&(s="float32"),this.fastWeightInitDuringBuild&&(a=u!=null?u():De("zeros"));const h=a.apply(e,s),f=new Pj(h,s,t,i,l);return h.dispose(),r!=null&&this.addLoss(()=>r.apply(f.read())),i==null&&(i=!0),i?this._trainableWeights.push(f):this._nonTrainableWeights.push(f),f}setFastWeightInitDuringBuild(t){this.fastWeightInitDuringBuild=t}addLoss(t){t==null||Array.isArray(t)&&t.length===0||(t=pe(t),this._losses!==void 0&&this._losses!==null&&this.losses.push(...t))}computeOutputShape(t){return t}computeMask(t,e){if(!this.supportsMasking){if(e!=null)if(Array.isArray(e))e.forEach(s=>{if(s!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return e}setMaskMetadata(t,e,s){if(!this.supportsMasking)return;const a=this.computeMask(t,s),r=pe(e),i=pe(a);if(r.length!==i.length)throw new Error(`${this.name} outputs ${r.length} tensors but ${r.length} masks for those tensors`);for(let l=0;l<r.length;l++)r[l].kerasMask=i[l]}addInboundNode(t,e,s,a,r,i,l=null){const u=pe(t);e=pe(e),s=pe(s),a=pe(a),r=Rm(r),i=Rm(i);const h=[],f=[],p=[];for(const m of u)h.push(m.sourceLayer),f.push(m.nodeIndex),p.push(m.tensorIndex);new Yy({outboundLayer:this,inboundLayers:h,nodeIndices:f,tensorIndices:p,inputTensors:u,outputTensors:e,inputMasks:s,outputMasks:a,inputShapes:r,outputShapes:i},l);for(let m=0;m<e.length;m++)e[m].sourceLayer=this,e[m].nodeIndex=this.inboundNodes.length-1,e[m].tensorIndex=m}getConfig(){const t={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(t.batchInputShape=this.batchInputShape),this.dtype!=null&&(t.dtype=this.dtype),t}disposeWeights(){return this.weights.forEach(t=>t.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let t=0;return--this._refCount===0&&(t=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:t}}}function Hj(n){n=pe(n);const t=[];for(const e of n)t.push(e.shape);return ns(t)}function jj(n){return"float32"}function $A(n,t,e){if((t==null||e!=null&&e>0)&&(t=n.sourceLayer,e=n.nodeIndex),t.inboundNodes.length===0)return[n];{const s=t.inboundNodes[e];if(s.inboundLayers.length===0)return s.inputTensors;{const a=[];for(let r=0;r<s.inboundLayers.length;r++){const i=s.inputTensors[r],l=s.inboundLayers[r],u=s.nodeIndices[r],h=$A(i,l,u);for(const f of h)a.indexOf(f)===-1&&a.push(f)}return a}}}function qj(n){let t=!0;for(const e of pe(n))if(!(e instanceof Ja)){t=!1;break}return t}function Xj(n){let t=!0;for(const e of pe(n))if(e instanceof Ja){t=!1;break}return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Cf extends Kt{constructor(t){if(super({dtype:t.dtype,name:t.name!=null?t.name:Xy("input").toString()}),t.batchSize==null&&(t.batchSize=null),t.sparse==null&&(t.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=t.sparse,t.inputShape!=null&&t.batchInputShape!=null)throw new K("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let e=t.batchInputShape;if(e==null){if(t.inputShape==null)throw new K("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");e=[t.batchSize].concat(t.inputShape)}else if(t.batchSize!=null)throw new K("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=t.dtype||"float32";this.batchInputShape=e,this.dtype=s,this.inputSpec=[{shape:e}];const a=new Ja(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new Yy({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[e],outputShapes:[e]})}apply(t,e){throw new K(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Cf.className="InputLayer";vt(Cf);function Kj(n){if(n.batchShape==null&&n.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(n.batchShape!=null&&n.shape!=null)throw new K("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=n.batchShape;n.shape!=null&&t==null&&(t=[null].concat(n.shape));let e=n.dtype;return e==null&&(e="float32"),new Cf({batchInputShape:t,name:n.name,dtype:e,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Yj(n,t){if(n.dtype==null||n.dtype===t.dtype)return t;try{return wt(t,n.dtype)}catch{throw new K(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}class di{constructor(t){if(this.id2Value={},this.id2Mask={},this.name2Id={},t instanceof di)for(const e in t.id2Value)this.id2Value[e]=t.id2Value[e],e in t.id2Mask&&(this.id2Mask[e]=t.id2Mask[e]);else{if(t==null)return;for(const e of t)this.add(e.key,e.value)}}add(t,e,s){if(this.id2Value[t.id]==null)this.id2Value[t.id]=Yj(t,e),this.name2Id[t.name]=t.id,s!=null&&(this.id2Mask[t.id]=s);else throw new K(`Duplicate key: name=${t.name}, id=${t.id}`);return this}addFeed(t){this.add(t.key,t.value)}hasKey(t){return this.id2Value[t.id]!=null}names(){return Object.keys(this.name2Id)}getValue(t){if(t instanceof Ja){if(this.id2Value[t.id]==null)throw new K(`Nonexistent key: ${t.name}`);return this.id2Value[t.id]}else{const e=this.name2Id[t];if(e==null)throw new K(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Value[e]}}getMask(t){if(t instanceof Ja){if(this.id2Value[t.id]==null)throw new K(`Nonexistent key: ${t.name}`);return this.id2Mask[t.id]}else{const e=this.name2Id[t];if(e==null)throw new K(`Feed dict has no SymbolicTensor name: ${t}`);return this.id2Mask[e]}}disposeMasks(){this.id2Mask!=null&&qt(this.id2Mask)}}const Om=new uA,_m=new uA;function Zj(n){Om?.setMaxEntries(n),_m?.setMaxEntries(n)}function Nh(n,t,e,s){const a=e==null?!1:e.training,r=Array.isArray(n),i=r?n:[n],l=i.map(b=>b.name),u=[],h=t.names();for(const b of l)h.indexOf(b)!==-1?u.push(t.getValue(b)):u.push(null);const f=l.join(",")+"|"+t.names().sort().join(",");let p=Om.get(f),m;if(p==null){const b=Qj(i,t);p=b.sorted,m=b.recipientCounts,Om.put(f,p),_m.put(f,m)}m={},a||Object.assign(m,_m.get(f));const y=new di(t);for(let b=0;b<p.length;++b){const v=p[b],w=v.sourceLayer;if(w instanceof Cf)continue;const S=[],T=[],$=[];let C=!1;for(const L of v.inputs){const z=y.getValue(L),A=y.getMask(L);S.push(z),T.push(A),A!=null&&(C=!0),a||(m[L.name]--,m[L.name]===0&&!t.hasKey(L)&&l.indexOf(L.name)===-1&&!z.isDisposed&&L.sourceLayer.stateful!==!0&&$.push(z))}C&&(e=e||{},e.mask=T[0]);const I=pe(w.apply(S,e));let R=null;w.supportsMasking&&(R=w.computeMask(S,T));const F=tq(v),B=Array.isArray(F)?F:[F];for(let L=0;L<B.length;++L){y.hasKey(B[L])||y.add(B[L],I[L],Array.isArray(R)?R[0]:R);const z=l.indexOf(B[L].name);z!==-1&&(u[z]=I[L])}a||qt($)}return y.disposeMasks(),r?u:u[0]}function Qj(n,t){D(n!=null&&n.length>0,()=>"Expected at least one fetch, got none");let e=[],s={};if(n.length===1){const a=E$(n[0],t);e=a.sorted,s=a.recipientMap}else{const a=new Set;for(const r of n){const{sorted:i,recipientMap:l}=E$(r,t);for(const u of i)a.has(u.name)||(e.push(u),a.add(u.name));for(const u in l)s[u]==null&&(s[u]=new Set),l[u].forEach(h=>s[u].add(h))}}return{sorted:e,recipientCounts:Jj(s)}}function Jj(n){const t={};for(const e in n)t[e]=n[e].size;return t}function E$(n,t){const e=new Set,s=[],a={};for(const l of t.names())e.add(l);const r=[],i=[];for(r.push(n);r.length>0;){const l=r[r.length-1];if(e.has(l.name)){r.pop();continue}const u=i[i.length-1]===r.length-1;if(l.inputs.length===0||u)r.pop(),s.push(l),e.add(l.name),u&&i.pop();else{i.push(r.length-1);for(const h of l.inputs)a[h.name]==null&&(a[h.name]=new Set),a[h.name].add(l.name),!e.has(h.name)&&r.push(h)}}return{sorted:s,recipientMap:a}}function tq(n){let t;if(n.sourceLayer.inboundNodes.length===1)t=n.sourceLayer.output;else{let e=null;for(let s=0;s<n.sourceLayer.inboundNodes.length;++s)for(const a of n.sourceLayer.inboundNodes[s].outputTensors)if(a.id===n.id){e=s;break}t=n.sourceLayer.getOutputAt(e)}return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eq=rt();eq.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,Zj);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function lS(n,t){return at(()=>xn(kt(H(n,n),t,!0)))}class $f extends Go{getConfig(){return{}}}class kA extends $f{constructor(t){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return at(()=>{const e=lS(t,this.axis),s=os(e,0,this.maxValue);return H(t,Rt(s,xt(on(),e)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}kA.className="MaxNorm";vt(kA);class IA extends $f{constructor(t){super(),this.defaultAxis=0,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return at(()=>Rt(t,xt(on(),lS(t,this.axis))))}getConfig(){return{axis:this.axis}}}IA.className="UnitNorm";vt(IA);class EA extends $f{apply(t){return Aa(t)}}EA.className="NonNeg";vt(EA);class AA extends $f{constructor(t){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=t.minValue!=null?t.minValue:this.defaultMinValue,this.maxValue=t.maxValue!=null?t.maxValue:this.defaultMaxValue,this.rate=t.rate!=null?t.rate:this.defaultRate,this.axis=t.axis!=null?t.axis:this.defaultAxis}apply(t){return at(()=>{const e=lS(t,this.axis),s=xt(H(this.rate,os(e,this.minValue,this.maxValue)),H(1-this.rate,e));return H(t,Rt(s,xt(on(),e)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}AA.className="MinMaxNorm";vt(AA);const A$={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function un(n){return Zw(n)}function R$(n,t={}){return wf(n,zs.getMap().classNameMap,t,"constraint")}function cn(n){if(n==null)return null;if(typeof n=="string"){const e={className:n in A$?A$[n]:n,config:{}};return R$(e)}else return n instanceof $f?n:R$(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function ao(n){if(n==null)return;const t=[],e=[],s=[];for(const a in n){const r=n[a];if(typeof r!="number"){const i=r;t.push(i.data()),e.push(a),s.push(i)}}if(t.length>0){const a=await Promise.all(t);for(let r=0;r<a.length;++r)n[e[r]]=a[r][0];qt(s)}}function RA(n){if(n!=null)for(const t in n){const e=n[t];typeof e!="number"&&e.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var D$;(function(n){n[n.SILENT=0]="SILENT",n[n.VERBOSE=1]="VERBOSE"})(D$||(D$={}));const nq=125;class Vh{constructor(){this.validationData=null}setParams(t){this.params=t}async onEpochBegin(t,e){}async onEpochEnd(t,e){}async onBatchBegin(t,e){}async onBatchEnd(t,e){}async onTrainBegin(t){}async onTrainEnd(t){}setModel(t){}}class sq{constructor(t,e=10){t==null&&(t=[]),this.callbacks=t,this.queueLength=e}append(t){this.callbacks.push(t)}setParams(t){for(const e of this.callbacks)e.setParams(t)}setModel(t){for(const e of this.callbacks)e.setModel(t)}async onEpochBegin(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onEpochBegin(t,e)}async onEpochEnd(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onEpochEnd(t,e)}async onBatchBegin(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onBatchBegin(t,e)}async onBatchEnd(t,e){e==null&&(e={});for(const s of this.callbacks)await s.onBatchEnd(t,e)}async onTrainBegin(t){t==null&&(t={});for(const e of this.callbacks)await e.onTrainBegin(t)}async onTrainEnd(t){t==null&&(t={});for(const e of this.callbacks)await e.onTrainEnd(t)}}class aq extends Vh{constructor(){super()}async onEpochBegin(t){this.seen=0,this.totals={}}async onBatchEnd(t,e){e==null&&(e={});const s=e.size==null?0:e.size;this.seen+=s;for(const a in e){const r=e[a];if(typeof r=="number")this.totals.hasOwnProperty(a)||(this.totals[a]=0),this.totals[a]=this.totals[a]+r*s;else{let i;a in this.totals?i=this.totals[a]:this.totals[a]=0;const l=at(()=>xt(this.totals[a],H(r,s)));this.totals[a]=l,i?.dispose()}}}async onEpochEnd(t,e){if(e!=null)for(const s of this.params.metrics)this.totals[s]!=null&&(typeof this.totals[s]=="number"?e[s]=this.totals[s]/this.seen:at(()=>{const a=H(Rt(1,this.seen),this.totals[s]);e[s]=a,this.totals[s].dispose(),rn(e[s])}))}}class rq extends Vh{async onTrainBegin(t){this.epoch=[],this.history={}}async onEpochEnd(t,e){e==null&&(e={}),this.epoch.push(t);for(const s in e)this.history[s]==null&&(this.history[s]=[]),this.history[s].push(e[s])}async syncData(){const t=[],e=[],s=[];for(const r in this.history){const i=this.history[r];for(let l=0;l<i.length;++l)if(typeof i[l]!="number"){const u=i[l];t.push(u.data()),e.push(r),s.push(l)}}const a=await Promise.all(t);for(let r=0;r<a.length;++r)this.history[e[r]][s[r]].dispose(),this.history[e[r]][s[r]]=a[r][0]}}class iq extends Vh{constructor(t,e){if(super(),this.currentEpoch=0,this.nowFunc=t.nowFunc,this.nextFrameFunc=t.nextFrameFunc||kw,this.yieldEvery=e||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=nq),this.yieldEvery==="never"&&t.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");vm(this.yieldEvery)&&(this.maybeWait=xj(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=t.onTrainBegin,this.trainEnd=t.onTrainEnd,this.epochBegin=t.onEpochBegin,this.epochEnd=t.onEpochEnd,this.batchBegin=t.onBatchBegin,this.batchEnd=t.onBatchEnd,this.yield=t.onYield}async maybeWait(t,e,s){const a=[];this.yield!=null&&(await ao(s),a.push(this.yield(t,e,s))),a.push(this.nextFrameFunc()),await Promise.all(a)}async onEpochBegin(t,e){this.currentEpoch=t,this.epochBegin!=null&&(await ao(e),await this.epochBegin(t,e))}async onEpochEnd(t,e){const s=[];this.epochEnd!=null&&(await ao(e),s.push(this.epochEnd(t,e))),this.yieldEvery==="epoch"&&s.push(this.nextFrameFunc()),await Promise.all(s)}async onBatchBegin(t,e){this.batchBegin!=null&&(await ao(e),await this.batchBegin(t,e))}async onBatchEnd(t,e){const s=[];this.batchEnd!=null&&(await ao(e),s.push(this.batchEnd(t,e))),this.yieldEvery==="batch"?s.push(this.nextFrameFunc()):vm(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,t,e)),await Promise.all(s)}async onTrainBegin(t){this.trainBegin!=null&&(await ao(t),await this.trainBegin(t))}async onTrainEnd(t){this.trainEnd!=null&&(await ao(t),await this.trainEnd(t))}}function DA(n,t){return n==null&&(n={}),n instanceof Vh?[n]:Array.isArray(n)&&n[0]instanceof Vh?n:pe(n).map(s=>new iq(s,t))}class sa{constructor(){}static registerCallbackConstructor(t,e){D(t>=0&&Number.isInteger(t),()=>`Verbosity level is expected to be an integer >= 0, but got ${t}`),sa.checkForDuplicate(e),sa.constructors[t]==null&&(sa.constructors[t]=[]),sa.constructors[t].push(e)}static checkForDuplicate(t){for(const e in sa.constructors)sa.constructors[+e].forEach(a=>{if(a===t)throw new K("Duplicate callback constructor.")})}static clear(){sa.constructors={}}static createCallbacks(t){const e=[];for(const s in sa.constructors){const a=+s;t>=a&&e.push(...sa.constructors[a])}return e.map(s=>new s)}}sa.constructors={};function OA(n,t,e,s,a,r,i,l,u){const h=new rq,f=[new aq,...sa.createCallbacks(t)];n!=null&&f.push(...n),f.push(h);const p=new sq(f);return p.setParams({epochs:e,initialEpoch:s,samples:a,steps:r,batchSize:i,verbose:t,doValidation:l,metrics:u}),{callbackList:p,history:h}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Cr(n,t={},e=!1){return wf(n,zs.getMap().classNameMap,t,"layer",e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Fm(n,t){return at(()=>{n.dtype!=="float32"&&(n=wt(n,"float32"));const e=kt(Nf(n),t,!0),s=Vo(e.shape,on()),a=xn(er(e,s));return Rt(n,a)})}function Zy(n,t){return at(()=>Le(Nf($t(t,n)),-1))}function uS(n,t){return at(()=>Le(Je($t(t,n)),-1))}function cS(n,t){return at(()=>{const e=$t(n,t),s=os(Je(n),on(),Number.MAX_VALUE),a=Je(Rt(e,s));return H(100,Le(a,-1))})}function oq(n,t){return at(()=>{const e=os(t,on(),Number.MAX_VALUE),s=Ss(xt(1,e)),a=os(n,on(),Number.MAX_VALUE),r=Ss(xt(1,a));return Le(Nf($t(s,r)),-1)})}function lq(n,t){return at(()=>{const e=er(0,$t(1,H(n,t)));return Le(Nf(e),-1)})}function uq(n,t){return at(()=>{const e=er(0,$t(1,H(n,t)));return Le(e,-1)})}function cq(n,t){return at(()=>{const e=kt(H(n,t),-1),s=Ps(H($t(1,n),t),-1);return er(0,xt(1,$t(s,e)))})}function hq(n,t){return at(()=>{const e=Math.log(2),s=$t(t,n),a=$t(xt(s,Po(H(-2,s))),e);return Le(a,-1)})}function Ph(n,t,e=!1){return at(()=>{if(e)t=mf(t);else{const s=kt(t,t.shape.length-1,!0);t=Rt(t,s)}return t=os(t,on(),1-on()),Ee(kt(H(wt(n,"float32"),Ss(t)),t.shape.length-1))})}function Lm(n,t,e=!1){return at(()=>{const s=wt(ac(Rj(n)),"int32");t=os(t,on(),1-on());const a=t.shape,r=X(Kl(s,a[a.length-1]),a);return Ph(r,t,e)})}function dq(n,t){if(!Zt(n.shape,t.shape))throw new K(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(t.shape)}`);return at(()=>{const e=Aa(t),s=Ee(Je(t));return xt($t(e,H(t,n)),rf(ls(s)))})}function Qy(n,t){return at(()=>{let e;return e=os(t,on(),1-on()),e=Ss(Rt(e,$t(1,e))),Le(dq(n,e),-1)})}function fq(n,t){return at(()=>{const e=os(n,on(),1),s=os(t,on(),1);return kt(H(n,Ss(Rt(e,s))),-1)})}function pq(n,t){return at(()=>{const e=Ss(xt(on(),t));return Le($t(t,H(n,e)),-1)})}function _A(n,t){return at(()=>{const e=Fm(n,-1),s=Fm(t,-1),a=H(e,s);return Ee(kt(a,-1))})}const zm={meanSquaredError:Zy,meanAbsoluteError:uS,meanAbsolutePercentageError:cS,meanSquaredLogarithmicError:oq,squaredHinge:lq,hinge:uq,categoricalHinge:cq,logcosh:hq,categoricalCrossentropy:Ph,sparseCategoricalCrossentropy:Lm,binaryCrossentropy:Qy,kullbackLeiblerDivergence:fq,poisson:pq,cosineProximity:_A};function Vx(n){if(typeof n=="string"){if(n in zm)return zm[n];let t=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new K(t)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function FA(n,t){return at(()=>{const e=H(.5,Ns(t)),s=qa(hs(t,e),n.dtype);return Le(la(n,s),-1)})}function LA(n,t){return at(()=>qa(la(Co(n,-1),Co(t,-1)),"float32"))}function mq(n,t){return at(()=>wt(kt(Ca(la(n,1),la(t,1))),"float32"))}function gq(n,t){return at(()=>wt(kt(Ca(la(n,0),la(t,1))),"float32"))}function yq(n,t){return at(()=>{const e=mq(n,t),s=gq(n,t),a=xt(e,s);return wt(In(hs(a,0),Rt(e,a),0),"float32")})}function bq(n,t){return Qy(n,t)}function xq(n,t){return n.rank===t.rank&&(n=Fi(n,[n.rank-1])),t=Co(t,-1),t.dtype!==n.dtype&&(t=wt(t,n.dtype)),wt(la(n,t),"float32")}const vq=Zy,wq=Zy,Sq=uS,Nq=uS,Tq=cS,Cq=cS,zA=Ph,$q=_A,MA=Lm,Mm={binaryAccuracy:FA,categoricalAccuracy:LA,precision:yq,categoricalCrossentropy:zA,sparseCategoricalCrossentropy:MA,mse:vq,MSE:wq,mae:Sq,MAE:Nq,mape:Tq,MAPE:Cq,cosine:$q};function kq(n){if(typeof n=="string"&&n in Mm)return Mm[n];if(typeof n!="string"&&n!=null)return n;throw new K(`Unknown metric ${n}`)}function Qp(n){if(Va(n!==null,`Unknown LossOrMetricFn ${n}`),typeof n=="string")return n;{let t;for(const e of Object.keys(zm))if(zm[e]===n){t=e;break}if(t!==void 0)return t;for(const e of Object.keys(Mm))if(Mm[e]===n){t=e;break}return t!==void 0?t:n.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Iq(n){const t={Adagrad:()=>oo.adagrad(.01),Adadelta:()=>oo.adadelta(1,.95,on()),Adam:()=>oo.adam(.001,.9,.999,on()),Adamax:()=>oo.adamax(.002,.9,.999,on(),0),RMSProp:()=>oo.rmsprop(.001,.9,0,on()),SGD:()=>oo.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,n in t)return t[n]();throw new K(`Unknown Optimizer ${n}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const O$=1*1024*1024;function _$(n,t,e=!1){if(n==null||typeof n!="object"||Object.getPrototypeOf(n)!==Object.prototype||!O1(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(e){const s=JSON.stringify(n);s.length>O$&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${O$}.`)}}function O1(n){if(n===null)return!0;if(typeof n=="object")if(Object.getPrototypeOf(n)===Object.prototype){const t=Object.keys(n);for(const e of t)if(typeof e!="string"||!O1(n[e]))return!1;return!0}else if(Array.isArray(n)){for(const t of n)if(!O1(t))return!1;return!0}else return!1;else{const t=typeof n;return t==="string"||t==="number"||t==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Eq(n,t,e,s=console.log){const a=Rq(n),r=["Layer (type)","Input Shape","Output shape","Param #"];a?(t=t||90,e=e||[.32,.61,.89,1]):(t=t||115,e=e||[.24,.48,.7,.8,1]),e[e.length-1]<=1&&(e=e.map(f=>Math.floor(t*f)));let i;if(!a){r.push("Receives inputs"),i=[];for(const f in n.nodesByDepth)i.push(...n.nodesByDepth[f])}s("_".repeat(t)),Bm(r,e,s),s("=".repeat(t));const l=n.layers;for(let f=0;f<l.length;++f)a?Dq(l[f],e,s):Oq(l[f],e,i,s),s((f===l.length-1?"=":"_").repeat(t));n.checkTrainableWeightsConsistency();const u=Aq(n),h=Dm(n.nonTrainableWeights);s(`Total params: ${u+h}`),s(`Trainable params: ${u}`),s(`Non-trainable params: ${h}`),s("_".repeat(t))}function Aq(n){let t;return n.collectedTrainableWeights!=null?t=Dm(n.collectedTrainableWeights):t=Dm(n.trainableWeights),t}function Rq(n){let t=!0;const e=[],s=[];for(const a in n.nodesByDepth)e.push(n.nodesByDepth[a]);for(const a of e){if(a.length>1||a.length===1&&a[0].inboundLayers.length>1){t=!1;break}s.push(...a)}if(t)for(const a of n.layers){let r=!1;for(const i of a.inboundNodes)if(s.indexOf(i)!==-1)if(r){t=!1;break}else r=!0;if(!t)break}return t}function Bm(n,t,e=console.log){let s="";for(let a=0;a<n.length;++a)a>0&&(s=s.slice(0,s.length-1)+" "),s+=n[a],s=s.slice(0,t[a]),s+=" ".repeat(t[a]-s.length);e(s)}function Dq(n,t,e){let s,a;try{a=n.inboundNodes.map(u=>JSON.stringify(u.inputShapes)).join(",")}catch{a="multiple"}try{s=JSON.stringify(n.outputShape)}catch{s="multiple"}const r=n.name,i=n.getClassName(),l=[`${r} (${i})`,a,s,n.countParams().toString()];Bm(l,t,e)}function Oq(n,t,e,s){let a,r;try{r=n.inboundNodes.map(p=>JSON.stringify(p.inputShapes)).join(",")}catch{r="multiple"}try{a=JSON.stringify(n.outputShape)}catch{a="multiple"}const i=[];for(const p of n.inboundNodes)if(!(e!=null&&e.length>0&&e.indexOf(p)===-1))for(let m=0;m<p.inboundLayers.length;++m){const y=p.inboundLayers[m].name,b=p.nodeIndices[m],v=p.tensorIndices[m];i.push(`${y}[${b}][${v}]`)}const l=n.name,u=n.getClassName(),h=i.length===0?"":i[0],f=[`${l} (${u})`,r,a,n.countParams().toString(),h];Bm(f,t,s);for(let p=1;p<i.length;++p)Bm(["","","","",i[p]],t,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function BA(n,t,e){return(n==="inboundNodes"||n==="outputLayers"||n==="inputLayers")&&t===0&&typeof e=="string"}function _1(n,t){if(n===null)return null;if(typeof n=="string")return ho(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const e=[],s=n.length;for(let a=0;a<s;++a){const r=n[a];BA(t,a,r)?e.push(r):e.push(_1(r,t))}return e}else{const e={};for(const s of Object.keys(n)){const a=n[s];if(s==="name"&&typeof a=="string")e[s]=a;else{const r=ho(s);e[r]=_1(a,r)}}return e}}function F1(n,t){if(n==null)return null;if(typeof n=="string")return Sr(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const e=[],s=n.length;for(let a=0;a<s;++a){const r=n[a];BA(t,a,r)?e.push(r):e.push(F1(r,t))}return e}else{const e={};for(const s of Object.keys(n)){const a=n[s],r=Sr(s);(s==="name"||s==="className")&&typeof a=="string"?e[r]=a:e[r]=F1(a,s)}return e}}/** @license See the LICENSE file. */const VA="4.22.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const _q=n=>{const t=Object.keys(n);if(t.length===0)return!1;const e=t[0].split("/");return!isNaN(parseInt(e[e.length-1],10))};class ya extends Kt{constructor(t){if(super({}),this.containerNodes=new Set,this.name=t.name,this.name==null){const T=this.getClassName().toLowerCase();this.name=Xy(T)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(t.inputs)?this.inputs=t.inputs.slice():this.inputs=[t.inputs],Array.isArray(t.outputs)?this.outputs=t.outputs.slice():this.outputs=[t.outputs],mi(this.inputs).length!==this.inputs.length)throw new K(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(T=>T.name)}`);mi(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(T=>T.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const T of this.outputs){const $=T.sourceLayer,C=T.nodeIndex,I=T.tensorIndex;this.outputLayers.push($),this.outputLayersNodeIndices.push(C),this.outputLayersTensorIndices.push(I)}for(const T of this.inputs){const $=T.sourceLayer,C=T.nodeIndex,I=T.tensorIndex;Va(C===0,"input layer has >1 nodes"),Va(I===0,"input layer has >1 tensors"),this.inputLayers.push($),this.inputLayersNodeIndices.push(C),this.inputLayersTensorIndices.push(I)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let T=0;T<this.inputLayers.length;T++){const $=this.inputLayers[T];if(!($ instanceof Cf))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${t.inputs}. Input ${T} (0-based) originates from layer type ${$.getClassName()}.`);this.inputNames.push($.name),this.feedInputShapes.push($.batchInputShape),this.feedInputNames.push($.name)}for(const T of this.outputLayers)this.outputNames.push(T.name);this.internalInputShapes=this.inputs.map(T=>T.shape),this.internalOutputShapes=this.outputs.map(T=>T.shape);const e={},s={},a={},r={},i={},l=[],u=(T,$,C,I,R,F)=>{(I==null||R==null||F==null)&&(I=T.sourceLayer,R=T.nodeIndex,F=T.tensorIndex);const B=I.inboundNodes[R];if(C.indexOf(B)!==-1)throw new ra(`The tensor ${T.name} at layer "${I.name}" is part of a cycle.`);if($.indexOf(B)!==-1)return;this.containerNodes.add(ya.nodeKey(I,R)),I.id in i||(i[I.id]=Object.keys(i).length),C.indexOf(B)===-1&&C.push(B);const L=B.inboundLayers.length;for(let z=0;z<L;z++){const A=B.inputTensors[z],G=B.inboundLayers[z],Q=B.nodeIndices[z],tt=B.tensorIndices[z];u(A,$,C,G,Q,tt)}for($.push(B);C.indexOf(B)>=0;)C.splice(C.indexOf(B),1);l.push(B)},h=[],f=[];for(const T of this.outputs)u(T,h,f);const p=l.slice().reverse();for(const T of p){s[T.id]=T,T.id in e||(e[T.id]=0);let $=e[T.id];const C=a[T.outboundLayer.id]==null?0:a[T.outboundLayer.id];$=Math.max($,C),a[T.outboundLayer.id]=$,r[T.outboundLayer.id]=T.outboundLayer,e[T.id]=$;for(let I=0;I<T.inboundLayers.length;I++){const R=T.inboundLayers[I],F=T.nodeIndices[I],B=R.inboundNodes[F],L=e[B.id]==null?0:e[B.id];e[B.id]=Math.max($+1,L),s[B.id]=B}}const m={};for(const T in e){const $=e[T];$ in m||(m[$]=[]),m[$].push(s[T])}const y={};for(const T in a){const $=a[T];$ in y||(y[$]=[]),y[$].push(r[T])}let b=Object.keys(y).map(T=>parseInt(T,10)).sort(Kp);this.layers=[];for(const T of b){const $=y[T];$.sort((C,I)=>{const R=i[C.id],F=i[I.id];return R<F?-1:R>F?1:0});for(const C of $)C instanceof ya&&this.internalContainerRefs.push(C),this.layers.push(C)}this.layersByDepth=y,b=Object.keys(m).map(T=>parseInt(T,10)).sort(Kp);const v=this.inputs.slice(),w=[];for(const T of b)for(const $ of m[T]){const C=$.outboundLayer;if(C!=null){for(const I of $.inputTensors)if(v.indexOf(I)===-1)throw new ra(`Graph disconnected: cannot obtain value for tensor ${I} at layer "${C.name}". The following previous layers were accessed without issue: ${w}`);for(const I of $.outputTensors)v.push(I);w.push(C.name)}}this.nodesByDepth=m;const S=this.layers.map(T=>T.name);for(const T of S){const $=S.filter(C=>C===T).length;if($!==1)throw new ra(`The name "${T}" is used ${$} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(S))}this.outboundNodes=[],this.inboundNodes=[],new Yy({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(T=>null),outputMasks:this.outputs.map(T=>null),inputShapes:this.inputs.map(T=>T.shape),outputShapes:this.outputs.map(T=>T.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const t={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const e of this.layers)t.numDisposedVariables+=e.dispose().numDisposedVariables;for(const e of this.internalContainerRefs)t.numDisposedVariables+=e.dispose().numDisposedVariables}return t.refCountAfterDispose=this._refCount,t}get trainable(){return this.trainable_}set trainable(t){this.layers.forEach(e=>{e._trainableWeights.forEach(s=>s.trainable=t)}),this.trainable_=t}get trainableWeights(){if(this._trainableWeights.length>0)throw new K("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let t=[];for(const e of this.layers)t=t.concat(e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.layers)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const s of this.layers)e.push(...s.trainableWeights);return e.concat(t)}return t}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(t,e=!0){const s={};let a=0;const r=_q(t);r&&this.parseWeights(t);for(const l of this.layers)for(const[u,h]of l.weights.entries()){const f=r?`${h.name.split("/").slice(0,-1).join("/")+"/"}${u}`:h.originalName;if(s[f]!=null)throw new K(`Duplicate weight name: ${f}`);s[f]=h,a++}const i=[];for(const l in t){let u=l;if(s[l]==null){const h=l.split("/");u=h.slice(0,-2).concat([h[h.length-1]]).join("/")}if(s[u]!=null)i.push([s[u],t[l]]);else if(e)throw new K(`Provided weight data has no target variable: ${l}`);delete s[u]}if(e){const l=[];for(const u in s)l.push(u);if(l.length>0)throw new K(`${l.length} of ${a} weights are not set: ${l}`)}oS(i)}parseWeights(t){for(const e in Object.keys(t)){const s=e.split("/"),a=["vars","layer_checkpoint_dependencies"],r=s.map(i=>i.startsWith("_")?i.slice(1):i).filter(i=>!a.includes(i)).join("/");r!==e&&(t[r]=t[e],delete t[e])}}updatedConfig(){const t=this.getConfig(),e={};return e.className=this.getClassName(),e.config=t,e.kerasVersion=`tfjs-layers ${VA}`,e.backend="TensorFlow.js",e}toJSON(t,e=!0){const s=F1(this.updatedConfig());return e?JSON.stringify(s):s}call(t,e){return at(()=>{t=pe(t);const s=new di;for(let a=0;a<this.inputs.length;++a)s.add(this.inputs[a],t[a]);return Nh(this.outputs,s,e)})}computeMask(t,e){return at(()=>{t=pe(t);let s;return e==null?s=Do(null,t.length):s=pe(e),this.runInternalGraph(t,s)[1]})}computeOutputShape(t){const e=Rm(t);if(e.length!==this.inputLayers.length)throw new K(`Invalid inputShape argument ${t}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let l=0;l<e.length;l++){const u=this.inputLayers[l],h=e[l],f=u.name+"_0_0";s[f]=h}const a=Object.keys(this.nodesByDepth).map(l=>parseInt(l,10)).sort(Kp);if(a.length>1)for(const l of a){const u=this.nodesByDepth[l];for(const h of u){const f=h.outboundLayer;if(this.inputLayers.map(v=>v.id).indexOf(f.id)!==-1)continue;const p=[];for(let v=0;v<h.inboundLayers.length;v++){const w=h.inboundLayers[v],S=h.nodeIndices[v],T=h.tensorIndices[v],$=`${w.name}_${S}_${T}`,C=s[$];p.push(C)}const m=f.computeOutputShape(ns(p)),y=Rm(m),b=f.inboundNodes.indexOf(h);for(let v=0;v<y.length;v++){const w=`${f.name}_${b}_${v}`;s[w]=y[v]}}}const r=[],i=[];for(let l=0;l<this.outputLayers.length;l++){const u=this.outputLayers[l],h=this.outputLayersNodeIndices[l],f=this.outputLayersTensorIndices[l],p=`${u.name}_${h}_${f}`;i.push(p)}for(let l=0;l<i.length;l++){const u=i[l];Va(u in s),r.push(s[u])}return ns(r)}runInternalGraph(t,e){e==null&&(e=Do(null,t.length));const s={};for(let u=0;u<this.inputs.length;++u){const h=this.inputs[u],f=t[u],p=e[u];s[h.id]=[f,p]}const a=Object.keys(this.nodesByDepth).map(u=>parseInt(u,10)).sort(Kp);for(const u of a){const h=this.nodesByDepth[u];for(const f of h){const p=f.outboundLayer,m=f.inputTensors,y=f.outputTensors,b=new Array;for(const v of m)v.id in s&&b.push(s[v.id]);if(b.length===m.length){let v={},w,S,T,$;if(f.callArgs!=null&&(v=f.callArgs),b.length===1){const[C,I]=b[0];v.mask==null&&(v.mask=I),T=pe(p.call(C,v)),$=pe(p.computeMask(C,I)),w=[C],S=[I]}else w=b.map(C=>C[0]),S=b.map(C=>C[1]),v.mask==null&&(v.mask=S),T=pe(p.call(w,v)),$=pe(p.computeMask(w,S));if(p.activityRegularizer)throw new Wt("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let C=0;C<y.length;++C){const I=y[C],R=T[C],F=$[C];s[I.id]=[R,F]}}}}const r=[],i=[],l=[];for(const u of this.outputs){Va(u.id in s,`Could not compute output ${u.name} : ${u.id}`);const[h,f]=s[u.id];l.push(h.shape),r.push(h),i.push(f)}return[r,i,l]}buildNodeConversionMap(t){const e={};let s;for(const a of this.layers){s=a instanceof ya?1:0;for(let r=0;r<a.inboundNodes.length;r++){const i=ya.nodeKey(a,r);this.containerNodes.has(i)&&(e[i]=s,s+=1)}}return e}getLayer(t,e){if(e!=null)return this.findLayer(e);if(t==null)throw new K("Provide either a layer name or layer index");if(typeof t=="number")return this.findLayer(t);for(const s of this.layers)if(s.name===t)return s;throw new K(`No such layer: ${t}`)}findLayer(t){if(this.layers.length<=t)throw new K(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}calculateLosses(){return at(()=>{const t=[];for(const e of this.layers)for(let s=0;s<e.inboundNodes.length;++s){const a=ya.nodeKey(e,s);this.containerNodes.has(a)&&t.push(...e.calculateLosses())}return t})}getConfig(){const t={name:this.name},e=this.buildNodeConversionMap(this.layers),s=[];for(const i of this.layers){const l=i.getClassName(),u=i.getConfig(),h=[];for(let p=0;p<i.inboundNodes.length;p++){const m=i.inboundNodes[p],y=ya.nodeKey(i,p);let b={};if(this.containerNodes.has(y)){if(m.callArgs)try{JSON.stringify(m.callArgs),b=m.callArgs}catch{console.warn(`Layer ${i.name} was passed non-serializable keyword arguments: ${m.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),b={}}if(m.inboundLayers.length>0){const v=[];for(let w=0;w<m.inboundLayers.length;w++){const S=m.inboundLayers[w],T=m.nodeIndices[w],$=m.tensorIndices[w],C=ya.nodeKey(S,T);let I=e[C];I==null&&(I=0),v.push([S.name,I,$,b])}h.push(v)}}}const f={};f.name=i.name,f.className=l,f.config=u,f.inboundNodes=h,s.push(f)}t.layers=s;const a=[];for(let i=0;i<this.inputLayers.length;i++){const l=this.inputLayers[i],u=this.inputLayersNodeIndices[i],h=ya.nodeKey(l,u);if(!this.containerNodes.has(h))continue;let f=e[h];f==null&&(f=0);const p=this.inputLayersTensorIndices[i];a.push([l.name,f,p])}t.inputLayers=a;const r=[];for(let i=0;i<this.outputLayers.length;i++){const l=this.outputLayers[i],u=this.outputLayersNodeIndices[i],h=ya.nodeKey(l,u);if(!this.containerNodes.has(h))continue;let f=e[h];f==null&&(f=0);const p=this.outputLayersTensorIndices[i];r.push([l.name,f,p])}return t.outputLayers=r,t}static fromConfig(t,e,s={},a=!1){const r={},i={};function l(w,S){w.name in i?i[w.name].push(S):i[w.name]=[S]}function u(w,S){const T=[];let $;for(const C of S){const I=C[0],R=C[1],F=C[2];if($=C[3]==null?{}:C[3],!(I in r)){l(w,S);return}const B=r[I];if(B.inboundNodes.length<=R){l(w,S);return}const L=B.inboundNodes[R];T.push(L.outputTensors[F])}T.length>0&&w.apply(ns(T),$)}function h(w){const S=w.name,T=Cr(w,e.customObjects!=null?e.customObjects:{});T.setFastWeightInitDuringBuild(a),r[S]=T,w.inboundNodes.forEach(C=>{if(!(C instanceof Array))throw new K(`Corrupted configuration, expected array for nodeData: ${C}`);l(T,C)})}const f=e.name,p=e.layers;for(const w of p)h(w);for(;!bj(i);)for(const w of p){const S=r[w.name];if(S.name in i){const T=i[S.name];delete i[S.name];for(const $ of T)u(S,$)}}const m=[],y=[],b=e.inputLayers;for(const w of b){const S=w[0],T=w[1],$=w[2];Va(S in r);const I=r[S].inboundNodes[T].outputTensors;m.push(I[$])}const v=e.outputLayers;for(const w of v){const S=w[0],T=w[1],$=w[2];Va(S in r);const I=r[S].inboundNodes[T].outputTensors;y.push(I[$])}return new t({inputs:m,outputs:y,name:f})}get stateful(){if(this._stateful)throw new K("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const t of this.layers)if(t.stateful)return!0;return!1}resetStates(){at(()=>{this.layers.forEach(t=>{t.stateful&&t.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Fq(n,t,e){const s=t.length;if(n==null||Array.isArray(n)&&n.length===0)return t.map(a=>null);if(s===1)return Array.isArray(n)&&n.length===1?n:typeof n=="object"&&t[0]in n?[n[t[0]]]:[n];if(Array.isArray(n)){if(n.length!==s)throw new Error(`Provided ${e} is an array of ${n.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return n}else if(typeof n=="object"&&Object.keys(n).length>0&&typeof n[Object.keys(n)[0]]=="object"){const a=[];return t.forEach(r=>{r in n?a.push(n[r]):a.push(null)}),a}else throw new Error(`The model has multiple (${s}) outputs, so ${e} must be either an array with ${s} elements or an object with ${t} keys. Provided ${e} not understood: ${JSON.stringify(n)}`)}function PA(n,t){return Fq(n,t,"classWeight")}async function UA(n,t,e,s){if(e!=null){const a=at(()=>{if(n.shape.length===1)return Ha(n);if(n.shape.length===2){if(n.shape[1]>1)return Co(n,1);if(n.shape[1]===1)return X(n,[n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await a.data());qt(a);const i=[];return r.forEach(l=>{if(e[l]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${l} exists in the data but not in classWeight`);i.push(e[l])}),Vn(i,"float32")}else return null}function Lq(n,t){return H(n,t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const zq=32;function GA(n,t){let e,s;const a=t;e=a.xs,s=a.ys,D(e!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);const r=F$("input",n.inputNames,e),i=F$("output",n.outputNames,s),l=r[0].shape[0];D(r.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${r.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),D(i.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let u=0;u<r.length;u++)D(r[u].shape[0]===l,()=>`Batch size mismatch: input ${n.inputNames[u]} has ${r[u].shape[0]}; expected  ${l} based on input ${n.inputNames[0]}.`);for(let u=0;u<i.length;u++)D(i[u].shape[0]===l,()=>`Batch size mismatch: output ${n.outputNames[u]} has ${i[u].shape[0]}; expected  ${l} based on input ${n.inputNames[0]}.`);return{xs:r,ys:i}}function F$(n,t,e){if(e instanceof fe)return[e];if(Array.isArray(e))return D(e.length===t.length,()=>`Received an array of ${e.length} Tensors, but expected ${t.length} to match the ${n} keys ${t}.`),e;{const s=[];for(const a of t){if(e[a]==null)throw new K(`The feature data generated by the dataset lacks the required ${n} key '${a}'.`);s.push(e[a])}return s}}function Mq(n){if(n.length===3)throw new Wt("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}async function Bq(n,t,e){const s=e.batchesPerEpoch!=null;if(D(n.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),D(e!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),D(e.epochs!=null&&e.epochs>0&&Number.isInteger(e.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${e.epochs}`),D(!s||e.batchesPerEpoch>0&&Number.isInteger(e.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${e.batchesPerEpoch}`),D(e.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const a=e.validationData!=null;let r,i;if(a)if(L$(e.validationData))D(e.validationBatches==null||e.validationBatches>0&&Number.isInteger(e.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${e.validationBatches}`);else{const w=Mq(e.validationData);r=w.xs,i=w.ys}const l=n.makeTrainFunction(),u=n.getDedupedMetricsNames();let h;a?h=u.slice().concat(u.map(w=>"val_"+w)):h=u.slice();const f=DA(e.callbacks,e.yieldEvery),p=e.verbose==null?1:e.verbose,{callbackList:m,history:y}=OA(f,p,e.epochs,null,null,Vq(t,e),null,a,h);m.setModel(n),n.history=y,await m.onTrainBegin(),n.stopTraining_=!1;let b=e.initialEpoch==null?0:e.initialEpoch,v=await t.iterator();for(;b<e.epochs;){const w={};await m.onEpochBegin(b);let S=0,T=0;for(s||(v=await t.iterator());!s||S<e.batchesPerEpoch;){const $=await v.next();if(s&&$.done){console.warn(`You provided \`batchesPerEpoch\` as ${e.batchesPerEpoch}, but your dataset iterator ran out of data after ${S} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${e.batchesPerEpoch*e.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if($.value!=null){const{xs:C,ys:I}=GA(n,$.value),R={};R.batch=T,R.size=C[0].shape[0],await m.onBatchBegin(T,R);const F=[];if(e.classWeight!=null){const z=PA(e.classWeight,n.outputNames);for(let A=0;A<z.length;++A)F.push(await UA(I[A],null,z[A]))}const B=C.concat(I).concat(F),L=l(B);qt(B);for(let z=0;z<u.length;++z){const A=u[z],G=L[z];R[A]=G,rn(G)}await m.onBatchEnd(T,R),RA(R),T++,S++}if(s?S>=e.batchesPerEpoch:$.done){if(a){let C;L$(e.validationData)?C=pe(await n.evaluateDataset(e.validationData,{batches:e.validationBatches})):C=pe(n.evaluate(r,i,{batchSize:e.validationBatchSize==null?zq:e.validationBatchSize,verbose:0}));for(let I=0;I<n.metricsNames.length;++I)w[`val_${n.metricsNames[I]}`]=C[I]}break}if(n.stopTraining_)break}if(await m.onEpochEnd(b,w),b++,n.stopTraining_)break}return await m.onTrainEnd(),await n.history.syncData(),n.history}finally{n.isTraining=!1}}function Vq(n,t){let e=null;return t.batchesPerEpoch!=null?e=t.batchesPerEpoch:Number.isFinite(n.size)&&(e=n.size),e}function L$(n){return typeof n.iterator=="function"}function Pq(n){return typeof n.next=="function"}async function Uq(n,t,e){e=e||{};const s=e.batches!=null,a=n.testFunction;let r=[];if(e.verbose>0)throw new Wt("Verbose mode is not implemented yet.");D(!s||e.batches>0&&Number.isInteger(e.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(e.batches)}`);const i=Pq(t)?t:await t.iterator();let l=0,u=0;for(;!s||u<e.batches;){const h=await i.next();if(r=at(()=>{if(h.value){const{xs:f,ys:p}=GA(n,h.value),m=f.concat(p),y=at(()=>a(m));if(qt(m),u===0)for(let v=0;v<y.length;++v)r.push(_t(0));const b=m[0].shape[0];for(let v=0;v<y.length;++v){const w=y[v],S=r[v];r[v]=at(()=>xt(r[v],H(b,w))),u>0&&qt(S)}qt(y),l+=b,++u}return r}),h.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${e.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let h=0;h<r.length;++h){const f=r[h];r[h]=Rt(r[h],l),qt(f)}return ns(r)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Px(n){D(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function bh(n,t,e){return n==null?[null]:Array.isArray(n)?n.map(s=>vo(s,t,e-t)):vo(n,t,e-t)}function L1(n,t){return at(()=>n==null?null:Array.isArray(n)?n.map(e=>L1(e,t)):yA(n,t.dtype==="int32"?t:wt(t,"int32")))}function Ux(n,t){const e=[];let s=0,a=null;for(;s<n;)a=s+t,a>=n&&(a=n),e.push([s,a]),s=a;return e}function WA(n){const t=[];n instanceof fe&&(n=[n]);for(let e=0;e<n.length;++e){const s=n[e];if(s.rank===1)t.push(Sf(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function ga(n,t){if(n==null)return;const e=[];if(t instanceof fe)e.push(t.id);else if(Array.isArray(t))t.forEach(a=>e.push(a.id));else if(t!=null)for(const a in t){const r=t[a];e.push(r.id)}const s=[];if(n instanceof fe)e.indexOf(n.id)===-1&&s.push(n);else if(Array.isArray(n))n.forEach(a=>{e.indexOf(a.id)===-1&&s.push(a)});else if(n!=null)for(const a in n){const r=n[a];e.indexOf(r.id)===-1&&s.push(r)}s.forEach(a=>{a.isDisposed||a.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Gq(n){return n instanceof fe}function z1(n){return Array.isArray(n)}function z$(n){return!Gq(n)&&!z1(n)}function M$(n,t,e,s=!0,a=""){if(t==null||t.length===0){if(n!=null){let i=!1;if(z1(n)&&n.length>0)i=!0;else if(z$(n)){for(const l in n)if(n.hasOwnProperty(l)){i=!0;break}}else i=!0;if(i)throw new K(`Error when checking model ${a} expected no data, but got ${n}`)}return[]}if(n==null)return t.map(i=>null);let r;if(z$(n)){n=n,r=[];for(const i of t){if(n[i]==null)throw new K(`No data provided for "${i}". Need data for each key in: ${t}`);r.push(n[i])}}else if(z1(n)){if(n=n,n.length!==t.length)throw new K(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);r=n}else{if(n=n,t.length>1)throw new K(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);r=[n]}if(r=WA(r),e!=null)for(let i=0;i<t.length;++i){if(e[i]==null)continue;const l=r[i];if(l.shape.length!==e[i].length)throw new K(`Error when checking ${a}: expected ${t[i]} to have ${e[i].length} dimension(s). but got array with shape ${l.shape}`);for(let u=0;u<e[i].length;++u){if(u===0&&!s)continue;const h=l.shape[u],f=e[i][u];if(f!=null&&f>=0&&h!==f)throw new K(`${a} expected a batch of elements where each example has shape [${e[i].slice(1,e[i].length)}] (i.e.,tensor shape [*,${e[i].slice(1,e[i].length)}]) but the ${a} received an input with ${l.shape[0]} examples, each with shape [${l.shape.slice(1,l.shape.length)}] (tensor shape [${l.shape}])`)}}return r}function Wq(n,t,e){const s=mi(n.map(r=>r.shape[0]));s.sort();const a=mi(t.map(r=>r.shape[0]));if(a.sort(),s.length>1)throw new K(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(r=>r.shape))}`);if(a.length>1)throw new K(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(r=>r.shape))}`);if(s.length>0&&a.length>0&&!Zt(s,a))throw new K(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${a[0]} target sample(s).`)}function Hq(n,t,e){const s=[Zy,Qy,Ph];for(let a=0;a<n.length;++a){const r=n[a],i=t[a],l=e[a];if(i!=null){if(i===Ph&&r.shape[r.shape.length-1]===1)throw new K(`You are passing a target array of shape ${r.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(i)!==-1){const u=r.shape.slice(1),h=l.slice(1);for(let f=0;f<u.length;++f){const p=u[f],m=h[f];if(m!=null&&p!==m)throw new K(`A target Tensor with shape ${r.shape} was passed for an output of shape ${l}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function B$(n,t,e,s=!0,a=""){let r;if(Array.isArray(n)){if(n.length!==t.length)throw new K(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${n.length} Tensors(s).`);r=n}else{if(t.length>1)throw new K(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);r=[n]}if(e!=null)for(let i=0;i<t.length;++i){if(e[i]==null)continue;const l=r[i];if(l.shape.length!==e[i].length)throw new K(`Error when checking ${a}: expected ${t[i]} to have ${e[i].length} dimension(s), but got array with shape ${JSON.stringify(l.shape)}`);for(let u=0;u<e[i].length;++u){if(u===0&&!s)continue;const h=l.shape[u],f=e[i][u];if(f!=null&&f!==h)throw new K(`Error when checking ${a}: expected ${t[i]} to have shape ${JSON.stringify(e[i])} but got array with shape ${JSON.stringify(l.shape)}.`)}}}function jq(n,t){if(n==null||Array.isArray(n)&&n.length===0)return t.map(s=>[]);let e;if(typeof n=="string"||typeof n=="function")e=[n];else if(Array.isArray(n)||typeof n=="object")e=n;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);if(Array.isArray(e))return t.map(s=>e);{const s=[];for(const a of t){let r=e.hasOwnProperty(a)?e[a]:[];Array.isArray(r)||(r=[r]),s.push(r)}return s}}const qq="layers-model";class Gl extends ya{constructor(t){super(t),this.isTraining=!1}summary(t,e,s=console.log){if(!this.built)throw new K("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");Eq(this,t,e,s)}compile(t){if(t.loss==null&&(t.loss=[]),this.loss=t.loss,typeof t.optimizer=="string")this.optimizer_=Iq(t.optimizer),this.isOptimizerOwned=!0;else{if(!(t.optimizer instanceof Mr))throw new K("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=t.optimizer,this.isOptimizerOwned=!1}let e=[];if(!Array.isArray(t.loss)&&typeof t.loss!="string"&&typeof t.loss!="function"){t.loss=t.loss;for(const i in t.loss)if(this.outputNames.indexOf(i)===-1)throw new K(`Unknown entry in loss dictionary: "${i}". Only expected the following keys: ${this.outputNames}`);for(const i of this.outputNames)t.loss[i]==null&&console.warn(`Output "${i}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${i} during training`),e.push(Vx(t.loss[i]))}else if(Array.isArray(t.loss)){if(t.loss.length!==this.outputs.length)throw new K(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${t.loss}.`);e=t.loss.map(l=>Vx(l))}else{const i=Vx(t.loss);this.outputs.forEach(l=>{e.push(i)})}this.lossFunctions=e,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let i=0;i<this.outputs.length;++i){const l=this.internalOutputShapes[i],u=this.outputNames[i];this.feedOutputNames.push(u),this.feedOutputShapes.push(l),this.feedLossFns.push(this.lossFunctions[i])}const s=[];this.metrics=t.metrics,this.metricsNames=["loss"],this.metricsTensors=[],xo("loss",()=>{for(let i=0;i<this.outputs.length;++i){if(s.indexOf(i)!==-1)continue;const l=this.lossFunctions[i];this.outputs.length>1&&(this.metricsTensors.push([l,i]),this.metricsNames.push(this.outputNames[i]+"_loss"))}});const a=jq(t.metrics,this.outputNames),r=(i,l,u)=>{this.outputNames.length>1&&(l=this.outputNames[i]+"_"+l),this.metricsNames.push(l),this.metricsTensors.push([u,i])};xo("metric",()=>{for(let i=0;i<this.outputs.length;++i){if(s.indexOf(i)!==-1)continue;const l=a[i];(h=>{const f="";let p,m,y;for(const b of h){if(typeof b=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(b)!==-1){const w=this.internalOutputShapes[i];w[w.length-1]===1||this.lossFunctions[i]===Qy?["accuracy","acc"].indexOf(b)!==-1?m=FA:["crossentropy","ce"].indexOf(b)!==-1&&(m=bq):this.lossFunctions[i]===Lm?["accuracy","acc"].indexOf(b)!==-1?m=xq:["crossentropy","ce"].indexOf(b)!==-1&&(m=MA):["accuracy","acc"].indexOf(b)!==-1?m=LA:["crossentropy","ce"].indexOf(b)!==-1&&(m=zA);let S;["accuracy","acc"].indexOf(b)!==-1?S="acc":["crossentropy","ce"].indexOf(b)!==-1&&(S="ce"),y=m,p=f+S}else y=kq(b),p=f+Qp(b);let v;xo(p,()=>{v=y}),r(i,p,v)}})(l)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(t,e,s={}){const a=s.batchSize==null?32:s.batchSize;Px(a);const i=this.standardizeUserDataXY(t,e,!0,a);try{const l=i[0].concat(i[1]);this.makeTestFunction();const u=this.testFunction,h=this.testLoop(u,l,a,s.verbose,s.steps);return ns(h)}finally{ga(i[0],t),ga(i[1],e)}}async evaluateDataset(t,e){return this.makeTestFunction(),Uq(this,t,e)}checkNumSamples(t,e,s,a="steps"){let r;if(s!=null){if(r=null,e!=null)throw new K(`If ${a} is set, batchSize must be null or undefined.Got batchSize = ${e}`)}else if(t!=null)Array.isArray(t)?r=t[0].shape[0]:r=t.shape[0];else throw new K(`Either the input data should have a defined shape, or ${a} shoud be specified.`);return r}execute(t,e){if(Array.isArray(e)&&e.length===0)throw new K("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(e),a=s?e:[e],r=this.retrieveSymbolicTensors(a),i=new di;if(t instanceof fe&&(t=[t]),Array.isArray(t)){if(t.length!==this.inputs.length)throw new K(`The number of inputs provided (${t.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let u=0;u<this.inputs.length;++u)i.add(this.inputs[u],t[u])}else for(const u of this.inputs){const h=t[u.name];if(h==null)throw new K(`No value is provided for the model's input ${u.name}`);i.add(u,h)}const l=Nh(r,i);return s?l:l[0]}retrieveSymbolicTensors(t){const e=Do(null,t.length);let s=t.length;for(const a of this.layers){const r=Array.isArray(a.output)?a.output:[a.output],i=r.map(l=>l.name);for(let l=0;l<t.length;++l){const u=i.indexOf(t[l]);if(u!==-1&&(e[l]=r[u],s--),s===0)break}if(s===0)break}if(s>0){const a=[];throw e.forEach((r,i)=>{r==null&&a.push(t[i])}),new K(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(a)}`)}return e}predictLoop(t,e=32,s=!1){return at(()=>{const a=this.checkNumSamples(t);if(s)throw new Wt("Verbose predictLoop() is not implemented yet.");const r=Ux(a,e),i=this.outputs.map(l=>[]);for(let l=0;l<r.length;++l)at(()=>{const h=r[l][0],f=r[l][1],p=bh(t,h,f),m=[];if(Array.isArray(p))for(let b=0;b<p.length;++b)m.push({key:this.inputs[b],value:p[b]});else m.push({key:this.inputs[0],value:p});const y=new di(m);return Nh(this.outputs,y)}).forEach((h,f)=>i[f].push(h));return ns(i.map(l=>He(l,0)))})}predict(t,e={}){const s=WA(t);B$(s,this.inputNames,this.feedInputShapes,!1);try{const a=e.batchSize==null?32:e.batchSize;return Px(a),this.predictLoop(s,a)}finally{ga(s,t)}}predictOnBatch(t){B$(t,this.inputNames,this.feedInputShapes,!0);const e=(Array.isArray(t)?t[0]:t).shape[0];return this.predictLoop(t,e)}standardizeUserDataXY(t,e,s=!0,a){if(this.optimizer_==null)throw new ra("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let i=0;i<this.feedOutputShapes.length;++i){const l=this.feedOutputShapes[i];this.feedLossFns[i]===Lm?r.push(l.slice(0,l.length-1).concat([1])):r.push(l)}if(t=M$(t,this.feedInputNames,this.feedInputShapes,!1,"input"),e=M$(e,this.feedOutputNames,r,!1,"target"),Wq(t,e),Hq(e,this.feedLossFns,this.feedOutputShapes),this.stateful&&a!=null&&a>0&&t[0].shape[0]%a!==0)throw new K(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${a}. Found: ${t[0].shape[0]} sample(s).`);return[t,e]}async standardizeUserData(t,e,s,a,r=!0,i){const[l,u]=this.standardizeUserDataXY(t,e,r,i);if(s!=null)throw new Error("sample weight is not supported yet.");let h=null;if(a!=null){const f=PA(a,this.outputNames);h=[];for(let p=0;p<f.length;++p)h.push(await UA(u[p],null,f[p]))}return[l,u,h]}testLoop(t,e,s,a=0,r){return at(()=>{const i=this.checkNumSamples(e,s,r,"steps"),l=[];if(a>0)throw new Wt("Verbose mode is not implemented yet.");if(r!=null)throw new Wt("steps mode in testLoop() is not implemented yet");{const u=Ux(i,s),h=Vn($a(0,i));for(let f=0;f<u.length;++f){const p=u[f][0],m=u[f][1],y=vo(h,p,m-p),b=L1(e,y),v=t(b);if(f===0)for(let w=0;w<v.length;++w)l.push(_t(0));for(let w=0;w<v.length;++w){const S=v[w];l[w]=xt(l[w],H(m-p,S))}}for(let f=0;f<l.length;++f)l[f]=Rt(l[f],i)}return l})}getDedupedMetricsNames(){const t=this.metricsNames,e=[];for(let s=0;s<t.length;++s){const a=t[s];let r=a;if(N$(t,a)>1){const i=N$(t.slice(0,s),a);r+=`_${i}`}e.push(r)}return e}makeTrainFunction(){return t=>{const e=[],s=t.slice(0,this.inputs.length),a=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=t.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),i=[],l=()=>{const p=[];for(let v=0;v<this.inputs.length;++v)p.push({key:this.inputs[v],value:s[v]});const m=new di(p),y=Nh(this.outputs,m,{training:!0});let b;for(let v=0;v<this.lossFunctions.length;++v){const w=this.lossFunctions[v];let S=w(a[v],y[v]);r[v]!=null&&(S=Lq(S,r[v]));const T=Le(S);e.push(T),v===0?b=S:b=xt(b,S)}for(let v=0;v<this.metricsTensors.length;++v){let w;if(this.outputs.length>1&&v<this.outputs.length)w=e[v];else{const S=this.metricsTensors[v][0],T=this.metricsTensors[v][1];w=Le(S(a[T],y[T]))}rn(w),i.push(w)}return b=Le(b),this.calculateLosses().forEach(v=>{b=xt(b,v)}),b},u=this.collectedTrainableWeights.map(p=>p.read());return[this.optimizer_.minimize(l,!0,u)].concat(i)}}makeTestFunction(){this.testFunction=t=>at(()=>{const e=[];let s;const a=t.slice(0,this.inputs.length),r=t.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let h=0;h<this.inputs.length;++h)i.push({key:this.inputs[h],value:a[h]});const l=new di(i),u=Nh(this.outputs,l);for(let h=0;h<this.lossFunctions.length;++h){const f=this.lossFunctions[h],p=Le(f(r[h],u[h]));h===0?s=p:s=xt(s,p),e.push(s)}for(let h=0;h<this.metricsTensors.length;++h){const f=this.metricsTensors[h][0],p=this.metricsTensors[h][1],m=Le(f(r[p],u[p]));e.push(m)}return e})}async fit(t,e,s={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let a,r,i,l,u,h,f,p,m;try{const y=s.batchSize==null?32:s.batchSize;Px(y);const v=await this.standardizeUserData(t,e,s.sampleWeight,s.classWeight,!1,y);a=v[0],r=v[1],m=v[2];let w=!1,S;if(s.validationData!=null&&s.validationData.length>0){if(w=!0,s.validationData.length===2)u=s.validationData[0],h=s.validationData[1];else throw s.validationData.length===3?new Wt("validationData including sample weights is not supported yet."):new K(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);const z=await this.standardizeUserData(u,h,null,null,!0,y);f=z[0],p=z[1],S=f.concat(p)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){w=!0;const L=Math.floor(a[0].shape[0]*(1-s.validationSplit)),z=a[0].shape[0];f=bh(a,L,z),i=a,a=bh(a,0,L),p=bh(r,L,z),l=r,r=bh(r,0,L),S=f.concat(p)}else s.validationSteps!=null&&(w=!0);const T=a.concat(r).concat(m);this.checkTrainableWeightsConsistency();const $=this.makeTrainFunction(),C=this.getDedupedMetricsNames();let I,R;w?(this.makeTestFunction(),I=this.testFunction,R=C.slice().concat(C.map(L=>"val_"+L))):(I=null,S=[],R=C.slice());const F=DA(s.callbacks,s.yieldEvery);return await this.fitLoop($,T,C,y,s.epochs,s.verbose,F,I,S,s.shuffle,R,s.initialEpoch,null,null)}finally{this.isTraining=!1,ga(a,t),ga(r,e),ga(i,t),ga(l,e),ga(f,u),ga(p,h),m!=null&&qt(m)}}async fitLoop(t,e,s,a,r,i,l,u,h,f,p,m,y,b){a==null&&(a=32),r==null&&(r=1),f==null&&(f=!0),m==null&&(m=0);let v=!1;if(u!=null&&h!=null&&(v=!0),b!=null&&(v=!0,y==null))throw new K("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const w=this.checkNumSamples(e,a,y,"steps_per_epoch");let S;w!=null&&(S=$a(0,w)),i==null&&(i=1);const{callbackList:T,history:$}=OA(l,i,r,m,w,y,a,v,p);T.setModel(this),this.history=$,await T.onTrainBegin(),this.stopTraining_=!1;for(let C=m;C<r;++C){await T.onEpochBegin(C);const I={};if(y!=null)throw new Wt("stepsPerEpoch mode is not implemented yet.");{if(f==="batch")throw new Wt("batch shuffling is not implemneted yet");f&&j1(S);const R=Vn(S),F=Ux(w,a);for(let B=0;B<F.length;++B){const L={};if(await T.onBatchBegin(B,L),at(()=>{const z=F[B][0],A=F[B][1],G=vo(R,z,A-z);L.batch=B,L.size=A-z;const Q=L1(e,G),tt=t(Q);for(let J=0;J<s.length;++J){const V=s[J],q=tt[J];L[V]=q,rn(q)}if(B===F.length-1&&v){const J=this.testLoop(u,h,a);for(let V=0;V<s.length;++V){const q=s[V],Y=J[V];rn(Y),I["val_"+q]=Y}}}),await T.onBatchEnd(B,L),RA(L),this.stopTraining_)break}R.dispose()}if(await T.onEpochEnd(C,I),this.stopTraining_)break}return await T.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(t,e){return Bq(this,t,e)}async trainOnBatch(t,e){const s=await this.standardizeUserData(t,e),a=s[0],r=s[1],l=this.makeTrainFunction()(a.concat(r)),u=[];for(const h of l){const f=await h.data();u.push(f[0])}return qt(l),ga(s[0],t),ga(s[1],e),ns(u)}getNamedWeights(t){const e=[],s=t!=null&&t.trainableOnly,a=s?this.trainableWeights:this.weights,r=this.getWeights(s);for(let i=0;i<a.length;++i)s&&!a[i].trainable||e.push({name:a[i].originalName,tensor:r[i]});return e}set stopTraining(t){this.stopTraining_=t}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(t){this.optimizer_!==t&&(this.optimizer_=t,this.isOptimizerOwned=!1)}dispose(){const t=super.dispose();if(t.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const e=r1().numTensors;this.optimizer_.dispose(),t.numDisposedVariables+=e-r1().numTensors}return t}getLossIdentifiers(){let t;if(typeof this.loss=="string")t=Sr(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if(typeof e!="string")throw new Error("Serialization of non-string loss is not supported.");t=this.loss.map(e=>Sr(e))}else{const e=Object.keys(this.loss);t={};const s=this.loss;for(const a of e)if(typeof s[a]=="string")t[a]=Sr(s[a]);else throw new Error("Serialization of non-string loss is not supported.")}return t}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[Sr(Qp(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(t=>Sr(Qp(t)));{const t={};for(const e in this.metrics)t[e]=Sr(Qp(this.metrics[e]));return t}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(t){if(t.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(t.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(t.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const e=_1(t.optimizer_config),s=Cr(e);let a;if(typeof t.loss=="string")a=ho(t.loss);else if(Array.isArray(t.loss))a=t.loss.map(i=>ho(i));else if(t.loss!=null){a={};for(const i in t.loss)a[i]=ho(t.loss[i])}let r;if(Array.isArray(t.metrics))r=t.metrics.map(i=>ho(i));else if(t.metrics!=null){r={};for(const i in t.metrics)r[i]=ho(t.metrics[i])}this.compile({loss:a,metrics:r,optimizer:s})}async save(t,e){if(typeof t=="string"){const h=aI(t);if(h.length===0)throw new K(`Cannot find any save handlers for URL '${t}'`);if(h.length>1)throw new K(`Found more than one (${h.length}) save handlers for URL '${t}'`);t=h[0]}if(t.save==null)throw new K("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await i1(this.getNamedWeights(e)),l={modelTopology:this.toJSON(null,!1),format:qq,generatedBy:`TensorFlow.js tfjs-layers v${VA}`,convertedBy:null};if((e==null?!1:e.includeOptimizer)&&this.optimizer!=null){l.trainingConfig=this.getTrainingConfig();const h="optimizer",{data:f,specs:p}=await i1(await this.optimizer.getWeights(),h);s.specs.push(...p),s.data=nI([s.data,f])}return this.userDefinedMetadata!=null&&(_$(this.userDefinedMetadata,this.name,!0),l.userDefinedMetadata=this.userDefinedMetadata),l.weightData=s.data,l.weightSpecs=s.specs,t.save(l)}setUserDefinedMetadata(t){_$(t,this.name),this.userDefinedMetadata=t}getUserDefinedMetadata(){return this.userDefinedMetadata}}Gl.className="Model";vt(Gl);class HA extends Gl{}HA.className="Functional";vt(HA);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Uh extends Gl{constructor(t){if(super({inputs:[],outputs:[]}),t=t||{},this.trainable=!0,this.built=!1,this.name=t.name!=null?t.name:Xy("sequential_"),t.layers!=null)for(const e of t.layers)this.add(e)}checkShape(t){if(t.inboundNodes[0].outputTensors[0].shape.some(s=>s<0))throw new K(`Negative dimension size caused by adding layer ${t.name} with input shape [${t.inboundNodes[0].inputTensors[0].shape}]`)}add(t){const e=t instanceof Uh||t instanceof Gl;let s;if(e){if(s=t,s.outputs.length!==1)throw new K("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(s.inputs.length!==1)throw new K("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(t.inboundNodes.length===0){if(t.batchInputShape==null)throw new K("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const a=Kj({batchShape:t.batchInputShape,dtype:t.dtype,name:t.name+"_input"});t.apply(a)}if(e)this.outputs=s.outputs,this.inputs=s.inputs;else{if(t.inboundNodes.length!==1)throw new K(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${t.name} which has ${t.inboundNodes.length} pre-existing inbound connections.`);if(t.inboundNodes[0].outputTensors.length!==1)throw new K("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[t.inboundNodes[0].outputTensors[0]],this.inputs=$A(this.outputs[0])}this.inboundNodes=[],new Yy({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Do(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(a=>a.shape),outputShapes:this.outputs[0].shape})}else{const a=t.apply(this.outputs[0]);if(Array.isArray(a))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(t),this.outputs=[a],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(t),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const t=this.layers.length-1;this.layers[t].outboundNodes=[],this.outputs=[this.layers[t].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(t,e){return this.model==null&&this.build(),this.model.call(t,e)}build(t){if(le(t),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Gl({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(t,e,s=console.log){this.built||this.build(),super.summary(t,e,s)}setWeights(t){this.model==null&&this.build(),this.model.setWeights(t)}evaluate(t,e,s={}){if(!this.built)throw new ra("The model needs to be compiled before being used.");return this.model.evaluate(t,e,s)}async evaluateDataset(t,e){if(!this.built)throw new ra("The model needs to be compiled before being used.");return this.model.evaluateDataset(t,e)}predict(t,e={}){return this.model==null&&this.build(),this.model.predict(t,e)}predictOnBatch(t){return this.model==null&&this.build(),this.model.predictOnBatch(t)}compile(t){this.build(),this.model.compile(t),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(t){this.model.optimizer=t}async fit(t,e,s={}){if(!this.built)throw new ra("The model needs to be compiled before being used.");return this.model.fit(t,e,s)}async fitDataset(t,e){if(!this.built)throw new ra("The model needs to be compiled before being used.");return this.model.fitDataset(t,e)}async trainOnBatch(t,e){return this.model.trainOnBatch(t,e)}static fromConfig(t,e,s={},a=!1){let r,i={};if(e instanceof Array){if(e[0].className==null||e[0].className==="Merge")throw new K("Legacy serialization format not supported yet.");r=e}else D(e.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),r=e.layers,delete e.layers,i=e;const l=new t(i);if(!(l instanceof Uh))throw new Wt(`Sequential.fromConfig called on non-Sequential input: ${l}`);for(const u of r){const f=Cr(u,void 0,a);a&&f.setFastWeightInitDuringBuild(!0),l.add(f)}return l}set stopTraining(t){if(this.model==null)throw new K("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=t}get stopTraining(){if(this.model==null)throw new K("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const t=[];for(const e of this.layers){const s={};s.className=e.getClassName(),s.config=e.getConfig(),t.push(s)}return{name:this.name,layers:t}}}Uh.className="Sequential";vt(Uh);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let Pn=class extends Go{getConfig(){return{}}};class jA extends Pn{apply(t,e=1){return Oj(t,e)}}jA.className="elu";vt(jA);class qA extends Pn{apply(t){return Ny(t)}}qA.className="selu";vt(qA);class XA extends Pn{apply(t){return Aa(t)}}XA.className="relu";vt(XA);class KA extends Pn{apply(t){return at(()=>Ni(6,Aa(t)))}}KA.className="relu6";vt(KA);class YA extends Pn{apply(t){return t}}YA.className="linear";vt(YA);class ZA extends Pn{apply(t){return Na(t)}}ZA.className="sigmoid";vt(ZA);class QA extends Pn{apply(t){return Fj(t)}}QA.className="hardSigmoid";vt(QA);class JA extends Pn{apply(t){return Po(t)}}JA.className="softplus";vt(JA);class tR extends Pn{apply(t){return _j(t)}}tR.className="softsign";vt(tR);class eR extends Pn{apply(t){return Si(t)}}eR.className="tanh";vt(eR);let hS=class extends Pn{apply(t,e=-1){return mf(t,e)}};hS.className="softmax";vt(hS);class nR extends Pn{apply(t,e=-1){return my(t,e)}}nR.className="logSoftmax";vt(nR);class sR extends Pn{apply(t){return at(()=>at(()=>{const e=Math.sqrt(2),s=H(.5,xt(1,dy(Rt(t,e))));return H(t,s)}))}}sR.className="gelu";vt(sR);class aR extends Pn{apply(t){return at(()=>H(.5,H(t,xt(1,Si(H(xn(Rt(2,Math.PI)),xt(t,H(.044715,Za(t,3)))))))))}}aR.className="gelu_new";vt(aR);class rR extends Pn{apply(t){return at(()=>H(t,Si(Po(t))))}}rR.className="mish";vt(rR);class iR extends Pn{apply(t,e=1){return at(()=>H(Na(H(t,e)),t))}}iR.className="swish";vt(iR);function Ci(n){return n.getClassName()}function Gx(n,t={}){return wf(n,zs.getMap().classNameMap,t,"activation")}function $i(n){if(n==null){const t={};return t.className="linear",t.config={},Gx(t)}if(typeof n=="string"){const t={};return t.className=n,t.config={},Gx(t)}else return n instanceof Pn?n:Gx(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Xq(n){if(n!=null&&typeof n!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}class oR extends Go{}class lR extends oR{constructor(t){super(),Xq(t),this.l1=t==null||t.l1==null?.01:t.l1,this.l2=t==null||t.l2==null?.01:t.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(t){return at(()=>{let e=tn([1]);return this.hasL1&&(e=xt(e,kt(H(this.l1,Je(t))))),this.hasL2&&(e=xt(e,kt(H(this.l2,Nf(t))))),X(e,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(t,e){return new t({l1:e.l1,l2:e.l2})}}lR.className="L1L2";vt(lR);const V$={l1l2:"L1L2"};function Te(n){return Zw(n)}function P$(n,t={}){return wf(n,zs.getMap().classNameMap,t,"regularizer")}function Oe(n){if(n==null)return null;if(typeof n=="string"){const e={className:n in V$?V$[n]:n,config:{}};return P$(e)}else return n instanceof oR?n:P$(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class uR extends Kt{constructor(t){super(t??{}),this.supportsMasking=!0,t!=null&&(this.maxValue=t.maxValue)}call(t,e){t=Mt(t);let s=Aa(t);return this.maxValue!=null&&(s=os(s,0,this.maxValue)),s}computeOutputShape(t){return t}getConfig(){const t={maxValue:this.maxValue},e=super.getConfig();return Object.assign(t,e),t}}uR.className="ReLU";vt(uR);class cR extends Kt{constructor(t){super(t??{}),this.DEFAULT_ALPHA=.3,t==null&&(t={}),this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){const s=Mt(t);return af(s,this.alpha)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}}cR.className="LeakyReLU";vt(cR);class hR extends Kt{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",t==null&&(t={}),this.supportsMasking=!0,this.alphaInitializer=De(t.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Oe(t.alphaRegularizer),this.alphaConstraint=cn(t.alphaConstraint),t.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(t.sharedAxes))this.sharedAxes=t.sharedAxes;else if(typeof t.sharedAxes=="number")this.sharedAxes=[t.sharedAxes];else throw new K(`Expected sharedAxes to be a number or an array of numbers, but got ${t.sharedAxes}`)}build(t){t=le(t);const e=t.slice(1);if(this.sharedAxes!=null)for(const a of this.sharedAxes)e[a-1]=1;this.alpha=this.addWeight("alpha",e,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(this.sharedAxes!=null)for(let a=1;a<t.length;++a)s[a]=t[a];this.inputSpec=[new ln({ndim:t.length,axes:s})],this.built=!0}call(t,e){return t=Mt(t),df(t,this.alpha.read())}getConfig(){const t={alphaInitializer:ze(this.alphaInitializer),alphaRegularizer:Te(this.alphaRegularizer),alphaConstraint:un(this.alphaConstraint),sharedAxes:this.sharedAxes},e=super.getConfig();return Object.assign(t,e),t}}hR.className="PReLU";vt(hR);let dR=class extends Kt{constructor(t){if(super(t??{}),this.DEFAULT_ALPHA=1,t==null&&(t={}),t.alpha!=null&&t.alpha!==this.DEFAULT_ALPHA)throw new Wt(`Non-default alpha value (${t.alpha}) is not supported by the ELU layer yet.`);this.alpha=t.alpha==null?this.DEFAULT_ALPHA:t.alpha}call(t,e){const s=Mt(t);return nc(s)}computeOutputShape(t){return t}getConfig(){const t={alpha:this.alpha},e=super.getConfig();return Object.assign(t,e),t}};dR.className="ELU";vt(dR);class fR extends Kt{constructor(t){super(t??{}),this.DEFAULT_THETA=1,t==null&&(t={}),this.theta=t.theta==null?this.DEFAULT_THETA:t.theta}call(t,e){const s=Mt(t);return H(s,wt(hs(s,this.theta),"float32"))}computeOutputShape(t){return t}getConfig(){const t={theta:this.theta},e=super.getConfig();return Object.assign(t,e),t}}fR.className="ThresholdedReLU";vt(fR);class pR extends Kt{constructor(t){super(t??{}),this.DEFAULT_AXIS=1,t==null&&(t={}),this.softmax=new hS().apply,this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis}call(t,e){return at(()=>{let s=Mt(t);const a=e.mask;if(a!=null){const r=H($t(ss(s.shape),wt(a,s.dtype)),_t(-1e9));s=xt(s,r)}return this.axis instanceof Array?this.axis.length>1?ls($t(s,of(s,this.axis,!0))):this.softmax(s,this.axis[0]):this.softmax(s,this.axis)})}computeOutputShape(t){return t}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}pR.className="Softmax";vt(pR);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Wl(n,t,e){if(typeof n=="number")return Do(n,t);if(n.length!==t)throw new K(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${n.length} elements.`);for(let s=0;s<t;++s){const a=n[s];if(!Ej(a))throw new K(`The ${e} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(n)} including a non-integer number ${a}`)}return n}function Ta(n,t,e,s,a=1){if(n==null)return n;const r=t+(t-1)*(a-1);let i;return e==="same"?i=n:i=n-r+1,Math.floor((i+s-1)/s)}function Pa(n,t,e,s){if(n==null)return null;if(s==="valid")n=n*t+Ti([e-t,0]);else if(s==="same")n=n*t;else throw new K(`Unsupport padding mode: ${s}.`);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function dS(n,t){return at(()=>(Xe(t),t==="channelsFirst"?Jt(n,[0,2,3,1]):n))}function mR(n,t){return at(()=>(Xe(t),t==="channelsFirst"?Jt(n,[0,2,3,4,1]):n))}function Kq(n,t,e,s=1,a="valid",r,i=1){return at(()=>{if(r==null&&(r=ka()),Xe(r),n.shape.length!==3)throw new K(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(t.shape.length!==3)throw new K(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(e!=null&&e.shape.length!==1)throw new K(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if(r==="channelsFirst"&&(n=Jt(n,[0,2,1])),a==="causal")throw new Wt("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let l=ly(n,t,s,a==="same"?"same":"valid","NWC",i);return e!=null&&(l=Ra(l,e)),l})}function U$(n,t,e,s=[1,1],a="valid",r,i,l=null){return at(()=>{if(r==null&&(r=ka()),Xe(r),n.rank!==3&&n.rank!==4)throw new K(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(t.rank!==3&&t.rank!==4)throw new K(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let u=dS(n,r);if(a==="causal")throw new Wt("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=aE({x:u,filter:t,strides:s,pad:a==="same"?"same":"valid",dilations:i,dataFormat:"NHWC",bias:e,activation:l}),r==="channelsFirst"&&(u=Jt(u,[0,3,1,2])),u})}function Yq(n,t,e,s=[1,1,1],a="valid",r,i){return at(()=>{if(r==null&&(r=ka()),Xe(r),n.rank!==4&&n.rank!==5)throw new K(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(t.rank!==4&&t.rank!==5)throw new K(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let l=mR(n,r);if(a==="causal")throw new Wt("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return l=Ev(l,t,s,a==="same"?"same":"valid","NDHWC",i),e!=null&&(l=Ra(l,e)),r==="channelsFirst"&&(l=Jt(l,[0,4,1,2,3])),l})}class Jy extends Kt{constructor(t,e){if(super(e),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Jy.verifyArgs(e),this.rank=t,yn(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new Wt(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Wl(e.kernelSize,t,"kernelSize"),this.strides=Wl(e.strides==null?1:e.strides,t,"strides"),this.padding=e.padding==null?"valid":e.padding,Ws(this.padding),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Xe(this.dataFormat),this.activation=$i(e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.biasInitializer=De(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=cn(e.biasConstraint),this.biasRegularizer=Oe(e.biasRegularizer),this.activityRegularizer=Oe(e.activityRegularizer),this.dilationRate=Wl(e.dilationRate==null?1:e.dilationRate,t,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new K(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new K(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new K(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(t){if(Va("kernelSize"in t,"required key 'kernelSize' not in config"),typeof t.kernelSize!="number"&&!Qw(t.kernelSize,"number",1,3))throw new K(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(t.kernelSize)}.`)}getConfig(){const t={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Ci(this.activation),useBias:this.useBias,biasInitializer:ze(this.biasInitializer),biasRegularizer:Te(this.biasRegularizer),activityRegularizer:Te(this.activityRegularizer),biasConstraint:un(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}class oc extends Jy{constructor(t,e){super(t,e),this.kernel=null,oc.verifyArgs(e),this.filters=e.filters,yn(this.filters,"filters"),this.kernelInitializer=De(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=cn(e.kernelConstraint),this.kernelRegularizer=Oe(e.kernelRegularizer)}build(t){t=le(t);const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new K(`The channel dimension of the input should be defined. Found ${t[e]}`);const s=t[e],a=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[e]:s}}],this.built=!0}call(t,e){return at(()=>{t=Mt(t);let s;const a=this.bias==null?null:this.bias.read(),r=hA(this.activation.getClassName());if(r!=null&&this.rank===2)s=U$(t,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(this.rank===1)s=Kq(t,this.kernel.read(),a,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)s=U$(t,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)s=Yq(t,this.kernel.read(),a,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new Wt("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(s=this.activation.apply(s))}return s})}computeOutputShape(t){t=le(t);const e=[],s=this.dataFormat==="channelsLast"?t.slice(1,t.length-1):t.slice(2);for(let r=0;r<s.length;++r){const i=Ta(s[r],this.kernelSize[r],this.padding,this.strides[r],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[r]);e.push(i)}let a=[t[0]];return this.dataFormat==="channelsLast"?(a=a.concat(e),a.push(this.filters)):(a.push(this.filters),a=a.concat(e)),a}getConfig(){const t={filters:this.filters,kernelInitializer:ze(this.kernelInitializer),kernelRegularizer:Te(this.kernelRegularizer),kernelConstraint:un(this.kernelConstraint)},e=super.getConfig();return Object.assign(t,e),t}static verifyArgs(t){if(!("filters"in t)||typeof t.filters!="number"||t.filters<1)throw new K(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(t.filters)}`)}}class kf extends oc{constructor(t){super(2,t),kf.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!Qw(t.kernelSize,"number",1,2))throw new K(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(t.kernelSize)}.`)}}kf.className="Conv2D";vt(kf);class If extends oc{constructor(t){super(3,t),If.verifyArgs(t)}getConfig(){const t=super.getConfig();return delete t.rank,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!(Array.isArray(t.kernelSize)&&(t.kernelSize.length===1||t.kernelSize.length===3)))throw new K(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(t.kernelSize)}.`)}}If.className="Conv3D";vt(If);class gR extends kf{constructor(t){if(super(t),this.inputSpec=[new ln({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new K(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=le(t),t.length!==4)throw new K("Input should have rank 4; Received input shape: "+JSON.stringify(t));const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new K("The channel dimension of the inputs should be defined. Found `None`.");const s=t[e],a=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new ln({ndim:4,axes:{[e]:s}})],this.built=!0}call(t,e){return at(()=>{let s=Mt(t);if(s.shape.length!==4)throw new K(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const a=s.shape,r=a[0];let i,l;this.dataFormat==="channelsFirst"?(i=2,l=3):(i=1,l=2);const u=a[i],h=a[l],f=this.kernelSize[0],p=this.kernelSize[1],m=this.strides[0],y=this.strides[1],b=Pa(u,m,f,this.padding),v=Pa(h,y,p,this.padding),w=[r,b,v,this.filters];this.dataFormat!=="channelsLast"&&(s=Jt(s,[0,2,3,1]));let S=uy(s,this.kernel.read(),w,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(S=Jt(S,[0,3,1,2])),this.bias!=null&&(S=Ra(S,this.bias.read(),this.dataFormat)),this.activation!=null&&(S=this.activation.apply(S)),S})}computeOutputShape(t){t=le(t);const e=t.slice();let s,a,r;this.dataFormat==="channelsFirst"?(s=1,a=2,r=3):(s=3,a=1,r=2);const i=this.kernelSize[0],l=this.kernelSize[1],u=this.strides[0],h=this.strides[1];return e[s]=this.filters,e[a]=Pa(e[a],u,i,this.padding),e[r]=Pa(e[r],h,l,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}gR.className="Conv2DTranspose";vt(gR);class yR extends If{constructor(t){if(super(t),this.inputSpec=[new ln({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new K(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(t){if(t=le(t),t.length!==5)throw new K("Input should have rank 5; Received input shape: "+JSON.stringify(t));const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null)throw new K("The channel dimension of the inputs should be defined. Found `None`.");const s=t[e],a=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new ln({ndim:5,axes:{[e]:s}})],this.built=!0}call(t,e){return at(()=>{let s=Mt(t);if(s.shape.length!==5)throw new K(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const a=s.shape,r=a[0];let i,l,u;this.dataFormat==="channelsFirst"?(u=2,i=3,l=4):(u=1,i=2,l=3);const h=a[u],f=a[i],p=a[l],m=this.kernelSize[0],y=this.kernelSize[1],b=this.kernelSize[2],v=this.strides[0],w=this.strides[1],S=this.strides[2],T=Pa(h,v,m,this.padding),$=Pa(f,w,y,this.padding),C=Pa(p,S,b,this.padding),I=[r,T,$,C,this.filters];this.dataFormat!=="channelsLast"&&(s=Jt(s,[0,2,3,4,1]));let R=Av(s,this.kernel.read(),I,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(R=Jt(R,[0,4,1,2,3])),this.bias!==null&&(R=Ra(R,this.bias.read(),this.dataFormat)),this.activation!==null&&(R=this.activation.apply(R)),R})}computeOutputShape(t){t=le(t);const e=t.slice();let s,a,r,i;this.dataFormat==="channelsFirst"?(s=1,a=2,r=3,i=4):(s=4,a=1,r=2,i=3);const l=this.kernelSize[0],u=this.kernelSize[1],h=this.kernelSize[2],f=this.strides[0],p=this.strides[1],m=this.strides[2];return e[s]=this.filters,e[a]=Pa(e[a],f,l,this.padding),e[r]=Pa(e[r],p,u,this.padding),e[i]=Pa(e[i],m,h,this.padding),e}getConfig(){const t=super.getConfig();return delete t.dilationRate,t}}yR.className="Conv3DTranspose";vt(yR);class bR extends oc{constructor(t,e){if(super(t,e),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,e.filters==null)throw new K("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(e.kernelInitializer!=null||e.kernelRegularizer!=null||e.kernelConstraint!=null)throw new K("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(e.padding!=null&&e.padding!=="same"&&e.padding!=="valid")throw new K(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(e.padding)}`);this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=De(e.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Oe(e.depthwiseRegularizer),this.depthwiseConstraint=cn(e.depthwiseConstraint),this.pointwiseInitializer=De(e.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Oe(e.pointwiseRegularizer),this.pointwiseConstraint=cn(e.pointwiseConstraint)}build(t){if(t=le(t),t.length<this.rank+2)throw new K(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(t)}`);const e=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[e]==null||t[e]<0)throw new K(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(t[e])}`);const s=t[e],a=this.kernelSize.concat([s,this.depthMultiplier]),r=[];for(let l=0;l<this.rank;++l)r.push(1);r.push(s*this.depthMultiplier,this.filters);const i=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,i,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,i,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,i,this.biasConstraint):this.bias=null,this.inputSpec=[new ln({ndim:this.rank+2,axes:{[e]:s}})],this.built=!0}call(t,e){return at(()=>{t=Mt(t);let s;if(this.rank===1)throw new Wt("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(t=Jt(t,[0,2,3,1])),s=Ty(t,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=Ra(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),this.dataFormat==="channelsFirst"&&(s=Jt(s,[0,3,1,2])),s})}getConfig(){const t=super.getConfig();return delete t.rank,delete t.kernelInitializer,delete t.kernelRegularizer,delete t.kernelConstraint,t.depthwiseInitializer=ze(this.depthwiseInitializer),t.pointwiseInitializer=ze(this.pointwiseInitializer),t.depthwiseRegularizer=Te(this.depthwiseRegularizer),t.pointwiseRegularizer=Te(this.pointwiseRegularizer),t.depthwiseConstraint=un(this.depthwiseConstraint),t.pointwiseConstraint=un(this.pointwiseConstraint),t}}bR.className="SeparableConv";class xR extends bR{constructor(t){super(2,t)}}xR.className="SeparableConv2D";vt(xR);class tb extends oc{constructor(t){super(1,t),tb.verifyArgs(t),this.inputSpec=[{ndim:3}]}getConfig(){const t=super.getConfig();return delete t.rank,delete t.dataFormat,t}static verifyArgs(t){if(typeof t.kernelSize!="number"&&!Qw(t.kernelSize,"number",1,1))throw new K(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(t.kernelSize)}.`)}}tb.className="Conv1D";vt(tb);class vR extends Kt{constructor(t){super(t),typeof t.cropping=="number"?this.cropping=[[t.cropping,t.cropping],[t.cropping,t.cropping]]:typeof t.cropping[0]=="number"?this.cropping=[[t.cropping[0],t.cropping[0]],[t.cropping[1],t.cropping[1]]]:this.cropping=t.cropping,this.dataFormat=t.dataFormat===void 0?"channelsLast":t.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(t){return this.dataFormat==="channelsFirst"?[t[0],t[1],t[2]-this.cropping[0][0]-this.cropping[0][1],t[3]-this.cropping[1][0]-this.cropping[1][1]]:[t[0],t[1]-this.cropping[0][0]-this.cropping[0][1],t[2]-this.cropping[1][0]-this.cropping[1][1],t[3]]}call(t,e){return at(()=>{if(t=Mt(t),this.dataFormat==="channelsLast"){const s=Zp(t,this.cropping[0][0],t.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Zp(s,this.cropping[1][0],t.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const s=Zp(t,this.cropping[0][0],t.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Zp(s,this.cropping[1][0],t.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const t={cropping:this.cropping,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}vR.className="Cropping2D";vt(vR);class wR extends Kt{constructor(t){super(t),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=t.size==null?this.DEFAULT_SIZE:t.size,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Xe(this.dataFormat),this.interpolation=t.interpolation==null?"nearest":t.interpolation,$j(this.interpolation)}computeOutputShape(t){if(this.dataFormat==="channelsFirst"){const e=t[2]==null?null:this.size[0]*t[2],s=t[3]==null?null:this.size[1]*t[3];return[t[0],t[1],e,s]}else{const e=t[1]==null?null:this.size[0]*t[1],s=t[2]==null?null:this.size[1]*t[2];return[t[0],e,s,t[3]]}}call(t,e){return at(()=>{let s=Mt(t);const a=s.shape;if(this.dataFormat==="channelsFirst"){s=Jt(s,[0,2,3,1]);const r=this.size[0]*a[2],i=this.size[1]*a[3],l=this.interpolation==="nearest"?wa.resizeNearestNeighbor(s,[r,i]):wa.resizeBilinear(s,[r,i]);return Jt(l,[0,3,1,2])}else{const r=this.size[0]*a[1],i=this.size[1]*a[2];return this.interpolation==="nearest"?wa.resizeNearestNeighbor(s,[r,i]):wa.resizeBilinear(s,[r,i])}})}getConfig(){const t={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}}wR.className="UpSampling2D";vt(wR);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Zq(n,t,e=[1,1],s="valid",a,r){return at(()=>{a==null&&(a=ka()),Xe(a);let i=dS(n,a);if(n.rank!==4)throw new K(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(t.rank!==4)throw new K(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=ec(i,t,e,s==="same"?"same":"valid","NHWC",r),a==="channelsFirst"&&(i=Jt(i,[0,3,1,2])),i})}class SR extends Jy{constructor(t){super(2,t),this.depthwiseKernel=null,this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=De(t.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=cn(t.depthwiseConstraint),this.depthwiseRegularizer=Oe(t.depthwiseRegularizer)}build(t){if(t=le(t),t.length<4)throw new K(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(t)}.`);const e=this.dataFormat==="channelsFirst"?1:3;if(t[e]==null||t[e]<0)throw new K(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${t[e]}).`);const s=t[e],a=[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",a,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return at(()=>{t=Mt(t);let s=Zq(t,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=Ra(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),s})}computeOutputShape(t){t=le(t);const e=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2],a=this.dataFormat==="channelsFirst"?t[1]*this.depthMultiplier:t[3]*this.depthMultiplier,r=Ta(e,this.kernelSize[0],this.padding,this.strides[0]),i=Ta(s,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[t[0],a,r,i]:[t[0],r,i,a]}getConfig(){const t=super.getConfig();return t.depthMultiplier=this.depthMultiplier,t.depthwiseInitializer=ze(this.depthwiseInitializer),t.depthwiseRegularizer=Te(this.depthwiseRegularizer),t.depthwiseConstraint=un(this.depthwiseRegularizer),t}}SR.className="DepthwiseConv2D";vt(SR);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function NR(n,t,e,s){if(Array.isArray(n)){if(t!=null||e!=null)throw new K("When inputs is an array, neither initialState or constants should be provided");s!=null&&(e=n.slice(n.length-s,n.length),n=n.slice(0,n.length-s)),n.length>1&&(t=n.slice(1,n.length)),n=n[0]}function a(r){return r==null||Array.isArray(r)?r:[r]}return t=a(t),e=a(e),{inputs:n,initialState:t,constants:e}}function TR(n,t,e,s=!1,a,r,i=!1,l=!1){return at(()=>{const u=t.shape.length;if(u<3)throw new K(`Input should be at least 3D, but is ${u}D.`);const h=[1,0].concat($a(2,u));t=Jt(t,h),i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),a!=null&&(a=wt(wt(a,"bool"),"float32"),a.rank===u-1&&(a=Bn(a,-1)),a=Jt(a,h)),s&&(t=Us(t,0),a!=null&&(a=Us(a,0)));const f=[];let p,m=e;const y=t.shape[0],b=Gs(t);let v;a!=null&&(v=Gs(a));for(let S=0;S<y;++S){const T=b[S],$=at(()=>n(T,m));if(a==null)p=$[0],m=$[1];else{const C=at(()=>{const I=v[S],R=$t(Ns(I),I),F=xt(H($[0],I),H(m[0],R)),B=m.map((L,z)=>xt(H($[1][z],I),H(L,R)));return{output:F,newStates:B}});p=C.output,m=C.newStates}l&&f.push(p)}let w;return l&&(w=us(f,1)),[p,w,m]})}class zi extends Kt{constructor(t){super(t);let e;if(t.cell==null)throw new K("cell property is missing for the constructor of RNN.");if(Array.isArray(t.cell)?e=new mS({cells:t.cell}):e=t.cell,e.stateSize==null)throw new K("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=e,this.returnSequences=t.returnSequences==null?!1:t.returnSequences,this.returnState=t.returnState==null?!1:t.returnState,this.goBackwards=t.goBackwards==null?!1:t.goBackwards,this._stateful=t.stateful==null?!1:t.stateful,this.unroll=t.unroll==null?!1:t.unroll,this.supportsMasking=!0,this.inputSpec=[new ln({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return $a(0,t).map(e=>null)}else return this.states_}setStates(t){this.states_=t}computeOutputShape(t){R1(t)&&(t=t[0]),t=t;let e=this.cell.stateSize;Array.isArray(e)||(e=[e]);const s=e[0];let a;if(this.returnSequences?a=[t[0],t[1],s]:a=[t[0],s],this.returnState){const r=[];for(const i of e)r.push([t[0],i]);return[a].concat(r)}else return a}computeMask(t,e){return at(()=>{Array.isArray(e)&&(e=e[0]);const s=this.returnSequences?e:null;if(this.returnState){const a=this.states.map(r=>null);return[s].concat(a)}else return s})}get states(){if(this.states_==null){const t=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,e=[];for(let s=0;s<t;++s)e.push(null);return e}else return this.states_}set states(t){this.states_=t}build(t){if(this.numConstants!=null)throw new Wt("Constants support is not implemented in RNN yet.");R1(t)&&(t=t[0]),t=t;const e=this.stateful?t[0]:null,s=t.slice(2);this.inputSpec[0]=new ln({shape:[e,null,...s]});const a=[t[0]].concat(t.slice(2));this.cell.build(a);let r;if(Array.isArray(this.cell.stateSize)?r=this.cell.stateSize:r=[this.cell.stateSize],this.stateSpec!=null){if(!Zt(this.stateSpec.map(i=>i.shape[i.shape.length-1]),r))throw new K(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map(i=>new ln({shape:[null,i]}));this.stateful&&this.resetStates()}resetStates(t,e=!1){at(()=>{if(!this.stateful)throw new Ba("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(s==null)throw new K("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(a=>tn([s,a])):this.states_=[tn([s,this.cell.stateSize])];else if(t==null)qt(this.states_),this.keptStates!=null&&(qt(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(a=>tn([s,a])):this.states_[0]=tn([s,this.cell.stateSize]);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new K(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e===!0?this.keptStates.push(this.states_.slice()):qt(this.states_);for(let a=0;a<this.states_.length;++a){const r=t[a],i=Array.isArray(this.cell.stateSize)?this.cell.stateSize[a]:this.cell.stateSize,l=[s,i];if(!Zt(r.shape,l))throw new K(`State ${a} is incompatible with layer ${this.name}: expected shape=${l}, received shape=${r.shape}`);this.states_[a]=r}}this.states_=this.states_.map(a=>rn(a.clone()))})}apply(t,e){let s=e==null?null:e.initialState,a=e==null?null:e.constants;e==null&&(e={});const r=NR(t,s,a,this.numConstants);t=r.inputs,s=r.initialState,a=r.constants;let i=[],l=[];if(s!=null){e.initialState=s,i=i.concat(s),this.stateSpec=[];for(const h of s)this.stateSpec.push(new ln({shape:h.shape}));l=l.concat(this.stateSpec)}if(a!=null&&(e.constants=a,i=i.concat(a),this.numConstants=a.length),i[0]instanceof Ja){const h=[t].concat(i),f=this.inputSpec.concat(l),p=this.inputSpec;this.inputSpec=f;const m=super.apply(h,e);return this.inputSpec=p,m}else return super.apply(t,e)}call(t,e){return at(()=>{const s=e==null?null:e.mask,a=e==null?null:e.training;let r=e==null?null:e.initialState;t=Mt(t),r==null&&(this.stateful?r=this.states_:r=this.getInitialState(t));const i=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==i)throw new K(`RNN Layer has ${i} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const l={training:a},h=TR((b,v)=>{const w=this.cell.call([b].concat(v),l);return[w[0],w.slice(1)]},t,r,this.goBackwards,s,null,this.unroll,this.returnSequences),f=h[0],p=h[1],m=h[2];this.stateful&&this.resetStates(m,a);const y=this.returnSequences?p:f;return this.returnState?[y].concat(m):y})}getInitialState(t){return at(()=>{let e=tn(t.shape);return e=kt(e,[1,2]),e=Sf(e),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?E1(e,[1,s]):e):this.cell.stateSize>1?[E1(e,[1,this.cell.stateSize])]:[e]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(t)}getConfig(){const t=super.getConfig(),e={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(e.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===zi.className&&(e.cell={className:this.cell.getClassName(),config:s}),Object.assign(Object.assign(Object.assign({},s),t),e)}static fromConfig(t,e,s={}){const a=e.cell,r=Cr(a,s);return new t(Object.assign(e,{cell:r}))}}zi.className="RNN";vt(zi);class eb extends Kt{}class fS extends eb{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,yn(this.units,"units"),this.activation=$i(t.activation==null?this.DEFAULT_ACTIVATION:t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=De(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=De(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=De(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Oe(t.kernelRegularizer),this.recurrentRegularizer=Oe(t.recurrentRegularizer),this.biasRegularizer=Oe(t.biasRegularizer),this.kernelConstraint=cn(t.kernelConstraint),this.recurrentConstraint=cn(t.recurrentConstraint),this.biasConstraint=cn(t.biasConstraint),this.dropout=Jl([1,Ti([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Jl([1,Ti([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=le(t),this.kernel=this.addWeight("kernel",[t[t.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return at(()=>{if(t=t,t.length!==2)throw new K(`SimpleRNNCell expects 2 input Tensors, got ${t.length}.`);let s=t[1];t=t[0];const a=e.training==null?!1:e.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ki({ones:()=>Ns(t),rate:this.dropout,training:a,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ki({ones:()=>Ns(s),rate:this.recurrentDropout,training:a,dropoutFunc:this.dropoutFunc}));let r;const i=this.dropoutMask,l=this.recurrentDropoutMask;i!=null?r=Xa(H(t,i),this.kernel.read()):r=Xa(t,this.kernel.read()),this.bias!=null&&(r=Ra(r,this.bias.read())),l!=null&&(s=H(s,l));let u=xt(r,Xa(s,this.recurrentKernel.read()));return this.activation!=null&&(u=this.activation.apply(u)),[u,u]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Ci(this.activation),useBias:this.useBias,kernelInitializer:ze(this.kernelInitializer),recurrentInitializer:ze(this.recurrentInitializer),biasInitializer:ze(this.biasInitializer),kernelRegularizer:Te(this.kernelRegularizer),recurrentRegularizer:Te(this.recurrentRegularizer),biasRegularizer:Te(this.biasRegularizer),activityRegularizer:Te(this.activityRegularizer),kernelConstraint:un(this.kernelConstraint),recurrentConstraint:un(this.recurrentConstraint),biasConstraint:un(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},t),e)}}fS.className="SimpleRNNCell";vt(fS);class CR extends zi{constructor(t){t.cell=new fS(t),super(t)}call(t,e){return at(()=>{this.cell.dropoutMask!=null&&(qt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(qt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=e==null?null:e.mask,a=e==null?null:e.training,r=e==null?null:e.initialState;return super.call(t,{mask:s,training:a,initialState:r})})}static fromConfig(t,e){return new t(e)}}CR.className="SimpleRNN";vt(CR);class pS extends eb{constructor(t){if(super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.resetAfter)throw new K("GRUCell does not support reset_after parameter set to true.");this.units=t.units,yn(this.units,"units"),this.activation=$i(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=$i(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=De(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=De(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=De(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Oe(t.kernelRegularizer),this.recurrentRegularizer=Oe(t.recurrentRegularizer),this.biasRegularizer=Oe(t.biasRegularizer),this.kernelConstraint=cn(t.kernelConstraint),this.recurrentConstraint=cn(t.recurrentConstraint),this.biasConstraint=cn(t.biasConstraint),this.dropout=Jl([1,Ti([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Jl([1,Ti([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){t=le(t);const e=t[t.length-1];this.kernel=this.addWeight("kernel",[e,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(t,e){return at(()=>{if(t=t,t.length!==2)throw new K(`GRUCell expects 2 input Tensors (inputs, h, c), got ${t.length}.`);const s=e.training==null?!1:e.training;let a=t[1];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ki({ones:()=>Ns(t),rate:this.dropout,training:s,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ki({ones:()=>Ns(a),rate:this.recurrentDropout,training:s,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,i=this.recurrentDropoutMask;let l,u,h;0<this.dropout&&this.dropout<1&&(t=H(t,r[0]));let f=Xa(t,this.kernel.read());this.useBias&&(f=Ra(f,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(a=H(a,i[0]));const p=this.recurrentKernel.read(),[m,y]=as(p,[2*this.units,this.units],p.rank-1),b=Xa(a,m),[v,w,S]=as(f,3,f.rank-1),[T,$]=as(b,2,b.rank-1);l=this.recurrentActivation.apply(xt(v,T)),u=this.recurrentActivation.apply(xt(w,$));const C=Xa(H(u,a),y);h=this.activation.apply(xt(S,C));const I=xt(H(l,a),H(xt(1,Ee(l)),h));return[I,I]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Ci(this.activation),recurrentActivation:Ci(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ze(this.kernelInitializer),recurrentInitializer:ze(this.recurrentInitializer),biasInitializer:ze(this.biasInitializer),kernelRegularizer:Te(this.kernelRegularizer),recurrentRegularizer:Te(this.recurrentRegularizer),biasRegularizer:Te(this.biasRegularizer),activityRegularizer:Te(this.activityRegularizer),kernelConstraint:un(this.kernelConstraint),recurrentConstraint:un(this.recurrentConstraint),biasConstraint:un(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},t),e)}}pS.className="GRUCell";vt(pS);class $R extends zi{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new pS(t),super(t)}call(t,e){return at(()=>{this.cell.dropoutMask!=null&&(qt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(qt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=e==null?null:e.mask,a=e==null?null:e.training,r=e==null?null:e.initialState;return super.call(t,{mask:s,training:a,initialState:r})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}}$R.className="GRU";vt($R);class nb extends eb{constructor(t){super(t),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=t.units,yn(this.units,"units"),this.activation=$i(t.activation===void 0?this.DEFAULT_ACTIVATION:t.activation),this.recurrentActivation=$i(t.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:t.recurrentActivation),this.useBias=t.useBias==null?!0:t.useBias,this.kernelInitializer=De(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=De(t.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=De(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=t.unitForgetBias,this.kernelRegularizer=Oe(t.kernelRegularizer),this.recurrentRegularizer=Oe(t.recurrentRegularizer),this.biasRegularizer=Oe(t.biasRegularizer),this.kernelConstraint=cn(t.kernelConstraint),this.recurrentConstraint=cn(t.recurrentConstraint),this.biasConstraint=cn(t.biasConstraint),this.dropout=Jl([1,Ti([0,t.dropout==null?0:t.dropout])]),this.recurrentDropout=Jl([1,Ti([0,t.recurrentDropout==null?0:t.recurrentDropout])]),this.dropoutFunc=t.dropoutFunc,this.implementation=t.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(t){var e;t=le(t);const s=t[t.length-1];this.kernel=this.addWeight("kernel",[s,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let a;if(this.useBias){if(this.unitForgetBias){const r=this.biasInitializer,i=this.units;a=new(e=class extends ca{apply(u,h){const f=r.apply([i]),p=new tS().apply([i]),m=r.apply([i*2]);return C$(C$(f,p),m)}},e.className="CustomInit",e)}else a=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,a,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(t,e){return at(()=>{const s=e.training==null?!1:e.training;if(t=t,t.length!==3)throw new K(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);let a=t[1];const r=t[2];t=t[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ki({ones:()=>Ns(t),rate:this.dropout,training:s,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ki({ones:()=>Ns(a),rate:this.recurrentDropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,l=this.recurrentDropoutMask;let u,h,f,p;0<this.dropout&&this.dropout<1&&(t=H(t,i[0]));let m=Xa(t,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(a=H(a,l[0])),m=xt(m,Xa(a,this.recurrentKernel.read())),this.useBias&&(m=Ra(m,this.bias.read()));const[y,b,v,w]=as(m,4,m.rank-1);u=this.recurrentActivation.apply(y),h=this.recurrentActivation.apply(b),f=xt(H(h,r),H(u,this.activation.apply(v))),p=this.recurrentActivation.apply(w);const S=H(p,this.activation.apply(f));return[S,S,f]})}getConfig(){const t=super.getConfig(),e={units:this.units,activation:Ci(this.activation),recurrentActivation:Ci(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ze(this.kernelInitializer),recurrentInitializer:ze(this.recurrentInitializer),biasInitializer:ze(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Te(this.kernelRegularizer),recurrentRegularizer:Te(this.recurrentRegularizer),biasRegularizer:Te(this.biasRegularizer),activityRegularizer:Te(this.activityRegularizer),kernelConstraint:un(this.kernelConstraint),recurrentConstraint:un(this.recurrentConstraint),biasConstraint:un(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},t),e)}}nb.className="LSTMCell";vt(nb);class kR extends zi{constructor(t){t.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),t.cell=new nb(t),super(t)}call(t,e){return at(()=>{this.cell.dropoutMask!=null&&(qt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(qt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=e==null?null:e.mask,a=e==null?null:e.training,r=e==null?null:e.initialState;return super.call(t,{mask:s,training:a,initialState:r})})}static fromConfig(t,e){return e.implmentation===0&&(e.implementation=1),new t(e)}}kR.className="LSTM";vt(kR);class mS extends eb{constructor(t){super(t),this.cells=t.cells}get stateSize(){const t=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?t.push(...e.stateSize):t.push(e.stateSize);return t}call(t,e){return at(()=>{t=t;let s=t.slice(1);const a=[];for(const l of this.cells.slice().reverse())Array.isArray(l.stateSize)?a.push(s.splice(0,l.stateSize.length)):a.push(s.splice(0,1));a.reverse();const r=[];let i;for(let l=0;l<this.cells.length;++l){const u=this.cells[l];s=a[l],l===0?i=[t[0]].concat(s):i=[i[0]].concat(s),i=u.call(i,e),r.push(i.slice(1))}s=[];for(const l of r.slice().reverse())s.push(...l);return[i[0]].concat(s)})}build(t){R1(t)&&(t=t[0]),t=t;let e;this.cells.forEach((s,a)=>{xo(`RNNCell_${a}`,()=>{s.build(t),Array.isArray(s.stateSize)?e=s.stateSize[0]:e=s.stateSize,t=[t[0],e]})}),this.built=!0}getConfig(){const t=super.getConfig(),e=r=>({className:r.getClassName(),config:r.getConfig()}),a={cells:this.cells.map(e)};return Object.assign(Object.assign({},t),a)}static fromConfig(t,e,s={}){const a=[];for(const r of e.cells)a.push(Cr(r,s));return new t({cells:a})}get trainableWeights(){if(!this.trainable)return[];const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t}get nonTrainableWeights(){const t=[];for(const e of this.cells)t.push(...e.nonTrainableWeights);if(!this.trainable){const e=[];for(const s of this.cells)e.push(...s.trainableWeights);return e.concat(t)}return t}getWeights(){const t=[];for(const e of this.cells)t.push(...e.weights);return D1(t)}setWeights(t){const e=[];for(const s of this.cells){const a=s.weights.length,r=t.splice(a);for(let i=0;i<s.weights.length;++i)e.push([s.weights[i],r[i]])}oS(e)}}mS.className="StackedRNNCells";vt(mS);function ki(n){const{ones:t,rate:e,training:s=!1,count:a=1,dropoutFunc:r}=n,i=()=>r!=null?r(t(),e):bA(t(),e),l=()=>Tf(i,t,s);return!a||a<=1?rn(l().clone()):Array(a).fill(void 0).map(l).map(h=>rn(h.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var Qq=function(n,t){var e={};for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&t.indexOf(s)<0&&(e[s]=n[s]);if(n!=null&&typeof Object.getOwnPropertySymbols=="function")for(var a=0,s=Object.getOwnPropertySymbols(n);a<s.length;a++)t.indexOf(s[a])<0&&Object.prototype.propertyIsEnumerable.call(n,s[a])&&(e[s[a]]=n[s[a]]);return e};class IR extends zi{constructor(t){if(t.unroll)throw new Wt("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(t.cell))throw new Wt("It is not possible at the moment to stack convolutional cells.");super(t),this.inputSpec=[new ln({ndim:5})]}call(t,e){return at(()=>{if(this.cell.dropoutMask!=null&&(qt(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(qt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),e&&e.constants)throw new K("ConvRNN2D cell does not support constants");const s=e==null?null:e.mask,a=e==null?null:e.training,r=e==null?null:e.initialState;return super.call(t,{mask:s,training:a,initialState:r})})}computeOutputShape(t){let e=this.computeSingleOutputShape(t);return this.returnSequences||(e=[e[0],...e.slice(2)]),this.returnState&&(e=[e,...Array(2).fill([t[0],...e.slice(-3)])]),e}getInitialState(t){return at(()=>{const{stateSize:e}=this.cell,s=t.shape,a=this.computeSingleOutputShape(s),r=[a[0],...a.slice(2)],i=tn(r);return Array.isArray(e)?Array(e.length).fill(i):[i]})}resetStates(t,e=!1){at(()=>{if(!this.stateful)throw new Ba("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,a=this.computeSingleOutputShape(s),r=[a[0],...a.slice(2)];if(s[0]==null)throw new K("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>tn(r)):this.states_=[tn(r)];else if(t==null)qt(this.states_),this.keptStates!=null&&(qt(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>tn(r)):this.states_[0]=tn(r);else{if(Array.isArray(t)||(t=[t]),t.length!==this.states_.length)throw new K(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${t.length} state value(s). Input received: ${t}`);e?this.keptStates.push(this.states_.slice()):qt(this.states_);for(let l=0;l<this.states_.length;++l){const u=t[l],h=r;if(!Zt(u.shape,h))throw new K(`State ${l} is incompatible with layer ${this.name}: expected shape=${h}, received shape=${u.shape}`);this.states_[l]=u}}this.states_=this.states_.map(l=>rn(l.clone()))})}computeSingleOutputShape(t){const{dataFormat:e,filters:s,kernelSize:a,padding:r,strides:i,dilationRate:l}=this.cell,u=e==="channelsFirst",h=t[u?3:2],f=t[u?4:3],p=Ta(h,a[0],r,i[0],l[0]),m=Ta(f,a[1],r,i[1],l[1]);return[...t.slice(0,2),...u?[s,p,m]:[p,m,s]]}}IR.className="ConvRNN2D";class gS extends nb{constructor(t){const{filters:e,kernelSize:s,strides:a,padding:r,dataFormat:i,dilationRate:l}=t;super(Object.assign(Object.assign({},t),{units:e})),this.filters=e,yn(this.filters,"filters"),this.kernelSize=Wl(s,2,"kernelSize"),this.kernelSize.forEach(u=>yn(u,"kernelSize")),this.strides=Wl(a||1,2,"strides"),this.strides.forEach(u=>yn(u,"strides")),this.padding=r||"valid",Ws(this.padding),this.dataFormat=i||"channelsLast",Xe(this.dataFormat),this.dilationRate=Wl(l||1,2,"dilationRate"),this.dilationRate.forEach(u=>yn(u,"dilationRate"))}build(t){var e;t=le(t);const s=this.dataFormat==="channelsFirst"?1:t.length-1;if(t[s]==null)throw new K(`The channel dimension of the input should be defined. Found ${t[s]}`);const a=t[s],r=4,i=this.kernelSize.concat([a,this.filters*r]);this.kernel=this.addWeight("kernel",i,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const l=this.kernelSize.concat([this.filters,this.filters*r]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",l,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let u;if(this.unitForgetBias){const h=this.biasInitializer,f=this.filters;u=new(e=class extends ca{apply(m,y){const b=h.apply([f]),v=ss([f]),w=h.apply([f*2]);return Jw([b,v,w])}},e.className="CustomInit",e)}else u=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*r],null,u,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(t,e){return at(()=>{if(t.length!==3)throw new K(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${t.length}.`);const s=e.training||!1,a=t[0],r=t[1],i=t[2],l=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=ki({ones:()=>Ns(a),rate:this.dropout,training:s,count:l,dropoutFunc:this.dropoutFunc}));const u=this.dropoutMask,h=(M,j,st)=>!j||!j[st]?M:H(j[st],M);let f=h(a,u,0),p=h(a,u,1),m=h(a,u,2),y=h(a,u,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=ki({ones:()=>Ns(r),rate:this.recurrentDropout,training:s,count:l,dropoutFunc:this.dropoutFunc}));const b=this.recurrentDropoutMask;let v=h(r,b,0),w=h(r,b,1),S=h(r,b,2),T=h(r,b,3);const $=3,[C,I,R,F]=as(this.kernel.read(),l,$),[B,L,z,A]=this.useBias?as(this.bias.read(),l):[null,null,null,null];f=this.inputConv(f,C,B,this.padding),p=this.inputConv(p,I,L,this.padding),m=this.inputConv(m,R,z,this.padding),y=this.inputConv(y,F,A,this.padding);const[G,Q,tt,J]=as(this.recurrentKernel.read(),l,$);v=this.recurrentConv(v,G),w=this.recurrentConv(w,Q),S=this.recurrentConv(S,tt),T=this.recurrentConv(T,J);const V=this.recurrentActivation.apply(xt(f,v)),q=this.recurrentActivation.apply(xt(p,w)),Y=xt(H(q,i),H(V,this.activation.apply(xt(m,S)))),it=H(this.recurrentActivation.apply(xt(y,T)),this.activation.apply(Y));return[it,it,Y]})}getConfig(){const t=super.getConfig(),{units:e}=t,s=Qq(t,["units"]),a={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},s),a)}inputConv(t,e,s,a){const r=Ir(t,e,this.strides,a||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return s?Ra(r,s,this.dataFormat):r}recurrentConv(t,e){return Ir(t,e,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}gS.className="ConvLSTM2DCell";vt(gS);class ER extends IR{constructor(t){const e=new gS(t);super(Object.assign(Object.assign({},t),{cell:e}))}static fromConfig(t,e){return new t(e)}}ER.className="ConvLSTM2D";vt(ER);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class yS extends Kt{constructor(t){super(t),this.rate=Math.max(Math.min(t.rate,1),0),this.noiseShape=t.noiseShape,this.seed=t.seed,this.supportsMasking=!0}getNoiseShape(t){if(this.noiseShape==null)return this.noiseShape;const e=t.shape,s=[];for(let a=0;a<this.noiseShape.length;++a)s.push(this.noiseShape[a]==null?e[a]:this.noiseShape[a]);return s}call(t,e){return at(()=>{this.invokeCallHook(t,e);const s=Mt(t);if(0<this.rate&&this.rate<1){const a=e.training==null?!1:e.training,r=this.getNoiseShape(s);return Tf(()=>bA(s,this.rate,r,this.seed),()=>s,a)}return t})}getConfig(){const t={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},e=super.getConfig();return Object.assign(t,e),t}dispose(){return super.dispose()}}yS.className="Dropout";vt(yS);class AR extends yS{constructor(t){super(t),this.inputSpec=[{ndim:3}]}getNoiseShape(t){const e=t.shape;return[e[0],1,e[2]]}}AR.className="SpatialDropout1D";vt(AR);class RR extends Kt{constructor(t){if(super(t),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",t.batchInputShape==null&&t.inputShape==null&&t.inputDim!=null){let e=null;t.batchSize!=null&&(e=t.batchSize),this.batchInputShape=[e,t.inputDim]}this.units=t.units,yn(this.units,"units"),this.activation=$i(t.activation),t.useBias!=null&&(this.useBias=t.useBias),this.kernelInitializer=De(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=De(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=cn(t.kernelConstraint),this.biasConstraint=cn(t.biasConstraint),this.kernelRegularizer=Oe(t.kernelRegularizer),this.biasRegularizer=Oe(t.biasRegularizer),this.activityRegularizer=Oe(t.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(t){t=le(t);const e=t[t.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[e,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:e}}],this.built=!0}computeOutputShape(t){t=le(t);const e=t.slice();return e[e.length-1]=this.units,e}call(t,e){return at(()=>{this.invokeCallHook(t,e);const s=Mt(t),a=hA(this.activation.getClassName());let r;return a!=null?r=Xa(s,this.kernel.read(),a,this.bias?this.bias.read():null):(r=Xa(s,this.kernel.read()),this.bias!=null&&(r=Ra(r,this.bias.read())),this.activation!=null&&(r=this.activation.apply(r))),r})}getConfig(){const t={units:this.units,activation:Ci(this.activation),useBias:this.useBias,kernelInitializer:ze(this.kernelInitializer),biasInitializer:ze(this.biasInitializer),kernelRegularizer:Te(this.kernelRegularizer),biasRegularizer:Te(this.biasRegularizer),activityRegularizer:Te(this.activityRegularizer),kernelConstraint:un(this.kernelConstraint),biasConstraint:un(this.biasConstraint)},e=super.getConfig();return Object.assign(t,e),t}}RR.className="Dense";vt(RR);class DR extends Kt{constructor(t){t=t||{},super(t),this.inputSpec=[{minNDim:3}],this.dataFormat=t.dataFormat}computeOutputShape(t){t=le(t);for(const e of t.slice(1))if(e==null)throw new K(`The shape of the input to "Flatten" is not fully defined (got ${t.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[t[0],gi(t,1)]}call(t,e){return at(()=>{this.invokeCallHook(t,e);let s=Mt(t);if(this.dataFormat==="channelsFirst"&&s.rank>1){const a=[0];for(let r=2;r<s.rank;++r)a.push(r);a.push(1),s=Jt(s,a)}return Dj(s)})}getConfig(){const t={};this.dataFormat!=null&&(t.dataFormat=this.dataFormat);const e=super.getConfig();return Object.assign(t,e),t}}DR.className="Flatten";vt(DR);class OR extends Kt{constructor(t){super(t),this.supportsMasking=!0,this.activation=$i(t.activation)}call(t,e){return at(()=>{this.invokeCallHook(t,e);const s=Mt(t);return this.activation.apply(s)})}getConfig(){const t={activation:Ci(this.activation)},e=super.getConfig();return Object.assign(t,e),t}}OR.className="Activation";vt(OR);class _R extends Kt{constructor(t){super(t),this.n=t.n,this.inputSpec=[{ndim:2}]}computeOutputShape(t){return[t[0],this.n,t[1]]}call(t,e){return at(()=>(t=Mt(t),Aj(t,this.n)))}getConfig(){const t={n:this.n},e=super.getConfig();return Object.assign(t,e),t}}_R.className="RepeatVector";vt(_R);class FR extends Kt{constructor(t){super(t),this.targetShape=t.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(t){return t<0||t==null}fixUnknownDimension(t,e){const s="Total size of new array must be unchanged.",a=e.slice();let r=1,i=null;for(let u=0;u<a.length;++u){const h=a[u];if(this.isUnknown(h))if(i===null)i=u;else throw new K("Can only specifiy one unknown dimension.");else r*=h}const l=gi(t);if(i!==null){if(r===0||l%r!==0)throw new K(s);a[i]=l/r}else if(l!==r)throw new K(s);return a}computeOutputShape(t){let e=!1;for(let s=0;s<t.length;++s)if(this.isUnknown(t[s])){e=!0;break}return e?t.slice(0,1).concat(this.targetShape):t.slice(0,1).concat(this.fixUnknownDimension(t.slice(1),this.targetShape))}call(t,e){return at(()=>{this.invokeCallHook(t,e);const s=Mt(t),a=s.shape,r=a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape));return X(s,r)})}getConfig(){const t={targetShape:this.targetShape},e=super.getConfig();return Object.assign(t,e),t}}FR.className="Reshape";vt(FR);class LR extends Kt{constructor(t){if(super(t),t.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(t.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${t.dims} instead.`);const e=$a(1,t.dims.length+1);if(!Zt(t.dims.slice().sort(),e))throw new Error("Invalid permutation `dims`: "+JSON.stringify(t.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=t.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new ln({ndim:this.dims.length+1})]}computeOutputShape(t){t=le(t);const e=t.slice();return this.dims.forEach((s,a)=>{e[a+1]=t[s]}),e}call(t,e){return Jt(Mt(t),this.dimsIncludingBatch)}getConfig(){const t={dims:this.dims},e=super.getConfig();return Object.assign(t,e),t}}LR.className="Permute";vt(LR);class zR extends Kt{constructor(t){super(t??{}),this.supportsMasking=!0,t!=null?this.maskValue=t.maskValue==null?0:t.maskValue:this.maskValue=0}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={maskValue:this.maskValue};return Object.assign(e,t),e}computeMask(t,e){const s=Mt(t);return Lh(Io(s,this.maskValue),-1)}call(t,e){return at(()=>{this.invokeCallHook(t,e);const s=Mt(t),i=Lh(Io(s,this.maskValue),-1,!0);return H(s,wt(i,s.dtype))})}}zR.className="Masking";vt(zR);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class MR extends Kt{constructor(t){if(super(t),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",t.batchInputShape==null&&t.inputShape==null){let e=null;t.batchSize!=null&&(e=t.batchSize),t.inputLength==null?this.batchInputShape=[e,null]:this.batchInputShape=[e].concat(pe(t.inputLength))}this.inputDim=t.inputDim,yn(this.inputDim,"inputDim"),this.outputDim=t.outputDim,yn(this.outputDim,"outputDim"),this.embeddingsInitializer=De(t.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Oe(t.embeddingsRegularizer),this.activityRegularizer=Oe(t.activityRegularizer),this.embeddingsConstraint=cn(t.embeddingsConstraint),this.maskZero=t.maskZero,this.supportsMasking=t.maskZero,this.inputLength=t.inputLength}build(t){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(t){}computeMask(t,e){return at(()=>this.maskZero?(t=Mt(t),Io(t,se(t))):null)}computeOutputShape(t){if(t=le(t),this.inputLength==null)return[...t,this.outputDim];const e=pe(this.inputLength);if(e.length!==t.length-1)throw new K(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);{let s=0;for(let a=0;a<e.length;++a){const r=e[a],i=t[a+1];if(r!=null&&i!=null&&r!==i)throw new K(`"inputLength" is ${this.inputLength}, but received input shape has shape ${t}`);r==null&&(e[s]=i),s++}}return[t[0],...e,this.outputDim]}call(t,e){return at(()=>{this.invokeCallHook(t,e);let s=Mt(t);s.dtype!=="int32"&&(s=qa(s,"int32"));const a=yA(this.embeddings.read(),X(s,[s.size]));return X(a,le(this.computeOutputShape(s.shape)))})}getConfig(){const t={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:ze(this.embeddingsInitializer),embeddingsRegularizer:Te(this.embeddingsRegularizer),activityRegularizer:Te(this.activityRegularizer),embeddingsConstraint:un(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},e=super.getConfig();return Object.assign(t,e),t}}MR.className="Embedding";vt(MR);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ho extends Kt{constructor(t){super(t||{}),this.supportsMasking=!0}mergeFunction(t){throw new Wt}computeElementwiseOpOutputShape(t,e){if(t==null||e==null)return null;if(t.length<e.length)return this.computeElementwiseOpOutputShape(e,t);if(e.length===0)return t;const s=t.slice(0,t.length-e.length);for(let a=0;a<e.length;++a){const r=t[t.length-e.length+a],i=e[a];if(r==null||i==null||r<0||i<0)s.push(null);else if(r===1)s.push(i);else if(i===1)s.push(r);else{if(r!==i)throw new K("Operands could not be broadcast together with shapes "+JSON.stringify(t)+" "+JSON.stringify(e));s.push(r)}}return s}build(t){if(Array.isArray(t)&&!Array.isArray(t[0])&&(t=[le(t)]),t=t,t.length<2)throw new K(`A merge layer should be called on an Array of at least 2 inputs. Got ${t.length} input(s).`);let e=[];for(const r of t)r!=null&&r[0]!==null&&e.push(r[0]);if(e=mi(e),e.length>1)throw new K(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(t)}.`);let s=t[0]==null?null:t[0].slice(1);for(let r=1;r<t.length;++r){const i=t[r]==null?null:t[r].slice(1);s=this.computeElementwiseOpOutputShape(s,i)}const a=t.map(r=>r.length);t.indexOf(null)===-1&&mi(a).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(t,e){return at(()=>{if(t=t,this.reshapeRequired){const s=[],a=t.map(r=>r.rank);if(a.indexOf(null)===-1){const r=Ti(a);for(let i of t){const l=i.rank;for(let u=0;u<r-l;++u)i=Sf(i,1);s.push(i)}return this.mergeFunction(s)}else{let r=!1;for(const u of t){const h=u.rank;if(h==null){const f=u.shape,p=f[0],m=f.slice(1).concat([p]);let y=X(u,[p].concat(gi(f.slice(1))));y=Jt(y,[1,0]),y=X(y,m),s.push(y),r=!0}else if(h>1){const f=$a(1,h).concat([0]);s.push(Jt(u,f)),r=!0}else s.push(u)}let i=this.mergeFunction(s);const l=i.rank;if(r){if(l==null){const u=i.shape,h=u.length,f=u[h-1],p=[f].concat(u.slice(0,u.length-1));i=X(Jt(X(i,[-1,f]),[1,0]),p)}else if(l>1){const u=[l-1].concat($a(0,l-1));i=Jt(i,u)}}return i}}else return this.mergeFunction(t)})}computeOutputShape(t){t=t;let e;t[0]==null?e=null:e=t[0].slice(1);for(let a=1;a<t.length;++a){const r=t[a]==null?null:t[a].slice(1);e=this.computeElementwiseOpOutputShape(e,r)}let s=[];for(const a of t)a!=null&&a[0]!==null&&s.push(a[0]);return s=mi(s),s.length===1?e=s.concat(e):e=[null].concat(e),e}computeMask(t,e){return at(()=>{if(e==null)return null;if(!Array.isArray(e))throw new K("`mask` should be an Array");if(!Array.isArray(t))throw new K("`inputs` should be an Array");if(e.length!==t.length)throw new K(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${t.length} vs ${e.length})`);if(e.every(a=>a==null))return null;e=e.map(a=>a==null?a:Bn(a,0));let s=e[0];for(let a=1;a<e.length-1;++a)s=Ca(s,e[a]);return s})}}class BR extends Ho{constructor(t){super(t)}mergeFunction(t){return at(()=>{let e=t[0].clone();for(let s=1;s<t.length;++s)e=xt(e,t[s]);return e})}}BR.className="Add";vt(BR);class VR extends Ho{constructor(t){super(t)}mergeFunction(t){return at(()=>{let e=t[0].clone();for(let s=1;s<t.length;++s)e=H(e,t[s]);return e})}}VR.className="Multiply";vt(VR);class PR extends Ho{constructor(t){super(t)}mergeFunction(t){return at(()=>{let e=t[0].clone();for(let s=1;s<t.length;++s)e=xt(e,t[s]);return H(1/t.length,e)})}}PR.className="Average";vt(PR);class UR extends Ho{constructor(t){super(t)}mergeFunction(t){return at(()=>{let e=t[0];for(let s=1;s<t.length;++s)e=er(e,t[s]);return e})}}UR.className="Maximum";vt(UR);class GR extends Ho{constructor(t){super(t)}mergeFunction(t){return at(()=>{let e=t[0];for(let s=1;s<t.length;++s)e=Ni(e,t[s]);return e})}}GR.className="Minimum";vt(GR);class WR extends Ho{constructor(t){super(t),this.DEFAULT_AXIS=-1,t==null&&(t={}),this.axis=t.axis==null?this.DEFAULT_AXIS:t.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){if(!(Array.isArray(t)&&Array.isArray(t[0]))||t.length===1)throw new K("A `Concatenate` layer should be called on a list of at least 2 inputs");t=t;let e=!0;for(const a of t)if(a!=null){e=!1;break}if(e)return;const s=[];for(let a=0;a<t.length;++a){const r=t[a].slice();r.splice(this.axis,1);let i=!1;for(const l of s)if(Zt(l,r)){i=!0;break}i||s.push(r)}if(s.length>1)throw new K("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(t))}mergeFunction(t){return at(()=>Jw(t,this.axis))}computeOutputShape(t){if(!(Array.isArray(t)&&Array.isArray(t[0])))throw new K("A `Concatenate` layer should be called on a list of inputs.");const e=t,s=e[0].slice(),a=this.axis<0?s.length+this.axis:this.axis;for(const r of e.slice(1)){if(s[a]==null||r[a]==null){s[a]=null;break}s[a]+=r[a]}return s}computeMask(t,e){if(e==null)return null;if(!Array.isArray(e))throw new K("`mask` should be an array for Concatenate");if(!Array.isArray(t))throw new K("`inputs` should be an array for Concatenate");if(e.length!==t.length)throw new K(`Mismatch in the length of mask (${e.length}) and the legnth of inputs (${t.length})`);return at(()=>{let s=!0;if(e.forEach(i=>{if(i!=null){s=!1;return}}),s)return null;const a=[];for(let i=0;i<t.length;++i)e[i]==null?a.push(wt(Ns(t[i]),"bool")):e[i].rank<t[i].rank?a.push(Bn(e[i],-1)):a.push(e[i]);const r=He(a,this.axis);return oy(r,-1,!1)})}getConfig(){const t={axis:this.axis},e=super.getConfig();return Object.assign(t,e),t}}WR.className="Concatenate";vt(WR);function xh(n,t){for(;n<0;)n+=t;return n}function Jq(n,t,e){if(n.shape.length>3||t.shape.length>3)throw new Wt("batchDot is not implemented for tensors of 4D or higher rank yet");if(D(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),D(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),typeof e=="number"&&(e=[e,e]),n.dtype==="complex64"||t.dtype==="complex64")throw new Wt("batchDot is not implemented for complex64-type Tensors yet.");const s=n.shape.length,a=t.shape.length;e==null&&(e=[s-1,a-2]);const r=e;return at(()=>{let i;if(s>a){i=s-a;const u=[];for(let h=0;h<i;++h)u.push(1);t=X(t,t.shape.concat(u))}else if(a>s){i=a-s;const u=[];for(let h=0;h<i;++h)u.push(1);n=X(n,n.shape.concat(u))}else i=0;let l;if(n.shape.length===2&&t.shape.length===2)r[0]===r[1]?l=kt(H(n,t),r[0]):l=kt(H(Jt(n,[1,0]),t),r[1]);else{const u=r[0]!==n.shape.length-1,h=r[1]===t.shape.length-1;l=jt(n,t,u,h)}if(i>0){let u;s>a?u=s+a-3:u=s-1;const h=[];for(let f=u;f<u+i;++f)h.push(f);l=Fi(l,h)}return l.shape.length===1&&(l=Bn(l,1)),l})}class HR extends Ho{constructor(t){super(t),this.axes=t.axes,this.normalize=t.normalize==null?!1:t.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(t){D(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0],s=t[1];if(e.length>3||s.length>3)throw new Wt("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(e,s);if(e[a[0]]!==s[a[1]])throw new K(`Dimension incompatibility: ${e[a[0]]} !== ${s[a[1]]}`)}mergeFunction(t){if(t.length!==2)throw new K(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${t.length} input(s).`);let e=t[0],s=t[1],a;return Array.isArray(this.axes)?a=this.axes.map((r,i)=>xh(r,t[i].shape.length)):a=[xh(this.axes,e.shape.length),xh(this.axes,s.shape.length)],this.normalize&&(e=Fm(e,a[0]),s=Fm(s,a[1])),Jq(e,s,a)}interpretAxes(t,e){let s;return Array.isArray(this.axes)?s=this.axes:s=[xh(this.axes,t.length),xh(this.axes,e.length)],s}computeOutputShape(t){D(Array.isArray(t)&&t.length===2&&Array.isArray(t[0])&&Array.isArray(t[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const e=t[0].slice(),s=t[1].slice();if(e.length>3||s.length>3)throw new Wt("Dot layer does not support tensors of 4D or higher rank yet.");const a=this.interpretAxes(e,s);e.splice(a[0],1),s.splice(a[1],1),s.splice(0,1);const r=e.concat(s);return r.length===1&&r.push(1),r}computeMask(t,e){return null}getConfig(){const t={axes:this.axes,normalize:this.normalize},e=super.getConfig();return Object.assign(t,e),t}}HR.className="Dot";vt(HR);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class jR extends Kt{constructor(t){super(t),this.supportsMasking=!0,this.stddev=t.stddev}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={stddev:this.stddev};return Object.assign(e,t),e}call(t,e){return at(()=>{this.invokeCallHook(t,e);const s=Mt(t);return Tf(()=>xt(Ky(s.shape,0,this.stddev),s),()=>s,e.training||!1)})}}jR.className="GaussianNoise";vt(jR);class qR extends Kt{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return at(()=>{this.invokeCallHook(t,e);const s=Mt(t);return this.rate>0&&this.rate<1?Tf(()=>{const r=Math.sqrt(this.rate/(1-this.rate));return H(s,Ky(s.shape,1,r))},()=>s,e.training||!1):s})}}qR.className="GaussianDropout";vt(qR);class XR extends Kt{constructor(t){super(t),this.supportsMasking=!0,this.rate=t.rate,this.noiseShape=t.noiseShape}_getNoiseShape(t){return this.noiseShape||Mt(t).shape}computeOutputShape(t){return t}getConfig(){const t=super.getConfig(),e={rate:this.rate};return Object.assign(e,t),e}call(t,e){return at(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(t);return Tf(()=>{const r=Mt(t),l=-1.6732632423543772*1.0507009873554805;let u=Fr(_i(s),this.rate);u=qa(u,"float32");const h=((1-this.rate)*(1+this.rate*l**2))**-.5,f=-h*l*this.rate,p=xt(H(r,u),H(xt(u,-1),l));return xt(H(p,h),f)},()=>Mt(t),e.training||!1)}return t})}}XR.className="AlphaDropout";vt(XR);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Gh(n,t,e,s,a,r=.001){let i;if(n.rank===2)i=xv(n,t,e,s,a,r);else if(n.rank===3)i=vv(n,t,e,s,a,r);else if(n.rank===4)i=wv(n,t,e,s,a,r);else throw new Wt(`batchNormalization is not implemented for array of rank ${n.rank} yet`);return i}function t5(n,t,e,s,a=.001){return at(()=>{const r=cf(n,s),i=r.mean,l=r.variance;return[Gh(n,i,l,e,t,a),i,l]})}function e5(n,t,e,s,a=.001){return at(()=>{const r=cf(n,s),i=r.mean,l=r.variance,u=[];for(const b of $a(0,n.rank))s.indexOf(b)!==-1?u.push(1):u.push(n.shape[b]);const h=X(i,u),f=X(l,u),p=t==null?null:X(t,u),m=e==null?null:X(e,u);return[Gh(n,h,f,m,p,a),i,l]})}function n5(n,t,e,s,a=.001){return Zt(s.slice().sort(),$a(0,n.rank-1))?t5(n,t,e,s,a):e5(n,t,e,s,a)}class KR extends Kt{constructor(t){t==null&&(t={}),super(t),this.supportsMasking=!0,this.axis=t.axis==null?-1:t.axis,this.momentum=t.momentum==null?.99:t.momentum,this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=De(t.betaInitializer||"zeros"),this.gammaInitializer=De(t.gammaInitializer||"ones"),this.movingMeanInitializer=De(t.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=De(t.movingVarianceInitializer||"ones"),this.betaConstraint=cn(t.betaConstraint),this.gammaConstraint=cn(t.gammaConstraint),this.betaRegularizer=Oe(t.betaRegularizer),this.gammaRegularizer=Oe(t.gammaRegularizer)}build(t){t=le(t);const e=this.axis>=0?this.axis:this.axis+t.length,s=t[e];if(s==null)throw new K(`Axis ${e} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(t)}.`);this.inputSpec=[new ln({ndim:t.length,axes:{[e]:s}})];const a=[s];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(t,e){return at(()=>{const s=e.training==null?!1:e.training,a=Mt(t),r=a.shape,i=r.length,l=$a(0,i),u=this.axis>=0?this.axis:this.axis+i;l.splice(u,1);const h=Do(1,i);h[u]=r[u];const f=l.slice();f.sort();const p=!Zt(f,$a(0,i).slice(0,i-1)),m=()=>{if(p){const T=X(this.movingMean.read(),h),$=X(this.movingVariance.read(),h),C=this.center?X(this.beta.read(),h):null,I=this.scale?X(this.gamma.read(),h):null;return Gh(a,T,$,C,I,this.epsilon)}else return Gh(a,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!s)return m();const[y,b,v]=n5(a,this.gamma.read(),this.beta.read(),l,this.epsilon),w=(T,$,C)=>{at(()=>{const I=1-C,R=T.read(),F=H($t(R,$),I);T.write($t(R,F))})};return(()=>{w(this.movingMean,b,this.momentum),w(this.movingVariance,v,this.momentum)})(),y})}getConfig(){const t={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ze(this.betaInitializer),gammaInitializer:ze(this.gammaInitializer),movingMeanInitializer:ze(this.movingMeanInitializer),movingVarianceInitializer:ze(this.movingVarianceInitializer),betaRegularizer:Te(this.betaRegularizer),gammaRegularizer:Te(this.gammaRegularizer),betaConstraint:un(this.betaConstraint),gammaConstraint:un(this.gammaConstraint)},e=super.getConfig();return Object.assign(t,e),t}}KR.className="BatchNormalization";vt(KR);class YR extends Kt{constructor(t){if(t==null&&(t={}),super(t),this.axis=t.axis==null?-1:t.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=t.epsilon==null?.001:t.epsilon,this.center=t.center==null?!0:t.center,this.scale=t.scale==null?!0:t.scale,this.betaInitializer=De(t.betaInitializer||"zeros"),this.gammaInitializer=De(t.gammaInitializer||"ones"),this.betaRegularizer=Oe(t.betaRegularizer),this.gammaRegularizer=Oe(t.gammaRegularizer),this.supportsMasking=!0}build(t){t=le(t);const e=t.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=e);for(const r of this.axis)if(r<0||r>=e)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==mi(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(r=>t[r]),a=!0;this.scale?this.gamma=this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,a):this.gamma=null,this.center?this.beta=this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,a):this.beta=null,this.built=!0}call(t,e){const s=Mt(t),a=s.shape,r=a.length;return at(()=>{let{mean:l,variance:u}=cf(s,this.axis,!0);const h=Do(1,r);for(const v of this.axis)h[v]=a[v];const f=v=>v!=null&&v.shape.length!==r?X(v,h):v;let p=this.scale?f(this.gamma.read()):null,m=this.center?f(this.beta.read()):null;const y=[],b=[];for(let v=0;v<r;++v)this.axis.indexOf(v)!==-1?(y.push(a[v]),b.push(1)):(y.push(1),b.push(a[v]));return l=Ms(l,y),u=Ms(u,y),p!=null&&(p=Ms(p,b)),m!=null&&(m=Ms(m,b)),Gh(s,l,u,m,p,this.epsilon)})}getConfig(){const t={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ze(this.betaInitializer),gammaInitializer:ze(this.gammaInitializer),betaRegularizer:Te(this.betaRegularizer),gammaRegularizer:Te(this.gammaRegularizer)},e=super.getConfig();return Object.assign(t,e),t}}YR.className="LayerNormalization";vt(YR);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function s5(n,t,e){return at(()=>{if(n.rank!==4)throw new K(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(t==null&&(t=[[1,1],[1,1]]),t.length!==2||t[0].length!==2||t[1].length!==2)throw new K("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(e==null&&(e=ka()),e!=="channelsLast"&&e!=="channelsFirst")throw new K(`Unknown data format: ${e}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return e==="channelsFirst"?s=[[0,0],[0,0],t[0],t[1]]:s=[[0,0],t[0],t[1],[0,0]],Lr(n,s)})}class ZR extends Kt{constructor(t){if(t==null&&(t={}),super(t),this.dataFormat=t.dataFormat==null?ka():t.dataFormat,t.padding==null)this.padding=[[1,1],[1,1]];else if(typeof t.padding=="number")this.padding=[[t.padding,t.padding],[t.padding,t.padding]];else{if(t.padding=t.padding,t.padding.length!==2)throw new K(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${t.padding.length} array.`);let e,s;if(typeof t.padding[0]=="number")e=[t.padding[0],t.padding[0]],s=[t.padding[1],t.padding[1]];else{if(t.padding=t.padding,t.padding[0].length!==2)throw new K(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${t.padding[0].length} array.`);if(e=t.padding[0],t.padding[1].length!==2)throw new K(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${t.padding[1].length} array.`);s=t.padding[1]}this.padding=[e,s]}this.inputSpec=[new ln({ndim:4})]}computeOutputShape(t){t=le(t);let e,s;return this.dataFormat==="channelsFirst"?(t[2]!=null&&t[2]>=0?e=t[2]+this.padding[0][0]+this.padding[0][1]:e=null,t[3]!=null&&t[3]>=0?s=t[3]+this.padding[1][0]+this.padding[1][1]:s=null,[t[0],t[1],e,s]):(t[1]!=null&&t[1]>=0?e=t[1]+this.padding[0][0]+this.padding[0][1]:e=null,t[2]!=null&&t[2]>=0?s=t[2]+this.padding[1][0]+this.padding[1][1]:s=null,[t[0],e,s,t[3]])}call(t,e){return at(()=>s5(Mt(t),this.padding,this.dataFormat))}getConfig(){const t={padding:this.padding,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}ZR.className="ZeroPadding2D";vt(ZR);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function sb(n,t,e,s,a,r){return at(()=>{Xe(a),fA(r),Ws(s),e==null&&(e=[1,1]),s==null&&(s="valid"),a==null&&(a=ka()),r==null&&(r="max"),n=dS(n,a);let i;const l=s==="same"?"same":"valid";return r==="max"?i=uf(n,t,e,l):i=tf(n,t,e,l),a==="channelsFirst"&&(i=Jt(i,[0,3,1,2])),i})}function QR(n,t,e,s,a,r){return at(()=>{Xe(a),fA(r),Ws(s),e==null&&(e=[1,1,1]),s==null&&(s="valid"),a==null&&(a=ka()),r==null&&(r="max"),n=mR(n,a);let i;const l=s==="same"?"same":"valid";return r==="max"?i=Wv(n,t,e,l):i=bv(n,t,e,l),a==="channelsFirst"&&(i=Jt(i,[0,4,1,2,3])),i})}class JR extends Kt{constructor(t){if(t.poolSize==null&&(t.poolSize=2),super(t),typeof t.poolSize=="number")this.poolSize=[t.poolSize];else if(Array.isArray(t.poolSize)&&t.poolSize.length===1&&typeof t.poolSize[0]=="number")this.poolSize=t.poolSize;else throw new K(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.poolSize)}`);if(yn(this.poolSize,"poolSize"),t.strides==null)this.strides=this.poolSize;else if(typeof t.strides=="number")this.strides=[t.strides];else if(Array.isArray(t.strides)&&t.strides.length===1&&typeof t.strides[0]=="number")this.strides=t.strides;else throw new K(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(t.strides)}`);yn(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,Ws(this.padding),this.inputSpec=[new ln({ndim:3})]}computeOutputShape(t){t=le(t);const e=Ta(t[1],this.poolSize[0],this.padding,this.strides[0]);return[t[0],e,t[2]]}call(t,e){return at(()=>{this.invokeCallHook(t,e),t=Sf(Mt(t),2);const s=this.poolingFunction(Mt(t),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Fi(s,[2])})}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides},e=super.getConfig();return Object.assign(t,e),t}}class tD extends JR{constructor(t){super(t)}poolingFunction(t,e,s,a,r){return Xe(r),Ws(a),sb(t,e,s,a,r,"max")}}tD.className="MaxPooling1D";vt(tD);class eD extends JR{constructor(t){super(t)}poolingFunction(t,e,s,a,r){return Xe(r),Ws(a),sb(t,e,s,a,r,"avg")}}eD.className="AveragePooling1D";vt(eD);class nD extends Kt{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==2)throw new K(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides];yn(this.poolSize,"poolSize"),yn(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Xe(this.dataFormat),Ws(this.padding),this.inputSpec=[new ln({ndim:4})]}computeOutputShape(t){t=le(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2];return e=Ta(e,this.poolSize[0],this.padding,this.strides[0]),s=Ta(s,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,s]:[t[0],e,s,t[3]]}call(t,e){return at(()=>(this.invokeCallHook(t,e),this.poolingFunction(Mt(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class sD extends nD{constructor(t){super(t)}poolingFunction(t,e,s,a,r){return Xe(r),Ws(a),sb(t,e,s,a,r,"max")}}sD.className="MaxPooling2D";vt(sD);class aD extends nD{constructor(t){super(t)}poolingFunction(t,e,s,a,r){return Xe(r),Ws(a),sb(t,e,s,a,r,"avg")}}aD.className="AveragePooling2D";vt(aD);class rD extends Kt{constructor(t){if(t.poolSize==null&&(t.poolSize=[2,2,2]),super(t),this.poolSize=Array.isArray(t.poolSize)?t.poolSize:[t.poolSize,t.poolSize,t.poolSize],t.strides==null)this.strides=this.poolSize;else if(Array.isArray(t.strides)){if(t.strides.length!==3)throw new K(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${t.strides.length}.`);this.strides=t.strides}else this.strides=[t.strides,t.strides,t.strides];yn(this.poolSize,"poolSize"),yn(this.strides,"strides"),this.padding=t.padding==null?"valid":t.padding,this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Xe(this.dataFormat),Ws(this.padding),this.inputSpec=[new ln({ndim:5})]}computeOutputShape(t){t=le(t);let e=this.dataFormat==="channelsFirst"?t[2]:t[1],s=this.dataFormat==="channelsFirst"?t[3]:t[2],a=this.dataFormat==="channelsFirst"?t[4]:t[3];return e=Ta(e,this.poolSize[0],this.padding,this.strides[0]),s=Ta(s,this.poolSize[1],this.padding,this.strides[1]),a=Ta(a,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[t[0],t[1],e,s,a]:[t[0],e,s,a,t[4]]}call(t,e){return at(()=>(this.invokeCallHook(t,e),this.poolingFunction(Mt(t),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const t={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class iD extends rD{constructor(t){super(t)}poolingFunction(t,e,s,a,r){return Xe(r),Ws(a),QR(t,e,s,a,r,"max")}}iD.className="MaxPooling3D";vt(iD);class oD extends rD{constructor(t){super(t)}poolingFunction(t,e,s,a,r){return Xe(r),Ws(a),QR(t,e,s,a,r,"avg")}}oD.className="AveragePooling3D";vt(oD);class lD extends Kt{constructor(t){super(t),this.inputSpec=[new ln({ndim:3})]}computeOutputShape(t){return[t[0],t[2]]}call(t,e){throw new Wt}}class uD extends lD{constructor(t){super(t||{})}call(t,e){return at(()=>{const s=Mt(t);return Le(s,1)})}}uD.className="GlobalAveragePooling1D";vt(uD);class cD extends lD{constructor(t){super(t||{})}call(t,e){return at(()=>{const s=Mt(t);return Ps(s,1)})}}cD.className="GlobalMaxPooling1D";vt(cD);class hD extends Kt{constructor(t){super(t),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Xe(this.dataFormat),this.inputSpec=[new ln({ndim:4})]}computeOutputShape(t){return t=t,this.dataFormat==="channelsLast"?[t[0],t[3]]:[t[0],t[1]]}call(t,e){throw new Wt}getConfig(){const t={dataFormat:this.dataFormat},e=super.getConfig();return Object.assign(t,e),t}}class dD extends hD{call(t,e){return at(()=>{const s=Mt(t);return this.dataFormat==="channelsLast"?Le(s,[1,2]):Le(s,[2,3])})}}dD.className="GlobalAveragePooling2D";vt(dD);class fD extends hD{call(t,e){return at(()=>{const s=Mt(t);return this.dataFormat==="channelsLast"?Ps(s,[1,2]):Ps(s,[2,3])})}}fD.className="GlobalMaxPooling2D";vt(fD);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class pD extends Kt{constructor(t){super(t),this.layer=t.layer}build(t){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(t){this.layer!=null&&(this.layer.trainable=t)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(t){this.layer.setWeights(t)}getConfig(){const t={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},e=super.getConfig();return Object.assign(t,e),t}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(t)}static fromConfig(t,e,s={}){const a=e.layer,r=Cr(a,s);delete e.layer;const i={layer:r};return Object.assign(i,e),new t(i)}}class mD extends pD{constructor(t){super(t),this.supportsMasking=!0}build(t){if(t=le(t),t.length<3)throw new K(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(t)}`);this.inputSpec=[{shape:t}];const e=[t[0]].concat(t.slice(2));this.layer.built||(this.layer.build(e),this.layer.built=!0),super.build(t)}computeOutputShape(t){t=le(t);const e=[t[0]].concat(t.slice(2)),s=this.layer.computeOutputShape(e),a=t[1];return[s[0],a].concat(s.slice(1))}call(t,e){return at(()=>(t=Mt(t),TR((i,l)=>[Mt(this.layer.call(i,e)),[]],t,[],!1,null,null,!1,!0)[1]))}}mD.className="TimeDistributed";vt(mD);function a5(n){Wo(Cj,"BidirectionalMergeMode",n)}const r5="concat";class gD extends pD{constructor(t){super(t);const e=t.layer.getConfig(),s={};s.className=t.layer.getClassName(),s.config=e,this.forwardLayer=Cr(s),e.goBackwards=e.goBackwards!==!0;const a={};if(a.className=t.layer.getClassName(),a.config=e,this.backwardLayer=Cr(a),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=t.mergeMode===void 0?r5:t.mergeMode,a5(this.mergeMode),t.weights)throw new Wt("weights support is not implemented for Bidirectional layer yet.");this._stateful=t.layer.stateful,this.returnSequences=t.layer.returnSequences,this.returnState=t.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=t.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(t){this._trainable=t,this.forwardLayer!=null&&(this.forwardLayer.trainable=t),this.backwardLayer!=null&&(this.backwardLayer.trainable=t)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(t){const e=t.length,s=Math.floor(e/2);this.forwardLayer.setWeights(t.slice(0,s)),this.backwardLayer.setWeights(t.slice(s))}computeOutputShape(t){let e=this.forwardLayer.computeOutputShape(t);Array.isArray(e)&&Array.isArray(e[0])||(e=[e]),e=e;let s,a,r;return this.returnState&&(r=e.slice(1)),s=e[0],s=s,this.mergeMode==="concat"?(s[s.length-1]*=2,a=[s]):this.mergeMode==null?a=[s,s.slice()]:a=[s],this.returnState?this.mergeMode==null?a.concat(r).concat(r.slice()):[s].concat(r).concat(r.slice()):ns(a)}apply(t,e){let s=e==null?null:e.initialState,a=e==null?null:e.constants;e==null&&(e={});const r=NR(t,s,a,this.numConstants);if(t=r.inputs,s=r.initialState,a=r.constants,Array.isArray(t)&&(s=t.slice(1),t=t[0]),(s==null||s.length===0)&&a==null)return super.apply(t,e);const i=[],l=[];if(s!=null){const h=s.length;if(h%2>0)throw new K("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");e.initialState=s,i.push(...s);const f=s.map(p=>new ln({shape:p.shape}));this.forwardLayer.stateSpec=f.slice(0,h/2),this.backwardLayer.stateSpec=f.slice(h/2),l.push(...f)}if(a!=null)throw new Wt("Support for constants in Bidirectional layers is not implemented yet.");const u=i[0]instanceof Ja;for(const h of i)if(h instanceof Ja!==u)throw new K("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(u){const h=[t].concat(i),f=this.inputSpec.concat(l),p=this.inputSpec;this.inputSpec=f;const m=super.apply(h,e);return this.inputSpec=p,m}else return super.apply(t,e)}call(t,e){return at(()=>{const s=e.initialState;let a,r;if(s==null)a=this.forwardLayer.call(t,e),r=this.backwardLayer.call(t,e);else{const u=s.slice(0,s.length/2),h=s.slice(s.length/2);a=this.forwardLayer.call(t,Object.assign(e,{initialState:u})),r=this.backwardLayer.call(t,Object.assign(e,{initialState:h}))}let i;this.returnState&&(Array.isArray(a)&&(i=a.slice(1).concat(r.slice(1))),a=a[0],r=r[0]),this.returnSequences&&(r=Us(r,1));let l;return this.mergeMode==="concat"?l=Jw([a,r]):this.mergeMode==="sum"?l=xt(a,r):this.mergeMode==="ave"?l=H(.5,xt(a,r)):this.mergeMode==="mul"?l=H(a,r):this.mergeMode==null&&(l=[a,r]),this.returnState?this.mergeMode==null?l.concat(i):[l].concat(i):l})}resetStates(t){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(t){xo(this.forwardLayer.name,()=>{this.forwardLayer.build(t)}),xo(this.backwardLayer.name,()=>{this.backwardLayer.build(t)}),this.built=!0}computeMask(t,e){Array.isArray(e)&&(e=e[0]);let s;if(this.returnSequences?this.mergeMode==null?s=[e,e]:s=e:this.mergeMode==null?s=[null,null]:s=null,this.returnState){const r=this.forwardLayer.states.map(i=>null);return Array.isArray(s)?s.concat(r).concat(r):[s].concat(r).concat(r)}else return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(t){super.setFastWeightInitDuringBuild(t),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(t),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(t)}getConfig(){const t={mergeMode:this.mergeMode},e=super.getConfig();return Object.assign(t,e),t}static fromConfig(t,e){const s=Cr(e.layer);if(delete e.layer,e.numConstants!=null)throw new Wt("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const a=e;return a.layer=s,new t(a)}}gD.className="Bidirectional";vt(gD);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class yD extends Kt{constructor(t){super(t),this.scale=t.scale,t.offset?this.offset=t.offset:this.offset=0}getConfig(){const t={scale:this.scale,offset:this.offset},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return at(()=>(t=Mt(t),t.dtype!=="float32"&&(t=qa(t,"float32")),xt(H(t,this.scale),this.offset)))}}yD.className="Rescaling";vt(yD);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const{resizeBilinear:i5,cropAndResize:o5}=wa;class bD extends Kt{constructor(t){super(t),this.height=t.height,this.width=t.width}centerCrop(t,e,s,a,r,i,l,u){return at(()=>{let h,f=!1;const p=e/i,m=s/l,y=(a+e)/i,b=(r+s)/l,v=[p,m,y,b],w=[];t.rank===3?(f=!0,h=us([t])):h=t;for(let I=0;I<h.shape[0];I++)w.push(v);const S=oa(w,[w.length,4]),T=Eo(0,w.length,1,"int32"),C=o5(h,S,T,[a,r],"nearest");return qa(f?Mt(Gs(C)):C,u)})}upsize(t,e,s,a){return at(()=>{const r=i5(t,[e,s]);return qa(r,a)})}call(t,e){return at(()=>{const s=Mt(t),a=s.dtype,r=s.shape,i=r[r.length-3],l=r[r.length-2];let u=0;i!==this.height&&(u=Math.floor((i-this.height)/2));let h=0;return l!==this.width&&(h=Math.floor((l-this.width)/2),h===0&&(h=1)),u>=0&&h>=0?this.centerCrop(s,u,h,this.height,this.width,i,l,a):this.upsize(t,this.height,this.width,a)})}getConfig(){const t={height:this.height,width:this.width},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){t=le(t);const e=t.length-3,s=t.length-2;return t[e]=this.height,t[s]=this.width,t}}bD.className="CenterCrop";vt(bD);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function l5(n,t,e,s){let a=Mt(n);if(a.dtype!=="int32"&&(a=qa(a,"int32")),t==="int")return a;const r=a.shape;if(a.rank===0&&(a=Bn(a,-1)),t==="oneHot"&&a.shape[a.shape.length-1]!==1&&(a=Bn(a,-1)),a.rank>2)throw new K(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${r} which would result in output rank ${a.rank}.`);const i=["multiHot","oneHot"].includes(t),l=a;let u;if(typeof s<"u"&&t==="count"?u=km(l,s,e,i):u=km(l,[],e,i),t!=="tfIdf")return u;if(s)return H(u,s);throw new K("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class xD extends Kt{constructor(t){super(t),this.numTokens=t.numTokens,t.outputMode?this.outputMode=t.outputMode:this.outputMode="multiHot"}getConfig(){const t={numTokens:this.numTokens,outputMode:this.outputMode},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){return t=le(t),t==null?[this.numTokens]:this.outputMode==="oneHot"&&t[t.length-1]!==1?(t.push(this.numTokens),t):(t[t.length-1]=this.numTokens,t)}call(t,e){return at(()=>{t=Mt(t),t.dtype!=="int32"&&(t=qa(t,"int32"));let s;if(typeof e.countWeights<"u"){if(this.outputMode!=="count")throw new K(`countWeights is not used when outputMode !== count.
              Received countWeights=${e.countWeights}`);s=Mt(e.countWeights)}const a=Ps(t),r=ql(t),i=hs(this.numTokens,a).bufferSync().get(0),l=Fr(r,0).bufferSync().get(0);if(!(i&&l))throw new K(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return l5(t,this.outputMode,this.numTokens,s)})}}xD.className="CategoryEncoding";vt(xD);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const u5=["bilinear","nearest"],G$=new Set(u5);class vD extends Kt{constructor(t){if(super(t),this.height=t.height,this.width=t.width,t.interpolation)if(G$.has(t.interpolation))this.interpolation=t.interpolation;else throw new K(`Invalid interpolation parameter: ${t.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=!!t.cropToAspectRatio}computeOutputShape(t){t=le(t);const e=t[2];return[this.height,this.width,e]}getConfig(){const t={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},e=super.getConfig();return Object.assign(t,e),t}call(t,e){return at(()=>{const s=[this.height,this.width];if(this.interpolation==="bilinear")return wa.resizeBilinear(t,s,!this.cropToAspectRatio);if(this.interpolation==="nearest")return wa.resizeNearestNeighbor(t,s,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...G$]} are supported`)})}}vD.className="Resizing";vt(vD);/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class wD{constructor(t){this.seed=t}next(){if(this.seed!==void 0)return this.seed++}}wD.className="RandomSeed";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class SD extends Kt{constructor(t){super(t),this.randomGenerator=new wD(t.seed)}getConfig(){const t={seed:this.randomGenerator.seed},e=super.getConfig();return Object.assign(t,e),t}}SD.className="BaseRandomLayer";/**
 * @license
 * Copyright 2023 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const c5=["bilinear","nearest"],W$=new Set(c5);class ND extends SD{constructor(t){super(t);const{factor:e,interpolation:s="bilinear"}=t;if(this.factor=e,Array.isArray(this.factor)&&this.factor.length===2)this.widthLower=this.factor[0],this.widthUpper=this.factor[1];else if(!Array.isArray(this.factor)&&this.factor>0)this.widthLower=-this.factor,this.widthUpper=this.factor;else throw new K(`Invalid factor: ${this.factor}. Must be positive number or tuple of 2 numbers`);if(this.widthLower<-1||this.widthUpper<-1)throw new K(`factor must have values larger than -1. Got: ${this.factor}`);if(this.widthUpper<this.widthLower)throw new K(`factor cannot have upper bound less than lower bound.
        Got upper bound: ${this.widthUpper}.
        Got lower bound: ${this.widthLower}
      `);if(s)if(W$.has(s))this.interpolation=s;else throw new K(`Invalid interpolation parameter: ${s} is not implemented`)}getConfig(){const t={factor:this.factor,interpolation:this.interpolation},e=super.getConfig();return Object.assign(t,e),t}computeOutputShape(t){t=le(t);const e=t[2];return[this.imgHeight,-1,e]}call(t,e){return at(()=>{const s=Mt(t);this.imgHeight=s.shape[s.shape.length-3];const a=s.shape[s.shape.length-2];this.widthFactor=_i([1],1+this.widthLower,1+this.widthUpper,"float32",this.randomGenerator.next());let r=this.widthFactor.dataSync()[0]*a;r=Math.round(r);const i=[this.imgHeight,r];switch(this.interpolation){case"bilinear":return wa.resizeBilinear(t,i);case"nearest":return wa.resizeNearestNeighbor(t,i);default:throw new Error(`Interpolation is ${this.interpolation}
          but only ${[...W$]} are supported`)}})}}ND.className="RandomWidth";vt(ND);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var H$;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})(H$||(H$={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function It(n,t){Array.isArray(n)||(n=[n]),n.forEach(e=>{e!=null&&D(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h5=Oy;class ab extends Ym{nextDataId(){return ab.nextDataId++}constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new H1(this,ba())}write(t,e,s){this.firstUse&&(this.firstUse=!1,rt().get("IS_NODE")&&Ls(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const a={id:this.nextDataId()};return this.data.set(a,{values:t,dtype:s,refCount:1}),a}makeTensorInfo(t,e,s){let a;if(e==="string"&&s!=null&&s.length>0&&Ua(s[0])){const r=s.map(i=>Wa(i));a=this.write(r,t,e)}else a=this.write(s,t,e);return{dataId:a,shape:t,dtype:e}}refCount(t){return this.data.has(t)?this.data.get(t).refCount:0}incRef(t){const e=this.data.get(t);e.refCount++}decRef(t){if(this.data.has(t)){const e=this.data.get(t);e.refCount--}}move(t,e,s,a,r){this.data.set(t,{values:e,dtype:a,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(t){return this.readSync(t)}readSync(t){const{dtype:e,complexTensorInfos:s}=this.data.get(t);if(e==="complex64"){const a=this.readSync(s.real.dataId),r=this.readSync(s.imag.dataId);return Er(a,r)}return Ok(this.data.get(t).values,e)}bufferSync(t){const e=this.readSync(t.dataId);if(t.dtype==="string")try{const s=e.map(a=>$r(a));return Gt(t.shape,t.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Gt(t.shape,t.dtype,e)}makeOutput(t,e,s){return ba().makeTensorFromTensorInfo(this.makeTensorInfo(e,s,t),this)}disposeData(t,e=!1){if(this.data.has(t)){if(this.data.get(t).refCount--,!e&&this.data.get(t).refCount>0)return!1;const{complexTensorInfos:s}=this.data.get(t);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.data.delete(t)}return!0}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}async time(t){const e=jn();return t(),{kernelMs:jn()-e}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(t){It([t],"where");const e=this.readSync(t.dataId);return h5(t.shape,e)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}ab.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TD(n){const t=new Float32Array(n.length);for(let e=0;e<n.length;++e)t[e]=Math.abs(n[e]);return t}const d5=n=>{const{x:t}=n.inputs,e=n.backend;It(t,"abs");let s=new Float32Array(ht(t.shape));const a=e.data.get(t.dataId).values;return s=TD(a),e.makeOutput(s,t.shape,t.dtype)},f5={kernelName:Xh,backendName:"cpu",kernelFunc:d5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ke(n){return(t,e,s,a,r)=>{const i=Ut(t,e),l=i.length,u=Ot(i),h=ht(i),f=bn(r,h),p=t.length,m=e.length,y=Ot(t),b=Ot(e),v=ko(t,i),w=ko(e,i);if(v.length+w.length===0)for(let S=0;S<f.length;++S)f[S]=n(s[S%s.length],a[S%a.length]);else for(let S=0;S<f.length;++S){const T=Mo(S,l,u),$=T.slice(-p);v.forEach(F=>$[F]=0);const C=Sa($,p,y),I=T.slice(-m);w.forEach(F=>I[F]=0);const R=Sa(I,m,b);f[S]=n(s[C],a[R])}return[f,i]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ws(n){const{inputs:t,backend:e}=n,{real:s,imag:a}=t,r=e.data.get(s.dataId).values,i=e.data.get(a.dataId).values,l=e.makeTensorInfo(s.shape,"complex64"),u=e.data.get(l.dataId);return u.complexTensorInfos={real:e.makeTensorInfo(s.shape,"float32",r),imag:e.makeTensorInfo(a.shape,"float32",i)},l}const p5={kernelName:rg,backendName:"cpu",kernelFunc:ws};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vm(n,t,e="float32"){if(e==="complex64"){const a=Vm(n,t,"float32"),r=Vm(n,t,"float32");return ws({inputs:{real:a,imag:r},backend:n})}const s=En(ht(t),e);return n.makeTensorInfo(t,e,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tr(n){const{inputs:t,backend:e}=n,{x:s}=t;return e.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const m5={kernelName:Cu,backendName:"cpu",kernelFunc:tr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oo(n){const{inputs:t,backend:e}=n,{input:s}=t,a=e.data.get(s.dataId).complexTensorInfos.real,r=e.data.get(a.dataId).values;return e.makeTensorInfo(a.shape,a.dtype,r)}const g5={kernelName:Mg,backendName:"cpu",kernelFunc:Oo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CD(n,t,e,s){if(s==="int32"){const a=Int32Array.from(n);return[t,"int32",a]}if(s==="bool"){const a=Ei([0],e),[r,i]=Ke((l,u)=>l!==u?1:0)(t,[],n,a,"bool");return[i,"bool",r]}throw new Error(`Error in Cast: failed to cast ${e} to ${s}`)}function Ii(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{dtype:r}=s;if(r==="complex64"){if(a.dtype==="complex64")return tr({inputs:{x:a},backend:e});const f=Vm(e,a.shape,a.dtype),p=Ii({inputs:{x:a},backend:e,attrs:{dtype:"float32"}}),m=ws({inputs:{real:p,imag:f},backend:e});return e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),m}if(a.dtype==="complex64"){const f=Oo({inputs:{input:a},backend:e}),p=Ii({inputs:{x:f},backend:e,attrs:{dtype:r}});return e.disposeIntermediateTensorInfo(f),p}if(!X1(a.dtype,r)){const f=tr({inputs:{x:a},backend:e});return{dataId:f.dataId,shape:f.shape,dtype:r}}const i=e.data.get(a.dataId).values,[l,u,h]=CD(i,a.shape,a.dtype,r);return e.makeTensorInfo(l,u,h)}const y5={kernelName:du,backendName:"cpu",kernelFunc:Ii};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hn(n,t,e,s){return e==null?({inputs:a,backend:r})=>{const{a:i,b:l}=a,u=r;It([i,l],n);const h=u.data.get(i.dataId).values,f=u.data.get(l.dataId).values,p=i.dtype==="string"?Ar(h):h,m=i.dtype==="string"?Ar(f):f,y=s||i.dtype,[b,v]=t(i.shape,l.shape,p,m,y);return u.makeTensorInfo(v,y,b)}:({inputs:a,backend:r})=>{const{a:i,b:l}=a,u=r;if(i.dtype==="complex64"||l.dtype==="complex64"){const h=Ii({inputs:{x:i},backend:u,attrs:{dtype:"complex64"}}),f=u.data.get(h.dataId),p=f.complexTensorInfos.real,m=f.complexTensorInfos.imag,y=u.data.get(p.dataId).values,b=u.data.get(m.dataId).values,v=Ii({inputs:{x:l},backend:u,attrs:{dtype:"complex64"}}),w=u.data.get(v.dataId),S=w.complexTensorInfos.real,T=w.complexTensorInfos.imag,$=u.data.get(S.dataId).values,C=u.data.get(T.dataId).values,[I,R,F]=e(i.shape,l.shape,y,b,$,C),B=u.makeTensorInfo(F,"float32",I),L=u.makeTensorInfo(F,"float32",R),z=ws({inputs:{real:B,imag:L},backend:u});return u.disposeIntermediateTensorInfo(h),u.disposeIntermediateTensorInfo(v),u.disposeIntermediateTensorInfo(B),u.disposeIntermediateTensorInfo(L),z}else{const h=u.data.get(i.dataId).values,f=u.data.get(l.dataId).values,p=s||i.dtype,[m,y]=t(i.shape,l.shape,h,f,p);return u.makeTensorInfo(y,p,m)}}}function bS(n){return(t,e,s,a,r,i)=>{const l=Ut(t,e),u=ht(l),h=l.length,f=Ot(l),p=bn("float32",u),m=bn("float32",u),y=ko(t,l),b=ko(e,l),v=Er(s,a),w=Er(r,i),S=t.length,T=Ot(t),$=e.length,C=Ot(e);if(y.length+b.length===0)for(let I=0;I<p.length;I++){const R=I%v.length,F=I%w.length,B=n(v[R*2],v[R*2+1],w[F*2],w[F*2+1]);p[I]=B.real,m[I]=B.imag}else for(let I=0;I<p.length;I++){const R=Mo(I,h,f),F=R.slice(-S);y.forEach(G=>F[G]=0);const B=Sa(F,S,T),L=R.slice(-$);b.forEach(G=>L[G]=0);const z=Sa(L,$,C),A=n(v[B*2],v[B*2+1],w[z*2],w[z*2+1]);p[I]=A.real,m[I]=A.imag}return[p,m,l]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $D=Ke((n,t)=>n+t),b5=bS((n,t,e,s)=>({real:n+e,imag:t+s})),tu=hn(Bo,$D,b5),x5={kernelName:Bo,backendName:"cpu",kernelFunc:tu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xS(n,t,e,s,a){const r=ht(s),i=En(a,e);for(let l=0;l<n.length;l++){const u=n[l];if(u<0)throw new Error("Input x must be non-negative!");u>=a||(r>0?i[u]+=t[l]:i[u]+=1)}return i}function kD(n,t,e,s=!1){const a=n.shape[0],r=n.shape[1],i=Gt([a,e],t.dtype);for(let l=0;l<a;l++)for(let u=0;u<r;u++){const h=n.get(l,u);if(h<0)throw new Error("Input x must be non-negative!");h>=e||(s?i.set(1,l,h):t.size>0?i.set(i.get(l,h)+t.get(l,u),l,h):i.set(i.get(l,h)+1,l,h))}return i}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ID=Ke((n,t)=>n&t),v5=hn(nd,ID),w5={kernelName:nd,backendName:"cpu",kernelFunc:v5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nr(n){return(t,e,s)=>{const a=Pe(e,t.length);for(let r=0;r<t.length;++r)a[r]=n(t[r],s);return a}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function me(n,t,e){const s=nr(t);return Mi(n,s,e)}function Mi(n,t,e){return({inputs:s,attrs:a,backend:r})=>{const{x:i}=s;It(i,n);const l=r,u=l.data.get(i.dataId).values;let h;if(i.dtype==="string"){if(!Array.isArray(u))throw new Error("String tensor's value was not an instance of Array");h=Ar(u)}else h=u;const f=e||i.dtype,p=t(h,f,a);return l.makeTensorInfo(i.shape,f,p)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ED=nr(n=>Math.ceil(n)),S5=Mi(fu,ED),N5={kernelName:fu,backendName:"cpu",kernelFunc:S5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AD(n,t,e,s){const a=Pe(e,ht(t));if(s&&e!=="string"){let r=0;n.forEach(i=>{const l=ht(i.shape);a.set(i.vals,r),r+=l})}else{let r=0;n.forEach(i=>{const l=e==="string"?Ar(i.vals):i.vals;let u=0;for(let h=0;h<i.shape[0];++h){const f=h*t[1]+r;for(let p=0;p<i.shape[1];++p)a[f+p]=l[u++]}r+=i.shape[1]})}return a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RD=Ke((n,t)=>n===t?1:0),DD=hn(hd,RD,null,"bool"),T5={kernelName:hd,backendName:"cpu",kernelFunc:DD};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OD=nr(n=>Math.exp(n)),_D=Mi(vu,OD,"float32"),C5={kernelName:vu,backendName:"cpu",kernelFunc:_D};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FD=nr(n=>Math.expm1(n)),$5=Mi(wu,FD),k5={kernelName:wu,backendName:"cpu",kernelFunc:$5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LD=nr(n=>Math.floor(n)),I5=Mi(Su,LD),E5={kernelName:Su,backendName:"cpu",kernelFunc:I5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zD=Ke((n,t)=>Math.floor(n/t)),A5=hn(Nu,zD,null,"int32"),R5={kernelName:Nu,backendName:"cpu",kernelFunc:A5};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MD(n,t,e,s,a,r,i,l,u){const h=Gt([s,r],e);for(let f=0;f<s;f++){const p=[];let m=0;for(let y=0;y<a;y++){const b=n[f*a+y];m+=b*i[y],p.push(b)}if(m<0||m>=u/r)throw new Error(`Invalid indices: ${p} does not index into ${l}`);for(let y=0;y<r;y++)h.values[f*r+y]=t.get(...t.indexToLoc(m*r+y))}return h}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BD(n,t,e){const s=Gt(e,n.dtype);for(let a=0;a<s.size;++a){const i=s.indexToLoc(a).slice(),l=i[0],u=i[2],h=t.locToIndex([l,u]);i[2]=t.values[h];const f=n.locToIndex(i);0<=f&&f<n.values.length&&(s.values[a]=n.values[f])}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VD=Ke((n,t)=>n>t?1:0),D5=hn(md,VD,null,"bool"),O5={kernelName:md,backendName:"cpu",kernelFunc:D5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PD=Ke((n,t)=>n>=t?1:0),_5=hn(Tu,PD,null,"bool"),F5={kernelName:Tu,backendName:"cpu",kernelFunc:_5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UD=Ke((n,t)=>n<t?1:0),L5=hn(yd,UD,null,"bool"),z5={kernelName:yd,backendName:"cpu",kernelFunc:L5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GD=Ke((n,t)=>n<=t?1:0),M5=hn(bd,GD,null,"bool"),B5={kernelName:bd,backendName:"cpu",kernelFunc:M5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WD(n,t,e){const s=(t-n)/(e-1),a=En(e,"float32");a[0]=n;for(let r=1;r<a.length;r++)a[r]=a[r-1]+s;return a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HD=nr(n=>Math.log(n)),V5=Mi(Eu,HD),P5={kernelName:Eu,backendName:"cpu",kernelFunc:V5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jD(n,t,e,s){const a=bn(s,ht(e));for(let r=0;r<a.length;++r){const i=r*t;let l=n[i];for(let u=0;u<t;++u){const h=n[i+u];(Number.isNaN(h)||h>l)&&(l=h)}a[r]=l}return a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qD=Ke((n,t)=>Math.max(n,t)),U5=hn(Ru,qD),G5={kernelName:Ru,backendName:"cpu",kernelFunc:U5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XD=Ke((n,t)=>Math.min(n,t)),W5=hn(Du,XD),H5={kernelName:Du,backendName:"cpu",kernelFunc:W5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vS=Ke((n,t)=>n*t),j5=bS((n,t,e,s)=>({real:n*e-t*s,imag:n*s+t*e})),rb=hn(_u,vS,j5),q5={kernelName:_u,backendName:"cpu",kernelFunc:rb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KD(n,t,e){const s=Dr(-1,e);return vS([],t,s,n,e)}function X5(n){const{inputs:t,backend:e}=n,{x:s}=t;It(s,"neg");const a=e.data.get(s.dataId).values,[r,i]=KD(a,s.shape,s.dtype);return e.makeTensorInfo(i,s.dtype,r)}const K5={kernelName:Ed,backendName:"cpu",kernelFunc:X5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YD=Ke((n,t)=>n!==t?1:0),Y5=hn(Ad,YD,null,"bool"),Z5={kernelName:Ad,backendName:"cpu",kernelFunc:Y5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wS(n,t,e,s,a){const r=t.length,i=ht(t),l=Ot(t),u=Ot(a),h=bn(e,ht(a));for(let f=0;f<i;++f){const p=Mo(f,r,l),m=new Array(p.length);for(let b=0;b<m.length;b++)m[b]=p[s[b]];const y=Sa(m,r,u);h[y]=n[f]}return h}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cs(n){const{inputs:t,attrs:e,backend:s}=n,{x:a}=t,{perm:r}=e;It(a,"transpose");const i=a.shape.length,l=new Array(i);for(let p=0;p<l.length;p++)l[p]=a.shape[r[p]];const u=s.data.get(a.dataId).values,h=wS(u,a.shape,a.dtype,r,l);return{dataId:s.write(h,l,a.dtype),shape:l,dtype:a.dtype}}const Q5={kernelName:yo,backendName:"cpu",kernelFunc:cs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZD(n,t,e,s){const[a,r]=wn(n,s),i=rs(t,"int32"),l=En(ht(a),i),u=ht(r);for(let h=0;h<l.length;++h){const f=h*u;let p=1;for(let m=0;m<u;++m)p*=e[f+m];l[h]=p}return{outVals:l,outShape:a,outDtype:i}}function J5(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s;It(a,"prod");const l=a.shape.length,u=Xt(r,a.shape),h=Be(u,l);let f=u,p=a;const m=[];h!=null&&(p=cs({inputs:{x:a},backend:e,attrs:{perm:h}}),m.push(p),f=qe(f.length,l));const y=e.data.get(p.dataId).values,{outVals:b,outShape:v,outDtype:w}=ZD(p.shape,p.dtype,y,f);let S=v;return i&&(S=je(v,u)),m.forEach(T=>e.disposeIntermediateTensorInfo(T)),e.makeTensorInfo(S,w,b)}const t8={kernelName:Ld,backendName:"cpu",kernelFunc:J5};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e8(n,t,e){n.forEach((s,a)=>{if(s<0||s>=e){const r=Mo(a,t.length,Ot(t)).join(",");throw new Error(`indices[${r}] = ${s} is not in [0, ${e})`)}})}function n8(n,t){for(let e=0;e<n.length;++e){const s=n[e],a=e===n.length-1?t:n[e+1].length;if(s.length===0)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>a)throw new Error("Ragged splits must not point past values");for(let r=1;r<s.length;++r)if(s[r-1]>s[r])throw new Error("Ragged splits must be sorted in ascending order")}}function s8(n,t,e,s){const a=[];let r=0;const i=t.length-1+e.length,l=new Array(i).fill(null).map(()=>[0]);n8(e,s);let u=1;for(let h=0;h<t.length-1;++h){u*=t[h];const f=t[h+1];for(let p=1;p<u+1;++p)l[h].push(p*f)}for(let h=0;h<n.length;++h){let f=n[h],p=n[h]+1;for(let m=0;m<e.length;++m){const y=e[m],b=m+t.length-1;if(b>=0){const v=l[b],w=v[v.length-1]-y[f];for(let S=f;S<p;++S)l[b].push(y[S+1]+w)}f=y[f],p=y[p]}p!==f&&(a.push([f,p]),r+=p-f)}return{outSplits:l,valueSlices:a,numValues:r}}function a8(n){const t=[];for(let e=0;e<n.length;++e){const s=n[e].length,a=Pe("int32",s);t.push(a),n[e].forEach((r,i)=>a[i]=r)}return t}function j$(n,t){const e=n.slice(0,t);for(;e.length<t;)e.push(1);for(let s=t;s<n.length;s++)e[t-1]*=n[s];return e}function r8(n,t,e,s,a,r){const i=j$(t,2)[1],l=j$(r,2)[1];let u=0;for(const h of e)for(let f=h[0];f<h[1];++f){for(let p=0;p<s;++p)a[u*l+p]=n[f*i+p];++u}}function i8(n,t,e,s,a){const r=t.slice();r[0]=a;const i=Pe(e,ht(r)),l=n.length,u=l===0?0:l/t[0];return r8(n,t,s,u,i,r),[i,r]}function QD(n,t,e,s,a,r,i,l){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(t[0].length===0)throw new Error("Split tensors must not be scalars");const u=t[0][0]-1;if(e8(r,i,u),s.length===0)throw new Error("params.rank must be nonzero");const h=s[0],{outSplits:f,valueSlices:p,numValues:m}=s8(r,i,n,h),y=a8(f),b=i8(e,s,a,p,m);return[y,b[0],b[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q$=2147483647;function JD(n,t,e,s,a,r,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(a.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");const l=t.length===0,u=a.length===0,h=i.length===0,f=[];l||f.push(t[0]),u||f.push(a[0]),h||f.push(i[0]);for(let w=1;w<f.length;++w)if(f[w]!==f[w-1])throw new Error("starts, limits, and deltas must have the same shape");const p=f.length===0?1:f[0],m=Pe("int32",p+1);m[0]=0;for(let w=0;w<p;++w){const S=l?n[0]:n[w],T=u?s[0]:s[w],$=h?r[0]:r[w];if($===0)throw new Error("Requires delta != 0");let C;if($>0&&T<S||$<0&&T>S)C=0;else if(C=Math.ceil(Math.abs((T-S)/$)),C>q$)throw new Error(`Requires ((limit - start) / delta) <= ${q$}`);m[w+1]=m[w]+C}const y=m[p],b=Pe(e,y);let v=0;for(let w=0;w<p;++w){const S=m[w+1]-m[w];let T=l?n[0]:n[w];const $=h?r[0]:r[w];for(let C=0;C<S;++C)b[v++]=T,T+=$}return[m,b]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var na=va;class Pm{constructor(t,e,s,a,r,i,l,u,h,f){this.shape=t,this.shapeShape=e,this.values=s,this.valuesShape=a,this.valuesDType=r,this.defaultValue=i,this.defaultValueShape=l,this.rowPartitionValues=u,this.rowPartitionValuesShapes=h,this.rowPartitionTypes=_E(f),this.raggedRank=FE(this.rowPartitionTypes)}getRowPartitionTypeByDimension(t){return this.rowPartitionTypes[0]===na.FIRST_DIM_SIZE?this.rowPartitionTypes[t+1]:this.rowPartitionTypes[t]}getRowPartitionTensor(t){return this.rowPartitionTypes[0]===na.FIRST_DIM_SIZE?this.rowPartitionValues[t+1]:this.rowPartitionValues[t]}getMaxWidth(t){const e=this.getRowPartitionTensor(t-1);switch(this.getRowPartitionTypeByDimension(t-1)){case na.VALUE_ROWIDS:return Pm.getMaxWidthValueRowID(e);case na.ROW_SPLITS:return Pm.getMaxWidthRowSplit(e);default:throw new Error(`Cannot handle partition type ${na[this.getRowPartitionTypeByDimension(t-1)]}`)}}static getMaxWidthRowSplit(t){const e=t.length;if(e===0||e===1)return 0;let s=0;for(let a=0;a<e-1;++a){const r=t[a+1]-t[a];r>s&&(s=r)}return s}static getMaxWidthValueRowID(t){const e=t.length;if(e===0)return 0;let s=0,a=t[0],r=0;for(let i=1;i<e;++i){const l=t[i];l!==a&&(a=l,r=Math.max(i-s,r),s=i)}return Math.max(e-s,r)}tensorShapeFromTensor(t,e,s=!0){if(e.length===0){if(t[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return K$(t,s)}calculateOutputSize(t){const e=this.valuesShape,s=this.defaultValueShape;LE(s,e);const a=this.tensorShapeFromTensor(this.shape,this.shapeShape),i=OE(this.raggedRank,a,e);i[0]<0&&(i[0]=t);for(let l=1;l<=this.raggedRank;++l)i[l]<0&&(i[l]=this.getMaxWidth(l));return i}calculateFirstParentOutputIndex(t,e,s){const a=Math.min(t,s),r=[];let i=0;for(let l=0;l<a;++l,i+=e)r.push(i);for(let l=a;l<t;++l)r.push(-1);return D(r.length===t,()=>"Final length of result must be equal to firstDimension."),r}calculateOutputIndexRowSplit(t,e,s,a){const r=t.length,i=[];for(let l=0;l<r-1;++l){const u=t[l+1]-t[l];let h=Math.min(a,u),f=e[l];f===-1&&(h=0);for(let p=0;p<h;++p)i.push(f),f+=s;for(let p=0;p<u-h;++p)i.push(-1)}if(r>0&&i.length!==t[r-1])throw new Error("Invalid row split size.");return i}calculateOutputIndexValueRowID(t,e,s,a){const r=t.length,i=[];if(r===0)return[];let l=0,u=t[0];if(u>=e.length)throw new Error(`Got currentValueRowId=${u}, which is not less than ${e.length}`);let h=e[u];i.push(h);for(let f=1;f<r;++f){const p=t[f];if(p===u)h>=0&&(++l,l<a?h+=s:h=-1);else{if(l=0,u=p,p>=e.length)throw new Error(`Got nextValueRowId=${p} which is not less than ${e.length}`);h=e[p]}i.push(h)}if(i.length!==t.length)throw new Error("Invalid row ids.");return i}calculateOutputIndex(t,e,s,a){const r=this.getRowPartitionTensor(t),i=this.getRowPartitionTypeByDimension(t);switch(i){case na.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,e,s,a);case na.ROW_SPLITS:if(r.length-1>e.length)throw new Error(`Row partition size is greater than output size: ${r.length-1} > ${e.length}`);return this.calculateOutputIndexRowSplit(r,e,s,a);default:throw new Error(`Unsupported partition type: ${na[i]}`)}}getFirstDimensionSize(){const t=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const e=this.rowPartitionTypes[0];switch(e){case na.FIRST_DIM_SIZE:return t[0];case na.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case na.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${na[e]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const e=this.getFirstDimensionSize(),s=this.calculateOutputSize(e),a=new Array(this.raggedRank+1);a[a.length-1]=1;for(let u=a.length-2;u>=0;--u)a[u]=a[u+1]*s[u+1];const r=K$(s,!1),i=Pe(this.valuesDType,ht(r));if(a[0]*s[0]>0){let u=this.calculateFirstParentOutputIndex(e,a[0],s[0]);for(let h=1;h<=this.raggedRank;++h)u=this.calculateOutputIndex(h-1,u,a[h],s[h]);this.setOutput(this.raggedRank,u,i,r)}return[r,i]}setOutput(t,e,s,a){if(s.length===0)return;const r=this.values,i=s;let l=a.slice();l=l.slice(t+1);const u=ht(l),h=e.length;let f=this.defaultValue;if(f.length!==u&&f.length!==1){const b=this.defaultValueShape;at(()=>{const v=X(f,b);f=bo(v,l).dataSync()})}let p=0,m=0,y=0;for(let b=0;b<=h;++b){let v=b<h?e[b]:-1;if(v===y){++y;continue}if(m<y){const w=r.subarray(p*u),S=i.subarray(m*u),T=(y-m)*u;X$(S,w,T)}if(b>=h){const w=s.length;v=Math.floor(w/u)}if(v>y)if(this.defaultValue.length===1)i.subarray(y*u,v*u).fill(this.defaultValue[0]),y=v;else for(;v>y;){const w=i.slice(y*u);X$(w,f,u),++y}v<0?(p=b+1,m=y):(p=b,m=y,y=m+1)}}}function X$(n,t,e){for(let s=0;s<e;s++)n[s]=t[s]}function K$(n,t){const e=[];for(let s of n){if(s<0){if(!t)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}e.push(s)}return e}function tO(n,t,e,s,a,r,i,l,u,h){return new Pm(n,t,e,s,a,r,i,l,u,h).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eO(n,t,e,s){const a=n===t,r=n<t&&e<0,i=t<n&&e>1;if(a||r||i)return En(0,s);const l=Math.abs(Math.ceil((t-n)/e)),u=En(l,s);t<n&&e===1&&(e=-1),u[0]=n;for(let h=1;h<u.length;h++)u[h]=u[h-1]+e;return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nO=nr(n=>1/Math.sqrt(n)),o8=Mi(Vu,nO),l8={kernelName:Vu,backendName:"cpu",kernelFunc:o8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mo(n,t,e,s,a,r,i,l,u,h){const f=[s/a,a],p=n.values,m=t.values;if(s===0)return Gt(e,t.dtype);const y=u instanceof en?u:Gt(f,t.dtype);typeof u=="string"||typeof u=="number"?y.values.fill(u):typeof u=="boolean"&&y.values.fill(+u);for(let b=0;b<r;b++){const v=[];let w=0;for(let S=0;S<i;S++){const T=p[b*i+S];v.push(T),w+=T*l[S]}if(w<0||w>=s/a)throw new Error(`Invalid indices: ${v} does not index into ${e}`);for(let S=0;S<a;S++)h?y.values[w*a+S]+=m[b*a+S]:y.values[w*a+S]=t.rank===0?m[0]:m[b*a+S]}return y}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u8=nr(n=>1/(1+Math.exp(-n))),sO=me(Hu,n=>1/(1+Math.exp(-n))),c8={kernelName:Hu,backendName:"cpu",kernelFunc:sO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aO(n,t,e,s,a){const r=Tw(s,t,e),i=ht(e),l=Ot(s);if(r){const p=Cw(t,l);return a==="string"?n.slice(p,p+i):n.subarray(p,p+i)}const u=a==="string"?Ar(n):n,h=Gt(s,a,u),f=Gt(e,a);for(let p=0;p<f.size;++p){const m=f.indexToLoc(p),y=m.map((b,v)=>b+t[v]);f.set(h.get(...y),...m)}return a==="string"?nA(f.values):f.values}function _o(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{begin:r,size:i}=s;It(a,"slice");const[l,u]=Wy(a,r,i);Sw(a,l,u);const h=e.data.get(a.dataId).values,f=aO(h,l,u,a.shape,a.dtype);return e.makeTensorInfo(u,a.dtype,f)}const h8={kernelName:Ud,backendName:"cpu",kernelFunc:_o};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rO(n,t,e,s,a,r,i){const l=t[0],u=r[0],h=new Array(u),f=new Array(l),p=t[1];if(u===0){if(l!==0)throw new Error(GE(l));const w=Pe(e,0),S=Pe(a,0);return[w,[0,p],S,h,f]}let m=!0,y=0;const b=new Array(u).fill(0);for(let w=0;w<l;++w){const S=n[w*p];if(S<0)throw new Error(WE(w,S));if(S>=u)throw new Error(HE(w,S,u));++b[S],m=m&&S>=y,y=S}let v=!0;for(let w=0;w<u;++w){const S=b[w]===0;h[w]=S,v=v&&!S,b[w]=Math.max(b[w],1),w>0&&(b[w]+=b[w-1])}if(v&&m){const w=n,S=s;for(let T=0;T<l;++T)f[T]=T;return[w,[l,p],S,h,f]}else{const w=b[u-1],S=Pe(e,w*p),T=Pe(a,w),$=new Array(u).fill(0);for(let C=0;C<l;++C){const I=n[C*p],R=$[I],F=(I===0?0:b[I-1])+R;$[I]++;for(let B=0;B<p;++B)S[F*p+B]=n[C*p+B];T[F]=s[C],f[C]=F}for(let C=0;C<u;++C)if($[C]===0){const R=C===0?0:b[C-1];S[R*p+0]=C;for(let F=1;F<p;++F)S[R*p+F]=0;T[R]=i}return[S,[w,p],T,h,f]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iO(n,t,e,s,a){const r=ht(s),i=t[0],l=a.length,u=[];let h=1,f=-1;for(let w=0;w<l;++w){const S=a[w];if(S===-1){if(f!==-1)throw new Error(jE(f,w));f=w,u.push(1)}else{if(S<0)throw new Error(qE(w,S));h*=S,u.push(S)}}if(f!==-1){if(h<=0)throw new Error(XE());const w=Math.trunc(r/h);if(h*w!==r)throw new Error(KE(s,u));u[f]=w}if(ht(u)!==r)throw new Error(YE(s,u));const m=s.length,y=[];if(m>0){y[m-1]=1;for(let w=m-2;w>=0;--w)y[w]=y[w+1]*s[w+1]}const b=[];if(l>0){b[l-1]=1;for(let w=l-2;w>=0;--w)b[w]=b[w+1]*u[w+1]}const v=Pe(e,i*l);for(let w=0;w<i;++w){let S=0;for(let T=0;T<m;++T)S+=n[w*m+T]*y[T];for(let T=0;T<l;++T)v[w*l+T]=Math.trunc(S/b[T]),S%=b[T]}return[v,[i,l],u]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SS(n,t,e,s,a,r=!1,i=0){const l=s.length,u=[t[0],n.length/t[0]],h=u[1],p=l>0?a[l-1]+1:0;if(p<0)throw new Error(g1());const m=t.slice();m[0]=p;const y=m.reduce(($,C)=>$*C,1),b=Pe(e,y);if(l===0)return p>0&&b.fill(i),[b,m];if(p<=0)throw new Error(g1());let v=0,w=1,S=0,T=a[v];for(;;){let $=0;if(w<l){if($=a[w],T===$){++w;continue}if(T>=$)throw new Error(ZE())}if(T<0||T>=p)throw new Error(QE(T,p));T>S&&b.fill(i,S*h,T*h);for(let C=v;C<w;++C){const I=s[C];if(I<0||I>=u[0])throw new Error(JE(C,s[C],u[0]));for(let R=0;R<h;R++)b[T*h+R]+=n[I*h+R]}if(r)for(let C=0;C<h;C++)b[T*h+C]/=w-v;if(v=w,++w,S=T+1,T=$,w>l)break}return S<p&&b.fill(i,S*h,p*h),[b,m]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d8=nr(n=>Math.sqrt(n)),f8=me(qu,n=>Math.sqrt(n)),p8={kernelName:qu,backendName:"cpu",kernelFunc:f8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oO=Ke((n,t)=>{const e=n-t;return e*e}),m8=hn(Xu,oO),g8={kernelName:Xu,backendName:"cpu",kernelFunc:m8};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lO=nr((n,t)=>{const{pattern:e,replaceGlobal:s,rewrite:a}=t;return n.replace(new RegExp(e,s?"g":""),a)}),y8=Mi(qd,lO),b8={kernelName:qd,backendName:"cpu",kernelFunc:y8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uO(n,t,e,s){const a=Gt(n,t.dtype);for(let r=0;r<a.size;r++){const i=a.indexToLoc(r),l=new Array(i.length);for(let u=0;u<l.length;u++)l[u]=i[u]*e[u]+s[u];a.set(t.get(...l),...i)}return a}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class x8{constructor(t,e,s,a,r,i){this.separator=Wa(t),this.nGramWidths=e,this.leftPad=Wa(s),this.rightPad=Wa(a),this.padWidth=r,this.preserveShort=i}getPadWidth(t){return Math.min(this.padWidth<0?t-1:this.padWidth,t-1)}getNumNGrams(t,e){const s=this.getPadWidth(e);return Math.max(0,t+2*s-e+1)}createNGrams(t,e,s,a,r,i){for(let l=0;l<r;++l){const u=this.getPadWidth(i),h=Math.max(0,u-l),f=Math.max(0,u-(r-(l+1))),p=i-(h+f),m=e+(h>0?0:l-u);let y=0;y+=h*this.leftPad.length;for(let T=0;T<p;++T)y+=t[m+T].length;y+=f*this.rightPad.length;const b=h+f+p-1;y+=b*this.separator.length,s[a+l]=new Uint8Array(y);const v=s[a+l];let w=0;const S=T=>T.forEach($=>v[w++]=$);for(let T=0;T<h;++T)S(this.leftPad),S(this.separator);for(let T=0;T<p-1;++T)S(t[m+T]),S(this.separator);if(p>0){S(t[m+p-1]);for(let T=0;T<f;++T)S(this.separator),S(this.rightPad)}else{for(let T=0;T<f-1;++T)S(this.rightPad),S(this.separator);S(this.rightPad)}}}compute(t,e){const s=t.length,a=e.length;if(a>0){let u=e[0];if(u!==0)throw new Error(`First split value must be 0, got ${u}`);for(let h=1;h<a;++h){let f=e[h]>=u;if(f=f&&e[h]<=s,!f)throw new Error(`Invalid split value ${e[h]}, must be in [${u}, ${s}]`);u=e[h]}if(u!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${u}`)}const r=a-1,i=Pe("int32",a);if(s===0||a===0){const u=new Array(s);for(let h=0;h<=r;++h)i[h]=0;return[u,i]}i[0]=0;for(let u=1;u<=r;++u){const h=e[u]-e[u-1];let f=0;this.nGramWidths.forEach(p=>{f+=this.getNumNGrams(h,p)}),this.preserveShort&&h>0&&f===0&&(f=1),i[u]=i[u-1]+f}const l=new Array(i[r]);for(let u=0;u<r;++u){const h=e[u];let f=i[u];if(this.nGramWidths.forEach(p=>{const m=e[u+1]-e[u],y=this.getNumNGrams(m,p);this.createNGrams(t,h,l,f,y,p),f+=y}),this.preserveShort&&f===i[u]){const p=e[u+1]-e[u];if(p===0)continue;const m=p+2*this.padWidth;this.createNGrams(t,h,l,f,1,m)}}return[l,i]}}function cO(n,t,e,s,a,r,i,l){return new x8(e,s,a,r,i,l).compute(n,t)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v8(n,t,e,s){if(!n.length)return;if(t.length===0){for(let r=0;r<n.length;++r)s.push(n.subarray(r,r+1));return}if(t.length===1){const r=t[0];let i=n.indexOf(r);for(;i!==-1;){const l=n.subarray(0,i);(!e||l.length!==0)&&s.push(l),n=n.subarray(i+1),i=n.indexOf(r)}(!e||n.length!==0)&&s.push(n);return}let a=0;for(let r=0;r<n.length+1;r++)if(r===n.length||t.indexOf(n[r])!==-1){const i=n.subarray(a,r);(!e||i.length!==0)&&s.push(i),a=r+1}}function hO(n,t,e){const s=n.length,a=[];let r=0,i=0;const l=new Array(s);for(let m=0;m<s;++m){const y=a.length;v8(n[m],t,e,a);const b=a.length-y;l[m]=b,r+=b,i=Math.max(i,b)}const u=Pe("int32",r*2),h=new Array(r),f=[s,i];let p=0;for(let m=0;m<s;++m)for(let y=0;y<l[m];++y)u[p*2]=m,u[p*2+1]=y,h[p]=a[p],++p;return[u,h,f]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dO(n,t){const e=Pe("int32",n.length);for(let s=0;s<n.length;++s)e[s]=Wk(n[s]).modulo(t).getLowBitsUnsigned();return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fO=Ke((n,t)=>n-t),w8=bS((n,t,e,s)=>({real:n-e,imag:t-s})),NS=hn(Ku,fO,w8),S8={kernelName:Ku,backendName:"cpu",kernelFunc:NS};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pO(n,t){const e=new Array(n.rank);for(let a=0;a<e.length;a++)e[a]=n.shape[a]*t[a];const s=Gt(e,n.dtype);for(let a=0;a<s.values.length;++a){const r=s.indexToLoc(a),i=new Array(n.rank);for(let u=0;u<i.length;u++)i[u]=r[u]%n.shape[u];const l=n.locToIndex(i);s.values[a]=n.values[l]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Th=(n,t)=>{const e=t.value-n.value;return e===0?n.index-t.index:e};function mO(n,t,e=0,s=n.length-1){for(;s>e;){if(s-e>600){const l=s-e+1,u=t-e+1,h=Math.log(l),f=.5*Math.exp(2*h/3),p=.5*Math.sqrt(h*f*(l-f)/l)*Math.sign(u-l/2),m=Math.max(e,Math.floor(t-u*f/l+p)),y=Math.min(s,Math.floor(t+(l-u)*f/l+p));mO(n,t,m,y)}const a=n[t];let r=e,i=s;for(Nr(n,e,t),Th(n[s],a)>0&&Nr(n,e,s);r<i;){for(Nr(n,r,i),r++,i--;Th(n[r],a)<0;)r=r+1;for(;Th(n[i],a)>0;)i=i-1}Th(n[e],a)===0?Nr(n,e,i):(i=i+1,Nr(n,i,s)),i<=t&&(e=i+1),t<=i&&(s=i-1)}}function gO(n,t,e,s,a){const r=t[t.length-1],[i,l]=[n.length/r,r],u=bn(e,i*s),h=bn("int32",i*s);for(let p=0;p<i;p++){const m=p*l,y=n.subarray(m,m+l);let b=new Array(y.length);y.forEach((T,$)=>b[$]={value:T,index:$}),s<b.length&&(mO(b,s),b=b.slice(0,s)),a&&b.sort(Th);const v=p*s,w=u.subarray(v,v+s),S=h.subarray(v,v+s);for(let T=0;T<s;T++)w[T]=b[T].value,S[T]=b[T].index}const f=t.slice();return f[f.length-1]=s,[Gt(f,e,u),Gt(f,"int32",h)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yO(n,t,e,s){const a=Xt(t,e)[0],r=[1,e[0],1];for(let b=0;b<a;b++)r[0]*=e[b];r[1]=e[a];for(let b=a+1;b<e.length;b++)r[2]*=e[b];const i=new Map,l=new Int32Array(e[a]),u=new en(r,s,n),h=[],f=r[0]===1&&r[2]===1;for(let b=0;b<e[a];b++){let v;if(f)v=n[b].toString();else{const S=[];for(let T=0;T<r[0];T++)for(let $=0;$<r[2];$++)S.push(u.get(T,b,$));v=S.join(",")}const w=i.get(v);if(w!=null)l[b]=w;else{const S=i.size;i.set(v,S),l[b]=S,h.push(b)}}const p=r.slice();p[1]=i.size;const m=new en(p,s);h.forEach((b,v)=>{for(let w=0;w<r[0];w++)for(let S=0;S<r[2];S++)m.set(u.get(w,b,S),w,v,S)});const y=e.slice();return y[a]=p[1],{outputValues:m.values,outputShape:y,indices:l}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N8=Object.freeze(Object.defineProperty({__proto__:null,addImpl:$D,bincountImpl:xS,bincountReduceImpl:kD,bitwiseAndImpl:ID,castImpl:CD,ceilImpl:ED,concatImpl:AD,equalImpl:RD,expImpl:OD,expm1Impl:FD,floorDivImpl:zD,floorImpl:LD,gatherNdImpl:MD,gatherV2Impl:BD,greaterEqualImpl:PD,greaterImpl:VD,lessEqualImpl:GD,lessImpl:UD,linSpaceImpl:WD,logImpl:HD,maxImpl:jD,maximumImpl:qD,minimumImpl:XD,multiplyImpl:vS,negImpl:KD,notEqualImpl:YD,prodImpl:ZD,raggedGatherImpl:QD,raggedRangeImpl:JD,raggedTensorToTensorImpl:tO,rangeImpl:eO,rsqrtImpl:nO,scatterImpl:mo,sigmoidImpl:u8,simpleAbsImpl:TD,sliceImpl:aO,sparseFillEmptyRowsImpl:rO,sparseReshapeImpl:iO,sparseSegmentReductionImpl:SS,sqrtImpl:d8,squaredDifferenceImpl:oO,staticRegexReplaceImpl:lO,stridedSliceImpl:uO,stringNGramsImpl:cO,stringSplitImpl:hO,stringToHashBucketFastImpl:dO,subImpl:fO,tileImpl:pO,topKImpl:gO,transposeImpl:wS,uniqueImpl:yO},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */sv("cpu",()=>new ab,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bO=me(bu,n=>n>=0?n:Math.exp(n)-1),T8={kernelName:bu,backendName:"cpu",kernelFunc:bO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xO(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{alpha:r}=s;It([a],"leakyRelu");const i=ht(a.shape),l=e.data.get(a.dataId).values,u=bn("float32",i);for(let h=0;h<l.length;h++)u[h]=l[h]<0?r*l[h]:l[h];return e.makeTensorInfo(a.shape,"float32",u)}const C8={kernelName:gd,backendName:"cpu",kernelFunc:xO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $8=Ke((n,t)=>n<0?t*n:n);function vO(n){const{inputs:t,backend:e}=n,{x:s,alpha:a}=t;It([s,a],"prelu");const r=e.data.get(s.dataId).values,i=e.data.get(a.dataId).values,[l,u]=$8(s.shape,a.shape,r,i,"float32");return e.makeTensorInfo(u,"float32",l)}const k8={kernelName:Fd,backendName:"cpu",kernelFunc:vO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wO=me(zu,n=>Math.max(0,n)),I8={kernelName:zu,backendName:"cpu",kernelFunc:wO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SO=me(Mu,n=>Math.min(Math.max(0,n),6)),E8={kernelName:Mu,backendName:"cpu",kernelFunc:SO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Um(n,t,e,s,a){if(e==="linear")return tr({inputs:{x:t},backend:n});if(e==="relu")return wO({inputs:{x:t},backend:n});if(e==="elu")return bO({inputs:{x:t},backend:n});if(e==="relu6")return SO({inputs:{x:t},backend:n});if(e==="prelu")return vO({inputs:{x:t,alpha:s},backend:n});if(e==="leakyrelu")return xO({inputs:{x:t},backend:n,attrs:{alpha:a}});if(e==="sigmoid")return sO({inputs:{x:t},backend:n});throw new Error(`Activation ${e} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ae(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{shape:r}=s,i=ht(a.shape),l=q1(r,i),u=ht(l);D(i===u,()=>`The new shape (${l}) has ${u} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),e.incRef(a.dataId);const h=e.data.get(a.dataId);if(h.complexTensorInfos!=null){const f=h.complexTensorInfos.real,p=h.complexTensorInfos.imag;f.shape=l,p.shape=l}return{dataId:a.dataId,shape:l,dtype:a.dtype}}const A8={kernelName:zd,backendName:"cpu",kernelFunc:Ae};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NO(n){const{inputs:t,backend:e,attrs:s}=n,{a,b:r}=t,{transposeA:i,transposeB:l}=s;It([a,r],"matMul");const u=a.shape.length,h=r.shape.length,f=i?a.shape[u-2]:a.shape[u-1],p=l?r.shape[h-1]:r.shape[h-2],m=i?a.shape[u-1]:a.shape[u-2],y=l?r.shape[h-2]:r.shape[h-1],b=a.shape.slice(0,-2),v=r.shape.slice(0,-2),w=ht(b),S=ht(v),$=Ut(a.shape.slice(0,-2),r.shape.slice(0,-2)).concat([m,y]);D(f===p,()=>`Error in matMul: inner shapes (${f}) and (${p}) of Tensors with shapes ${a.shape} and ${r.shape} and transposeA=${i} and transposeB=${l} must match.`);const C=i?[w,f,m]:[w,m,f],I=l?[S,y,p]:[S,p,y],R=Ae({inputs:{x:a},backend:e,attrs:{shape:C}}),F=Ae({inputs:{x:r},backend:e,attrs:{shape:I}}),B=i?R.shape[1]:R.shape[2],L=i?R.shape[2]:R.shape[1],z=l?F.shape[1]:F.shape[2],A=Math.max(w,S),G=e.data.get(R.dataId).values,Q=e.data.get(F.dataId).values,tt=Ot(R.shape),J=Ot(F.shape),[V,q,Y]=i?[tt[0],1,tt[1]]:[tt[0],tt[1],1],[it,M,j]=l?[1,J[1],J[0]]:[J[1],1,J[0]],st=L*z,et=Gt([A,L,z],R.dtype),ft=et.values,mt=e.blockSize;for(let yt=0;yt<A;yt++){const Ct=yt%w,Nt=yt%S;for(let Dt=0;Dt<L;Dt+=mt){const Vt=Math.min(Dt+mt,L);for(let Pt=0;Pt<z;Pt+=mt){const ie=Math.min(Pt+mt,z);for(let ce=0;ce<B;ce+=mt){const Ce=Math.min(ce+mt,B);for(let ge=Dt;ge<Vt;ge++)for(let he=Pt;he<ie;he++){let ae=0;for(let $e=ce;$e<Ce;$e++){const Hs=G[Ct*V+ge*q+$e*Y],Ye=Q[$e*it+he*M+Nt*j];ae+=Hs*Ye}ft[yt*st+(ge*z+he)]+=ae}}}}}return e.disposeIntermediateTensorInfo(R),e.disposeIntermediateTensorInfo(F),e.makeTensorInfo($,et.dtype,et.values)}const R8={kernelName:td,backendName:"cpu",kernelFunc:NO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function D8(n){const{inputs:t,backend:e,attrs:s}=n,{a,b:r,bias:i,preluActivationWeights:l}=t,{transposeA:u,transposeB:h,activation:f,leakyreluAlpha:p}=s;let m,y,b;const v=[];m=NO({inputs:{a,b:r},attrs:{transposeA:u,transposeB:h},backend:e}),i&&(y=tu({inputs:{a:m,b:i},backend:e}),v.push(m),m=y),f&&(b=Um(e,m,f,l,p),v.push(m),m=b);for(const S of v)e.disposeIntermediateTensorInfo(S);return m}const O8={kernelName:Eh,backendName:"cpu",kernelFunc:D8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _8=me(ru,n=>Math.acos(n)),F8={kernelName:ru,backendName:"cpu",kernelFunc:_8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L8=me(iu,n=>Math.acosh(n)),z8={kernelName:iu,backendName:"cpu",kernelFunc:L8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M8(n){const{inputs:t,backend:e}=n,s=t;It(t,"addN");const a=s.map(l=>e.data.get(l.dataId).values),r=Gt(s[0].shape,s[0].dtype),i=r.values;for(let l=0;l<s.length;l++){const u=a[l];for(let h=0;h<i.length;h++)i[h]+=u[h]}return e.makeTensorInfo(r.shape,r.dtype,r.values)}const B8={kernelName:Kh,backendName:"cpu",kernelFunc:M8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V8(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s;It(a,"all");const l=Xt(r,a.shape);let u=l;const h=Be(u,a.shape.length);let f=a;h!=null&&(f=cs({inputs:{x:a},backend:e,attrs:{perm:h}}),u=qe(u.length,a.shape.length)),Dn("all",u,f.shape.length);const[p,m]=wn(f.shape,u),y=ht(m),b=En(ht(p),f.dtype),v=e.data.get(f.dataId).values;for(let S=0;S<b.length;++S){const T=S*y;let $=v[T];for(let C=0;C<y;++C){const I=v[T+C];$=$&&I}b[S]=$}h!=null&&e.disposeIntermediateTensorInfo(f);const w=e.makeTensorInfo(p,f.dtype,b);if(i){const S=je(p,l),T=Ae({inputs:{x:w},backend:e,attrs:{shape:S}});return e.disposeIntermediateTensorInfo(w),T}return w}const P8={kernelName:Jm,backendName:"cpu",kernelFunc:V8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U8(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s;It(a,"any");const l=Xt(r,a.shape);let u=l;const h=Be(u,a.shape.length);let f=a;h!=null&&(f=cs({inputs:{x:a},backend:e,attrs:{perm:h}}),u=qe(u.length,a.shape.length)),Dn("any",u,f.shape.length);const[p,m]=wn(f.shape,u),y=ht(m),b=En(ht(p),f.dtype),v=e.data.get(f.dataId).values;for(let S=0;S<b.length;++S){const T=S*y;let $=v[T];for(let C=0;C<y;++C){const I=v[T+C];$=$||I}b[S]=$}h!=null&&e.disposeIntermediateTensorInfo(f);const w=e.makeTensorInfo(p,f.dtype,b);if(i){const S=je(p,l),T=Ae({inputs:{x:w},backend:e,attrs:{shape:S}});return e.disposeIntermediateTensorInfo(w),T}return w}const G8={kernelName:tg,backendName:"cpu",kernelFunc:U8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W8(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r}=s;It(a,"argMax");let i=Xt(r,a.shape);const l=Be(i,a.shape.length);let u=a;const h=[];l!=null&&(u=cs({inputs:{x:a},backend:e,attrs:{perm:l}}),h.push(u),i=qe(i.length,u.shape.length)),i=[i[0]],Dn("argMax",i,u.shape.length);const[f,p]=wn(u.shape,i),m=ht(f),y=En(m,"int32"),b=ht(p),v=e.data.get(u.dataId).values;for(let w=0;w<y.length;++w){const S=w*b;let T=v[S],$=0;for(let C=0;C<b;++C){const I=v[S+C];I>T&&(T=I,$=C)}y[w]=$}return h.forEach(w=>e.disposeIntermediateTensorInfo(w)),e.makeTensorInfo(f,"int32",y)}const H8={kernelName:Yh,backendName:"cpu",kernelFunc:W8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j8(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r}=s;It(a,"argMin");let i=Xt(r,a.shape);const l=Be(i,a.shape.length);let u=a;const h=[];l!=null&&(u=cs({inputs:{x:a},backend:e,attrs:{perm:l}}),h.push(u),i=qe(i.length,u.shape.length)),i=[i[0]],Dn("argMin",i,u.shape.length);const[f,p]=wn(u.shape,i),m=ht(f),y=En(m,"int32"),b=ht(p),v=e.data.get(u.dataId).values;for(let w=0;w<y.length;++w){const S=w*b;let T=v[S],$=0;for(let C=0;C<b;++C){const I=v[S+C];I<T&&(T=I,$=C)}y[w]=$}return h.forEach(w=>e.disposeIntermediateTensorInfo(w)),e.makeTensorInfo(f,"int32",y)}const q8={kernelName:Zh,backendName:"cpu",kernelFunc:j8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X8=me(ou,n=>Math.asin(n)),K8={kernelName:ou,backendName:"cpu",kernelFunc:X8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y8=me(lu,n=>Math.asinh(n)),Z8={kernelName:lu,backendName:"cpu",kernelFunc:Y8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q8=me(uu,n=>Math.atan(n)),J8={kernelName:uu,backendName:"cpu",kernelFunc:Q8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tX=Ke((n,t)=>Math.atan2(n,t)),eX=hn(hu,tX),nX={kernelName:hu,backendName:"cpu",kernelFunc:eX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sX=me(cu,n=>Math.atanh(n)),aX={kernelName:cu,backendName:"cpu",kernelFunc:sX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TS(n,t,e,s,a,r){const i=a.strideHeight,l=a.strideWidth,u=a.dilationHeight,h=a.dilationWidth,f=a.effectiveFilterHeight,p=a.effectiveFilterWidth,m=a.padInfo.top,y=a.padInfo.left,b=r==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=Gt(a.outShape,e),w=v.values,S=a.outShape[1]*a.outShape[2]*a.outShape[3],T=a.outShape[2]*a.outShape[3],$=a.outShape[3];for(let C=0;C<a.batchSize;++C){const I=C*S,R=C*s[0];for(let F=0;F<a.inChannels;++F)for(let B=0;B<a.outHeight;++B){const L=B*i-m,z=Math.max(0,L),A=Math.min(a.inHeight,f+L),G=I+B*T;for(let Q=0;Q<a.outWidth;++Q){const tt=Q*l-y,J=Math.max(0,tt),V=Math.min(a.inWidth,p+tt);let q=b,Y=0,it=0;for(let j=z;j<A;j+=u){const st=R+j*s[1];for(let et=J;et<V;et+=h){const ft=st+et*s[2],mt=n[ft+F];r==="max"&&mt>q?q=mt:r==="avg"&&(Y+=mt,it++)}if(isNaN(q))break}const M=G+Q*$+F;w[M]=r==="avg"?Y/it:q}}}return v}function TO(n,t,e,s,a=!1,r=!1){const i=Gt(s.outShape,"int32"),l=s.strideHeight,u=s.strideWidth,h=s.dilationHeight,f=s.dilationWidth,p=s.effectiveFilterHeight,m=s.effectiveFilterWidth,y=s.padInfo.top,b=s.padInfo.left,v=Gt(t,e,n);for(let w=0;w<s.batchSize;++w)for(let S=0;S<s.inChannels;++S)for(let T=0;T<s.outHeight;++T){const $=T*l-y;let C=$;for(;C<0;)C+=h;const I=Math.min(s.inHeight,p+$);for(let R=0;R<s.outWidth;++R){const F=R*u-b;let B=F;for(;B<0;)B+=f;const L=Math.min(s.inWidth,m+F);let z=Number.NEGATIVE_INFINITY,A=-1;for(let G=C;G<I;G+=h){const Q=G-$;for(let tt=B;tt<L;tt+=f){const J=tt-F,V=v.get(w,G,tt,S);V>z&&(z=V,a?A=r?((w*s.inHeight+G)*s.inWidth+tt)*s.inChannels+S:(G*s.inWidth+tt)*s.inChannels+S:A=Q*m+J)}}i.set(A,w,T,R,S)}}return i}function CO(n,t,e,s,a,r){const i=a.strideDepth,l=a.strideHeight,u=a.strideWidth,h=a.dilationDepth,f=a.dilationHeight,p=a.dilationWidth,m=a.effectiveFilterDepth,y=a.effectiveFilterHeight,b=a.effectiveFilterWidth,v=a.padInfo.front,w=a.padInfo.top,S=a.padInfo.left,T=r==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,$=Gt(a.outShape,e),C=$.values,I=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],R=a.outShape[2]*a.outShape[3]*a.outShape[4],F=a.outShape[3]*a.outShape[4],B=a.outShape[4];for(let L=0;L<a.batchSize;++L){const z=L*I,A=L*s[0];for(let G=0;G<a.inChannels;++G)for(let Q=0;Q<a.outDepth;++Q){const tt=Q*i-v;let J=tt;for(;J<0;)J+=h;const V=Math.min(a.inDepth,m+tt),q=z+Q*R;for(let Y=0;Y<a.outHeight;++Y){const it=Y*l-w;let M=it;for(;M<0;)M+=f;const j=Math.min(a.inHeight,y+it),st=q+Y*F;for(let et=0;et<a.outWidth;++et){const ft=et*u-S;let mt=ft;for(;mt<0;)mt+=p;const yt=Math.min(a.inWidth,b+ft),Ct=st+et*B;let Nt=T,Dt=0,Vt=0;for(let ie=J;ie<V;ie+=h){const ce=A+ie*s[1];for(let Ce=M;Ce<j;Ce+=f){const ge=ce+Ce*s[2];for(let he=mt;he<yt;he+=p){const ae=ge+he*s[3],$e=n[ae+G];if(r==="max"&&$e>Nt?Nt=$e:r==="avg"&&(Dt+=$e,Vt++),isNaN(Nt))break}if(isNaN(Nt))break}if(isNaN(Nt))break}const Pt=Ct+G;C[Pt]=r==="avg"?Dt/Math.max(Vt,1):Nt}}}}return $}function rX(n,t){const e=Gt(t.outShape,"int32"),s=t.strideDepth,a=t.strideHeight,r=t.strideWidth,i=t.dilationDepth,l=t.dilationHeight,u=t.dilationWidth,h=t.effectiveFilterDepth,f=t.effectiveFilterHeight,p=t.effectiveFilterWidth,m=t.padInfo.front,y=t.padInfo.top,b=t.padInfo.left;for(let v=0;v<t.batchSize;++v)for(let w=0;w<t.inChannels;++w)for(let S=0;S<t.outDepth;++S){const T=S*s-m;let $=T;for(;$<0;)$+=i;const C=Math.min(t.inDepth,h+T);for(let I=0;I<t.outHeight;++I){const R=I*a-y;let F=R;for(;F<0;)F+=l;const B=Math.min(t.inHeight,f+R);for(let L=0;L<t.outWidth;++L){const z=L*r-b;let A=z;for(;A<0;)A+=u;const G=Math.min(t.inWidth,p+z);let Q=Number.NEGATIVE_INFINITY,tt=-1;for(let J=$;J<C;J+=i){const V=J-T;for(let q=F;q<B;q+=l){const Y=q-R;for(let it=A;it<G;it+=u){const M=it-z,j=n.get(v,J,q,it,w);j>=Q&&(Q=j,tt=V*f*p+Y*f+M)}}}e.set(tt,v,S,I,L,w)}}}return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iX(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t;It(a,"avgPool");const{filterSize:r,strides:i,pad:l,dimRoundingMode:u}=s,h=1;D(Rn(i,h),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`);const f=ua(a.shape,r,i,h,l,u);let p;if(f.filterWidth===1&&f.filterHeight===1&&Zt(f.inShape,f.outShape))p=tr({inputs:{x:a},backend:e});else{const m=e.data.get(a.dataId).values,y=Ot(a.shape),b=TS(m,a.shape,a.dtype,y,f,"avg");p=e.makeTensorInfo(f.outShape,a.dtype,b.values)}return p}const oX={kernelName:Qh,backendName:"cpu",kernelFunc:iX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lX(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{filterSize:r,strides:i,pad:l,dimRoundingMode:u,dataFormat:h}=s;It(a,"avgPool3d");const f=Or(a.shape,r,i,1,l,u,h),p=e.data.get(a.dataId).values,m=CO(p,a.shape,a.dtype,Ot(a.shape),f,"avg");return e.makeTensorInfo(m.shape,"float32",m.values)}const uX={kernelName:Jh,backendName:"cpu",kernelFunc:lX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cX(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,input:r}=t,{filterSize:i,strides:l,pad:u,dimRoundingMode:h}=s;It([a,r],"avgPool3DGrad");const f=Or(r.shape,i,l,1,u,h),p=f.strideDepth,m=f.strideHeight,y=f.strideWidth,b=f.filterDepth,v=f.filterHeight,w=f.filterWidth,S=f.dilationDepth,T=f.dilationHeight,$=f.dilationWidth,C=f.effectiveFilterDepth,I=f.effectiveFilterHeight,R=f.effectiveFilterWidth,F=C-1-f.padInfo.front,B=R-1-f.padInfo.left,L=I-1-f.padInfo.top,z=Gt(r.shape,"float32"),A=1/(b*v*w),G=e.bufferSync(a);for(let Q=0;Q<f.batchSize;++Q)for(let tt=0;tt<f.inChannels;++tt)for(let J=0;J<f.inDepth;++J)for(let V=0;V<f.inHeight;++V)for(let q=0;q<f.inWidth;++q){const Y=J-F,it=V-L,M=q-B;let j=0;for(let st=0;st<C;st+=S){const et=(Y+st)/p;if(!(et<0||et>=f.outDepth||Math.floor(et)!==et))for(let ft=0;ft<I;ft+=T){const mt=(it+ft)/m;if(!(mt<0||mt>=f.outHeight||Math.floor(mt)!==mt))for(let yt=0;yt<R;yt+=$){const Ct=(M+yt)/y;if(Ct<0||Ct>=f.outWidth||Math.floor(Ct)!==Ct)continue;const Nt=G.get(Q,et,mt,Ct,tt);j+=Nt}}}z.set(j*A,Q,J,V,q,tt)}return e.makeTensorInfo(z.shape,z.dtype,z.values)}const hX={kernelName:ng,backendName:"cpu",kernelFunc:cX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dX(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,input:r}=t,i=r;It([a,r],"avgPoolGrad");const{filterSize:l,strides:u,pad:h}=s,f=ua(i.shape,l,u,1,h),p=f.strideHeight,m=f.strideWidth,y=f.filterHeight,b=f.filterWidth,v=f.dilationHeight,w=f.dilationWidth,S=f.effectiveFilterHeight,T=f.effectiveFilterWidth,$=T-1-f.padInfo.left,C=S-1-f.padInfo.top,I=Gt(i.shape,"float32"),R=1/(y*b),F=e.data.get(a.dataId).values,B=Gt(a.shape,"float32",F);for(let L=0;L<f.batchSize;++L)for(let z=0;z<f.inChannels;++z)for(let A=0;A<f.inHeight;++A)for(let G=0;G<f.inWidth;++G){const Q=A-C,tt=G-$;let J=0;for(let V=0;V<S;V+=v){const q=(Q+V)/p;if(!(q<0||q>=f.outHeight||Math.floor(q)!==q))for(let Y=0;Y<T;Y+=w){const it=(tt+Y)/m;if(it<0||it>=f.outWidth||Math.floor(it)!==it)continue;const M=B.get(L,q,it,z);J+=M}}I.set(J*R,L,A,G,z)}return e.makeTensorInfo(I.shape,I.dtype,I.values)}const fX={kernelName:eg,backendName:"cpu",kernelFunc:dX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pX(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,scale:r,offset:i,mean:l,variance:u}=t;D(l.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),D(i==null||l.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),D(r==null||l.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),It([a,l,u,r,i],"batchNorm");let{varianceEpsilon:h}=s;h==null&&(h=.001);const f=e.data.get(a.dataId).values,p=e.data.get(l.dataId).values,m=e.data.get(u.dataId).values,y=r?e.data.get(r.dataId).values:new Float32Array([1]),b=i?e.data.get(i.dataId).values:new Float32Array([0]),v=new Float32Array(f.length),w=b.length,S=y.length,T=m.length,$=p.length;let C=0,I=0,R=0,F=0;for(let B=0;B<f.length;++B)v[B]=b[C++]+(f[B]-p[I++])*y[R++]/Math.sqrt(m[F++]+h),C>=w&&(C=0),I>=$&&(I=0),R>=S&&(R=0),F>=T&&(F=0);return e.makeTensorInfo(a.shape,a.dtype,v)}const mX={kernelName:fd,backendName:"cpu",kernelFunc:pX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gX(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{blockShape:r,crops:i}=s;It([a],"batchToSpaceND");const l=r.reduce((S,T)=>S*T),u=bf(a.shape,r,l),h=xf(u.length,r.length),f=vf(a.shape,r,l),p=Rw(i,r.length),m=Dw(f,i,r.length),y=Ae({inputs:{x:a},backend:e,attrs:{shape:u}}),b=cs({inputs:{x:y},backend:e,attrs:{perm:h}}),v=Ae({inputs:{x:b},backend:e,attrs:{shape:f}}),w=_o({inputs:{x:v},backend:e,attrs:{begin:p,size:m}});return e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(v),w}const yX={kernelName:ed,backendName:"cpu",kernelFunc:gX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bX(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,weights:r}=t,{size:i}=s,l=e.data.get(a.dataId).values,u=e.data.get(r.dataId).values,h=xS(l,u,r.dtype,r.shape,i);return e.makeTensorInfo([i],r.dtype,h)}const xX={kernelName:sg,backendName:"cpu",kernelFunc:bX};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vX(n){const{inputs:t,backend:e}=n,{s0:s,s1:a}=t,r=e.data.get(s.dataId).values,i=e.data.get(a.dataId).values,l=Ut(Array.from(r),Array.from(i));return e.makeTensorInfo([l.length],"int32",Int32Array.from(l))}const wX={kernelName:ag,backendName:"cpu",kernelFunc:vX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SX=me(pu,(n,t)=>{const e=t;return n>e.clipValueMax?e.clipValueMax:n<e.clipValueMin?e.clipValueMin:n}),NX={kernelName:pu,backendName:"cpu",kernelFunc:SX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TX=n=>{const{x:t}=n.inputs,e=n.backend,s=new Float32Array(ht(t.shape)),a=e.data.get(t.dataId),r=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,l=e.data.get(r.dataId).values,u=e.data.get(i.dataId).values;for(let h=0;h<l.length;h++){const f=l[h],p=u[h];s[h]=Math.hypot(f,p)}return e.makeOutput(s,t.shape,"float32")},CX={kernelName:sd,backendName:"cpu",kernelFunc:TX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eu(n){const{inputs:t,backend:e}=n,{input:s}=t,a=e.data.get(s.dataId).complexTensorInfos.imag,r=e.data.get(a.dataId).values;return e.makeTensorInfo(a.shape,a.dtype,r)}const $X={kernelName:Tg,backendName:"cpu",kernelFunc:eu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nu(n){const{inputs:t,backend:e,attrs:s}=n,{axis:a}=s,r=Xt(a,t[0].shape)[0],i=t.map(v=>v.shape);Iw(i,r);let l=ja(t.map(v=>v.shape),r);if(ht(l)===0)return e.makeTensorInfo(l,t[0].dtype,[]);const u=t.filter(v=>ht(v.shape)>0);if(u.length===1)return tr({inputs:{x:u[0]},backend:e});if(u[0].dtype==="complex64"){const v=u.map(C=>Oo({inputs:{input:C},backend:e})),w=u.map(C=>eu({inputs:{input:C},backend:e})),S=nu({inputs:v,backend:e,attrs:{axis:r}}),T=nu({inputs:w,backend:e,attrs:{axis:r}}),$=ws({inputs:{real:S,imag:T},backend:e});return v.forEach(C=>e.disposeIntermediateTensorInfo(C)),w.forEach(C=>e.disposeIntermediateTensorInfo(C)),e.disposeIntermediateTensorInfo(S),e.disposeIntermediateTensorInfo(T),$}const h=u.map(v=>{const S=[-1,ht(v.shape.slice(r))];return Ae({inputs:{x:v},backend:e,attrs:{shape:S}})}),f=h.map(v=>({vals:e.data.get(v.dataId).values,shape:v.shape}));l=ja(h.map(v=>v.shape),1);const p=h[0].shape[0]===1,m=AD(f,l,t[0].dtype,p),y=ja(u.map(v=>v.shape),r),b=e.makeTensorInfo(y,t[0].dtype,m);return h.forEach(v=>e.disposeIntermediateTensorInfo(v)),b}const kX={kernelName:ad,backendName:"cpu",kernelFunc:nu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $O(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r}=t,{strides:i,pad:l,dataFormat:u,dilations:h,dimRoundingMode:f}=s;It([a,r],"conv2d");const p=_r(u),m=vn(a.shape,r.shape,i,h,l,f,!1,p),y=m.filterHeight,b=m.filterWidth,v=m.dilationHeight,w=m.dilationWidth,S=m.padInfo.left,T=m.padInfo.top,$=m.dataFormat==="channelsLast",C=new en(m.outShape,a.dtype),I=Ot(a.shape),R=Ot(r.shape),F=I[0],B=$?I[1]:I[2],L=$?I[2]:1,z=$?1:I[1],A=C.strides[0],G=$?C.strides[1]:C.strides[2],Q=$?C.strides[2]:1,tt=$?1:C.strides[1],J=e.data.get(a.dataId).values,V=e.data.get(r.dataId).values,q=C.values;for(let Y=0;Y<m.batchSize;++Y){const it=Y*F,M=Y*A;for(let j=0;j<m.outHeight;++j){const st=M+j*G,et=j*m.strideHeight-T;for(let ft=0;ft<y;++ft){const mt=et+ft*v;if(mt<0||mt>=m.inHeight)continue;const yt=ft*R[0],Ct=it+mt*B;for(let Nt=0;Nt<m.outWidth;++Nt){const Dt=st+Nt*Q,Vt=Nt*m.strideWidth-S;for(let Pt=0;Pt<b;++Pt){const ie=Vt+Pt*w;if(ie<0||ie>=m.inWidth)continue;const ce=yt+Pt*R[1],Ce=Ct+ie*L;let ge=ce;for(let he=0;he<m.inChannels;++he){const ae=J[Ce+he*z];for(let $e=0;$e<m.outChannels;++$e)q[Dt+$e*tt]+=ae*V[ge+$e];ge+=m.outChannels}}}}}}return e.makeTensorInfo(C.shape,C.dtype,q)}const IX={kernelName:rd,backendName:"cpu",kernelFunc:$O};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EX(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,dy:r}=t,{strides:i,pad:l,dataFormat:u,dimRoundingMode:h,filterShape:f}=s;It([a,r],"conv2dBackpropFilter");const p=_r(u),m=vn(a.shape,f,i,1,l,h,!1,p),{strideHeight:y,strideWidth:b,filterHeight:v,filterWidth:w}=m,S=m.dataFormat==="channelsLast",T=new en(m.filterShape,"float32"),$=m.padInfo.left,C=m.padInfo.top,I=e.data.get(a.dataId).values,R=e.data.get(r.dataId).values,F=new en(a.shape,a.dtype,I),B=new en(r.shape,r.dtype,R);for(let L=0;L<v;++L){const z=Math.max(0,Math.ceil((C-L)/y)),A=Math.min(m.outHeight,(m.inHeight+C-L)/y);for(let G=0;G<w;++G){const Q=Math.max(0,Math.ceil(($-G)/b)),tt=Math.min(m.outWidth,(m.inWidth+$-G)/b);for(let J=0;J<m.inChannels;++J)for(let V=0;V<m.outChannels;++V){let q=0;for(let Y=0;Y<m.batchSize;++Y)for(let it=z;it<A;++it){const M=L+it*y-C;for(let j=Q;j<tt;++j){const st=G+j*b-$;S?q+=F.get(Y,M,st,J)*B.get(Y,it,j,V):q+=F.get(Y,J,M,st)*B.get(Y,V,it,j)}}T.set(q,L,G,J,V)}}}return e.makeTensorInfo(T.shape,T.dtype,T.values)}const AX={kernelName:ig,backendName:"cpu",kernelFunc:EX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RX(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,filter:r}=t,{inputShape:i,strides:l,pad:u,dataFormat:h,dimRoundingMode:f}=s;It([a,r],"conv2dBackpropInput");const p=Ot(r.shape),m=Ot(a.shape);let y=_r(h);const b=vn(i,r.shape,l,1,u,f,!1,y),v=new en(b.inShape,"float32"),w=v.values,S=e.data.get(a.dataId).values,T=e.data.get(r.dataId).values,[$,C,I]=p,{batchSize:R,filterHeight:F,filterWidth:B,inChannels:L,inHeight:z,inWidth:A,outChannels:G,outHeight:Q,outWidth:tt,strideHeight:J,strideWidth:V}=b;y=b.dataFormat;const q=F-1-b.padInfo.top,Y=B-1-b.padInfo.left,it=y==="channelsLast",M=v.strides[0],j=it?v.strides[1]:v.strides[2],st=it?v.strides[2]:1,et=it?1:v.strides[1],ft=m[0],mt=it?m[1]:m[2],yt=it?m[2]:1,Ct=it?1:m[1];for(let Nt=0;Nt<R;++Nt)for(let Dt=0;Dt<L;++Dt)for(let Vt=0;Vt<z;++Vt){const Pt=Vt-q,ie=Math.max(0,Math.ceil(Pt/J)),ce=Math.min(Q,(F+Pt)/J);for(let Ce=0;Ce<A;++Ce){const ge=Ce-Y,he=Math.max(0,Math.ceil(ge/V)),ae=Math.min(tt,(B+ge)/V);let $e=0;for(let Ye=ie;Ye<ce;++Ye){const ks=Ye*J-Pt;for(let ts=he;ts<ae;++ts){const Da=ts*V-ge,Is=ft*Nt+mt*Ye+yt*ts,da=$*(F-1-ks)+C*(B-1-Da)+I*Dt;for(let ds=0;ds<G;++ds){const Ue=S[Is+Ct*ds],Fn=T[da+ds];$e+=Ue*Fn}}}const Hs=M*Nt+j*Vt+st*Ce+et*Dt;w[Hs]=$e}}return e.makeTensorInfo(v.shape,v.dtype,v.values)}const DX={kernelName:id,backendName:"cpu",kernelFunc:RX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OX(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r}=t,{strides:i,pad:l,dilations:u}=s;It([a,r],"conv3d");const h=Ri(a.shape,r.shape,i,u,l),{filterDepth:f,filterHeight:p,filterWidth:m,dilationDepth:y,dilationHeight:b,dilationWidth:v,padInfo:w}=h,S=w.front,T=w.left,$=w.top,C=new en(h.outShape,a.dtype),I=e.data.get(a.dataId).values,R=e.data.get(r.dataId).values,F=C.values,B=Ot(a.shape),L=Ot(r.shape);for(let z=0;z<h.batchSize;++z){const A=z*B[0],G=z*C.strides[0];for(let Q=0;Q<h.outDepth;++Q){const tt=G+Q*C.strides[1],J=Q*h.strideDepth-S;for(let V=0;V<f;++V){const q=J+V*y;if(q<0||q>=h.inDepth)continue;const Y=V*L[0],it=A+q*B[1];for(let M=0;M<h.outHeight;++M){const j=tt+M*C.strides[2],st=M*h.strideHeight-$;for(let et=0;et<p;++et){const ft=st+et*b;if(ft<0||ft>=h.inHeight)continue;const mt=Y+et*L[1],yt=it+ft*B[2];for(let Ct=0;Ct<h.outWidth;++Ct){const Nt=j+Ct*h.outChannels,Dt=Ct*h.strideWidth-T;for(let Vt=0;Vt<m;++Vt){const Pt=Dt+Vt*v;if(Pt<0||Pt>=h.inWidth)continue;const ie=mt+Vt*L[2],ce=yt+Pt*h.inChannels;let Ce=ie;for(let ge=0;ge<h.inChannels;++ge){const he=I[ce+ge];for(let ae=0;ae<h.outChannels;++ae)F[Nt+ae]+=he*R[Ce+ae];Ce+=h.outChannels}}}}}}}}return e.makeTensorInfo(C.shape,C.dtype,C.values)}const _X={kernelName:od,backendName:"cpu",kernelFunc:OX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FX(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,dy:r}=t,{strides:i,pad:l,filterShape:u}=s;It([a,r],"conv3dBackpropFilterV2");const h=Ot(a.shape),f=Ot(r.shape),p=Ri(a.shape,u,i,1,l),m=p.strideDepth,y=p.strideHeight,b=p.strideWidth,v=p.filterDepth,w=p.filterHeight,S=p.filterWidth,T=new en(p.filterShape,"float32"),$=T.values,[C,I,R,F]=T.strides,B=e.data.get(r.dataId).values,[L,z,A,G]=f,Q=e.data.get(a.dataId).values,[tt,J,V,q]=h,Y=p.padInfo.front,it=p.padInfo.left,M=p.padInfo.top;for(let j=0;j<v;++j){const st=Math.max(0,Math.ceil((Y-j)/m)),et=Math.min(p.outDepth,(p.inDepth+Y-j)/m),ft=j*C;for(let mt=0;mt<w;++mt){const yt=Math.max(0,Math.ceil((M-mt)/y)),Ct=Math.min(p.outHeight,(p.inHeight+M-mt)/y),Nt=mt*I+ft;for(let Dt=0;Dt<S;++Dt){const Vt=Math.max(0,Math.ceil((it-Dt)/b)),Pt=Math.min(p.outWidth,(p.inWidth+it-Dt)/b),ie=Dt*R+Nt;for(let ce=0;ce<p.inChannels;++ce){const Ce=ce*F+ie;for(let ge=0;ge<p.outChannels;++ge){let he=0;for(let ae=0;ae<p.batchSize;++ae){const $e=ae*tt,Hs=ae*L;for(let Ye=st;Ye<et;++Ye){const ts=(j+Ye*m-Y)*J+$e,Da=Ye*z+Hs;for(let Is=yt;Is<Ct;++Is){const ds=(mt+Is*y-M)*V+ts,Ue=Is*A+Da;for(let Fn=Vt;Fn<Pt;++Fn){const gc=(Dt+Fn*b-it)*q+ds,yc=Fn*G+Ue;he+=Q[gc+ce]*B[yc+ge]}}}}$[Ce+ge]=he}}}}}return e.makeTensorInfo(T.shape,T.dtype,T.values)}const LX={kernelName:og,backendName:"cpu",kernelFunc:FX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zX(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,filter:r}=t,{pad:i,strides:l,inputShape:u}=s;It([a],"conv3dBackpropInputV2");const h=Ot(a.shape),f=Ot(r.shape),p=Ri(u,r.shape,l,1,i),m=new en(p.inShape,"float32"),y=m.values,[b,v,w,S]=m.strides,T=e.data.get(a.dataId).values,[$,C,I,R]=h,F=e.data.get(r.dataId).values,[B,L,z,A]=f,{batchSize:G,filterDepth:Q,filterHeight:tt,filterWidth:J,inChannels:V,inDepth:q,inHeight:Y,inWidth:it,outChannels:M,outDepth:j,outHeight:st,outWidth:et,strideDepth:ft,strideHeight:mt,strideWidth:yt}=p,Ct=Q-1-p.padInfo.front,Nt=tt-1-p.padInfo.top,Dt=J-1-p.padInfo.left;for(let Vt=0;Vt<G;++Vt)for(let Pt=0;Pt<V;++Pt)for(let ie=0;ie<q;++ie){const ce=ie-Ct,Ce=Math.max(0,Math.ceil(ce/ft)),ge=Math.min(j,(Q+ce)/ft);for(let he=0;he<Y;++he){const ae=he-Nt,$e=Math.max(0,Math.ceil(ae/mt)),Hs=Math.min(st,(tt+ae)/mt);for(let Ye=0;Ye<it;++Ye){const ks=Ye-Dt,ts=Math.max(0,Math.ceil(ks/yt)),Da=Math.min(et,(J+ks)/yt);let Is=0;for(let da=Ce;da<ge;++da){const ds=da*ft-ce;for(let Ue=$e;Ue<Hs;++Ue){const Fn=Ue*mt-ae;for(let dn=ts;dn<Da;++dn){const gc=dn*yt-ks,yc=$*Vt+C*da+I*Ue+R*dn,hb=B*(Q-1-ds)+L*(tt-1-Fn)+z*(J-1-gc)+A*Pt;for(let sr=0;sr<M;++sr){const Yo=T[yc+sr],ar=F[hb+sr];Is+=Yo*ar}}}}y[b*Vt+v*ie+w*he+S*Ye+Pt]=Is}}}return e.makeTensorInfo(m.shape,m.dtype,m.values)}const MX={kernelName:lg,backendName:"cpu",kernelFunc:zX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BX=me(mu,n=>Math.cos(n)),VX={kernelName:mu,backendName:"cpu",kernelFunc:BX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PX=me(gu,n=>Math.cosh(n)),UX={kernelName:gu,backendName:"cpu",kernelFunc:PX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GX(n){const{inputs:t,backend:e,attrs:s}=n,{image:a,boxes:r,boxInd:i}=t,{cropSize:l,method:u,extrapolationValue:h}=s,[f,p,m,y]=a.shape,b=r.shape[0],[v,w]=l,S=Gt([b,v,w,y],"float32"),T=e.data.get(r.dataId).values,$=e.data.get(i.dataId).values,C=e.data.get(a.dataId).values,I=Ot(a.shape),R=Ot(S.shape);for(let F=0;F<b;F++){const B=F*4,L=T[B],z=T[B+1],A=T[B+2],G=T[B+3],Q=$[F];if(Q>=f)continue;const tt=v>1?(A-L)*(p-1)/(v-1):0,J=w>1?(G-z)*(m-1)/(w-1):0;for(let V=0;V<v;V++){const q=v>1?L*(p-1)+V*tt:.5*(L+A)*(p-1);if(q<0||q>p-1){for(let Y=0;Y<w;Y++)for(let it=0;it<y;it++){const M=it+Y*R[2]+V*R[1]+F*R[0];S.values[M]=h}continue}if(u==="bilinear"){const Y=Math.floor(q),it=Math.ceil(q),M=q-Y;for(let j=0;j<w;j++){const st=w>1?z*(m-1)+j*J:.5*(z+G)*(m-1);if(st<0||st>m-1){for(let yt=0;yt<y;yt++){const Ct=yt+j*R[2]+V*R[1]+F*R[0];S.values[Ct]=h}continue}const et=Math.floor(st),ft=Math.ceil(st),mt=st-et;for(let yt=0;yt<y;yt++){let Ct=yt+et*I[2]+Y*I[1]+Q*I[0];const Nt=C[Ct];Ct=yt+ft*I[2]+Y*I[1]+Q*I[0];const Dt=C[Ct];Ct=yt+et*I[2]+it*I[1]+Q*I[0];const Vt=C[Ct];Ct=yt+ft*I[2]+it*I[1]+Q*I[0];const Pt=C[Ct],ie=Nt+(Dt-Nt)*mt,ce=Vt+(Pt-Vt)*mt;Ct=yt+j*R[2]+V*R[1]+F*R[0],S.values[Ct]=ie+(ce-ie)*M}}}else for(let Y=0;Y<w;++Y){const it=w>1?z*(m-1)+Y*J:.5*(z+G)*(m-1);if(it<0||it>m-1){for(let st=0;st<y;st++){const et=st+Y*R[2]+V*R[1]+F*R[0];S.values[et]=h}continue}const M=Math.round(it),j=Math.round(q);for(let st=0;st<y;st++){const et=st+M*I[2]+j*I[1]+Q*I[0],ft=st+Y*R[2]+V*R[1]+F*R[0];S.values[ft]=C[et]}}}}return e.makeTensorInfo(S.shape,S.dtype,S.values)}const WX={kernelName:cg,backendName:"cpu",kernelFunc:GX};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HX(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,exclusive:i,reverse:l}=s;It(a,"cumprod");const u=Be([r],a.shape.length);let h=a;u!=null&&(h=cs({inputs:{x:a},backend:e,attrs:{perm:u}}));const f=qe(1,a.shape.length)[0];if(f!==h.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${h.shape.length-1} but got axis=${f}`);const p=rs(h.dtype,"int32"),m=Qm(ht(h.shape),p),y=e.data.get(h.dataId).values,b=h.shape[h.shape.length-1],v=l?(S,T)=>S+b-T-1:(S,T)=>S+T;for(let S=0;S<y.length;S+=b)for(let T=0;T<b;T++){const $=v(S,T);if(T===0)m[$]=i?1:y[$];else{const C=v(S,T-1);m[$]=i?y[C]*m[C]:y[$]*m[C]}}const w=e.makeTensorInfo(h.shape,p,m);if(u!=null){const S=Di(u),T=cs({inputs:{x:w},backend:e,attrs:{perm:S}});return e.disposeIntermediateTensorInfo(w),e.disposeIntermediateTensorInfo(h),T}return w}const jX={kernelName:ug,backendName:"cpu",kernelFunc:HX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qX(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,exclusive:i,reverse:l}=s;It(a,"cumsum");const u=Be([r],a.shape.length);let h=a;u!=null&&(h=cs({inputs:{x:a},backend:e,attrs:{perm:u}}));const f=qe(1,a.shape.length)[0];if(f!==h.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${h.shape.length-1} but got axis=${f}`);const p=rs(h.dtype,"int32"),m=En(ht(h.shape),p),y=e.data.get(h.dataId).values,b=h.shape[h.shape.length-1],v=l?(S,T)=>S+b-T-1:(S,T)=>S+T;for(let S=0;S<y.length;S+=b)for(let T=0;T<b;T++){const $=v(S,T);if(T===0)m[$]=i?0:y[$];else{const C=v(S,T-1);m[$]=i?y[C]+m[C]:y[$]+m[C]}}const w=e.makeTensorInfo(h.shape,p,m);if(u!=null){const S=Di(u),T=cs({inputs:{x:w},backend:e,attrs:{perm:S}});return e.disposeIntermediateTensorInfo(w),e.disposeIntermediateTensorInfo(h),T}return w}const XX={kernelName:ld,backendName:"cpu",kernelFunc:qX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KX(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,weights:r}=t,{size:i,binaryOutput:l}=s;if(a.shape.length===1){const u=e.data.get(a.dataId).values,h=e.data.get(r.dataId).values,f=xS(u,h,r.dtype,r.shape,i);return e.makeTensorInfo([i],r.dtype,f)}else if(a.shape.length===2){const u=e.bufferSync(a),h=e.bufferSync(r),f=kD(u,h,i,l);return e.makeTensorInfo(f.shape,r.dtype,f.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}const YX={kernelName:hg,backendName:"cpu",kernelFunc:KX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZX(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{blockSize:r,dataFormat:i}=s;D(i==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);const l=a.shape[0],u=a.shape[1],h=a.shape[2],f=a.shape[3],p=u*r,m=h*r,y=f/(r*r),b=e.data.get(a.dataId).values,v=new Float32Array(l*p*m*y);let w=0;for(let S=0;S<l;++S)for(let T=0;T<p;++T){const $=Math.floor(T/r),C=T%r;for(let I=0;I<m;++I){const R=Math.floor(I/r),F=I%r,B=(C*r+F)*y;for(let L=0;L<y;++L){const A=L+B+f*(R+h*($+u*S));v[w++]=b[A]}}}return e.makeTensorInfo([l,p,m,y],a.dtype,v)}const QX={kernelName:dg,backendName:"cpu",kernelFunc:ZX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kO(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r}=t,{strides:i,pad:l,dilations:u,dimRoundingMode:h}=s;It([a,r],"depthwiseConv2DNative");const f=Ot(a.shape),p=Ot(r.shape);let m=u;m==null&&(m=[1,1]),D(Rn(i,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${m}'`);const y=vn(a.shape,r.shape,i,m,l,h,!0),{filterHeight:b,filterWidth:v,dilationHeight:w,dilationWidth:S,padInfo:T}=y,$=T.left,C=T.top,I=y.outChannels/y.inChannels,R=new en(y.outShape,a.dtype),F=e.data.get(a.dataId).values,B=e.data.get(r.dataId).values,L=R.values;for(let z=0;z<y.batchSize;++z){const A=z*f[0],G=z*R.strides[0];for(let Q=0;Q<y.outHeight;++Q){const tt=G+Q*R.strides[1],J=Q*y.strideHeight-C;for(let V=0;V<b;++V){const q=J+V*w;if(q<0||q>=y.inHeight)continue;const Y=V*p[0],it=A+q*f[1];for(let M=0;M<y.outWidth;++M){const j=tt+M*R.strides[2],st=M*y.strideWidth-$;for(let et=0;et<v;++et){const ft=st+et*S;if(ft<0||ft>=y.inWidth)continue;const mt=Y+et*p[1],yt=it+ft*y.inChannels;let Ct=j,Nt=mt;for(let Dt=0;Dt<y.inChannels;++Dt){const Vt=F[yt+Dt];for(let Pt=0;Pt<I;++Pt)L[Ct+Pt]+=Vt*B[Nt+Pt];Ct+=I,Nt+=I}}}}}}return e.makeTensorInfo(R.shape,R.dtype,R.values)}const JX={kernelName:ud,backendName:"cpu",kernelFunc:kO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tK(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,dy:r}=t,{strides:i,dilations:l,pad:u,dimRoundingMode:h,filterShape:f}=s;It([a,r],"depthwiseConv2dNativeBackpropFilter");const p=vn(a.shape,f,i,l,u,h,!0),{strideHeight:m,strideWidth:y,filterHeight:b,filterWidth:v}=p,w=new en(p.filterShape,"float32"),S=p.padInfo.left,T=p.padInfo.top,$=p.outChannels/p.inChannels,C=e.data.get(a.dataId).values,I=new en(a.shape,a.dtype,C),R=e.data.get(r.dataId).values,F=new en(r.shape,r.dtype,R);for(let B=0;B<b;++B){const L=Math.max(0,Math.ceil((T-B)/m)),z=Math.min(p.outHeight,(p.inHeight+T-B)/m);for(let A=0;A<v;++A){const G=Math.max(0,Math.ceil((S-A)/y)),Q=Math.min(p.outWidth,(p.inWidth+S-A)/y);for(let tt=0;tt<p.outChannels;++tt){const J=Math.trunc(tt/$),V=tt%$;let q=0;for(let Y=0;Y<p.batchSize;++Y)for(let it=L;it<z;++it){const M=B+it*m-T;for(let j=G;j<Q;++j){const st=A+j*y-S;q+=I.get(Y,M,st,J)*F.get(Y,it,j,tt)}}w.set(q,B,A,J,V)}}}return e.makeTensorInfo(w.shape,w.dtype,w.values)}const eK={kernelName:fg,backendName:"cpu",kernelFunc:tK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nK(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,filter:r}=t,{strides:i,dilations:l,pad:u,dimRoundingMode:h,inputShape:f}=s;It([a,r],"depthwiseConv2DNativeBackpropInput");const p=Ot(a.shape),m=Ot(r.shape),y=vn(f,r.shape,i,l,u,h,!0),b=new en(y.inShape,"float32"),v=b.values,[w,S,T]=b.strides,$=e.data.get(a.dataId).values,[C,I,R]=p,F=e.data.get(r.dataId).values,[B,L,z]=m,{batchSize:A,filterHeight:G,filterWidth:Q,inChannels:tt,inHeight:J,inWidth:V,outChannels:q,outHeight:Y,outWidth:it,strideHeight:M,strideWidth:j}=y,st=G-1-y.padInfo.top,et=Q-1-y.padInfo.left,ft=q/tt;for(let mt=0;mt<A;++mt)for(let yt=0;yt<tt;++yt)for(let Ct=0;Ct<J;++Ct){const Nt=Ct-st,Dt=Math.max(0,Math.ceil(Nt/M)),Vt=Math.min(Y,(G+Nt)/M);for(let Pt=0;Pt<V;++Pt){const ie=Pt-et,ce=Math.max(0,Math.ceil(ie/j)),Ce=Math.min(it,(Q+ie)/j);let ge=0;for(let he=Dt;he<Vt;++he){const ae=he*M-Nt;for(let $e=ce;$e<Ce;++$e){const Hs=$e*j-ie,Ye=C*mt+I*he+R*$e,ks=B*(G-1-ae)+L*(Q-1-Hs)+z*yt;for(let ts=0;ts<ft;++ts){const Da=yt*ft+ts,Is=$[Ye+Da],da=F[ks+ts];ge+=Is*da}}}v[w*mt+S*Ct+T*Pt+yt]=ge}}return e.makeTensorInfo(b.shape,b.dtype,b.values)}const sK={kernelName:pg,backendName:"cpu",kernelFunc:nK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aK(n){const{inputs:t,backend:e}=n,{x:s}=t,a=ht(s.shape),r=e.data.get(s.dataId).values,i=Gt([a,a],s.dtype),l=i.values;for(let h=0;h<r.length;h++)l[h*a+h]=r[h];const u=[...s.shape,...s.shape];return e.makeTensorInfo(u,i.dtype,i.values)}const rK={kernelName:mg,backendName:"cpu",kernelFunc:aK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iK={kernelName:cd,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:a}=n,{strides:r,pad:i,dilations:l}=e,u=t,h=u.data.get(s.dataId).values,f=s.shape.length,p=u.data.get(a.dataId).values,m=a.shape.length,{batchSize:y,inHeight:b,inWidth:v,inChannels:w,outHeight:S,outWidth:T,padInfo:$,strideHeight:C,strideWidth:I,filterHeight:R,filterWidth:F,dilationHeight:B,dilationWidth:L,outShape:z}=Jd(s.shape,a.shape,r,i,"NHWC",l),A=ht(z),G=z.length,Q=Pe(s.dtype,A);for(let J=0;J<y;++J)for(let V=0;V<S;++V){const q=V*C-$.top;for(let Y=0;Y<T;++Y){const it=Y*I-$.left;for(let M=0;M<w;++M){let j=Number.MIN_SAFE_INTEGER;for(let et=0;et<R;++et){const ft=q+et*B;if(ft>=0&&ft<b)for(let mt=0;mt<F;++mt){const yt=it+mt*L;if(yt>=0&&yt<v){const Ct=Sa([J,ft,yt,M],f,Ot(s.shape)),Nt=Sa([et,mt,M],m,Ot(a.shape)),Dt=h[Ct]+p[Nt];Dt>j&&(j=Dt)}}}const st=Sa([J,V,Y,M],G,Ot(z));Q[st]=j}}}return{dataId:u.write(Ei(Q,s.dtype),z,s.dtype),shape:z,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oK={kernelName:Nm,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:a,dy:r}=n,{strides:i,pad:l,dilations:u}=e,h=t,f=Vs(s.shape,h.data.get(s.dataId).values),p=Vs(a.shape,h.data.get(a.dataId).values),{batchSize:m,inHeight:y,inWidth:b,inChannels:v,outHeight:w,outWidth:S,padInfo:T,strideHeight:$,strideWidth:C,filterHeight:I,filterWidth:R,dilationHeight:F,dilationWidth:B,outShape:L}=Jd(s.shape,a.shape,i,l,"NHWC",u);D(r.rank===L.length,()=>`Error in ${Nm}, dy must have the same rank as output ${L.length}, but got ${r.rank}`);const z=Vs(L,h.data.get(r.dataId).values),A=K1(a.shape,a.dtype);for(let Q=0;Q<m;++Q)for(let tt=0;tt<w;++tt){const J=tt*$-T.top;for(let V=0;V<S;++V){const q=V*C-T.left;for(let Y=0;Y<v;++Y){let it=Number.MIN_SAFE_INTEGER,M=0,j=0;for(let st=0;st<I;++st){const et=J+st*F;if(et>=0&&et<y)for(let ft=0;ft<R;++ft){const mt=q+ft*B;if(mt>=0&&mt<b){const yt=f[Q][et][mt][Y]+p[st][ft][Y];yt>it&&(it=yt,M=st,j=ft)}}}A[M][j][Y]+=z[Q][tt][V][Y]}}}return{dataId:h.write(Ei(A,s.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lK={kernelName:Sm,backendName:"cpu",kernelFunc:({inputs:n,backend:t,attrs:e})=>{const{x:s,filter:a,dy:r}=n,{strides:i,pad:l,dilations:u}=e,h=t,f=Vs(s.shape,h.data.get(s.dataId).values),p=Vs(a.shape,h.data.get(a.dataId).values),{batchSize:m,inHeight:y,inWidth:b,inChannels:v,outHeight:w,outWidth:S,padInfo:T,strideHeight:$,strideWidth:C,filterHeight:I,filterWidth:R,dilationHeight:F,dilationWidth:B,outShape:L}=Jd(s.shape,a.shape,i,l,"NHWC",u);D(r.rank===L.length,()=>`Error in ${Sm}, dy must have the same rank as output ${L.length}, but got ${r.rank}`);const z=Vs(L,h.data.get(r.dataId).values),A=K1(s.shape,s.dtype);for(let Q=0;Q<m;++Q)for(let tt=0;tt<w;++tt){const J=tt*$-T.top;for(let V=0;V<S;++V){const q=V*C-T.left;for(let Y=0;Y<v;++Y){let it=Number.MIN_SAFE_INTEGER,M=J<0?0:J,j=q<0?0:q;for(let st=0;st<I;++st){const et=J+st*F;if(et>=0&&et<y)for(let ft=0;ft<R;++ft){const mt=q+ft*B;if(mt>=0&&mt<b){const yt=f[Q][et][mt][Y]+p[st][ft][Y];yt>it&&(it=yt,M=et,j=mt)}}}A[Q][M][j][Y]+=z[Q][tt][V][Y]}}}return{dataId:h.write(Ei(A,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uK(n){const{inputs:t,backend:e,attrs:s}=n,{image:a}=t,{canvas:r,options:i}=s,{contextOptions:l,imageOptions:u}=i||{},h=u?.alpha||1,f=l?.contextType||"2d";if(f!=="2d")throw new Error(`Context type ${l.contextType} is not supported by the CPU backend.`);const p=r.getContext(f,l?.contextAttributes||{});if(p==null)throw new Error(`Could not get the context with ${f} type.`);const[m,y]=a.shape.slice(0,2),b=a.shape.length===2?1:a.shape[2],v=e.data.get(a.dataId).values,w=a.dtype==="float32"?255:1,S=new Uint8ClampedArray(y*m*4);for(let $=0;$<m*y;++$){const C=[0,0,0,255*h];for(let R=0;R<b;R++){const F=v[$*b+R];if(a.dtype==="float32"){if(F<0||F>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${F}.`)}else if(a.dtype==="int32"&&(F<0||F>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${F}.`);b===1?(C[0]=F*w,C[1]=F*w,C[2]=F*w):C[R]=F*w}const I=$*4;S[I+0]=Math.round(C[0]),S[I+1]=Math.round(C[1]),S[I+2]=Math.round(C[2]),S[I+3]=Math.round(C[3])}r.width=y,r.height=m;const T=new ImageData(S,y,m);return p.putImageData(T,0,0),a}const cK={kernelName:gg,backendName:"cpu",kernelFunc:uK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ef(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s;It(a,"sum");let l;a.dtype==="bool"?l=Ii({inputs:{x:a},backend:e,attrs:{dtype:"int32"}}):l=tr({inputs:{x:a},backend:e});const u=l.shape.length,h=Xt(r,l.shape),f=Be(h,u);let p=h,m=l;f!=null&&(m=cs({inputs:{x:l},backend:e,attrs:{perm:f}}),p=qe(p.length,u)),Dn("sum",p,m.shape.length);const[y,b]=wn(m.shape,p),v=rs(m.dtype,"int32");let w=Vm(e,y,v);const S=ht(b),T=e.data.get(w.dataId).values,$=e.data.get(m.dataId).values;for(let C=0;C<T.length;++C){const I=C*S;let R=0;for(let F=0;F<S;++F)R+=$[I+F];T[C]=R}if(i){const C=je(w.shape,h),I=w;w=Ae({inputs:{x:w},backend:e,attrs:{shape:C}}),e.disposeIntermediateTensorInfo(I)}return e.disposeIntermediateTensorInfo(l),f!=null&&e.disposeIntermediateTensorInfo(m),w}const hK={kernelName:Gd,backendName:"cpu",kernelFunc:Ef};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dK(n){const{inputs:t,backend:e,attrs:s}=n,{equation:a}=s,r=t,{allDims:i,summedDims:l,idDims:u}=Vw(a,r.length);Uw(i.length,u,r);const{path:h,steps:f}=Gw(l,u),p=f.length;let m=null,y=i.length;const b=[];for(let v=0;v<p;++v){for(const w of f[v]){const{permutationIndices:S,expandDims:T}=Pw(y,u[w]);let $;Ww(S)?$=r[w]:($=cs({inputs:{x:r[w]},backend:e,attrs:{perm:S}}),b.push($));const C=$.shape.slice();for(let I=0;I<T.length;++I)C.splice(T[I],0,1);Zt($.shape,C)||($=Ae({inputs:{x:$},backend:e,attrs:{shape:C}}),b.push($)),m===null?m=$:(m=rb({inputs:{a:$,b:m},backend:e}),b.push(m))}v<p-1&&(h[v]>=0&&(m=Ef({inputs:{x:m},backend:e,attrs:{axis:h[v]-(i.length-y),keepDims:!1}}),b.push(m)),y--)}for(const v of b)v!==m&&e.disposeIntermediateTensorInfo(v);return m}const fK={kernelName:yg,backendName:"cpu",kernelFunc:dK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pK(n){const{inputs:t,backend:e}=n,{dy:s,y:a}=t;It([s,a],"eluGrad");const r=new Float32Array(ht(a.shape)),i=e.data.get(a.dataId).values,l=e.data.get(s.dataId).values;for(let u=0;u<i.length;++u){const h=i[u];h>=0?r[u]=l[u]:r[u]=l[u]*(h+1)}return e.makeTensorInfo(a.shape,"float32",r)}const mK={kernelName:bg,backendName:"cpu",kernelFunc:pK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gK=Ow,yK=_w,bK=Fw,xK=Lw,vK=zw,wK=Mw,SK=me(xu,n=>{const t=Math.sign(n),e=Math.abs(n),s=1/(1+gK*e);return t*(1-((((wK*s+vK)*s+xK)*s+bK)*s+yK)*s*Math.exp(-e*e))}),NK={kernelName:xu,backendName:"cpu",kernelFunc:SK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gm(n){const{inputs:t,backend:e,attrs:s}=n,{input:a}=t,{dim:r}=s,i=a.shape.length,l=a.shape.slice();let u=r;return r<0&&(D(-(i+1)<=r,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+r+1),l.splice(u,0,1),Ae({inputs:{x:a},backend:e,attrs:{shape:l}})}const TK={kernelName:dd,backendName:"cpu",kernelFunc:Gm};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CK=Ke((n,t)=>n/t),CS=hn(yu,CK),M1={kernelName:yu,backendName:"cpu",kernelFunc:CS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IO(n,t,e){const s=n.shape,a=s[0],r=s[1],i=e.data.get(n.dataId),l=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,h=[a,r],f=ht(h),p=bn("float32",f),m=bn("float32",f);for(let w=0;w<a;w++){const S=_o({inputs:{x:l},backend:e,attrs:{begin:[w,0],size:[1,r]}}),T=_o({inputs:{x:u},backend:e,attrs:{begin:[w,0],size:[1,r]}}),$=ws({inputs:{real:S,imag:T},backend:e}),{real:C,imag:I}=$K($,t,e),R=Er(C,I);for(let F=0;F<r;F++){const B=Bw(R,F);p[w*r+F]=B.real,m[w*r+F]=B.imag}e.disposeIntermediateTensorInfo(S),e.disposeIntermediateTensorInfo(T),e.disposeIntermediateTensorInfo($)}const y=e.makeTensorInfo(h,"float32",p),b=e.makeTensorInfo(h,"float32",m),v=ws({inputs:{real:y,imag:b},backend:e});return e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(b),v}function $K(n,t,e){const s=ht(n.shape),a=e.data.get(n.dataId),r=e.data.get(a.complexTensorInfos.real.dataId).values,i=e.data.get(a.complexTensorInfos.imag.dataId).values;if(kK(s)){const l=B1(r,i,s,t,e),u=[n.shape[0],n.shape[1]];if(t){const h=e.makeTensorInfo(u,"float32",l.real),f=e.makeTensorInfo(u,"float32",l.imag),p=e.makeTensorInfo([],"float32",Dr(s,"float32")),m=tr({inputs:{x:p},backend:e}),y=M1.kernelFunc({inputs:{a:h,b:p},backend:e}),b=M1.kernelFunc({inputs:{a:f,b:m},backend:e}),v=e.data.get(y.dataId).values,w=e.data.get(b.dataId).values;return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(b),{real:v,imag:w}}return l}else{const l=Er(r,i),u=IK(l,s,t);return zE(u)}}function kK(n){return(n&n-1)===0}function B1(n,t,e,s,a){if(e===1)return{real:n,imag:t};const r=Er(n,t),i=e/2,l=ME(r),u=l.real,h=l.imag,f=[u.length],p=a.makeTensorInfo(f,"float32",u),m=a.makeTensorInfo(f,"float32",h),y=ws({inputs:{real:p,imag:m},backend:a}),b=BE(r),v=b.real,w=b.imag,S=[v.length],T=a.makeTensorInfo(S,"float32",v),$=a.makeTensorInfo(S,"float32",w),C=ws({inputs:{real:T,imag:$},backend:a}),I=B1(u,h,i,s,a),R=I.real,F=I.imag,B=[R.length],L=a.makeTensorInfo(B,"float32",R),z=a.makeTensorInfo(B,"float32",F),A=ws({inputs:{real:L,imag:z},backend:a}),G=B1(v,w,i,s,a),Q=G.real,tt=G.imag,J=[Q.length],V=a.makeTensorInfo(J,"float32",Q),q=a.makeTensorInfo(J,"float32",tt),Y=ws({inputs:{real:V,imag:q},backend:a}),it=PE(e,s),M=[it.real.length],j=a.makeTensorInfo(M,"float32",it.real),st=a.makeTensorInfo(M,"float32",it.imag),et=ws({inputs:{real:j,imag:st},backend:a}),ft=rb({inputs:{a:et,b:Y},backend:a}),mt=tu({inputs:{a:A,b:ft},backend:a}),yt=NS({inputs:{a:A,b:ft},backend:a}),Ct=Oo({inputs:{input:mt},backend:a}),Nt=Oo({inputs:{input:yt},backend:a}),Dt=eu({inputs:{input:mt},backend:a}),Vt=eu({inputs:{input:yt},backend:a}),Pt=nu({inputs:[Ct,Nt],backend:a,attrs:{axis:0}}),ie=nu({inputs:[Dt,Vt],backend:a,attrs:{axis:0}}),ce=a.data.get(Pt.dataId).values,Ce=a.data.get(ie.dataId).values;return a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(y),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo($),a.disposeIntermediateTensorInfo(C),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(z),a.disposeIntermediateTensorInfo(A),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(Y),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(st),a.disposeIntermediateTensorInfo(et),a.disposeIntermediateTensorInfo(ft),a.disposeIntermediateTensorInfo(mt),a.disposeIntermediateTensorInfo(yt),a.disposeIntermediateTensorInfo(Ct),a.disposeIntermediateTensorInfo(Dt),a.disposeIntermediateTensorInfo(Nt),a.disposeIntermediateTensorInfo(Vt),a.disposeIntermediateTensorInfo(Pt),a.disposeIntermediateTensorInfo(ie),{real:ce,imag:Ce}}function IK(n,t,e){const s=new Float32Array(t*2);for(let a=0;a<t;a++){let r=0,i=0;for(let l=0;l<t;l++){const u=UE(a*l,t,e),h=Bw(n,l);r+=h.real*u.real-h.imag*u.imag,i+=h.real*u.imag+h.imag*u.real}e&&(r/=t,i/=t),VE(s,r,i,a)}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EK(n){const{inputs:t,backend:e}=n,{input:s}=t,a=ht(s.shape),r=s.shape[s.shape.length-1],i=a/r,l=Ae({inputs:{x:s},backend:e,attrs:{shape:[i,r]}}),u=IO(l,!1,e),h=Ae({inputs:{x:u},backend:e,attrs:{shape:s.shape}});return e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(u),h}const AK={kernelName:xg,backendName:"cpu",kernelFunc:EK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $S(n){const{backend:t,attrs:e}=n,{shape:s,value:a,dtype:r}=e,i=r||zo(a),l=Pe(i,ht(s));return DK(l,a,i),t.makeTensorInfo(s,i,l)}const RK={kernelName:vg,backendName:"cpu",kernelFunc:$S};function DK(n,t,e){n.fill(t)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OK={kernelName:wg,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,a=e,r=bn(s.dtype,ht(s.shape)),[i,l,u,h]=s.shape,f=a.data.get(s.dataId).values;for(let m=0;m<i;m++){const y=m*u*l*h;for(let b=0;b<l;b++){const v=b*(u*h);for(let w=0;w<u;w++){const S=w*h;for(let T=0;T<h;T++){const $=Math.round(u-w-1),C=y+v+S+T;let I=f[C];if($>=0&&$<u){const R=$*h,F=y+v+R+T;I=f[F]}r[C]=I}}}}return{dataId:a.write(r,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _K(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r,bias:i,preluActivationWeights:l}=t,{strides:u,pad:h,dataFormat:f,dilations:p,dimRoundingMode:m,activation:y,leakyreluAlpha:b}=s;let v=$O({inputs:{x:a,filter:r},backend:e,attrs:{strides:u,pad:h,dataFormat:f,dilations:p,dimRoundingMode:m}});if(i){const w=v;if(f==="NCHW"&&i.shape.length===1&&i.shape[0]!==1){const S=Ae({inputs:{x:i},backend:e,attrs:{shape:[i.shape[0],1,1]}});v=tu({inputs:{a:v,b:S},backend:e}),e.disposeIntermediateTensorInfo(S)}else v=tu({inputs:{a:v,b:i},backend:e});e.disposeIntermediateTensorInfo(w)}if(y){const w=v;if(f==="NCHW"&&y==="prelu"&&l.shape.length===1&&l.shape[0]!==1){const S=Ae({inputs:{x:l},backend:e,attrs:{shape:[l.shape[0],1,1]}});v=Um(e,v,y,S,b),e.disposeIntermediateTensorInfo(S)}else v=Um(e,v,y,l,b);e.disposeIntermediateTensorInfo(w)}return v}const FK={kernelName:Ah,backendName:"cpu",kernelFunc:_K};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LK(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r,bias:i,preluActivationWeights:l}=t,{strides:u,pad:h,dataFormat:f,dilations:p,dimRoundingMode:m,activation:y,leakyreluAlpha:b}=s;let v=kO({inputs:{x:a,filter:r},backend:e,attrs:{strides:u,pad:h,dataFormat:f,dilations:p,dimRoundingMode:m}});if(i){const w=v;v=tu({inputs:{a:v,b:i},backend:e}),e.disposeIntermediateTensorInfo(w)}if(y){const w=v;v=Um(e,v,y,l,b),e.disposeIntermediateTensorInfo(w)}return v}const zK={kernelName:Rh,backendName:"cpu",kernelFunc:LK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MK(n){const{inputs:t,backend:e}=n,{params:s,indices:a}=t,r=ht(s.shape),i=a.shape,l=i[i.length-1],[u,h,f,p]=Gy(s,a);if(h===0)return e.makeTensorInfo(u,s.dtype,[]);const m=e.data.get(a.dataId).values,y=e.bufferSync(s),b=MD(m,y,s.dtype,h,l,f,p,s.shape,r);return e.makeTensorInfo(u,s.dtype,b.values)}const BK={kernelName:Sg,backendName:"cpu",kernelFunc:MK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VK(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,indices:r}=t,{axis:i,batchDims:l}=s;It([a,r],"gatherV2");const u=Xt(i,a.shape)[0],h=e.data.get(r.dataId).values,f=a.shape[u];for(let C=0;C<h.length;++C){const I=h[C];D(I<=f-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${f-1}]`)}let p=l;l==null&&(p=0);const m=ht(r.shape),y=jw(a,r,u,p),b=Ae({inputs:{x:a},backend:e,attrs:{shape:[y.batchSize,y.outerSize,y.dimSize,y.sliceSize]}}),v=Ae({inputs:{x:r},backend:e,attrs:{shape:[y.batchSize,m/y.batchSize]}}),w=[y.batchSize,y.outerSize,m/y.batchSize,y.sliceSize],S=e.bufferSync(v),T=e.bufferSync(b),$=BD(T,S,w);return e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(v),e.makeTensorInfo(y.outputShape,$.dtype,$.values)}const PK={kernelName:pd,backendName:"cpu",kernelFunc:VK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UK(n){const{inputs:t,backend:e}=n,{input:s}=t,a=ht(s.shape),r=s.shape[s.shape.length-1],i=a/r,l=Ae({inputs:{x:s},backend:e,attrs:{shape:[i,r]}}),u=IO(l,!0,e),h=Ae({inputs:{x:u},backend:e,attrs:{shape:s.shape}});return e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(u),h}const GK={kernelName:Ng,backendName:"cpu",kernelFunc:UK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WK=me($u,n=>Number.isFinite(n)?1:0,"bool"),HK={kernelName:$u,backendName:"cpu",kernelFunc:WK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jK=me(ku,n=>Math.abs(n)===1/0?1:0,"bool"),qK={kernelName:ku,backendName:"cpu",kernelFunc:jK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XK=me(Iu,n=>Number.isNaN(n)?1:0,"bool"),KK={kernelName:Iu,backendName:"cpu",kernelFunc:XK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YK(n){const{backend:t,attrs:e}=n,{start:s,stop:a,num:r}=e,i=WD(s,a,r);return t.makeTensorInfo([i.length],"float32",i)}const ZK={kernelName:Cg,backendName:"cpu",kernelFunc:YK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QK=me(Au,n=>Math.log1p(n)),JK={kernelName:Au,backendName:"cpu",kernelFunc:QK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const t7=Ke((n,t)=>n&&t),e7=hn(xd,t7,null,"bool"),n7={kernelName:xd,backendName:"cpu",kernelFunc:e7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const s7=me(vd,n=>n?0:1,"bool"),a7={kernelName:vd,backendName:"cpu",kernelFunc:s7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r7=Ke((n,t)=>n||t),i7=hn(wd,r7,null,"bool"),o7={kernelName:wd,backendName:"cpu",kernelFunc:i7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l7(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{depthRadius:r,bias:i,alpha:l,beta:u}=s;It(a,"LRN");const h=a.shape[3],f=h-1,p=e.data.get(a.dataId).values,m=ht(a.shape),y=new Float32Array(m);function b(v){const w=v%h;let S=v-w+Math.max(0,w-r);const T=v-w+Math.min(w+r,f);let $=0;for(;S<=T;S++){const C=p[S];$+=C*C}return $}for(let v=0;v<m;v++){const w=b(v),S=p[v]*Math.pow(i+l*w,-u);y[v]=S}return e.makeTensorInfo(a.shape,a.dtype,y)}const u7={kernelName:Sd,backendName:"cpu",kernelFunc:l7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c7(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,y:r,dy:i}=t,{depthRadius:l,bias:u,alpha:h,beta:f}=s;It(i,"LRNGrad");const p=ht(i.shape),m=i.shape[3],y=e.data.get(i.dataId).values,b=e.data.get(a.dataId).values,v=e.data.get(r.dataId).values,w=new Float32Array(p),S=p;for(let T=0;T<S;T++){const $=T%m,C=T-$+Math.max(0,$-l),I=T-$+Math.min(m,$+l+1);let R=0;for(let F=C;F<I;F++)R+=Math.pow(b[F],2);R=h*R+u;for(let F=C;F<I;F++){let B=-2*h*f*b[F]*v[T]/R;T===F&&(B+=Math.pow(R,-f)),B*=y[T],w[F]+=B}}return e.makeTensorInfo(i.shape,a.dtype,w)}const h7={kernelName:$g,backendName:"cpu",kernelFunc:c7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EO(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{reductionIndices:r,keepDims:i}=s,l=e;let u=a.shape;const h=u.length,f=Xt(r,u);let p=f;const m=Be(p,h);let y=l.data.get(a.dataId).values;if(m!=null){const C=new Array(h);for(let I=0;I<C.length;I++)C[I]=u[m[I]];y=wS(y,u,a.dtype,m,C),p=qe(p.length,h),u=C}It(a,"max"),Dn("max",p,h);const[b,v]=wn(u,p),w=ht(v),S=jD(y,w,b,a.dtype),T=l.write(S,b,a.dtype);let $=b;return i&&($=je(b,f)),{dataId:T,shape:$,dtype:a.dtype}}const d7={kernelName:Nd,backendName:"cpu",kernelFunc:EO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f7(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t;It(a,"maxPool");const{filterSize:r,strides:i,pad:l,dimRoundingMode:u}=s,h=1;D(Rn(i,h),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`);const f=ua(a.shape,r,i,h,l,u);let p;if(f.filterWidth===1&&f.filterHeight===1&&Zt(f.inShape,f.outShape))p=tr({inputs:{x:a},backend:e});else{const m=e.data.get(a.dataId).values,y=Ot(a.shape),b=TS(m,a.shape,a.dtype,y,f,"max");p=e.makeTensorInfo(f.outShape,a.dtype,b.values)}return p}const p7={kernelName:Td,backendName:"cpu",kernelFunc:f7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m7(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{filterSize:r,strides:i,pad:l,dimRoundingMode:u,dataFormat:h}=s;It(a,"maxPool3d");const f=Or(a.shape,r,i,1,l,u,h),p=e.data.get(a.dataId).values,m=CO(p,a.shape,a.dtype,Ot(a.shape),f,"max");return e.makeTensorInfo(m.shape,"float32",m.values)}const g7={kernelName:Cd,backendName:"cpu",kernelFunc:m7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y7(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,input:r}=t,{filterSize:i,strides:l,pad:u,dimRoundingMode:h}=s;It([a,r],"maxPool3DGrad");const f=Or(r.shape,i,l,1,u,h),p=e.bufferSync(r),m=rX(p,f),y=f.strideDepth,b=f.strideHeight,v=f.strideWidth,w=f.dilationDepth,S=f.dilationHeight,T=f.dilationWidth,$=f.effectiveFilterDepth,C=f.effectiveFilterHeight,I=f.effectiveFilterWidth,R=$-1-f.padInfo.front,F=I-1-f.padInfo.left,B=C-1-f.padInfo.top,L=Gt(r.shape,"float32"),z=e.bufferSync(a);for(let A=0;A<f.batchSize;++A)for(let G=0;G<f.inChannels;++G)for(let Q=0;Q<f.inDepth;++Q)for(let tt=0;tt<f.inHeight;++tt)for(let J=0;J<f.inWidth;++J){const V=Q-R,q=tt-B,Y=J-F;let it=0;for(let M=0;M<$;M+=w){const j=(V+M)/y;if(!(j<0||j>=f.outDepth||Math.floor(j)!==j))for(let st=0;st<C;st+=S){const et=(q+st)/b;if(!(et<0||et>=f.outHeight||Math.floor(et)!==et))for(let ft=0;ft<I;ft+=T){const mt=(Y+ft)/v;if(mt<0||mt>=f.outWidth||Math.floor(mt)!==mt)continue;const yt=$*C*I-1-m.get(A,j,et,mt,G),Ct=M*C*I+st*I+ft,Nt=yt===Ct?1:0;if(Nt===0)continue;const Dt=z.get(A,j,et,mt,G);it+=Dt*Nt}}}L.set(it,A,Q,tt,J,G)}return e.makeTensorInfo(L.shape,L.dtype,L.values)}const b7={kernelName:Ig,backendName:"cpu",kernelFunc:y7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x7(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,input:r,output:i}=t,l=r;It([r,i],"maxPoolGrad");const{filterSize:u,strides:h,pad:f,dimRoundingMode:p}=s,m=ua(l.shape,u,h,1,f,p),y=e.data.get(l.dataId).values,b=Gt(m.outShape,l.dtype,TO(y,l.shape,l.dtype,m).values),v=m.strideHeight,w=m.strideWidth,S=m.dilationHeight,T=m.dilationWidth,$=m.effectiveFilterHeight,C=m.effectiveFilterWidth,I=C-1-m.padInfo.left,R=$-1-m.padInfo.top,F=Gt(l.shape,"float32"),B=e.data.get(a.dataId).values,L=Gt(a.shape,"float32",B);for(let z=0;z<m.batchSize;++z)for(let A=0;A<m.inChannels;++A)for(let G=0;G<m.inHeight;++G)for(let Q=0;Q<m.inWidth;++Q){const tt=G-R,J=Q-I;let V=0;for(let q=0;q<$;q+=S){const Y=(tt+q)/v;if(!(Y<0||Y>=m.outHeight||Math.floor(Y)!==Y))for(let it=0;it<C;it+=T){const M=(J+it)/w;if(M<0||M>=m.outWidth||Math.floor(M)!==M)continue;const j=$*C-1-b.get(z,Y,M,A),st=q*C+it,et=j===st?1:0;if(et===0)continue;const ft=L.get(z,Y,M,A);V+=ft*et}}F.set(V,z,G,Q,A)}return e.makeTensorInfo(F.shape,F.dtype,F.values)}const v7={kernelName:kg,backendName:"cpu",kernelFunc:x7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w7(n,t,e,s,a){const r=Ot(t),i=TS(n,t,e,r,a,"max"),l=TO(n,t,e,a,!0,s);return[i.values,l.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S7={kernelName:Eg,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{filterSize:a,strides:r,pad:i,includeBatchInIndex:l}=t,u=e;It(s,"MaxPoolWithArgmax");const h=u.data.get(s.dataId).values,f=ua(s.shape,a,r,[1,1],i),[p,m]=w7(h,s.shape,s.dtype,l,f),y=u.write(p,f.outShape,s.dtype),b=u.write(m,f.outShape,s.dtype);return[{dataId:y,shape:f.outShape,dtype:s.dtype},{dataId:b,shape:f.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N7(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s,l=Xt(r,a.shape),h=wn(a.shape,l)[1],f=ht(h),p=[],m=e.makeTensorInfo([],"float32",new Float32Array([f]));p.push(m);const y=Ii({inputs:{x:a},backend:e,attrs:{dtype:"float32"}});p.push(y);const b=CS({inputs:{a:y,b:m},backend:e});p.push(b);const v=Ef({inputs:{x:b},backend:e,attrs:{axis:r,keepDims:i}});return p.forEach(w=>e.disposeIntermediateTensorInfo(w)),v}const T7={kernelName:$d,backendName:"cpu",kernelFunc:N7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C7(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s;It(a,"min");const l=Xt(r,a.shape);let u=l;const h=Be(u,a.shape.length);let f=a;h!=null&&(f=cs({inputs:{x:a},backend:e,attrs:{perm:h}}),u=qe(u.length,a.shape.length)),Dn("min",u,f.shape.length);const[p,m]=wn(f.shape,u),y=ht(m),b=En(ht(p),f.dtype),v=e.data.get(f.dataId).values;for(let S=0;S<b.length;++S){const T=S*y;let $=v[T];for(let C=0;C<y;++C){const I=v[T+C];(Number.isNaN(I)||I<$)&&($=I)}b[S]=$}h!=null&&e.disposeIntermediateTensorInfo(f);const w=e.makeTensorInfo(p,f.dtype,b);if(i){const S=je(p,l),T=Ae({inputs:{x:w},backend:e,attrs:{shape:S}});return e.disposeIntermediateTensorInfo(w),T}return w}const $7={kernelName:kd,backendName:"cpu",kernelFunc:C7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k7(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{paddings:r,mode:i}=s;It(a,"mirrorPad");const l=r.map(($,C)=>$[0]+a.shape[C]+$[1]),u=r.map($=>$[0]),h=r.map(($,C)=>$[0]+a.shape[C]),f=i==="reflect"?0:1,p=e.data.get(a.dataId).values,m=a.shape.length,y=Ot(a.shape),b=ht(l),v=l.length,w=Ot(l),S=bn(a.dtype,b);for(let $=0;$<b;$++){let C=Mo($,v,w);for(let R=0;R<v;R++)C[R]<u[R]?C[R]=u[R]*2-C[R]-f:C[R]>=h[R]&&(C[R]=(h[R]-1)*2-C[R]+f);C=C.map((R,F)=>R-u[F]);const I=Sa(C,m,y);S[$]=p[I]}return{dataId:e.write(S,l,a.dtype),shape:l,dtype:a.dtype}}const I7={kernelName:Id,backendName:"cpu",kernelFunc:k7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E7=Ke((n,t)=>{const e=n%t;return n<0&&t<0||n>=0&&t>=0?e:(e+t)%t}),A7=hn(Ou,E7),R7={kernelName:Ou,backendName:"cpu",kernelFunc:A7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AO(n){const{inputs:t,backend:e,attrs:s}=n,{logits:a}=t,{dim:r}=s,i=a.shape.length;let l=r;if(l===-1&&(l=i-1),l!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${l}`);const u=Xt([l],a.shape),h=EO({inputs:{x:a},backend:e,attrs:{reductionIndices:u,keepDims:!1}}),f=je(h.shape,u),p=Ae({inputs:{x:h},backend:e,attrs:{shape:f}}),m=NS({inputs:{a,b:p},backend:e}),y=_D({inputs:{x:m},backend:e}),b=Ef({inputs:{x:y},backend:e,attrs:{axis:u,keepDims:!1}}),v=Ae({inputs:{x:b},backend:e,attrs:{shape:f}}),w=CS({inputs:{a:y,b:v},backend:e});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(v),w}const D7={kernelName:jd,backendName:"cpu",kernelFunc:AO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O7(n){const{inputs:t,backend:e,attrs:s}=n,{logits:a}=t,{numSamples:r,seed:i,normalized:l}=s;It(a,"multinomial");const u=l?a:AO({inputs:{logits:a},backend:e,attrs:{dim:-1}}),h=u.shape[0],f=u.shape[1],p=e.data.get(u.dataId).values,m=[h,r],y=En(ht(m),"int32");for(let b=0;b<h;++b){const v=b*f,w=new Float32Array(f-1);w[0]=p[v];for(let $=1;$<w.length;++$)w[$]=w[$-1]+p[v+$];const S=by.alea(i.toString()),T=b*r;for(let $=0;$<r;++$){const C=S();y[T+$]=w.length;for(let I=0;I<w.length;I++)if(C<w[I]){y[T+$]=I;break}}}return l||e.disposeIntermediateTensorInfo(u),e.makeTensorInfo(m,"int32",y)}const _7={kernelName:Ag,backendName:"cpu",kernelFunc:O7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F7=By;function L7(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:a,scores:r}=t,{maxOutputSize:i,iouThreshold:l,scoreThreshold:u}=s;It(a,"NonMaxSuppression");const h=e.data.get(a.dataId).values,f=e.data.get(r.dataId).values,{selectedIndices:p}=F7(h,f,i,l,u);return e.makeTensorInfo([p.length],"int32",new Int32Array(p))}const z7={kernelName:Rg,backendName:"cpu",kernelFunc:L7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M7=Vy;function B7(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:a,scores:r}=t,{maxOutputSize:i,iouThreshold:l,scoreThreshold:u,padToMaxOutputSize:h}=s;It(a,"NonMaxSuppressionPadded");const f=e.data.get(a.dataId).values,p=e.data.get(r.dataId).values,{selectedIndices:m,validOutputs:y}=M7(f,p,i,l,u,h);return[e.makeTensorInfo([m.length],"int32",new Int32Array(m)),e.makeTensorInfo([],"int32",new Int32Array([y]))]}const V7={kernelName:Dg,backendName:"cpu",kernelFunc:B7};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P7=Py;function U7(n){const{inputs:t,backend:e,attrs:s}=n,{boxes:a,scores:r}=t,{maxOutputSize:i,iouThreshold:l,scoreThreshold:u,softNmsSigma:h}=s;It(a,"NonMaxSuppressionWithScore");const f=e.data.get(a.dataId).values,p=e.data.get(r.dataId).values,m=i,y=l,b=u,v=h,{selectedIndices:w,selectedScores:S}=P7(f,p,m,y,b,v);return[e.makeTensorInfo([w.length],"int32",new Int32Array(w)),e.makeTensorInfo([S.length],"float32",new Float32Array(S))]}const G7={kernelName:Og,backendName:"cpu",kernelFunc:U7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W7(n){const{inputs:t,backend:e,attrs:s}=n,{indices:a}=t,{dtype:r,depth:i,onValue:l,offValue:u}=s;It(a,"oneHot");const h=ht(a.shape),f=new Float32Array(h*i);f.fill(u);const p=e.data.get(a.dataId).values;for(let m=0;m<h;++m)p[m]>=0&&p[m]<i&&(f[m*i+p[m]]=l);return e.makeTensorInfo([...a.shape,i],r,f)}const H7={kernelName:Dd,backendName:"cpu",kernelFunc:W7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wm(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){const a=Oo({inputs:{input:s},backend:e}),r=Wm({inputs:{x:a},backend:e}),i=eu({inputs:{input:s},backend:e}),l=Wm({inputs:{x:i},backend:e}),u=ws({inputs:{real:r,imag:l},backend:e});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(l),u}else return $S({backend:e,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const j7={kernelName:Yd,backendName:"cpu",kernelFunc:Wm};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RO(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){const a=Oo({inputs:{input:s},backend:e}),r=RO({inputs:{x:a},backend:e}),i=eu({inputs:{input:s},backend:e}),l=Wm({inputs:{x:i},backend:e}),u=ws({inputs:{real:r,imag:l},backend:e});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(l),u}else return $S({backend:e,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const q7={kernelName:Rd,backendName:"cpu",kernelFunc:RO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DO(n){const{inputs:t,backend:e,attrs:s}=n,{axis:a}=s;if(t.length===1)return Gm({inputs:{input:t[0]},backend:e,attrs:{dim:a}});const r=t[0].shape,i=t[0].dtype;t.forEach(f=>{An(r,f.shape,"All tensors passed to stack must have matching shapes"),D(i===f.dtype,()=>"All tensors passed to stack must have matching dtypes")});const l=[],u=t.map(f=>{const p=Gm({inputs:{input:f},backend:e,attrs:{dim:a}});return l.push(p),p}),h=nu({inputs:u,backend:e,attrs:{axis:a}});return l.forEach(f=>e.disposeIntermediateTensorInfo(f)),h}const X7={kernelName:Od,backendName:"cpu",kernelFunc:DO};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K7(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{paddings:r,constantValue:i}=s;It(a,"pad");const l=r.map((T,$)=>T[0]+a.shape[$]+T[1]),u=r.map(T=>T[0]),h=e.data.get(a.dataId).values,f=ht(a.shape),p=a.shape.length,m=Ot(a.shape),y=ht(l),b=l.length,v=Ot(l),w=bn(a.dtype,y);i!==0&&w.fill(i);for(let T=0;T<f;T++){const C=Mo(T,p,m).map((R,F)=>R+u[F]),I=Sa(C,b,v);w[I]=h[T]}return{dataId:e.write(w,l,a.dtype),shape:l,dtype:a.dtype}}const OO={kernelName:_d,backendName:"cpu",kernelFunc:K7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y7=Ke((n,t)=>Math.pow(n,t)),Z7=hn(Fu,Y7),Q7={kernelName:Fu,backendName:"cpu",kernelFunc:Z7};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J7(n){const{inputs:t,backend:e,attrs:s}=n,{paramsNestedSplits:a,paramsDenseValues:r,indices:i}=t,{outputRaggedRank:l}=s,u=a.map(S=>e.data.get(S.dataId).values),h=a.map(S=>S.shape),f=e.data.get(r.dataId).values,p=e.data.get(i.dataId).values,[m,y,b]=QD(u,h,f,r.shape,r.dtype,p,i.shape),v=m.map(S=>e.makeTensorInfo([S.length],"int32",S)),w=e.makeTensorInfo(b,r.dtype,y);return v.concat([w])}const t9={kernelName:_g,backendName:"cpu",kernelFunc:J7};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e9(n){const{inputs:t,backend:e}=n,{starts:s,limits:a,deltas:r}=t,i=e.data.get(s.dataId).values,l=e.data.get(a.dataId).values,u=e.data.get(r.dataId).values,[h,f]=JD(i,s.shape,s.dtype,l,a.shape,u,r.shape),p=e.makeTensorInfo([h.length],"int32",h),m=e.makeTensorInfo([f.length],s.dtype,f);return[p,m]}const n9={kernelName:Fg,backendName:"cpu",kernelFunc:e9};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s9(n){const{inputs:t,backend:e,attrs:s}=n,{shape:a,values:r,defaultValue:i,rowPartitionTensors:l}=t,{rowPartitionTypes:u}=s,h=e.data.get(a.dataId).values,f=e.data.get(r.dataId).values,p=e.data.get(i.dataId).values,m=l.map(w=>e.data.get(w.dataId).values),y=l.map(w=>w.shape),[b,v]=tO(h,a.shape,f,r.shape,r.dtype,p,i.shape,m,y,u);return e.makeTensorInfo(b,r.dtype,v)}const a9={kernelName:Lg,backendName:"cpu",kernelFunc:s9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r9(n){const{backend:t,attrs:e}=n,{start:s,stop:a,dtype:r,step:i}=e,l=eO(s,a,i,r);return t.makeTensorInfo([l.length],r,l)}const i9={kernelName:zg,backendName:"cpu",kernelFunc:r9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const o9=me(Lu,n=>1/n),l9={kernelName:Lu,backendName:"cpu",kernelFunc:o9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u9(n){const{inputs:t,backend:e,attrs:s}=n,{images:a}=t,{alignCorners:r,halfPixelCenters:i,size:l}=s;It(a,"resizeBilinear");const u=Ot(a.shape),[h,f]=l,[p,m,y,b]=a.shape,v=e.data.get(a.dataId).values,w=new Float32Array(ht([p,h,f,b])),S=[r&&h>1?m-1:m,r&&f>1?y-1:y],T=[r&&h>1?h-1:h,r&&f>1?f-1:f];let $=0;const C=S[0]/T[0],I=S[1]/T[1];for(let R=0;R<p;R++)for(let F=0;F<h;F++){let B;i?B=C*(F+.5)-.5:B=C*F;const L=Math.max(0,Math.floor(B)),z=B-L,A=Math.min(m-1,Math.ceil(B)),G=R*u[0]+L*u[1],Q=R*u[0]+A*u[1];for(let tt=0;tt<f;tt++){let J;i?J=I*(tt+.5)-.5:J=I*tt;const V=Math.max(0,Math.floor(J)),q=J-V,Y=Math.min(y-1,Math.ceil(J)),it=G+V*u[2],M=Q+V*u[2],j=G+Y*u[2],st=Q+Y*u[2];for(let et=0;et<b;et++){const ft=v[it+et],mt=v[M+et],yt=v[j+et],Ct=v[st+et],Nt=ft+(yt-ft)*q,Dt=mt+(Ct-mt)*q,Vt=Nt+(Dt-Nt)*z;w[$++]=Vt}}}return e.makeTensorInfo([p,h,f,b],"float32",w)}const c9={kernelName:Bd,backendName:"cpu",kernelFunc:u9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h9(n){const{inputs:t,backend:e,attrs:s}=n,{images:a,dy:r}=t,{alignCorners:i}=s;It([r,a],"resizeBilinearGrad");const l=Ot(a.shape),[u,h,f,p]=a.shape,[,m,y]=r.shape,b=new Float32Array(u*h*f*p),v=[i&&m>1?h-1:h,i&&y>1?f-1:f],w=[i&&m>1?m-1:m,i&&y>1?y-1:y],S=v[0]/w[0],T=v[1]/w[1],$=e.data.get(r.dataId).values;let C=0;for(let I=0;I<u;I++){const R=I*l[0];for(let F=0;F<m;F++){const B=F*S,L=Math.floor(B),z=Math.min(Math.ceil(B),h-1),A=R+L*l[1],G=R+z*l[1],Q=B-L,tt=1-Q;for(let J=0;J<y;J++){const V=J*T,q=Math.floor(V),Y=Math.min(Math.ceil(V),f-1),it=V-q,M=1-it,j=A+q*l[2],st=A+Y*l[2],et=G+q*l[2],ft=G+Y*l[2],mt=tt*M,yt=tt*it,Ct=Q*M,Nt=Q*it;for(let Dt=0;Dt<p;Dt++){const Vt=$[C++];b[j+Dt]+=Vt*mt,b[st+Dt]+=Vt*yt,b[et+Dt]+=Vt*Ct,b[ft+Dt]+=Vt*Nt}}}}return e.makeTensorInfo([u,f,h,p],"float32",b)}const d9={kernelName:Vg,backendName:"cpu",kernelFunc:h9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f9(n){const{inputs:t,backend:e,attrs:s}=n,{images:a}=t,{alignCorners:r,halfPixelCenters:i,size:l}=s;It(a,"resizeNearestNeighbor");const u=Ot(a.shape),[h,f]=l,[p,m,y,b]=a.shape,v=e.data.get(a.dataId).values,w=new Float32Array(p*h*f*b),S=[r&&h>1?m-1:m,r&&f>1?y-1:y],T=[r&&h>1?h-1:h,r&&f>1?f-1:f],$=S[0]/T[0],C=S[1]/T[1];let I=0;for(let R=0;R<p;R++){const F=R*u[0];for(let B=0;B<h;B++){const L=i?$*(B+.5):$*B;let z=Math.min(m-1,r?Math.round(L):Math.floor(L));i&&(z=Math.max(0,z));const A=F+z*u[1];for(let G=0;G<f;G++){const Q=i?C*(G+.5):C*G;let tt=Math.min(y-1,r?Math.round(Q):Math.floor(Q));i&&(tt=Math.max(0,tt));const J=A+tt*u[2];for(let V=0;V<b;V++){const q=v[J+V];w[I++]=q}}}}return e.makeTensorInfo([p,h,f,b],a.dtype,w)}const p9={kernelName:Md,backendName:"cpu",kernelFunc:f9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m9(n){const{inputs:t,backend:e,attrs:s}=n,{images:a,dy:r}=t,{alignCorners:i}=s;It([r,a],"resizeNearestNeighborGrad");const l=Ot(a.shape),u=Ot(r.shape),[h,f,p,m]=a.shape,[,y,b]=r.shape,v=new Float32Array(h*f*p*m),w=e.data.get(r.dataId).values,S=[i&&y>1?f-1:f,i&&b>1?p-1:p],T=[i&&y>1?y-1:y,i&&b>1?b-1:b],$=S[0]/T[0],C=S[1]/T[1],I=1/$,R=1/C,F=Math.ceil(I)*2+2,B=Math.ceil(R)*2+2;for(let L=0;L<h;L++){const z=L*l[0];for(let A=0;A<f;A++){const G=z+A*l[1],Q=Math.floor(A*I),tt=Math.floor(Q-F/2);for(let J=0;J<p;J++){const V=G+J*l[2],q=Math.floor(J*R),Y=Math.floor(q-B/2);for(let it=0;it<m;it++){let M=0;for(let j=0;j<F;j++){const st=j+tt;if(st<0||st>=y)continue;const et=z+st*u[1],ft=st*$,mt=Math.min(f-1,i?Math.round(ft):Math.floor(ft));if(A===mt)for(let yt=0;yt<B;yt++){const Ct=yt+Y;if(Ct<0||Ct>=b)continue;const Nt=et+Ct*u[2],Dt=Ct*C,Vt=Math.min(p-1,i?Math.round(Dt):Math.floor(Dt));J===Vt&&(M+=w[Nt+it])}}v[V+it]=M}}}}return e.makeTensorInfo(a.shape,a.dtype,v)}const g9={kernelName:Bg,backendName:"cpu",kernelFunc:m9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y9(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{dims:r}=s;It(a,"reverse");const i=a.shape.length,l=Xt(r,a.shape);if(i===0)return tr({inputs:{x:a},backend:e});const u=new en(a.shape,a.dtype),h=e.bufferSync(a);for(let f=0;f<u.size;f++){const p=u.indexToLoc(f),m=p.slice();l.forEach(y=>m[y]=a.shape[y]-1-m[y]),u.set(h.get(...m),...p)}return e.makeTensorInfo(u.shape,u.dtype,u.values)}const b9={kernelName:Vd,backendName:"cpu",kernelFunc:y9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x9={kernelName:sy,backendName:"cpu",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,{radians:a,fillValue:r,center:i}=t,l=e,u=bn(s.dtype,ht(s.shape)),[h,f,p,m]=s.shape,[y,b]=Aw(i,f,p),v=255,w=Math.sin(a),S=Math.cos(a),T=l.data.get(s.dataId).values;for(let C=0;C<h;C++){const I=C*p*f*m;for(let R=0;R<f;R++){const F=R*(p*m);for(let B=0;B<p;B++){const L=B*m;for(let z=0;z<m;z++){const A=[h,R,B,z],G=A[2],Q=A[1];let tt=(G-y)*S-(Q-b)*w,J=(G-y)*w+(Q-b)*S;tt=Math.round(tt+y),J=Math.round(J+b);let V=r;if(typeof r!="number"&&(z===3?V=v:V=r[z]),tt>=0&&tt<p&&J>=0&&J<f){const Y=J*(p*m),it=tt*m,M=I+Y+it+z;V=T[M]}const q=I+F+L+z;u[q]=V}}}}return{dataId:l.write(u,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v9=me(Bu,n=>{const t=Math.floor(n);return n-t<.5?Math.floor(n):n-t>.5?Math.ceil(n):t%2===0?t:t+1}),w9={kernelName:Bu,backendName:"cpu",kernelFunc:v9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S9(n){const{inputs:t,backend:e,attrs:s}=n,{indices:a,updates:r}=t,{shape:i}=s,{sliceRank:l,numUpdates:u,sliceSize:h,strides:f,outputSize:p}=Li(r,a,i),m=!0,y=e.bufferSync(a),b=e.bufferSync(r),v=mo(y,b,i,p,h,u,l,f,0,m);return e.makeTensorInfo(i,v.dtype,v.values)}const N9={kernelName:Pg,backendName:"cpu",kernelFunc:S9};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T9(n,t){let e=0,s=n.length,a=0;for(;e<s;)a=Math.floor((e+s)/2),n[a]<t?e=a+1:s=a;return s}function C9(n,t){let e=0,s=n.length,a=0;for(;e<s;)a=Math.floor((e+s)/2),n[a]<=t?e=a+1:s=a;return s}function $9(n,t,e,s,a,r){const i=Pe("int32",e*a);for(let l=0;l<e;++l){const u=n.slice(l*s,(l+1)*s),h=l*a;for(let f=0;f<a;++f)i[h+f]=r==="left"?T9(u,t[f+h]):C9(u,t[f+h])}return i}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k9(n){const{inputs:t,backend:e,attrs:s}=n,{sortedSequence:a,values:r}=t,{side:i}=s,l=e.data.get(a.dataId).values,u=e.data.get(r.dataId).values,h=$9(l,u,a.shape[0],a.shape[1],r.shape[1],i);return e.makeTensorInfo(r.shape,"int32",h)}const I9={kernelName:Gg,backendName:"cpu",kernelFunc:k9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E9(n){const{inputs:t,backend:e}=n,{condition:s,t:a,e:r}=t;It([s,a,r],"select");const i=s.shape.length,l=e.data.get(s.dataId).values,u=e.data.get(a.dataId).values,h=e.data.get(r.dataId).values,f=rs(a.dtype,r.dtype),p=En(ht(a.shape),f);let m=0;const y=i===0||i>1||a.shape.length===1?1:ht(a.shape.slice(1));for(let b=0;b<l.length;b++)for(let v=0;v<y;v++)l[b]===1?p[m++]=u[b]:p[m++]=h[b];return e.makeTensorInfo(a.shape,f,p)}const A9={kernelName:Pd,backendName:"cpu",kernelFunc:E9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R9=jy,D9=qy,O9=me(Pu,n=>n>=0?D9*n:R9*(Math.exp(n)-1)),_9={kernelName:Pu,backendName:"cpu",kernelFunc:O9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F9=me(Wu,n=>n<0?-1:n>0?1:0),L9={kernelName:Wu,backendName:"cpu",kernelFunc:F9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z9=me(Uu,n=>Math.sin(n)),M9={kernelName:Uu,backendName:"cpu",kernelFunc:z9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B9=me(Gu,n=>Math.sinh(n)),V9={kernelName:Gu,backendName:"cpu",kernelFunc:B9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P9=11920928955078125e-23,Y$=Math.log(P9)+2,U9=me(ju,n=>{const t=n>-Y$,e=n<Y$,s=Math.exp(n);let a;return e?a=s:t?a=n:a=Math.log(1+s),a}),G9={kernelName:ju,backendName:"cpu",kernelFunc:U9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W9(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{blockShape:r,paddings:i}=s;It([a],"spaceToBatchND");const l=ht(r),u=[[0,0]];u.push(...i);for(let R=1+r.length;R<a.shape.length;++R)u.push([0,0]);const h=OO.kernelFunc({inputs:{x:a},backend:e,attrs:{paddings:u,constantValue:0}}),f=bf(h.shape,r,l,!1),p=xf(f.length,r.length,!1),m=vf(h.shape,r,l,!1),v=Ae({inputs:{x:h},backend:e,attrs:{shape:f}}),T=cs({inputs:{x:v},backend:e,attrs:{perm:p}}),I=Ae({inputs:{x:T},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(v),e.disposeIntermediateTensorInfo(T),I}const H9={kernelName:Wd,backendName:"cpu",kernelFunc:W9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j9(n){const{inputs:t,backend:e}=n,{indices:s,values:a,denseShape:r,defaultValue:i}=t;if(r.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${r.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(a.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${a.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const l=e.data.get(s.dataId).values,u=e.data.get(a.dataId).values,h=e.data.get(r.dataId).values,f=e.data.get(i.dataId).values[0],[p,m,y,b,v]=rO(l,s.shape,s.dtype,u,a.dtype,h,f);return[e.makeTensorInfo(m,s.dtype,p),e.makeTensorInfo([m[0]],a.dtype,y),e.makeTensorInfo([b.length],"bool",new Uint8Array(b.map(w=>Number(w)))),e.makeTensorInfo([v.length],s.dtype,new Int32Array(v))]}const q9={kernelName:Wg,backendName:"cpu",kernelFunc:j9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X9(n){const{inputs:t,backend:e}=n,{inputIndices:s,inputShape:a,newShape:r}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(a.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${a.shape}`);if(r.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const i=Array.from(e.data.get(a.dataId).values),l=e.data.get(s.dataId).values,u=Array.from(e.data.get(r.dataId).values),[h,f,p]=iO(l,s.shape,s.dtype,i,u);return[e.makeTensorInfo(f,s.dtype,h),e.makeTensorInfo([p.length],r.dtype,new Int32Array(p))]}const K9={kernelName:Hg,backendName:"cpu",kernelFunc:X9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y9(n){const{inputs:t,backend:e}=n,{data:s,indices:a,segmentIds:r}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${a.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${r.shape}`);if(a.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const i=e.data.get(s.dataId).values,l=e.data.get(a.dataId).values,u=e.data.get(r.dataId).values,[h,f]=SS(i,s.shape,s.dtype,l,u,!0);return e.makeTensorInfo(f,s.dtype,h)}const Z9={kernelName:jg,backendName:"cpu",kernelFunc:Y9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q9(n){const{inputs:t,backend:e}=n,{data:s,indices:a,segmentIds:r}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${a.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${r.shape}`);if(a.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const i=e.data.get(s.dataId).values,l=e.data.get(a.dataId).values,u=e.data.get(r.dataId).values,[h,f]=SS(i,s.shape,s.dtype,l,u);return e.makeTensorInfo(f,s.dtype,h)}const J9={kernelName:qg,backendName:"cpu",kernelFunc:Q9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tY(n){const{inputs:t,backend:e,attrs:s}=n,{sparseIndices:a,sparseValues:r,defaultValue:i}=t,{outputShape:l}=s,{sliceRank:u,numUpdates:h,sliceSize:f,strides:p,outputSize:m}=Li(r,a,l),y=!1,b=e.bufferSync(a);let v;switch(r.dtype){case"bool":{const w=e.bufferSync(r),S=!!e.data.get(i.dataId).values[0];v=mo(b,w,l,m,f,h,u,p,S,y);break}case"float32":{const w=e.bufferSync(r),S=e.data.get(i.dataId).values[0];v=mo(b,w,l,m,f,h,u,p,S,y);break}case"int32":{const w=e.bufferSync(r),S=e.data.get(i.dataId).values[0];v=mo(b,w,l,m,f,h,u,p,S,y);break}case"string":{const w=e.bufferSync(r),S=$r(e.data.get(i.dataId).values[0]);v=mo(b,w,l,m,f,h,u,p,S,y);break}default:throw new Error(`Unsupported type ${r.dtype}`)}return e.makeTensorInfo(l,v.dtype,v.values)}const eY={kernelName:Xg,backendName:"cpu",kernelFunc:tY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nY(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{numOrSizeSplits:r,axis:i}=s,l=Xt(i,a.shape)[0],u=Hw(a,r,l),h=new Array(a.shape.length).fill(0),f=a.shape.slice();return u.map(p=>{const m=[...f];m[l]=p;const y=_o({inputs:{x:a},backend:e,attrs:{begin:h,size:m}});return h[l]+=p,y})}const sY={kernelName:Hd,backendName:"cpu",kernelFunc:nY};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aY={kernelName:Kg,backendName:"cpu",kernelFunc:({inputs:n,backend:t})=>{const{x:e}=n,s=t;It(e,"square");const a=s.data.get(e.dataId).values,r=new Float32Array(a.length);for(let l=0;l<a.length;++l){const u=a[l];r[l]=u*u}return{dataId:s.write(r,e.shape,e.dtype),shape:e.shape,dtype:e.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rY=me(Ju,(n,t)=>{const e=t;return isNaN(n)?NaN:n>0?1:e.alpha}),iY={kernelName:Ju,backendName:"cpu",kernelFunc:rY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oY(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{begin:r,end:i,strides:l,beginMask:u,endMask:h,ellipsisMask:f,newAxisMask:p,shrinkAxisMask:m}=s;It(a,"stridedSlice");const{finalShapeSparse:y,finalShape:b,isIdentity:v,sliceDim0:w,isSimpleSlice:S,begin:T,end:$,strides:C}=$w(a.shape,r,i,l,u,h,f,p,m);let I;if(v)I=Ae({inputs:{x:a},backend:e,attrs:{shape:b}});else if(w||S){D(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);const R=Nw(T,$,C),F=_o({inputs:{x:a},backend:e,attrs:{begin:T,size:R}});I=Ae({inputs:{x:F},backend:e,attrs:{shape:b}}),e.disposeIntermediateTensorInfo(F)}else{const R=e.bufferSync(a),F=uO(y,R,C,T);I=e.makeTensorInfo(b,F.dtype,F.values)}return I}const lY={kernelName:Yg,backendName:"cpu",kernelFunc:oY};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uY(n){const{inputs:t,backend:e,attrs:s}=n,{separator:a,nGramWidths:r,leftPad:i,rightPad:l,padWidth:u,preserveShortSequences:h}=s,{data:f,dataSplits:p}=t,m=e.data.get(f.dataId).values,y=e.data.get(p.dataId).values,[b,v]=cO(m,y,a,r,i,l,u,h);return[e.makeTensorInfo([b.length],"string",b),e.makeTensorInfo(p.shape,"int32",v)]}const cY={kernelName:Zg,backendName:"cpu",kernelFunc:uY};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hY(n){const{inputs:t,backend:e,attrs:s}=n,{skipEmpty:a}=s,{input:r,delimiter:i}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(r.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const l=e.data.get(r.dataId).values,u=e.data.get(i.dataId).values[0],[h,f,p]=hO(l,u,a),m=f.length;return[e.makeTensorInfo([m,2],"int32",h),e.makeTensorInfo([m],"string",f),e.makeTensorInfo([2],"int32",new Int32Array(p))]}const dY={kernelName:Qg,backendName:"cpu",kernelFunc:hY};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fY(n){const{inputs:t,backend:e,attrs:s}=n,{numBuckets:a}=s,{input:r}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=e.data.get(r.dataId).values,l=dO(i,a);return e.makeTensorInfo(r.shape,"int32",l)}const pY={kernelName:Jg,backendName:"cpu",kernelFunc:fY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mY=me(Yu,n=>Math.tan(n)),gY={kernelName:Yu,backendName:"cpu",kernelFunc:mY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yY=me(Zu,n=>Math.tanh(n)),bY={kernelName:Zu,backendName:"cpu",kernelFunc:yY};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xY(n){const{inputs:t,backend:e}=n,{tensor:s,indices:a,updates:r}=t,{sliceRank:i,numUpdates:l,sliceSize:u,strides:h,outputSize:f}=Li(r,a,s.shape),p=!1,m=e.bufferSync(a),y=e.bufferSync(r),b=e.bufferSync(s),v=mo(m,y,s.shape,f,u,l,i,h,b,p);return e.makeTensorInfo(s.shape,v.dtype,v.values)}const vY={kernelName:Ug,backendName:"cpu",kernelFunc:xY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wY(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{reps:r}=s;It(a,"tile");const i=pO(e.bufferSync(a),r);return e.makeTensorInfo(i.shape,i.dtype,i.values)}const SY={kernelName:Qu,backendName:"cpu",kernelFunc:wY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NY(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{k:r,sorted:i}=s;It(a,"topk");const l=e.data.get(a.dataId).values,[u,h]=gO(l,a.shape,a.dtype,r,i);return[e.makeTensorInfo(u.shape,u.dtype,u.values),e.makeTensorInfo(h.shape,h.dtype,h.values)]}const TY={kernelName:ty,backendName:"cpu",kernelFunc:NY};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CY(n){const{inputs:t,attrs:e,backend:s}=n,{image:a,transforms:r}=t,{interpolation:i,fillMode:l,fillValue:u,outputShape:h}=e,[f,p,m,y]=a.shape,[b,v]=h??[p,m],w=[f,b,v,y],S=Ot(a.shape),T=S[0],$=S[1],C=S[2],I=Ot(w),R=I[0],F=I[1],B=I[2],L=bn(a.dtype,ht(w));L.fill(u);const z=s.data.get(a.dataId).values,A=s.data.get(r.dataId).values;for(let Q=0;Q<f;++Q){const tt=r.shape[0]===1?A:A.subarray(Q*8,Q*8+8);for(let J=0;J<b;++J)for(let V=0;V<v;++V)for(let q=0;q<y;++q){let Y;const it=tt[6]*V+tt[7]*J+1;if(it===0)continue;const M=(tt[0]*V+tt[1]*J+tt[2])/it,j=(tt[3]*V+tt[4]*J+tt[5])/it,st=Z$(M,m,l),et=Z$(j,p,l);switch(i){case"nearest":Y=RY(z,p,m,T,$,C,Q,et,st,q,u);break;case"bilinear":Y=DY(z,p,m,T,$,C,Q,et,st,q,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}const ft=Q*R+J*F+V*B+q;L[ft]=Y}return s.makeTensorInfo(w,a.dtype,L)}return{dataId:s.write(L,w,a.dtype),shape:a.shape,dtype:a.dtype}}const $Y={kernelName:ey,backendName:"cpu",kernelFunc:CY};function Z$(n,t,e){switch(e){case"reflect":return kY(n,t);case"wrap":return IY(n,t);case"nearest":return AY(n,t);case"constant":default:return EY(n)}}function kY(n,t){let e=n;if(e<0)if(t<=1)e=0;else{const s=2*t;e<s&&(e=s*Math.trunc(-e/s)+e),e=e<-t?e+s:-e-1}else if(e>t-1)if(t<=1)e=0;else{const s=2*t;e-=s*Math.trunc(e/s),e>=t&&(e=s-e-1)}return yi(0,e,t-1)}function IY(n,t){let e=n;if(e<0)if(t<=1)e=0;else{const s=t-1;e+=t*(Math.trunc(-e/s)+1)}else if(e>t-1)if(t<=1)e=0;else{const s=t-1;e-=t*Math.trunc(e/s)}return yi(0,e,t-1)}function EY(n,t){return n}function AY(n,t){return yi(0,n,t-1)}function Ch(n,t,e,s,a,r,i,l,u,h,f){const p=i*s+l*a+u*r+h;return 0<=l&&l<t&&0<=u&&u<e?n[p]:f}function RY(n,t,e,s,a,r,i,l,u,h,f){const p=Math.round(l),m=Math.round(u);return Ch(n,t,e,s,a,r,i,p,m,h,f)}function DY(n,t,e,s,a,r,i,l,u,h,f){const p=Math.floor(l),m=Math.floor(u),y=p+1,b=m+1,v=(b-u)*Ch(n,t,e,s,a,r,i,p,m,h,f)+(u-m)*Ch(n,t,e,s,a,r,i,p,b,h,f),w=(b-u)*Ch(n,t,e,s,a,r,i,y,m,h,f)+(u-m)*Ch(n,t,e,s,a,r,i,y,b,h,f);return(y-l)*v+(l-p)*w}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OY(n){const{inputs:t,attrs:e,backend:s}=n,{axis:a}=e,{x:r}=t;It(r,"unique");const i=s.data.get(r.dataId).values,{outputValues:l,outputShape:u,indices:h}=yO(i,a,r.shape,r.dtype);return[s.makeTensorInfo(u,r.dtype,l),s.makeTensorInfo([h.length],"int32",h)]}const _Y={kernelName:ny,backendName:"cpu",kernelFunc:OY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FY(n){const{inputs:t,backend:e,attrs:s}=n,{value:a}=t;let{axis:r}=s;r<0&&(r+=a.shape.length);const i=a.shape.length,l=a.shape[r],u=new Array(i-1);let h=0;for(let y=0;y<i;y++)y!==r&&(u[h++]=a.shape[y]);const f=new Array(i).fill(0),p=a.shape.slice();p[r]=1;const m=new Array(l);for(let y=0;y<m.length;y++){f[r]=y;const b=_o({inputs:{x:a},backend:e,attrs:{begin:f,size:p}});m[y]=Ae({inputs:{x:b},backend:e,attrs:{shape:u}}),e.disposeIntermediateTensorInfo(b)}return m}const LY={kernelName:Xd,backendName:"cpu",kernelFunc:FY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zY(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,segmentIds:r}=t,{numSegments:i}=s;It(a,"unsortedSegmentSum");const l=a.shape.length,u=r.shape.length,h=[],f=[],p=l-u;let m=r;for(let b=0;b<p;++b){const v=Gm({inputs:{input:m},backend:e,attrs:{dim:b+1}});m=v,f.push(v)}for(let b=0;b<i;++b){const v=Dr(b,"int32"),w=e.makeTensorInfo([],"int32",v),S=DD({inputs:{a:w,b:m},backend:e}),T=Ii({inputs:{x:S},backend:e,attrs:{dtype:"float32"}}),$=rb({inputs:{a:T,b:a},backend:e}),C=Ef({inputs:{x:$},backend:e,attrs:{axis:0,keepDims:!1}});h.push(C),f.push(w),f.push(S),f.push(T),f.push($),f.push(C)}const y=DO({inputs:h,backend:e,attrs:{axis:0}});return f.forEach(b=>e.disposeIntermediateTensorInfo(b)),y}const MY={kernelName:Kd,backendName:"cpu",kernelFunc:zY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BY=[O8,f5,F8,z8,x5,B8,P8,G8,H8,q8,K8,Z8,J8,nX,aX,oX,uX,hX,fX,R8,mX,yX,xX,w5,wX,y5,N5,NX,p5,CX,kX,IX,AX,DX,_X,LX,MX,VX,UX,WX,jX,XX,YX,QX,JX,eK,sK,rK,iK,oK,lK,cK,fK,T8,mK,T5,NK,C5,TK,k5,AK,RK,OK,E5,R5,FK,zK,BK,PK,O5,F5,m5,GK,$X,HK,qK,KK,C8,z5,B5,ZK,P5,JK,n7,a7,o7,u7,h7,d7,G5,p7,g7,b7,v7,S7,T7,$7,H5,I7,R7,_7,q5,K5,z7,V7,G7,Z5,H7,q7,X7,OO,Q7,k8,t8,t9,n9,a9,i9,g5,M1,l9,I8,E8,A8,c9,d9,p9,g9,b9,x9,w9,l8,N9,I9,A9,_9,c8,L9,M9,V9,h8,D7,G9,H9,q9,K9,Z9,J9,eY,sY,p8,aY,g8,b8,iY,lY,cY,dY,pY,S8,hK,gY,bY,vY,SY,TY,$Y,Q5,_Y,LY,MY,j7];for(const n of BY)ay(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fo={},Jp={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function VY(n,t){fo[n]=t}function Ia(n,t){if(!(n in fo)||t!=null){const s=UY(n,t);if(s!==null)fo[n]=s;else return console.log("Could not get context for WebGL version",n),null}const e=fo[n];return e==null||e.isContextLost()?(delete fo[n],Ia(n)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),fo[n])}function PY(n){if(!rt().getBool("IS_SAFARI")&&typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function UY(n,t){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=t??PY(n);return e.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete fo[n]},!1),rt().getBool("SOFTWARE_WEBGL_ENABLED")&&(Jp.failIfMajorPerformanceCaveat=!1),n===1?e.getContext("webgl",Jp)||e.getContext("experimental-webgl",Jp):e.getContext("webgl2",Jp)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Wh;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(Wh||(Wh={}));var Bs;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(Bs||(Bs={}));var kn;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(kn||(kn={}));function Af(n,t){return[t,n]}function GY(n,t){return n*t}function tm(n){const t=ht(n),e=Math.ceil(t/4);return xm(e)}function lc(n,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(n/2))]}function WY(n,t){const[e,s]=lc(n,t);return e*s*4}function kS(n,t){const e=n;let s,a,r,i,l,u,h,f,p,m;return rt().getNumber("WEBGL_VERSION")===2?(s=e.R32F,a=e.R16F,r=e.RGBA16F,i=e.RGBA32F,l=e.RED,h=4,f=1,p=e.HALF_FLOAT,m=e.FLOAT,u=e.RGBA8):(s=n.RGBA,a=n.RGBA,r=n.RGBA,i=e.RGBA,l=n.RGBA,h=4,f=4,p=t!=null?t.HALF_FLOAT_OES:null,m=n.FLOAT,u=n.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:r,internalFormatPackedFloat:i,textureFormatFloat:l,downloadTextureFormat:u,downloadUnpackNumChannels:h,defaultNumChannels:f,textureTypeHalfFloat:p,textureTypeFloat:m}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tt(n,t){const e=t();return rt().getBool("DEBUG")&&HY(n),e}function HY(n){const t=n.getError();if(t!==n.NO_ERROR)throw new Error("WebGL Error: "+KY(n,t))}const jY=596e-10,qY=65504;function XY(n){return!!(rt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||jY<Math.abs(n)&&Math.abs(n)<qY)}function KY(n,t){switch(t){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function em(n,t){return Br(n,()=>n.getExtension(t),'Extension "'+t+'" not supported on this browser.')}function YY(n,t){const e=Br(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(Tt(n,()=>n.shaderSource(e,t)),Tt(n,()=>n.compileShader(e)),n.getShaderParameter(e,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(e)),new Error("Failed to compile vertex shader.");return e}function ZY(n,t){const e=Br(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(Tt(n,()=>n.shaderSource(e,t)),Tt(n,()=>n.compileShader(e)),rt().get("ENGINE_COMPILE_ONLY"))return e;if(n.getShaderParameter(e,n.COMPILE_STATUS)===!1)throw _O(t,n.getShaderInfoLog(e)),new Error("Failed to compile fragment shader.");return e}const QY=/ERROR: [0-9]+:([0-9]+):/g;function _O(n,t){const e=QY.exec(t);if(e==null){console.log(`Couldn't parse line number in error: ${t}`),console.log(n);return}const s=+e[1],a=n.split(`
`),r=a.length.toString().length+2,i=a.map((p,m)=>go((m+1).toString(),r)+p);let l=0;for(let p=0;p<i.length;p++)l=Math.max(i[p].length,l);const u=i.slice(0,s-1),h=i.slice(s-1,s),f=i.slice(s);console.log(u.join(`
`)),console.log(t.split(`
`)[0]),console.log(`%c ${go(h[0],l)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(f.join(`
`))}function JY(n){return Br(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function tZ(n,t){if(Tt(n,()=>n.linkProgram(t)),!rt().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(t,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function Wx(n,t){if(Tt(n,()=>n.validateProgram(t)),n.getProgramParameter(t,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function eZ(n,t){const e=Br(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return Tt(n,()=>n.bindBuffer(n.ARRAY_BUFFER,e)),Tt(n,()=>n.bufferData(n.ARRAY_BUFFER,t,n.STATIC_DRAW)),e}function nZ(n,t){const e=Br(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return Tt(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,e)),Tt(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,t,n.STATIC_DRAW)),e}function sZ(n){return Br(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function aZ(n,t){const e=rt().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||t<=0){const s=`[${n}x${t}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(n>e||t>e){const s=`[${n}x${t}]`,a=`[${e}x${e}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+a+".")}}function rZ(n){return Br(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Q$(n,t,e,s,a,r,i){const l=n.getAttribLocation(t,e);return l===-1?!1:(Tt(n,()=>n.bindBuffer(n.ARRAY_BUFFER,s)),Tt(n,()=>n.vertexAttribPointer(l,a,n.FLOAT,!1,r,i)),Tt(n,()=>n.enableVertexAttribArray(l)),!0)}function iZ(n,t,e){hZ(n,e),Tt(n,()=>n.activeTexture(n.TEXTURE0+e)),Tt(n,()=>n.bindTexture(n.TEXTURE_2D,t))}function oZ(n,t,e){return Br(n,()=>n.getUniformLocation(t,e),'uniform "'+e+'" not present in program.')}function lZ(n,t,e){return n.getUniformLocation(t,e)}function uZ(n,t,e,s){Tt(n,()=>iZ(n,t,s)),Tt(n,()=>n.uniform1i(e,s))}function Hx(n,t,e){Tt(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),Tt(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0))}function J$(n,t){Tt(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),Tt(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function nm(n){const t=n.checkFramebufferStatus(n.FRAMEBUFFER);if(t!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+cZ(n,t))}function cZ(n,t){switch(t){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function Br(n,t,e){const s=Tt(n,()=>t());if(s==null)throw new Error(e);return s}function hZ(n,t){const e=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+n.TEXTURE0;if(s<n.TEXTURE0||s>e){const a=`[gl.TEXTURE0, gl.TEXTURE${e}]`;throw new Error(`textureUnit must be in ${a}.`)}}function su(n,t=2){return ht(n.slice(0,n.length-t))}function au(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function sm(n){let t=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(t=[su(n),...au(n)]),t}function dZ(n,t=!1){let e=rt().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=rt().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&rt().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=e/2),t&&(e=e*2,s=s*2,n=n.map((l,u)=>u>=n.length-2?Zm(n[u]):n[u]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=Rr(n).newShape);let a=ht(n),r=null;n.length<=1&&a<=e?r=[1,a]:n.length===2&&n[0]<=e&&n[1]<=e?r=n:n.length===3&&n[0]*n[1]<=e&&n[2]<=e?r=[n[0]*n[1],n[2]]:n.length===3&&n[0]<=e&&n[1]*n[2]<=e?r=[n[0],n[1]*n[2]]:n.length===4&&n[0]*n[1]*n[2]<=e&&n[3]<=e?r=[n[0]*n[1]*n[2],n[3]]:n.length===4&&n[0]<=e&&n[1]*n[2]*n[3]<=e&&(r=[n[0],n[1]*n[2]*n[3]]);const i=r!=null&&Math.max(...r)>s&&Math.min(...r)<=(t?2:1)&&Math.min(...r)>0;if(r==null||i)if(t){const l=su(n);let u=2,h=2;n.length&&([u,h]=au(n)),a=l*(u/2)*(h/2),r=xm(a).map(f=>f*2)}else r=xm(a);return r}function am(n){return n%2===0}function Hm(n,t){if(n=n.slice(-2),t=t.slice(-2),Zt(n,t)||!n.length||!t.length||n[0]===0||n[1]===0||t[0]===0||t[1]===0)return!0;if(n.length!==t.length){const e=n[n.length-1],s=t[t.length-1];if(e===s||am(e)&&am(s)&&(n[0]===1||t[0]===1))return!0}return n[1]===t[1]&&am(n[0])&&am(t[0])}let jx,qx;function fZ(n){if(jx==null){const t=Ia(n);jx=t.getParameter(t.MAX_TEXTURE_SIZE)}return jx}function pZ(n){if(qx==null){const t=Ia(n);qx=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,qx)}function mZ(n){if(n===0)return 0;let t;const e=Ia(n);return ia(e,"EXT_disjoint_timer_query_webgl2")&&n===2?t=2:ia(e,"EXT_disjoint_timer_query")?t=1:t=0,t}function ia(n,t){return n.getExtension(t)!=null}function tk(n){try{if(Ia(n)!=null)return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function gZ(n){if(n===0)return!1;const t=Ia(n);if(n===1){if(!ia(t,"OES_texture_float"))return!1}else if(!ia(t,"EXT_color_buffer_float"))return!1;return V1(t)}function yZ(n){if(n===0)return!1;const t=Ia(n);if(n===1){if(!ia(t,"OES_texture_float")||!ia(t,"WEBGL_color_buffer_float"))return!1}else{if(ia(t,"EXT_color_buffer_float"))return V1(t);const s="EXT_color_buffer_half_float";if(ia(t,s)){const a=t.getExtension(s);return bZ(t,a)}return!1}return V1(t)}function V1(n){const t=kS(n),e=n.createTexture();n.bindTexture(n.TEXTURE_2D,e),n.texImage2D(n.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,r),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0);const i=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(e),n.deleteFramebuffer(r),i}function bZ(n,t){const e=kS(n,t),s=n.createTexture();n.bindTexture(n.TEXTURE_2D,s),n.texImage2D(n.TEXTURE_2D,0,e.internalFormatHalfFloat,1,1,0,e.textureFormatFloat,e.textureTypeHalfFloat,null);const i=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,i),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,s,0);const l=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(s),n.deleteFramebuffer(i),l}function xZ(n){return n!==2?!1:Ia(n).fenceSync!=null}function Rf(n,t){Array.isArray(n)||(n=[n]),n.forEach(e=>{e!=null&&D(e.dtype!=="complex64",()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const At=rt();At.registerFlag("HAS_WEBGL",()=>At.getNumber("WEBGL_VERSION")>0);At.registerFlag("WEBGL_VERSION",()=>tk(2)?2:tk(1)?1:0);At.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);At.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>At.get("WEBGL_VERSION")===2);At.registerFlag("WEBGL_CPU_FORWARD",()=>!0);At.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);At.registerFlag("WEBGL_PACK",()=>At.getBool("HAS_WEBGL"));At.registerFlag("WEBGL_PACK_NORMALIZATION",()=>At.getBool("WEBGL_PACK"));At.registerFlag("WEBGL_PACK_CLIP",()=>At.getBool("WEBGL_PACK"));At.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>At.getBool("WEBGL_PACK"));At.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>At.getBool("WEBGL_PACK"));At.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>At.getBool("WEBGL_PACK"));At.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>At.getBool("WEBGL_PACK"));At.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>At.getBool("WEBGL_PACK"));At.registerFlag("WEBGL_PACK_REDUCE",()=>At.getBool("WEBGL_PACK"));At.registerFlag("WEBGL_LAZILY_UNPACK",()=>At.getBool("WEBGL_PACK"));At.registerFlag("WEBGL_CONV_IM2COL",()=>At.getBool("WEBGL_PACK"));At.registerFlag("WEBGL_PACK_CONV2DTRANSPOSE",()=>At.getBool("WEBGL_PACK"));At.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>fZ(At.getNumber("WEBGL_VERSION")));At.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>pZ(At.getNumber("WEBGL_VERSION")));At.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=At.getNumber("WEBGL_VERSION");return n===0?0:mZ(n)});At.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>At.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!tv());At.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>gZ(At.getNumber("WEBGL_VERSION")));At.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>At.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:At.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));At.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>yZ(At.getNumber("WEBGL_VERSION")));At.registerFlag("WEBGL_FENCE_API_ENABLED",()=>xZ(At.getNumber("WEBGL_VERSION")));At.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>At.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);At.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});At.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>tv()?1:-1,n=>{if(typeof n!="number")throw new Error(`WEBGL_FLUSH_THRESHOLD must be a number but got ${n}.`);if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)});At.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);At.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);At.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);At.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);At.registerFlag("WEBGL_EXP_CONV",()=>!1);At.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>At.getBool("IS_TEST"));At.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);At.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);At.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);At.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jn(){let n,t,e,s,a,r,i,l,u,h;return rt().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",t="in",e="out",s="in",a="texture",r="outputColor",i="out vec4 outputColor;",l=rt().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",u="",h=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",t="attribute",e="varying",s="varying",a="texture2D",r="gl_FragColor",i="",l=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,u=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,h=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:t,varyingVs:e,varyingFs:s,texture2D:a,output:r,defineOutput:i,defineSpecialNaN:l,defineSpecialInf:u,defineRound:h}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jo(n,t,e="index"){const s=Ot(t);return s.map((a,r)=>{const i=`int ${n[r]} = ${e} / ${a}`,l=r===s.length-1?`int ${n[r+1]} = ${e} - ${n[r]} * ${a}`:`index -= ${n[r]} * ${a}`;return`${i}; ${l};`}).join("")}function ib(n,t,e="index"){const s=Ot(t);return s.map((a,r)=>{const i=`int ${n[r]} = ${e} / outShapeStrides[${r}]`,l=r===s.length-1?`int ${n[r+1]} = ${e} - ${n[r]} * outShapeStrides[${r}]`:`index -= ${n[r]} * outShapeStrides[${r}]`;return`${i}; ${l};`}).join("")}function vZ(n,t){const e=n.length,s=n.map(r=>`${t}[${r}]`),a=new Array(e-1);a[e-2]=s[e-1];for(let r=e-3;r>=0;--r)a[r]=`(${a[r+1]} * ${s[r+1]})`;return a}function wZ(n,t,e="index"){const s=n.map((r,i)=>i),a=vZ(s,t);return a.map((r,i)=>{const l=`int ${n[i]} = ${e} / ${a[i]}`,u=i===a.length-1?`int ${n[i+1]} = ${e} - ${n[i]} * ${a[i]}`:`index -= ${n[i]} * ${a[i]}`;return`${l}; ${u};`}).join("")}function IS(n){const t=Ot(n).map(e=>e.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;
  }
`}function ES(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const FO=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:LO}=sA;function SZ(n,t,e){const s=[];if(n.forEach(y=>{const b=ht(y.shapeInfo.logicalShape);if(y.shapeInfo.isUniform?s.push(`uniform float ${y.name}${b>1?`[${b}]`:""};`):(s.push(`uniform sampler2D ${y.name};`),s.push(`uniform int offset${y.name};`)),e.enableShapeUniforms){const{uniformShape:v}=AS(e.packedInputs,y.shapeInfo.logicalShape,y.shapeInfo.texShape);switch(v.length){case 1:s.push(`uniform int ${y.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${y.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${y.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${y.name}Shape;`);break}s.push(`uniform ivec2 ${y.name}TexShape;`)}}),e.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break}s.push("uniform ivec2 outTexShape;")}e.customUniforms&&e.customUniforms.forEach(y=>{s.push(`uniform ${y.type} ${y.name}${y.arrayIndex?`[${y.arrayIndex}]`:""};`)});const a=s.join(`
`),r=n.map(y=>NZ(y,t,e.packedInputs,e.enableShapeUniforms)).join(`
`),i=t.texShape,l=Jn(),u=$Z(l);let h,f,p=EZ(l);return t.isPacked?(h=TZ(t.logicalShape,i,e.enableShapeUniforms),f=IZ(l)):(h=CZ(t.logicalShape,i,e.enableShapeUniforms),f=kZ(l)),e.packedInputs&&(p+=OZ),[p,u,f,a,h,r,e.userCode].join(`
`)}function uc(n,t=!1){const e=n.shapeInfo.logicalShape;switch(e.length){case 0:return HZ(n,t);case 1:return qZ(n,t);case 2:return KZ(n,t);case 3:return ZZ(n,t);case 4:return JZ(n,t);case 5:return tQ(n);case 6:return eQ(n);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function zO(n,t){switch(n.shapeInfo.logicalShape.length){case 0:return WZ(n);case 1:return jZ(n,t);case 2:return XZ(n,t);case 3:return YZ(n,t);default:return QZ(n,t)}}function NZ(n,t,e=!1,s){let a="";e?a+=zO(n,s):a+=uc(n,s);const r=n.shapeInfo.logicalShape,i=t.logicalShape;return r.length<=i.length&&(e?a+=nQ(n,t):a+=sQ(n,t)),a}function TZ(n,t,e){switch(n.length){case 0:return MO();case 1:return _Z(n,t,e);case 2:return UZ(n,t,e);case 3:return LZ(n,t,e);default:return MZ(n,t,e)}}function CZ(n,t,e){switch(n.length){case 0:return MO();case 1:return FZ(n,t,e);case 2:return GZ(n,t,e);case 3:return zZ(n,t,e);case 4:return BZ(n,t,e);case 5:return VZ(n,t);case 6:return PZ(n,t);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function $Z(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function kZ(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function IZ(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function EZ(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${AZ}
    ${RZ}
    ${DZ}
  `}const AZ=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,RZ=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,DZ=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,OZ=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function MO(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function _Z(n,t,e){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return s[0]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?e?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function FZ(n,t,e){return t[0]===1?e?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${t[1]}.0);
      }
    `:t[1]===1?e?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${t[0]}.0);
      }
    `:e?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      return resTexRC.x * ${t[1]} + resTexRC.y;
    }
  `}function LZ(n,t,e){if(e)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(n[2]/2),r=a*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec3(b, r, c);
    }
  `}function zZ(n,t,e){if(e)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${ib(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const s=jo(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function MZ(n,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(n[n.length-1]/2),r=a*Math.ceil(n[n.length-2]/2);let i=r,l="",u="b, r, c";for(let h=2;h<n.length-1;h++)i*=n[n.length-h-1],l=`
      int b${h} = index / ${i};
      index -= b${h} * ${i};
    `+l,u=`b${h}, `+u;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${l}

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec${n.length}(${u});
    }
  `}function BZ(n,t,e){if(e)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${ib(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const s=jo(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function VZ(n,t){const e=jo(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},
                             ${t[1]}));

      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function PZ(n,t){const e=jo(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;

      ${e}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function UZ(n,t,e){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(Zt(n,t))return e?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;const a=Math.ceil(n[1]/2);return e?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${a});
      int c = imod(index, ${a}) * 2;

      return ivec2(r, c);
    }
  `}function GZ(n,t,e){return Zt(n,t)?e?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));
      }
    `:n[1]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?e?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${t[0]}, ${t[1]}));
        int index = resTexRC.x * ${t[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:e?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${t[0]}, ${t[1]}));
      int index = resTexRC.x * ${t[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function qo(n){return`offset${n}`}function WZ(n){const t=n.name,e="get"+t.charAt(0).toUpperCase()+t.slice(1),s=Jn();return`
    vec4 ${e}() {
      return ${s.texture2D}(${t}, halfCR);
    }
  `}function HZ(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1);if(n.shapeInfo.isUniform)return`float ${s}() {return ${e};}`;const[a,r]=n.shapeInfo.texShape;if(a===1&&r===1)return`
      float ${s}() {
        return sampleTexture(${e}, halfCR);
      }
    `;const i=qo(e);if(t)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], ${i});
      return sampleTexture(${e}, uv);
    }
  `;const[l,u]=n.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${l}, ${u}, ${i});
      return sampleTexture(${e}, uv);
    }
  `}function jZ(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),a=n.shapeInfo.texShape,r=Jn();if(t)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${r.texture2D}(${e}, uv);
    }
  `;const i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${i[0]}, ${i[1]}, index);
      return ${r.texture2D}(${e}, uv);
    }
  `}function qZ(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1);if(n.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${cc(n)}
      }
    `;const a=n.shapeInfo.texShape,r=a[0],i=a[1];if(i===1&&r===1)return`
      float ${s}(int index) {
        return sampleTexture(${e}, halfCR);
      }
    `;const l=qo(e);return i===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${l}) + 0.5) / float(${e}TexShape[0]));
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${l}) + 0.5) / ${r}.0);
        return sampleTexture(${e}, uv);
      }
    `:r===1?t?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${l}) + 0.5) / float(${e}TexShape[1]), 0.5);
        return sampleTexture(${e}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${l}) + 0.5) / ${i}.0, 0.5);
        return sampleTexture(${e}, uv);
      }
    `:t?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${e}TexShape[0], ${e}TexShape[1], index + ${l});
      return sampleTexture(${e}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${r}, ${i}, index + ${l});
      return sampleTexture(${e}, uv);
    }
  `}function XZ(n,t){const e=n.shapeInfo.logicalShape,s=n.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=n.shapeInfo.texShape,i=r[0],l=r[1],u=Jn();if(r!=null&&Zt(e,r))return t?`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${u.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${l}.0, ${i}.0);

        return ${u.texture2D}(${s}, uv);
      }
    `;if(t)return`
    vec4 ${a}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${u.texture2D}(${s}, uv);
    }
  `;const h=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],f=Math.ceil(e[1]/2);return`
    vec4 ${a}(int row, int col) {
      vec2 uv = packedUVfrom2D(${f}, ${h[0]}, ${h[1]}, row, col);
      return ${u.texture2D}(${s}, uv);
    }
  `}function KZ(n,t){const e=n.shapeInfo.logicalShape,s=n.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=n.shapeInfo.texShape;if(r!=null&&Zt(e,r)){if(t)return`
      float ${a}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;const m=r[0],y=r[1];return`
    float ${a}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${y}.0, ${m}.0);
      return sampleTexture(${s}, uv);
    }
  `}const{newShape:i,keptDims:l}=Rr(e),u=i;if(u.length<e.length){const m=hc(n,u),y=["row","col"];return`
      ${uc(m,t)}
      float ${a}(int row, int col) {
        return ${a}(${dc(y,l)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${a}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));
        ${cc(n)}
      }
    `;const h=r[0],f=r[1],p=qo(s);return f===1?t?`
      float ${a}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${a}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${h}.0);
      return sampleTexture(${s}, uv);
    }
  `:h===1?t?`
      float ${a}(int row, int col) {
        float index = dot(vec3(row, col, ${p}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${a}(int row, int col) {
      float index = dot(vec3(row, col, ${p}), vec3(${e[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${f}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:t?`
      float ${a}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${p};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${a}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${e[1]} + col + ${p};
    vec2 uv = uvFromFlat(${h}, ${f}, index);
    return sampleTexture(${s}, uv);
  }
`}function YZ(n,t){const e=n.shapeInfo.logicalShape,s=n.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=n.shapeInfo.texShape,i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(e[0]===1){const m=e.slice(1),y=[1,2],b=hc(n,m),v=["b","row","col"];return`
        ${zO(b,t)}
        vec4 ${a}(int b, int row, int col) {
          return ${a}(${dc(v,y)});
        }
      `}const l=Jn();if(t)return`
    vec4 ${a}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `;const u=i[0],h=i[1],f=Math.ceil(e[2]/2),p=f*Math.ceil(e[1]/2);return`
    vec4 ${a}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${u}, ${h}, ${p}, ${f}, b, row, col);
      return ${l.texture2D}(${s}, uv);
    }
  `}function ZZ(n,t){const e=n.shapeInfo.logicalShape,s=n.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=e[1]*e[2],i=e[2],{newShape:l,keptDims:u}=Rr(e),h=l;if(h.length<e.length){const v=hc(n,h),w=["row","col","depth"];return`
        ${uc(v,t)}
        float ${a}(int row, int col, int depth) {
          return ${a}(${dc(w,u)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${r}, ${i}, 1)));
        ${cc(n)}
      }
    `;const f=n.shapeInfo.texShape,p=f[0],m=f[1],y=n.shapeInfo.flatOffset;if(m===r&&y==null)return t?`
      float ${a}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${a}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${i}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${m}.0, ${p}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(m===i&&y==null)return t?`
      float ${a}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${a}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${m}.0, ${p}.0);
      return sampleTexture(${s}, uv);
    }
  `;const b=qo(s);return t?`
    float ${a}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${b};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${a}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r} + col * ${i} + depth + ${b};
        vec2 uv = uvFromFlat(${p}, ${m}, index);
        return sampleTexture(${s}, uv);
      }
  `}function QZ(n,t){const e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),a=Jn();if(t)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${e}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${e}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${e}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${e}TexShape[0]) / 2.0), ceil(float(${e}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${e}, uv);
    }
  `;const r=n.shapeInfo.logicalShape,i=r.length,l=n.shapeInfo.texShape,u=[Math.ceil(l[0]/2),Math.ceil(l[1]/2)],h=u[0],f=u[1],p=Math.ceil(r[i-1]/2);let m=p*Math.ceil(r[i-2]/2),y="int b, int row, int col",b=`b * ${m} + (row / 2) * ${p} + (col / 2)`;for(let v=2;v<i-1;v++)y=`int b${v}, `+y,m*=r[i-v-1],b=`b${v} * ${m} + `+b;return`
    vec4 ${s}(${y}) {
      int index = ${b};
      int texR = index / ${f};
      int texC = index - texR * ${f};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${f}, ${h});
      return ${a.texture2D}(${e}, uv);
    }
  `}function JZ(n,t){const e=n.shapeInfo.logicalShape,s=n.name,a="get"+s.charAt(0).toUpperCase()+s.slice(1),r=e[3],i=e[2]*r,l=e[1]*i,{newShape:u,keptDims:h}=Rr(e);if(u.length<e.length){const T=hc(n,u),$=["row","col","depth","depth2"];return`
      ${uc(T,t)}
      float ${a}(int row, int col, int depth, int depth2) {
        return ${a}(${dc($,h)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${a}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${l}, ${i}, ${r}, 1)));
        ${cc(n)}
      }
    `;const f=n.shapeInfo.flatOffset,p=n.shapeInfo.texShape,m=p[0],y=p[1],b=`int stride2 = ${s}Shape[3];`,v=`int stride1 = ${s}Shape[2] * stride2;`,w=`int stride0 = ${s}Shape[1] * stride1;`;if(y===l&&f==null)return t?`
      float ${a}(int row, int col, int depth, int depth2) {
        ${b}
        ${v}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${i}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${y}.0, ${m}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(y===r&&f==null)return t?`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${a}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${e[1]*e[2]}, ${e[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${y}.0, ${m}.0);
        return sampleTexture(${s}, uv);
      }
    `;const S=qo(s);return t?`
    float ${a}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${b}
      ${v}
      ${w}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${S});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${a}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${i} +
          depth * ${r} + depth2;
      vec2 uv = uvFromFlat(${m}, ${y}, index + ${S});
      return sampleTexture(${s}, uv);
    }
  `}function tQ(n){const t=n.shapeInfo.logicalShape,e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),a=t[4],r=t[3]*a,i=t[2]*r,l=t[1]*i,{newShape:u,keptDims:h}=Rr(t);if(u.length<t.length){const v=hc(n,u),w=["row","col","depth","depth2","depth3"];return`
      ${uc(v)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${dc(w,h)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${l}, ${i}, ${r}, ${a})) +
          depth3;
        ${cc(n)}
      }
    `;const f=n.shapeInfo.flatOffset,p=n.shapeInfo.texShape,m=p[0],y=p[1];if(y===l&&f==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${i}, ${r}, ${a}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${y}.0, ${m}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(y===a&&f==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]},
               ${t[2]*t[3]}, ${t[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${y}.0, ${m}.0);
        return sampleTexture(${e}, uv);
      }
    `;const b=qo(e);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${i} + depth * ${r} +
          depth2 * ${a} + depth3 + ${b};
      vec2 uv = uvFromFlat(${m}, ${y}, index);
      return sampleTexture(${e}, uv);
    }
  `}function eQ(n){const t=n.shapeInfo.logicalShape,e=n.name,s="get"+e.charAt(0).toUpperCase()+e.slice(1),{newShape:a,keptDims:r}=Rr(t);if(a.length<t.length){const w=hc(n,a),S=["row","col","depth","depth2","depth3","depth4"];return`
      ${uc(w)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${dc(S,r)});
      }
    `}const i=t[5],l=t[4]*i,u=t[3]*l,h=t[2]*u,f=t[1]*h;if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${f}, ${h}, ${u}, ${l})) +
          dot(
            vec2(depth3, depth4),
            vec2(${i}, 1)));
        ${cc(n)}
      }
    `;const p=n.shapeInfo.flatOffset,m=n.shapeInfo.texShape,y=m[0],b=m[1];if(b===f&&p==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${h}, ${u}, ${l}, ${i})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${b}.0, ${y}.0);
        return sampleTexture(${e}, uv);
      }
    `;if(b===i&&p==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${t[1]*t[2]*t[3]*t[4]},
               ${t[2]*t[3]*t[4]},
               ${t[3]*t[4]},
               ${t[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${b}.0, ${y}.0);
        return sampleTexture(${e}, uv);
      }
    `;const v=qo(e);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${f} + col * ${h} + depth * ${u} +
          depth2 * ${l} + depth3 * ${i} + depth4 + ${v};
      vec2 uv = uvFromFlat(${y}, ${b}, index);
      return sampleTexture(${e}, uv);
    }
  `}function cc(n){const t=n.name,e=ht(n.shapeInfo.logicalShape);return e<2?`return ${t};`:`
    for (int i = 0; i < ${e}; i++) {
      if (i == index) {
        return ${t}[i];
      }
    }
  `}function nQ(n,t){const e=n.name,s=e.charAt(0).toUpperCase()+e.slice(1),a="get"+s+"AtOutCoords",r=n.shapeInfo.logicalShape.length,i=t.logicalShape.length,l=LO(n.shapeInfo.logicalShape,t.logicalShape),u=ve(i),h=i-r;let f;const p=["x","y","z","w","u","v"];r===0?f="":i<2&&l.length>=1?f="coords = 0;":f=l.map(T=>`coords.${p[T+h]} = 0;`).join(`
`);let m="";i<2&&r>0?m="coords":m=n.shapeInfo.logicalShape.map((T,$)=>`coords.${p[$+h]}`).join(", ");let y="return outputValue;";const v=ht(n.shapeInfo.logicalShape)===1,S=ht(t.logicalShape)===1;if(r===1&&!v&&!S)y=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(v&&!S)i===1?y=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:y=`
        return vec4(outputValue.x);
      `;else if(l.length){const T=r-2,$=r-1;l.indexOf(T)>-1&&l.indexOf($)>-1?y="return vec4(outputValue.x);":l.indexOf(T)>-1?y="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":l.indexOf($)>-1&&(y="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${a}() {
      ${u} coords = getOutputCoords();
      ${f}
      vec4 outputValue = get${s}(${m});
      ${y}
    }
  `}function sQ(n,t){const e=n.name,s=e.charAt(0).toUpperCase()+e.slice(1),a="get"+s+"AtOutCoords",r=t.texShape,i=n.shapeInfo.texShape,l=n.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!n.shapeInfo.isUniform&&l===u&&n.shapeInfo.flatOffset==null&&Zt(i,r))return`
      float ${a}() {
        return sampleTexture(${e}, resultUV);
      }
    `;const h=ve(u),f=LO(n.shapeInfo.logicalShape,t.logicalShape),p=u-l;let m;const y=["x","y","z","w","u","v"];l===0?m="":u<2&&f.length>=1?m="coords = 0;":m=f.map(v=>`coords.${y[v+p]} = 0;`).join(`
`);let b="";return u<2&&l>0?b="coords":b=n.shapeInfo.logicalShape.map((v,w)=>`coords.${y[w+p]}`).join(", "),`
    float ${a}() {
      ${h} coords = getOutputCoords();
      ${m}
      return get${s}(${b});
    }
  `}function ve(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function AS(n,t,e){const{newShape:s,keptDims:a}=Rr(t),r=t.length,i=n&&r===3&&t[0]===1,l=i?t.slice(1):s,u=!n&&r>1&&!Zt(t,e)&&s.length<r||i;return{useSqueezeShape:u,uniformShape:u?l:t,keptDims:a}}function hc(n,t){const e=JSON.parse(JSON.stringify(n));return e.shapeInfo.logicalShape=t,e}function dc(n,t){return t.map(e=>n[e]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aQ(n,t,e,s){const a=e.map((f,p)=>{const m={logicalShape:f.shape,texShape:f.isUniform?null:f.texData.texShape,isUniform:f.isUniform,isPacked:f.isUniform?!1:f.texData.isPacked,flatOffset:null};return f.texData!=null&&f.texData.slice!=null&&f.texData.slice.flatOffset>0&&(m.flatOffset=f.texData.slice.flatOffset),{name:t.variableNames[p],shapeInfo:m}}),r=a.map(f=>f.shapeInfo),i={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},l=SZ(a,i,t),u=ZY(n.gl,l),h=n.createProgram(u);return rt().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:u,source:l,webGLProgram:h,inShapeInfos:r,outShapeInfo:i,variablesLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:(n.buildVao(h),Object.assign({program:t,fragmentShader:u,source:l,webGLProgram:h,inShapeInfos:r,outShapeInfo:i},BO(n,t,h)))}function BO(n,t,e){const s=[],a=[];let r,i,l,u=null,h=null;h=n.getUniformLocation(e,"NAN",!1),rt().getNumber("WEBGL_VERSION")===1&&(u=n.getUniformLocation(e,"INFINITY",!1));const f=!1;for(const p of t.variableNames){const m={name:p,uniform:n.getUniformLocation(e,p,f),offset:n.getUniformLocation(e,`offset${p}`,f)};t.enableShapeUniforms&&(m.shape=n.getUniformLocation(e,`${p}Shape`,f),m.texShape=n.getUniformLocation(e,`${p}TexShape`,f)),s.push(m)}if(t.enableShapeUniforms&&(r=n.getUniformLocation(e,"outShape",f),l=n.getUniformLocation(e,"outShapeStrides",f),i=n.getUniformLocation(e,"outTexShape",f)),t.customUniforms)for(const p of t.customUniforms)a.push(n.getUniformLocation(e,p.name,f));return{variablesLocations:s,customUniformLocations:a,infLoc:u,nanLoc:h,outShapeLocation:r,outShapeStridesLocation:l,outTexShapeLocation:i}}function ek(n,t){if(n.length!==t.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${t.length} inputs`);n.forEach((e,s)=>{const a=e.logicalShape,r=t[s],i=r.shape;if(!Zt(a,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${a} and ${i} must match`);if(e.isUniform&&r.isUniform)return;const l=e.texShape,u=r.isUniform?null:r.texData.texShape;if(!Zt(l,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${l} and ${u} must match`)})}function rQ(n,t,e,s,a){t.program.enableShapeUniforms||(ek(t.inShapeInfos,e),ek([t.outShapeInfo],[s]));const r=s.texData.texture,i=s.texData.texShape;s.texData.isPacked?n.setOutputPackedMatrixTexture(r.texture,i[0],i[1]):n.setOutputMatrixTexture(r.texture,i[0],i[1]),n.setProgram(t.webGLProgram),n.bindVertexArray(t.webGLProgram.vao),rt().getNumber("WEBGL_VERSION")===1&&t.infLoc!==null&&n.gl.uniform1f(t.infLoc,1/0),t.nanLoc!==null&&n.gl.uniform1f(t.nanLoc,NaN);for(let u=0;u<e.length;++u){const h=e[u],{uniform:f,offset:p,shape:m,texShape:y}=t.variablesLocations[u];if(m){const{uniformShape:b}=AS(t.program.packedInputs,h.shape,h.texData.texShape);switch(b.length){case 1:n.gl.uniform1iv(m,new Int32Array(b));break;case 2:n.gl.uniform2iv(m,new Int32Array(b));break;case 3:n.gl.uniform3iv(m,new Int32Array(b));break;case 4:n.gl.uniform4iv(m,new Int32Array(b));break}}if(y&&n.gl.uniform2i(y,h.texData.texShape[0],h.texData.texShape[1]),f!=null){if(h.isUniform){if(ht(h.shape)<2)n.gl.uniform1f(f,h.uniformValues[0]);else{let b=h.uniformValues;b instanceof Float32Array||(b=new Float32Array(b)),n.gl.uniform1fv(f,b)}continue}h.texData.slice!=null&&p!=null&&n.gl.uniform1i(p,h.texData.slice.flatOffset),n.setInputMatrixTexture(h.texData.texture.texture,f,u)}}const l=t.outShapeLocation;if(l)switch(s.shape.length){case 1:n.gl.uniform1iv(l,new Int32Array(s.shape));break;case 2:n.gl.uniform2iv(l,new Int32Array(s.shape));break;case 3:n.gl.uniform3iv(l,new Int32Array(s.shape));break;case 4:n.gl.uniform4iv(l,new Int32Array(s.shape));break}if(t.outShapeStridesLocation){const u=Ot(s.shape);switch(s.shape.length){case 2:n.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(u));break;case 3:n.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(u));break;case 4:n.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(u));break}}if(t.outTexShapeLocation&&n.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&a)for(let u=0;u<t.program.customUniforms.length;++u){const h=t.program.customUniforms[u],f=t.customUniformLocations[u],p=a[u];if(h.type==="float")n.gl.uniform1fv(f,p);else if(h.type==="vec2")n.gl.uniform2fv(f,p);else if(h.type==="vec3")n.gl.uniform3fv(f,p);else if(h.type==="vec4")n.gl.uniform4fv(f,p);else if(h.type==="int")n.gl.uniform1iv(f,p);else if(h.type==="ivec2")n.gl.uniform2iv(f,p);else if(h.type==="ivec3")n.gl.uniform3iv(f,p);else if(h.type==="ivec4")n.gl.uniform4iv(f,p);else throw Error(`uniform type ${h.type} is not supported yet.`)}n.executeProgram()}function iQ(n,t,e){let s="";t.concat(e).forEach(i=>{const l=i.texData!=null&&i.texData.slice!=null&&i.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!i.isUniform){const u=i.texData.texShape,{useSqueezeShape:h,uniformShape:f,keptDims:p}=AS(n.packedInputs,i.shape,u);let m="",y="",b="";if(f.length===1&&n.packedInputs){const I=[Math.ceil(u[0]/2),Math.ceil(u[1]/2)];m=`${I[0]>1}_${I[1]>1}`}else if(f.length===2&&!n.packedInputs)y=`${f[0]>1}_${f[1]>1}`;else if(f.length>2&&!n.packedInputs){const I=Ot(f);b=`${I[0]===u[1]}_${I[I.length-1]===u[1]}`}const v=i.shape.length,w=f.length===2&&Zt(i.shape,u),S=ht(i.shape)===1,T=ko(i.shape,e.shape),$=!n.packedInputs&&v===e.shape.length&&Zt(u,e.texData.texShape),C=n.packedInputs||f.length>2?"":`${u[0]>1}_${u[1]>1}`;s+=`${v}_${$}_${h?p:""}_${f.length}_${S}_${T}_${w}_${m}_${y}_${b}_${C}_${l}`}else{const u=i.isUniform?"uniform":i.texData.texShape;s+=`${i.shape}_${u}_${l}`}});const a=n.userCode;let r=n.constructor.name;return r+="_"+s+"_"+a+`${rt().getNumber("WEBGL_VERSION")}`,r}function Un(n){return rt().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oQ{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Wh.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=Jn();this.outputShape=t,this.enableShapeUniforms=Un(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?ib(["r","c","d"],t):jo(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class lQ{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Wh.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const e=Jn();this.outputShape=t,this.enableShapeUniforms=Un(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?ib(["r","c","d"],t):jo(["r","c","d"],t)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class uQ{constructor(t){this.variableNames=["A"],this.outTexUsage=Bs.DOWNLOAD;const e=Jn();this.outputShape=t,this.userCode=`
      ${FO}

      void main() {
        float x = getAAtOutCoords();
        ${e.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cQ{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Bs.DOWNLOAD;const e=Jn();this.outputShape=t,this.userCode=`
      ${FO}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${e.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hQ={R:0,G:1,B:2,A:3};class nk{constructor(t,e=!1,s="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const a=Jn();this.outputShape=t,this.enableShapeUniforms=Un(this.outputShape.length);let r="result";e&&(r="floor(result * 255. + 0.5)");let i="";for(let l=0;l<s.length;l++){const u=s[l];i+=`
          if(offset == ${l}) {
            result = values[${hQ[u]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?ES():IS(t)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${s.length});

        flatIndex = idiv(flatIndex, ${s.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${a.texture2D}(A, uv);
          ${i}
        }
        ${a.output} = vec4(${r}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class dQ{constructor(t,e=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=Jn();this.outputShape=t,this.enableShapeUniforms=Un(this.outputShape.length);let a="",r="result";e&&(r="floor(result * 255. + 0.5)");for(let i=0;i<=1;i++)for(let l=0;l<=1;l++){const u=i*2+l;a+=`
          localCoords = coords;
          if(localCoords[2] + ${l} < ${this.enableShapeUniforms?"outShape[2]":`${t[2]}`}) {
          localCoords[2] += ${l};
          if (localCoords[1] + ${i} < ${this.enableShapeUniforms?"outShape[1]":`${t[1]}`}) {
            localCoords[1] += ${i};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${s.texture2D}(A, uv);

            if (offset == 0) {
              result[${u}] = values[0];
            } else if (offset == 1) {
              result[${u}] = values[1];
            } else if (offset == 2) {
              result[${u}] = values[2];
            } else {
              result[${u}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?ES():IS(t)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${a}

          ${s.output} = ${r};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fQ(n){const t=Jn(),e=`${t.version}
    precision highp float;
    ${t.attribute} vec3 clipSpacePos;
    ${t.attribute} vec2 uv;
    ${t.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return YY(n,e)}function pQ(n){const t=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return eZ(n,t)}function mQ(n){const t=new Uint16Array([0,1,2,2,1,3]);return nZ(n,t)}function Df(n,t,e,s,a,r){aZ(t,e);const i=sZ(n),l=n.TEXTURE_2D;return Tt(n,()=>n.bindTexture(l,i)),Tt(n,()=>n.texParameteri(l,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),Tt(n,()=>n.texParameteri(l,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),Tt(n,()=>n.texParameteri(l,n.TEXTURE_MIN_FILTER,n.NEAREST)),Tt(n,()=>n.texParameteri(l,n.TEXTURE_MAG_FILTER,n.NEAREST)),rt().getNumber("WEBGL_VERSION")===1?Tt(n,()=>n.texImage2D(l,0,s,t,e,0,a,r,null)):Tt(n,()=>n.texStorage2D(l,1,s,t,e)),Tt(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:i,texShape:[e,t]}}function VO(n){return n.internalFormatFloat}function gQ(n,t,e,s){const[a,r]=Af(t,e);return Df(n,a,r,VO(s),s.textureFormatFloat,n.FLOAT)}function PO(n){return n.internalFormatHalfFloat}function yQ(n,t,e,s){const[a,r]=Af(t,e);return Df(n,a,r,PO(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function UO(n){return n.downloadTextureFormat}function bQ(n,t,e,s){const[a,r]=Af(t,e);return Df(n,a,r,UO(s),n.RGBA,n.UNSIGNED_BYTE)}function GO(n){return n.internalFormatPackedFloat}function xQ(n,t,e,s){const[a,r]=lc(t,e);return Df(n,a,r,GO(s),n.RGBA,n.FLOAT)}function WO(n){return n.internalFormatPackedHalfFloat}function vQ(n,t,e,s){const[a,r]=lc(t,e);return Df(n,a,r,WO(s),n.RGBA,s.textureTypeHalfFloat)}function wQ(n,t,e){return Tt(n,()=>n.bindBuffer(n.ARRAY_BUFFER,e)),Q$(n,t,"clipSpacePos",e,3,20,0)&&Q$(n,t,"uv",e,2,20,12)}function SQ(n,t,e,s,a,r){Tt(n,()=>n.bindTexture(n.TEXTURE_2D,t));let i,l,u;a instanceof Uint8Array?(i=new Uint8Array(e*s*4),l=n.UNSIGNED_BYTE,u=n.RGBA):(i=new Float32Array(e*s*4),l=n.FLOAT,u=r.internalFormatPackedFloat),i.set(a),rt().getNumber("WEBGL_VERSION")===2?Tt(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,e,s,n.RGBA,l,i)):Tt(n,()=>n.texImage2D(n.TEXTURE_2D,0,u,e,s,0,n.RGBA,l,i)),Tt(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function NQ(n,t,e){Tt(n,()=>n.bindTexture(n.TEXTURE_2D,t)),e.data instanceof Uint8Array?rt().getNumber("WEBGL_VERSION")===2?Tt(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,e.width,e.height,n.RGBA,n.UNSIGNED_BYTE,e.data)):Tt(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,e.width,e.height,0,n.RGBA,n.UNSIGNED_BYTE,e.data)):rt().getNumber("WEBGL_VERSION")===2?Tt(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,e)):Tt(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,e)),Tt(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function TQ(n,t,e,s){const a=n.createBuffer();Tt(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,a));const l=4*4*t*e;return Tt(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,l,n.STREAM_READ)),Tt(n,()=>n.readPixels(0,0,e,t,n.RGBA,n.FLOAT,0)),Tt(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),a}function CQ(n,t,e){const s=n,a=new Float32Array(e);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,a),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),a}function $Q(n,t,e,s){const[a,r]=Af(t,e),i=4,l=new Uint8Array(GY(t*e,i));return Tt(n,()=>n.readPixels(0,0,a,r,s.downloadTextureFormat,n.UNSIGNED_BYTE,l)),new Float32Array(l.buffer)}function kQ(n,t,e,s,a,r,i,l){const u=n,h=new Float32Array(WY(r,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,h),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),h}function IQ(n,t,e){const s=new Float32Array(t*e*4);return Tt(n,()=>n.readPixels(0,0,e,t,n.RGBA,n.FLOAT,s)),s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Xx{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const e=rt().getNumber("WEBGL_VERSION");if(t!=null?(this.gl=t,VY(e,t)):this.gl=Ia(e),t=this.gl,rt().getNumber("WEBGL_VERSION")===2){const r=t;this.createVertexArray=()=>Tt(r,()=>r.createVertexArray()),this.bindVertexArray=i=>Tt(r,()=>r.bindVertexArray(i)),this.deleteVertexArray=i=>Tt(r,()=>r.deleteVertexArray(i)),this.getVertexArray=()=>Tt(r,()=>r.getParameter(r.VERTEX_ARRAY_BINDING))}else if(t!=null){const r=t.getExtension("OES_vertex_array_object");if(r==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>Tt(t,()=>r.createVertexArrayOES()),this.bindVertexArray=i=>Tt(t,()=>r.bindVertexArrayOES(i)),this.deleteVertexArray=i=>Tt(t,()=>r.deleteVertexArrayOES(i)),this.getVertexArray=()=>Tt(t,()=>t.getParameter(r.VERTEX_ARRAY_BINDING_OES))}let s="WEBGL_color_buffer_float";const a="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),rt().getNumber("WEBGL_VERSION")===1){const r="OES_texture_float",i="OES_texture_half_float";if(this.textureFloatExtension=em(this.gl,r),ia(this.gl,i))this.textureHalfFloatExtension=em(this.gl,i);else if(rt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),ia(this.gl,a))this.colorBufferHalfFloatExtension=em(this.gl,a);else if(rt().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",ia(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if(ia(this.gl,a))this.colorBufferHalfFloatExtension=this.gl.getExtension(a);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=pQ(this.gl),this.indexBuffer=mQ(this.gl),this.framebuffer=rZ(this.gl),this.textureConfig=kS(this.gl,this.textureHalfFloatExtension)}get debug(){return rt().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;Tt(t,()=>t.finish()),Tt(t,()=>t.bindFramebuffer(t.FRAMEBUFFER,null)),Tt(t,()=>t.deleteFramebuffer(this.framebuffer)),Tt(t,()=>t.bindBuffer(t.ARRAY_BUFFER,null)),Tt(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null)),Tt(t,()=>t.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),gQ(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),yQ(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),bQ(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),NQ(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,s,a){this.throwIfDisposed(),SQ(this.gl,t,e,s,a,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),vQ(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),xQ(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(J$(this.gl,this.framebuffer),this.outputTexture=null),Tt(this.gl,()=>this.gl.deleteTexture(t))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,s){return this.downloadMatrixDriver(t,()=>$Q(this.gl,e,s,this.textureConfig))}downloadPackedMatrixFromBuffer(t,e,s,a,r,i){return kQ(this.gl,t,e,s,a,r,i,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return CQ(this.gl,t,e)}createBufferFromTexture(t,e,s){this.bindTextureToFrameBuffer(t);const a=TQ(this.gl,e,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,s;if(rt().getBool("WEBGL_FENCE_API_ENABLED")){const a=t,r=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),s=()=>{const i=a.clientWaitSync(r,0,0);return i===a.ALREADY_SIGNALED||i===a.CONDITION_SATISFIED},e=r}else rt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(e,rt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:e,isFencePassed:s}}downloadMatrixFromPackedTexture(t,e,s){return this.downloadMatrixDriver(t,()=>IQ(this.gl,e,s))}createProgram(t){this.throwIfDisposed();const e=this.gl;this.vertexShader==null&&(this.vertexShader=fQ(e));const s=JY(e);Tt(e,()=>e.attachShader(s,this.vertexShader)),Tt(e,()=>e.attachShader(s,t)),tZ(e,s);const a=Object.assign(s,{vao:this.createVertexArray()});return this.debug&&Wx(e,a),a}buildVao(t){this.setProgram(t),this.bindVertexArray(t.vao);const e=this.gl;Tt(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),wQ(e,t,this.vertexBuffer)}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),t!=null&&(Tt(this.gl,()=>this.gl.deleteProgram(t)),this.deleteVertexArray(t.vao))}setProgram(t){this.throwIfDisposed(),this.program=t,this.program!=null&&this.debug&&Wx(this.gl,this.program),Tt(this.gl,()=>this.gl.useProgram(t))}getUniformLocation(t,e,s=!0){return this.throwIfDisposed(),s?oZ(this.gl,t,e):lZ(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),Tt(this.gl,()=>this.gl.getAttribLocation(t,e))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,s){this.throwIfDisposed(),this.throwIfNoProgram(),uZ(this.gl,t,e,s)}setOutputMatrixTexture(t,e,s){this.setOutputMatrixTextureDriver(t,s,e)}setOutputPackedMatrixTexture(t,e,s){this.throwIfDisposed();const[a,r]=lc(e,s);this.setOutputMatrixTextureDriver(t,a,r)}setOutputMatrixWriteRegion(t,e,s,a){this.setOutputMatrixWriteRegionDriver(s,t,a,e)}setOutputPackedMatrixWriteRegion(t,e,s,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Wx(this.gl,this.program),nm(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;if(this.debug){const e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}Tt(t,()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),Tt(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=em(this.gl,rt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(rt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,a=this.getQueryTimerExtensionWebGL2(),r=s.createQuery();return s.beginQuery(a.TIME_ELAPSED_EXT,r),r}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(rt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const e=this.gl,s=this.getQueryTimerExtensionWebGL2();e.endQuery(s.TIME_ELAPSED_EXT);return}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await Yx(()=>this.disposed||this.isQueryAvailable(t,rt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(t,rt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(e===0)return null;if(e===2){const s=this.gl;return s.getQueryParameter(t,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(t,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(e===0)return!0;if(e===2){const s=this.gl,a=this.getQueryTimerExtensionWebGL2(),r=s.getQueryParameter(t,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(a.GPU_DISJOINT_EXT)),r&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),a=s.getQueryObjectEXT(t,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),a&&!this.disjoint}}pollFence(t){return new Promise(e=>{this.addItemToPoll(()=>t.isFencePassed(),()=>e())})}pollItems(){const t=EQ(this.itemsToPoll.map(e=>e.isDoneFn));for(let e=0;e<=t;++e){const{resolveFn:s}=this.itemsToPoll[e];s()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){if(this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1)return;let s;"setTimeoutCustom"in rt().platform&&(s=rt().platform.setTimeoutCustom.bind(rt().platform)),Yx(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,s)}bindTextureToFrameBuffer(t){this.throwIfDisposed(),Hx(this.gl,t,this.framebuffer),this.debug&&nm(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Hx(this.gl,this.outputTexture,this.framebuffer),this.debug&&nm(this.gl)):J$(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const s=e();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(t,e,s){this.throwIfDisposed();const a=this.gl;Hx(a,t,this.framebuffer),this.debug&&nm(a),this.outputTexture=t,Tt(a,()=>a.viewport(0,0,e,s)),Tt(a,()=>a.scissor(0,0,e,s))}setOutputMatrixWriteRegionDriver(t,e,s,a){this.throwIfDisposed(),Tt(this.gl,()=>this.gl.scissor(t,e,s,a))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function EQ(n){let t=0;for(;t<n.length&&n[t]();++t);return t-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:AQ,bincountImpl:HO,bincountReduceImpl:RQ,bitwiseAndImpl:DQ,castImpl:OQ,ceilImpl:_Q,concatImpl:FQ,equalImpl:LQ,expImpl:zQ,expm1Impl:MQ,floorImpl:BQ,gatherNdImpl:VQ,gatherV2Impl:PQ,greaterImpl:UQ,greaterEqualImpl:GQ,lessImpl:WQ,lessEqualImpl:HQ,linSpaceImpl:jQ,logImpl:qQ,maxImpl:XQ,maximumImpl:KQ,minimumImpl:YQ,multiplyImpl:ZQ,negImpl:QQ,notEqualImpl:JQ,prodImpl:tJ,raggedGatherImpl:eJ,raggedRangeImpl:nJ,raggedTensorToTensorImpl:sJ,rangeImpl:aJ,rsqrtImpl:rJ,scatterImpl:iJ,sigmoidImpl:oJ,simpleAbsImpl:jO,sliceImpl:lJ,sparseFillEmptyRowsImpl:uJ,sparseReshapeImpl:cJ,sparseSegmentReductionImpl:qO,sqrtImpl:hJ,staticRegexReplaceImpl:dJ,stridedSliceImpl:fJ,stringNGramsImpl:pJ,stringSplitImpl:mJ,stringToHashBucketFastImpl:gJ,subImpl:yJ,tileImpl:bJ,topKImpl:xJ,transposeImpl:RS,uniqueImpl:vJ}=N8;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XO(n,t){return["x","y","z","w","u","v"].slice(0,t).map(e=>`${n}.${e}`)}function Yn(n,t){return t===1?[n]:XO(n,t)}function wJ(n,t){if(n===1)return"rc";let e="";for(let s=0;s<n;s++)e+=t[s],s<n-1&&(e+=",");return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SJ{constructor(t){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.enableShapeUniforms=Un(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const e=Yn("rc",this.rank),s=ve(this.rank),a=this.getOutOfBoundsCondition(e),r=this.getSetup(e),i=this.getOutput(e);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${a}) {
            setOutput(vec4(0));
          } else {
            ${r}

            setOutput(vec4(${i}));
          }
        }
      `}}getSourceCoordsArr(t){const e=[];for(let s=0;s<=1;s++)for(let a=0;a<=1;a++){let r=`${s===0?"r":"rp1"}, ${a===0?"c":"cp1"}`;for(let i=2;i<this.rank;i++)r=`${t[t.length-1-i]},`+r;e.push(r)}return e}getOutOfBoundsCondition(t){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let e="";for(let s=this.rank-2;s<this.rank;s++)e+=`${t[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(e+="||");return e}getSetup(t){if(this.rank===1)return"";const e=t.slice(-2),s=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],a=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${e[0]};
      int c = ${e[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${s};
      bool rEdge = rp1 >= ${a};
    `}getOutput(t){const e=this.getSourceCoordsArr(t);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${e[0]}),
            cEdge ? 0. : getA(${e[1]}),
            rEdge ? 0. : getA(${e[2]}),
            rEdge || cEdge ? 0. : getA(${e[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KO{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=t,this.enableShapeUniforms=Un(this.outputShape.length);let s="";for(let a=0;a<4;a++){let r="thisRC = rc;";a%2===1&&(r+="thisRC.z += 1;"),a>1&&(r+="thisRC.y += 1;"),s+=`
        ${r}
        ${a>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${a}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${a>0?"}":""}
      `}this.userCode=`
      ${NJ(e,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?ES():IS(t)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":t[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":t[2]};

        ${s}

        setOutput(result);
      }
    `}}function NJ(n,t){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${t?wZ(["r","c","d"],"inputShape"):jo(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TJ{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.usedTextures={},this.logEnabled=!1}acquireTexture(t,e,s){const a=ak(e,s),r=rk(t,a,s);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const i=sk(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();const u=this.freeTextures[r].pop();return this.usedTextures[r].push(u),u}let l;return a===kn.PACKED_2X2_FLOAT32?l=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):a===kn.PACKED_2X2_FLOAT16?l=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):a===kn.UNPACKED_FLOAT32?l=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):a===kn.UNPACKED_FLOAT16?l=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):a===kn.PACKED_4X1_UNSIGNED_BYTE&&(l=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[r].push(l),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),l}releaseTexture(t,e,s,a){if(this.freeTextures==null)return;const r=ak(s,a),i=rk(e,r,a);i in this.freeTextures||(this.freeTextures[i]=[]);const l=sk(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,a),u=rt().getNumber("WEBGL_DELETE_TEXTURE_THRESHOLD");u!==-1&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(t.texture),this._numBytesAllocated-=l):(this.freeTextures[i].push(t),this.numFreeTextures++,this._numBytesFree+=l),this.numUsedTextures--;const h=this.usedTextures[i],f=h&&h.indexOf(t);if(f==null||f<0)throw new Error("Cannot release a texture that was never provided by this texture manager");h[f]=h[h.length-1],h.pop(),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const t in this.freeTextures)this.freeTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});for(const t in this.usedTextures)this.usedTextures[t].forEach(e=>{this.gpgpu.deleteMatrixTexture(e.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function CJ(n,t){const e=n;if(t===e.R32F)return 4;if(t===e.R16F)return 2;if(t===e.RGBA32F)return 16;if(t===n.RGBA)return 16;if(t===e.RGBA16F)return 8;if(t===e.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function sk(n,t,e,s,a){const r=$J(t,s);let i;if(a){const[u,h]=lc(n[0],n[1]);i=u*h}else{const[u,h]=Af(n[0],n[1]);i=u*h}const l=CJ(e,r);return i*l}function $J(n,t){switch(n){case kn.PACKED_2X2_FLOAT32:return GO(t);case kn.PACKED_2X2_FLOAT16:return WO(t);case kn.UNPACKED_FLOAT32:return VO(t);case kn.UNPACKED_FLOAT16:return PO(t);case kn.PACKED_4X1_UNSIGNED_BYTE:return UO(t);default:throw new Error(`Unknown physical texture type ${n}`)}}function kJ(n){return rt().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?kn.PACKED_2X2_FLOAT32:kn.UNPACKED_FLOAT32:n?kn.PACKED_2X2_FLOAT16:kn.UNPACKED_FLOAT16}function ak(n,t){if(n===Bs.UPLOAD)return kn.PACKED_2X2_FLOAT32;if(n===Bs.RENDER||n==null)return kJ(t);if(n===Bs.DOWNLOAD||n===Bs.PIXELS)return kn.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function rk(n,t,e){return`${n[0]}_${n[1]}_${t}_${e}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ga{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.enableShapeUniforms=Un(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${e}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const ha="if (isnan(x)) return x;",IJ="return x;",ik="return abs(x);",EJ="return (x >= 0.0) ? x : (exp(x) - 1.0);",AJ=ha+`
  return (x < 0.0) ? 0.0 : x;
`,RJ=ha+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,ci="return x;",DJ="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OJ="return x;",_J=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,FJ=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,LJ=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,zJ="return 1.0 / (1.0 + exp(-1.0 * x));";class fi{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.enableShapeUniforms=Un(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${e}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MJ{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t,this.enableShapeUniforms=Un(this.outputShape.length);const e=t.length,s=Yn("rc",e),a=ve(e),r=wJ(e,s),i=s.slice(-2),l=e<=1?"rc":`vec2(${i.join(",")})`;this.userCode=`
      void main() {
        ${a} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${l}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BJ=Oy,VJ=1e-7,PJ=1e-4,rm={};function UJ(n){return n in rm||(rm[n]={}),rm[n]}const GJ=rt().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),WJ=600;function HJ(){return rt().global.screen==null?1024:rt().global.screen.height*rt().global.screen.width*window.devicePixelRatio*WJ/1024/1024}class ob extends Ym{nextDataId(){return ob.nextDataId++}constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!rt().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let e;if(t!=null){if(t instanceof Xx)e=t;else{const s=Ia(rt().getNumber("WEBGL_VERSION"),t);e=new Xx(s)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const s=Ia(rt().getNumber("WEBGL_VERSION"));e=new Xx(s),this.binaryCache=UJ(rt().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=e,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new TJ(this.gpgpu),this.numMBBeforeWarning=HJ(),this.texData=new H1(this,ba())}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(t,e,s,a,r,i){const l=this.makeTensorInfo(e,s),u=this.texData.get(l.dataId);u.isPacked=!1,u.texture={texture:t,texShape:[a,r]},u.texShape=[a,r];const h=sm(e),f=new nk(h,!1,i),p=this.runWebGLProgram(f,[l],s,[[a,r]]);return p.shape=e,u.texture=null,this.disposeIntermediateTensorInfo(l),p.dataId}write(t,e,s){if((rt().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||rt().getBool("DEBUG"))&&this.checkNumericalProblems(t),s==="complex64"&&t!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const a={id:this.nextDataId()};return this.texData.set(a,{shape:e,dtype:s,values:t,usage:Bs.UPLOAD,refCount:1}),a}refCount(t){return this.texData.has(t)?this.texData.get(t).refCount:0}incRef(t){const e=this.texData.get(t);e.refCount++}decRef(t){if(this.texData.has(t)){const e=this.texData.get(t);e.refCount--}}move(t,e,s,a,r){if(rt().getBool("DEBUG")&&this.checkNumericalProblems(e),a==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:s,dtype:a,values:e,usage:Bs.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(t){this.disposeData(t.dataId)}readSync(t){const e=this.texData.get(t),{values:s,dtype:a,complexTensorInfos:r,slice:i,shape:l,isPacked:u}=e;if(i!=null){let m;u?m=new fi(l,ci):m=new Ga(l,ci);const y=this.runWebGLProgram(m,[{dataId:t,shape:l,dtype:a}],a),b=this.readSync(y.dataId);return this.disposeIntermediateTensorInfo(y),b}if(s!=null)return this.convertAndCacheOnCPU(t);if(a==="string")return s;const h=this.activeTimers!=null;let f;h&&(f=jn());let p;if(a==="complex64"){const m=this.readSync(r.real.dataId),y=this.readSync(r.imag.dataId);p=Er(m,y)}else p=this.getValuesFromTexture(t);return h&&(this.downloadWaitMs+=jn()-f),this.convertAndCacheOnCPU(t,p)}async read(t){if(this.pendingRead.has(t)){const b=this.pendingRead.get(t);return new Promise(v=>b.push(v))}const e=this.texData.get(t),{values:s,shape:a,slice:r,dtype:i,complexTensorInfos:l,isPacked:u}=e;if(r!=null){let b;u?b=new fi(a,ci):b=new Ga(a,ci);const v=this.runWebGLProgram(b,[{dataId:t,shape:a,dtype:i}],i),w=this.read(v.dataId);return this.disposeIntermediateTensorInfo(v),w}if(s!=null)return this.convertAndCacheOnCPU(t);if(rt().getBool("DEBUG")&&!rt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&rt().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let h=null,f;if(i!=="complex64"&&rt().get("WEBGL_BUFFER_SUPPORTED")){f=this.decode(t);const b=this.texData.get(f.dataId);h=this.gpgpu.createBufferFromTexture(b.texture.texture,...tm(a))}this.pendingRead.set(t,[]),i!=="complex64"&&await this.gpgpu.createAndWaitForFence();let p;if(i==="complex64"){const b=await Promise.all([this.read(l.real.dataId),this.read(l.imag.dataId)]),v=b[0],w=b[1];p=Er(v,w)}else if(h==null)p=this.getValuesFromTexture(t);else{const b=ht(a);p=this.gpgpu.downloadFloat32MatrixFromBuffer(h,b)}if(f!=null&&this.disposeIntermediateTensorInfo(f),h!=null){const b=this.gpgpu.gl;Tt(b,()=>b.deleteBuffer(h))}const m=this.convertAndCacheOnCPU(t,p),y=this.pendingRead.get(t);return this.pendingRead.delete(t),y.forEach(b=>b(m)),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)&&ba().removeDataId(t,this),this.pendingDeletes--),m}readToGPU(t,e={}){const s=this.texData.get(t),{values:a,shape:r,slice:i,dtype:l,isPacked:u,texture:h}=s;if(l==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(i!=null){let y;u?y=new fi(r,ci):y=new Ga(r,ci);const b=this.runWebGLProgram(y,[{dataId:t,shape:r,dtype:l}],l),v=this.readToGPU(b,e);return this.disposeIntermediateTensorInfo(b),v}if(h==null)throw a!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const f=this.decode(t,e.customTexShape),p=ba().makeTensorFromTensorInfo(f),m=this.texData.get(f.dataId);return Object.assign({tensorRef:p},m.texture)}bufferSync(t){const e=this.readSync(t.dataId);if(t.dtype==="string")try{const s=e.map(a=>$r(a));return Gt(t.shape,t.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Gt(t.shape,t.dtype,e)}checkNumericalProblems(t){if(t!=null)for(let e=0;e<t.length;e++){const s=t[e];if(!XY(s))throw rt().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(t){const{shape:e,dtype:s,isPacked:a}=this.texData.get(t),r=ht(e);if(rt().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const m=this.decode(t),y=this.texData.get(m.dataId),b=this.gpgpu.downloadMatrixFromPackedTexture(y.texture.texture,...tm(e)).subarray(0,r);return this.disposeIntermediateTensorInfo(m),b}const i=rt().getBool("WEBGL_PACK")&&a===!0,l=i?sm(e):e,u=i?new cQ(l):new uQ(l),h=this.runWebGLProgram(u,[{shape:l,dtype:s,dataId:t}],"float32"),f=this.texData.get(h.dataId),p=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(f.texture.texture,f.texShape[0],f.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(h),p}timerAvailable(){return rt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(t){const e=this.activeTimers,s=[];let a=!1;this.programTimersStack==null?(this.programTimersStack=s,a=!0):this.activeTimers.push(s),this.activeTimers=s,t();const r=Ka(this.activeTimers.map(u=>u.query)).filter(u=>u!=null),i=Ka(this.activeTimers.map(u=>u.name)).filter(u=>u!=null);this.activeTimers=e,a&&(this.programTimersStack=null);const l={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(rt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const u=await Promise.all(r);l.kernelMs=$k(u),l.getExtraProfileInfo=()=>u.map((h,f)=>({name:i[f],ms:h})).map(h=>`${h.name}: ${h.ms}`).join(", ")}else l.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,l})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return rt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:jn(),endMs:null}}endTimer(t){return rt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=jn(),t)}async getQueryTime(t){if(rt().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t,e=!1){if(this.pendingDisposal.has(t))return!1;if(!this.texData.has(t))return!0;if(e?this.texData.get(t).refCount=0:this.texData.get(t).refCount--,!e&&this.texData.get(t).refCount>0)return!1;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),this.pendingDeletes++,!1;this.releaseGPUData(t);const{complexTensorInfos:s}=this.texData.get(t);return s!=null&&(this.disposeData(s.real.dataId,e),this.disposeData(s.imag.dataId,e)),this.texData.delete(t),!0}releaseGPUData(t){const{texture:e,dtype:s,texShape:a,usage:r,isPacked:i,slice:l}=this.texData.get(t),u=l&&l.origDataId||t,h=this.dataRefCount.get(u);h>1?this.dataRefCount.set(u,h-1):(this.dataRefCount.delete(u),e!=null&&(this.numBytesInGPU-=this.computeBytes(a,s),this.textureManager.releaseTexture(e,a,r,i)));const f=this.texData.get(t);f.texture=null,f.texShape=null,f.isPacked=!1,f.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture.texture}getDataInfo(t){return this.texData.get(t)}shouldExecuteOnCPU(t,e=GJ){return rt().getBool("WEBGL_CPU_FORWARD")&&t.every(s=>this.texData.get(s.dataId).texture==null&&ht(s.shape)<e)}getGPGPUContext(){return this.gpgpu}where(t){Ls("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return BJ(t.shape,e)}packedUnaryOp(t,e,s){const a=new fi(t.shape,e),r=this.compileAndRun(a,[t],s);return ba().makeTensorFromTensorInfo(r)}abs(t){if(this.shouldExecuteOnCPU([t])&&t.dtype!=="complex64"){const a=jO(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,a)}if(rt().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,ik,t.dtype);const e=new Ga(t.shape,ik),s=this.compileAndRun(e,[t]);return ba().makeTensorFromTensorInfo(s)}makeTensorInfo(t,e,s){let a;if(e==="string"&&s!=null&&s.length>0&&Ua(s[0])){const r=s.map(i=>Wa(i));a=this.write(r,t,e)}else a=this.write(s,t,e);return this.texData.get(a).usage=null,{dataId:a,shape:t,dtype:e}}makeOutput(t,e,s){return ba().makeTensorFromTensorInfo(this.makeTensorInfo(t,e,s),this)}unpackTensor(t){const e=new MJ(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new SJ(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const s=[su(t.shape),...au(t.shape)],a={dtype:t.dtype,shape:s,dataId:t.dataId},r=[su(e),...au(e)],i=new KO(r,s),l=!0,u=[s],h=this.runWebGLProgram(i,[a],t.dtype,u,l);return{dataId:h.dataId,shape:e,dtype:h.dtype}}decode(t,e){const s=this.texData.get(t),{isPacked:a,shape:r,dtype:i}=s;if(e!=null){const m=ht(r),y=e[0]*e[1]*4;D(m<=y,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const l=sm(r);let u;a?u=new lQ(l):u=new oQ(l);const h=!0,f=[e??tm(l)],p=this.runWebGLProgram(u,[{shape:l,dtype:i,dataId:t}],i,f,h,e);return{dtype:i,shape:r,dataId:p.dataId}}runWebGLProgram(t,e,s,a,r=!1,i){const l=this.makeTensorInfo(t.outputShape,s),u=this.texData.get(l.dataId);if(t.packedOutput&&(u.isPacked=!0),t.outPackingScheme===Wh.DENSE){const S=i??tm(t.outputShape);u.texShape=S.map(T=>T*2)}if(t.outTexUsage!=null&&(u.usage=t.outTexUsage),ht(l.shape)===0)return u.values=bn(l.dtype,0),l;const h=[],f=e.map(S=>{if(S.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let T=this.texData.get(S.dataId);if(T.texture==null){if(!t.packedInputs&&ht(S.shape)<=rt().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:S.shape,texData:null,isUniform:!0,uniformValues:T.values};t.packedInputs&&(T.isPacked=!0,T.shape=S.shape)}if(this.uploadToGPU(S.dataId),!!T.isPacked!=!!t.packedInputs)S=T.isPacked?this.unpackTensor(S):this.packTensor(S),h.push(S),T=this.texData.get(S.dataId);else if(T.isPacked&&!Hm(T.shape,S.shape)){const $=S,C=S.shape;S.shape=T.shape,S=this.packedReshape(S,C),h.push(S),T=this.texData.get(S.dataId),$.shape=C}return{shape:S.shape,texData:T,isUniform:!1}});this.uploadToGPU(l.dataId);const p={shape:l.shape,texData:u,isUniform:!1},m=iQ(t,f,p),y=this.getAndSaveBinary(m,()=>aQ(this.gpgpu,t,f,p)),b=this.activeTimers!=null;let v;b&&(v=this.startTimer()),rt().get("ENGINE_COMPILE_ONLY")||rQ(this.gpgpu,y,f,p,a),h.forEach(S=>this.disposeIntermediateTensorInfo(S)),b&&(v=this.endTimer(v),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(v)}));const w=rt().getNumber("WEBGL_FLUSH_THRESHOLD");if(w>0){const S=jn();S-this.lastGlFlushTime>w&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=S)}if(!rt().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&r===!1){const S=this.unpackTensor(l);return this.disposeIntermediateTensorInfo(l),S}return l}compileAndRun(t,e,s,a,r=!1){return s=s||e[0].dtype,this.runWebGLProgram(t,e,s,a,r)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(rt().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=at(()=>{if(!rt().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=rt().getBool("DEBUG");rt().set("DEBUG",!1);const e=this.abs(_t(1e-8)).dataSync()[0];if(rt().set("DEBUG",t),e>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?VJ:PJ}uploadToGPU(t){const e=this.texData.get(t),{shape:s,dtype:a,values:r,texture:i,usage:l,isPacked:u}=e;if(i!=null)return;const h=this.activeTimers!=null;let f;h&&(f=jn());let p=e.texShape;if(p==null&&(p=dZ(s,u),e.texShape=p),r!=null){const m=sm(s);let y,b=p[1],v=p[0];const w=r instanceof Uint8Array||r instanceof Uint8ClampedArray;(u||!w)&&([b,v]=lc(p[0],p[1])),u?y=new dQ(m,w):y=new nk(m,w);const S=w?[v,b]:p,T=this.makeTensorInfo(S,a),$=this.texData.get(T.dataId);w?$.usage=Bs.PIXELS:$.usage=Bs.UPLOAD,$.texShape=S,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(T.dataId),b,v,r);const C=[[v,b]],R=this.runWebGLProgram(y,[T],a,C,!0),F=this.texData.get(R.dataId);e.texShape=F.texShape,e.isPacked=F.isPacked,e.usage=F.usage,rt().get("ENGINE_COMPILE_ONLY")?this.disposeData(R.dataId):(e.texture=F.texture,e.values=null,this.texData.delete(R.dataId)),this.disposeIntermediateTensorInfo(T),h&&(this.uploadWaitMs+=jn()-f)}else{const m=this.acquireTexture(p,l,a,u);e.texture=m}}convertAndCacheOnCPU(t,e){const s=this.texData.get(t),{dtype:a}=s;return e!=null&&(s.values=jJ(e,a)),s.values}acquireTexture(t,e,s,a){if(this.numBytesInGPU+=this.computeBytes(t,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const r=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${r} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,a)}computeBytes(t,e){return t[0]*t[1]*Ih(e)}checkCompileCompletion(){for(const[,t]of Object.entries(this.binaryCache))this.checkCompletion_(t)}async checkCompileCompletionAsync(){const t=[];if(this.gpgpu.parallelCompilationExtension){for(const[,e]of Object.entries(this.binaryCache))t.push(this.checkCompletionAsync_(e));return Promise.all(t)}else{for(const[,e]of Object.entries(this.binaryCache)){const s=new Promise(a=>{try{this.checkCompletion_(e),a(!0)}catch(r){throw r}});t.push(s)}return Promise.all(t)}}async checkCompletionAsync_(t){return this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(t):(await kw(),this.checkCompletionAsync_(t))}checkCompletion_(t){if(this.gpgpu.gl.getProgramParameter(t.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(t.webGLProgram)),this.gpgpu.gl.getShaderParameter(t.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(_O(t.source,this.gpgpu.gl.getShaderInfoLog(t.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const t of Object.values(this.binaryCache)){this.gpgpu.buildVao(t.webGLProgram);const{variablesLocations:e,customUniformLocations:s,infLoc:a,nanLoc:r,outShapeLocation:i,outShapeStridesLocation:l,outTexShapeLocation:u}=BO(this.gpgpu,t.program,t.webGLProgram);t.variablesLocations=e,t.customUniformLocations=s,t.infLoc=a,t.nanLoc=r,t.outShapeLocation=i,t.outShapeStridesLocation=l,t.outTexShapeLocation=u}}createTensorFromGPUData(t,e,s){t.channels=t.channels||"RGBA";const{texture:a,height:r,width:i,channels:l}=t,u=ba().backend;if(!u.gpgpu.gl.isTexture(a))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const h=u.writeTexture(a,e,s,r,i,l);return ba().makeTensorFromDataId(h,e,s,u)}}ob.nextDataId=0;function jJ(n,t){if(t==="float32"||t==="complex64")return n;if(t==="int32"||t==="bool"){const e=t==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let s=0;s<e.length;++s)e[s]=Math.round(n[s]);return e}else throw new Error(`Unknown dtype ${t}`)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */ev()&&sv("webgl",()=>new ob,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DS=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class Fo{constructor(t,e,s){this.variableNames=["A","B"],this.outputShape=Ut(e,s),this.enableShapeUniforms=Un(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${t}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xo=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class fc{constructor(t,e,s,a=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Ut(e,s);const r=this.outputShape.length;this.enableShapeUniforms=Un(r);let i="";if(a)if(r===0||ht(this.outputShape)===1)i=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(i=`
          ${ve(r)} coords = getOutputCoords();
        `,r===1)this.enableShapeUniforms?i+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:i+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const u=Yn("coords",r);this.enableShapeUniforms?i+=`
            bool nextRowOutOfBounds =
              (${u[r-2]} + 1) >= outShape[${r} - 2];
            bool nextColOutOfBounds =
              (${u[r-1]} + 1) >= outShape[${r} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:i+=`
            bool nextRowOutOfBounds =
              (${u[r-2]} + 1) >= ${this.outputShape[r-2]};
            bool nextColOutOfBounds =
              (${u[r-1]} + 1) >= ${this.outputShape[r-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${t}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${i}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cs(n){const{inputs:t,backend:e}=n,{x:s}=t;return e.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const qJ={kernelName:Cu,backendName:"webgl",kernelFunc:Cs};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bi(n){const{inputs:t,backend:e}=n,{real:s,imag:a}=t,r=e.makeTensorInfo(s.shape,"complex64"),i=e.texData.get(r.dataId),l=Cs({inputs:{x:s},backend:e}),u=Cs({inputs:{x:a},backend:e});return i.complexTensorInfos={real:l,imag:u},r}const XJ={kernelName:rg,backendName:"webgl",kernelFunc:Bi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YO="return (a < 0.) ? b * a : a;",ZO=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function KJ(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{alpha:r}=s,i=e.makeTensorInfo([],"float32",Dr(r,"float32")),l=rt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new fc(ZO,a.shape,i.shape):new Fo(YO,a.shape,i.shape),u=e.runWebGLProgram(l,[a,i],"float32");return e.disposeIntermediateTensorInfo(i),u}const YJ={kernelName:gd,backendName:"webgl",kernelFunc:KJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QO="return (a < 0.) ? b * a : a;",JO=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function ZJ(n){const{inputs:t,backend:e}=n,{x:s,alpha:a}=t,r=rt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new fc(JO,s.shape,a.shape):new Fo(QO,s.shape,a.shape);return e.runWebGLProgram(r,[s,a],"float32")}const QJ={kernelName:Fd,backendName:"webgl",kernelFunc:ZJ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pc="if (isnan(x)) return x;";function re({opSnippet:n,packedOpSnippet:t,cpuKernelImpl:e,dtype:s}){return({inputs:a,backend:r})=>{const{x:i}=a,l=r,u=s||i.dtype;if(l.shouldExecuteOnCPU([i])&&e!=null){const p=l.texData.get(i.dataId),m=e(p.values,u);return l.makeTensorInfo(i.shape,u,m)}const h=rt().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&t!=null;let f;return h?f=new fi(i.shape,t):f=new Ga(i.shape,n),l.runWebGLProgram(f,[i],u)}}function _n({opSnippet:n,packedOpSnippet:t,checkOutOfBounds:e=!1,supportsComplex:s=!1,cpuKernelImpl:a,dtype:r}){return({inputs:i,backend:l})=>{const{a:u,b:h}=i,f=l;if(s&&u.dtype==="complex64"){const b=f.texData.get(u.dataId),v=f.texData.get(h.dataId),[w,S]=[[b.complexTensorInfos.real,v.complexTensorInfos.real],[b.complexTensorInfos.imag,v.complexTensorInfos.imag]].map($=>{const[C,I]=$,R={dataId:C.dataId,dtype:C.dtype,shape:u.shape},F={dataId:I.dataId,dtype:I.dtype,shape:h.shape},B=new Fo(n,u.shape,h.shape);return f.runWebGLProgram(B,[R,F],rs(C.dtype,I.dtype))}),T=Bi({inputs:{real:w,imag:S},backend:f});return f.disposeIntermediateTensorInfo(w),f.disposeIntermediateTensorInfo(S),T}const p=r||rs(u.dtype,h.dtype);if((u.dtype==="string"||h.dtype==="string"||f.shouldExecuteOnCPU([u,h]))&&a!=null){const b=f.texData.get(u.dataId).values,v=f.texData.get(h.dataId).values,w=u.dtype==="string"?Ar(b):b,S=u.dtype==="string"?Ar(v):v,[T,$]=a(u.shape,h.shape,w,S,p),C=f.makeTensorInfo($,p),I=f.texData.get(C.dataId);return I.values=T,C}const m=rt().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&t!=null;let y;return m?y=new fc(t,u.shape,h.shape,e):y=new Fo(n,u.shape,h.shape),f.runWebGLProgram(y,[u,h],p)}}function Hh(n,t=!1){if(n==="linear")return t?OJ:IJ;if(n==="relu")return t?FJ:AJ;if(n==="elu")return t?_J:EJ;if(n==="relu6")return t?LJ:RJ;if(n==="prelu")return t?JO:QO;if(n==="leakyrelu")return t?ZO:YO;if(n==="sigmoid")return t?zJ:DJ;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class t_{constructor(t,e,s,a=!1,r=!1,i=!1,l=null,u=!1,h=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=Un(this.outputShape.length);const f=a?t[1]:t[2],p=Math.ceil(f/2),m=a?"i * 2, rc.y":"rc.y, i * 2",y=r?"rc.z, i * 2":"i * 2, rc.z",b=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],v=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let w="",S="";l&&(u?w=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${l}
        }`:h?w=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${l}
        }`:w=`vec4 activation(vec4 x) {
          ${l}
        }`,S="result = activation(result);");const T=i?"result += getBiasAtOutCoords();":"";i&&this.variableNames.push("bias"),u&&this.variableNames.push("preluActivationWeights"),h&&this.variableNames.push("leakyreluAlpha");let $="rc.x",C="rc.x";t[0]<e[0]?$=`imod(rc.x, ${t[0]})`:e[0]<t[0]&&(C=`imod(rc.x, ${e[0]})`),this.userCode=`
      ${w}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${p}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        int batchA = ${$};
        int batchB = ${C};
        for (int i = 0; i < ${p}; i++) {
          vec4 a = getMatrixA(batchA, ${m});
          vec4 b = getMatrixB(batchB, ${y});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${b[0]} * ${v[0]});
          result += (${b[1]} * ${v[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${T}

        ${S}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ok={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class lk{constructor(t,e,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Ut(e,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${t}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uk="return a * b;";function OS(n){const{inputs:t,backend:e}=n,{a:s,b:a}=t,r=rs(s.dtype,a.dtype);if(s.dtype==="complex64"){const l=e.texData.get(s.dataId),u=e.texData.get(a.dataId),h=new lk(ok.REAL,s.shape,a.shape),f=new lk(ok.IMAG,s.shape,a.shape),p=[{dataId:l.complexTensorInfos.real.dataId,dtype:l.complexTensorInfos.real.dtype,shape:s.shape},{dataId:l.complexTensorInfos.imag.dataId,dtype:l.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:u.complexTensorInfos.real.dataId,dtype:u.complexTensorInfos.real.dtype,shape:a.shape},{dataId:u.complexTensorInfos.imag.dataId,dtype:u.complexTensorInfos.imag.dtype,shape:a.shape}],m=e.runWebGLProgram(h,p,"float32"),y=e.runWebGLProgram(f,p,"float32"),b=Bi({inputs:{real:m,imag:y},backend:e});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(y),b}if(e.shouldExecuteOnCPU([s,a])){const l=e.texData.get(s.dataId),u=e.texData.get(a.dataId),[h,f]=ZQ(s.shape,a.shape,l.values,u.values,r),p=e.makeTensorInfo(f,r),m=e.texData.get(p.dataId);return m.values=h,p}let i;return rt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?i=new fc(uk,s.shape,a.shape):i=new Fo(uk,s.shape,a.shape),e.runWebGLProgram(i,[s,a],r)}const JJ={kernelName:_u,backendName:"webgl",kernelFunc:OS};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ttt(n,t,e){const s=[su(n.shape),...au(n.shape)],a={dtype:n.dtype,shape:s,dataId:n.dataId},r=[su(t),...au(t)],i=new KO(r,s),l=!0,u=[s],h=e.runWebGLProgram(i,[a],n.dtype,u,l);return{dataId:h.dataId,shape:t,dtype:h.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function St(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{shape:r}=s,i=e,l=ht(a.shape),u=q1(r,l),h=ht(u);D(l===h,()=>`The new shape (${u}) has ${h} elements and the old shape (${a.shape}) has ${l} elements. The new shape and old shape must have the same number of elements.`);const f=i.texData.get(a.dataId);return f.isPacked&&!Hm(a.shape,u)&&!(f.texture!==null&&Hm(f.shape,u))?ttt(a,u,i):(i.incRef(a.dataId),{dataId:a.dataId,shape:u,dtype:a.dtype})}const ett={kernelName:zd,backendName:"webgl",kernelFunc:St};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ck{constructor(t,e){this.variableNames=["x"];const{windowSize:s,batchSize:a,inSize:r,outSize:i}=t;this.outputShape=[a,i];const l=Math.floor(s/4)*4,u=s%4;let h="sumValue += dot(values, ones);";if(e!=null){const p=1/e;h=`sumValue += dot(values * ${wo(p)?p.toPrecision(2):p}, ones);`}let f="";r%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${h}
        }

        int inIdx = inOffset + ${l};
        if (${u===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${h}
        } else if (${u===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${h}
        } else if (${u===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${h}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ntt{constructor(t,e){this.variableNames=["x"];const{windowSize:s,batchSize:a,inSize:r,outSize:i}=t;this.outputShape=[a,i];let l="0.0",u="";e==="prod"?l="1.0":e==="min"?(l="1.0 / 1e-20",u="min"):e==="max"&&(l="-1.0 / 1e-20",u="max");let h=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="sum"?h="sumValue":e==="prod"?h="prodValue":e==="all"?h="allValue":e==="any"&&(h="anyValue");const f=Math.floor(s/4)*4,p=s%4;let m=`
      if (${e==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${e==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${u}(values, minMaxValue);
        if (${e==="min"} || ${e==="max"}) {
          minMaxValue = ${u}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,y="vec4";e==="all"?(l="1.0",m=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,y="bvec4"):e==="any"&&(l="0.0",m=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,y="bvec4");let b="";r%s>0&&(b=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${l};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${b}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${l});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${f}; i += 4) {
          int inIdx = inOffset + i;
          ${y} values = ${y}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${m}
        }

        int inIdx = inOffset + ${f};
        if (${p===1}) {
          ${y} values = ${y}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${m}
        } else if (${p===2}) {
          ${y} values = ${y}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${m}
        } else if (${p===3}) {
          ${y} values = ${y}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${m}
        }
        setOutput(${h});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function stt(n){const t=[];for(;t.length===0||t[t.length-1].outSize!==1;){const e=t.length?t[t.length-1].outSize:n[1],s=Hy(e);t.push({inSize:e,windowSize:s,outSize:Math.ceil(e/s)})}return t}function Ko(n,t,e,s){const a=stt(n.shape);let r=n;for(let i=0;i<a.length;i++){const{inSize:l,windowSize:u,outSize:h}=a[i];let f,p;e==="mean"?f=i===0?new ck({windowSize:u,inSize:l,batchSize:n.shape[0],outSize:h},l):new ck({windowSize:u,inSize:l,batchSize:n.shape[0],outSize:h}):f=new ntt({windowSize:u,inSize:l,batchSize:n.shape[0],outSize:h},e),p=r,r=s.runWebGLProgram(f,[r],t),p.dataId!==n.dataId&&s.disposeIntermediateTensorInfo(p)}return r}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class att{constructor(t,e){this.variableNames=["A"];const s=new Array(t.length);for(let i=0;i<s.length;i++)s[i]=t[e[i]];this.outputShape=s,this.rank=s.length;const a=ve(this.rank),r=rtt(e);this.userCode=`
    void main() {
      ${a} resRC = getOutputCoords();
      setOutput(getA(${r}));
    }
    `}}function rtt(n){const t=n.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let a=0;a<n.length;a++)s[n[a]]=e[a];return s.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class itt{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(t.length);for(let f=0;f<s.length;f++)s[f]=t[e[f]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const a=ve(this.rank),r=XO("rc",this.rank),i=new Array(this.rank);for(let f=0;f<e.length;f++)i[e[f]]=r[f];const l=`vec2(${i.slice(-2).join()})`,u=`++${r[this.rank-1]} < ${s[this.rank-1]}`,h=`getChannel(getA(${i.join()}), ${l})`;this.userCode=`
    void main() {
      ${a} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${h};
      if(${u}) {
        result[1] = ${h};
      }
      --${r[this.rank-1]};
      if(++${r[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${h};
        if(${u}) {
          result[3] = ${h};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lb(n,t,e){const s=rt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new itt(n.shape,t):new att(n.shape,t);return e.runWebGLProgram(s,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ott(n,t,e,s){const a=t,r=n.shape.length,i=Xt(a,n.shape);let l=i;const u=Be(l,r),h=u!=null;let f=n;h&&(f=lb(n,u,s),l=qe(l.length,r)),Dn("sum",l,r);const[p,m]=wn(f.shape,l);let y=p;e&&(y=je(p,i));const b=ht(m),w=ht(n.shape)/b,S=St({inputs:{x:f},attrs:{shape:[w,b]},backend:s}),T=ry(n.dtype),$=Ko(S,T,"sum",s),C=St({inputs:{x:$},attrs:{shape:y},backend:s});return s.disposeIntermediateTensorInfo(S),s.disposeIntermediateTensorInfo($),h&&s.disposeIntermediateTensorInfo(f),C}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ub(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s;return ott(a,r,i,e)}const ltt={kernelName:Gd,backendName:"webgl",kernelFunc:ub};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zn(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{perm:r}=s,i=e,l=a.shape.length,u=new Array(l);for(let f=0;f<u.length;f++)u[f]=a.shape[r[f]];let h;if(i.shouldExecuteOnCPU([a])){const p=i.texData.get(a.dataId).values,m=RS(p,a.shape,a.dtype,r,u);h=i.makeTensorInfo(u,a.dtype);const y=i.texData.get(h.dataId);y.values=m}else h=lb(a,r,i);return h}const utt={kernelName:yo,backendName:"webgl",kernelFunc:Zn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const e_=1e3;function jm({a:n,b:t,transposeA:e,transposeB:s,backend:a,bias:r=null,preluActivationWeights:i=null,leakyreluAlpha:l=0,activation:u=null}){const h=n.shape.length,f=t.shape.length,p=e?n.shape[h-2]:n.shape[h-1],m=s?t.shape[f-1]:t.shape[f-2],y=e?n.shape[h-1]:n.shape[h-2],b=s?t.shape[f-2]:t.shape[f-1],v=n.shape.slice(0,-2),w=t.shape.slice(0,-2),S=ht(v),T=ht(w),C=Ut(n.shape.slice(0,-2),t.shape.slice(0,-2)).concat([y,b]);D(p===m,()=>`Error in matMul: inner shapes (${p}) and (${m}) of Tensors with shapes ${n.shape} and ${t.shape} and transposeA=${e} and transposeB=${s} must match.`);const I=e?[S,p,y]:[S,y,p],R=s?[T,b,m]:[T,m,b],F=St({inputs:{x:n},backend:a,attrs:{shape:I}}),B=St({inputs:{x:t},backend:a,attrs:{shape:R}}),L=[F,B],z=Math.max(S,T),A=e?F.shape[1]:F.shape[2],G=r!=null,Q=i!=null,tt=u==="leakyrelu",J=u!=null?Hh(u,!0):null,V=G||Q||tt||J!=null;let q;if((y===1||b===1)&&A>e_&&V===!1){let it=F,M=B;e&&(it=Zn({inputs:{x:F},backend:a,attrs:{perm:[0,2,1]}}),L.push(it)),s&&(M=Zn({inputs:{x:B},backend:a,attrs:{perm:[0,2,1]}}),L.push(M));const j=b!==1,st=b===1;let et=it;j&&(et=St({inputs:{x:it},backend:a,attrs:{shape:[z,A,1]}}),L.push(et));const ft=b===1?2:1;let mt=M;st&&(mt=St({inputs:{x:M},backend:a,attrs:{shape:[z,1,A]}}),L.push(mt));const yt=OS({inputs:{a:et,b:mt},backend:a});q=ub({inputs:{x:yt},backend:a,attrs:{axis:ft,keepDims:!0}}),L.push(yt)}else{const it=rs(n.dtype,t.dtype),M=new t_(I,R,[z,y,b],e,s,G,J,Q,tt),j=[F,B];if(r!=null&&j.push(r),Q&&j.push(i),tt){const st=a.makeTensorInfo([],"float32",Dr(l,"float32"));j.push(st),L.push(st)}q=a.runWebGLProgram(M,j,it)}const Y=St({inputs:{x:q},backend:a,attrs:{shape:C}});L.push(q);for(const it of L)a.disposeIntermediateTensorInfo(it);return Y}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ctt(n){const{inputs:t,backend:e,attrs:s}=n,{a,b:r,bias:i,preluActivationWeights:l}=t,{transposeA:u,transposeB:h,activation:f,leakyreluAlpha:p}=s;return jm({a,b:r,transposeA:u,transposeB:h,backend:e,bias:i,preluActivationWeights:l,leakyreluAlpha:p,activation:f})}const htt={kernelName:Eh,backendName:"webgl",kernelFunc:ctt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hk="return abs(x);";function dtt(n){const{inputs:t,backend:e}=n,{x:s}=t;if(e.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const r=e.texData.get(s.dataId),i=jO(r.values);return e.makeTensorInfo(s.shape,s.dtype,i)}let a;return rt().getBool("WEBGL_PACK_UNARY_OPERATIONS")?a=new fi(s.shape,hk):a=new Ga(s.shape,hk),e.runWebGLProgram(a,[s],s.dtype)}const ftt={kernelName:Xh,backendName:"webgl",kernelFunc:dtt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ptt=ha+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,mtt=re({opSnippet:ptt}),gtt={kernelName:ru,backendName:"webgl",kernelFunc:mtt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ytt=ha+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,btt=re({opSnippet:ytt}),xtt={kernelName:iu,backendName:"webgl",kernelFunc:btt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dk="return a + b;",vtt=_n({opSnippet:dk,packedOpSnippet:dk,supportsComplex:!0,cpuKernelImpl:AQ}),wtt={kernelName:Bo,backendName:"webgl",kernelFunc:vtt};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Stt{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map((r,i)=>`T${i}`);const s=[];this.variableNames.forEach(r=>{s.push(`float v${r} = get${r}AtOutCoords();`)});const a=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${a};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ntt{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map((r,i)=>`T${i}`);const s=[];this.variableNames.forEach(r=>{s.push(`vec4 v${r} = get${r}AtOutCoords();`)});const a=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${a};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bm(n){const{inputs:t,backend:e}=n,s=t;if(s.length===1)return Cs({inputs:{x:s[0]},backend:e});if(s.length>rt().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const u=Math.floor(s.length/2),h=bm({inputs:s.slice(0,u),backend:e}),f=bm({inputs:s.slice(u),backend:e});return bm({inputs:[h,f],backend:e})}const a=s.map(u=>u.dtype).reduce((u,h)=>rs(u,h)),r=s.map(u=>u.shape),l=rt().getBool("WEBGL_PACK")?new Ntt(s[0].shape,r):new Stt(s[0].shape,r);return e.runWebGLProgram(l,s,a)}const Ttt={kernelName:Kh,backendName:"webgl",kernelFunc:bm};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ctt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s,l=a.shape.length,u=Xt(r,a.shape);let h=u;const f=Be(h,l);let p=a;f!=null&&(p=Zn({inputs:{x:a},backend:e,attrs:{perm:f}}),h=qe(h.length,l)),Dn("all",h,l);const[m,y]=wn(p.shape,h),b=ht(y),v=St({inputs:{x:p},backend:e,attrs:{shape:[-1,b]}}),w=Ko(v,v.dtype,"all",e);let S;if(i){const T=je(m,u);S=St({inputs:{x:w},backend:e,attrs:{shape:T}})}else S=St({inputs:{x:w},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(v),e.disposeIntermediateTensorInfo(w),f!=null&&e.disposeIntermediateTensorInfo(p),S}const $tt={kernelName:Jm,backendName:"webgl",kernelFunc:Ctt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ktt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s,l=a.shape.length,u=Xt(r,a.shape);let h=u;const f=Be(h,l);let p=a;f!=null&&(p=Zn({inputs:{x:a},backend:e,attrs:{perm:f}}),h=qe(h.length,l)),Dn("any",h,l);const[m,y]=wn(p.shape,h),b=ht(y),v=St({inputs:{x:p},backend:e,attrs:{shape:[-1,b]}}),w=Ko(v,v.dtype,"any",e);let S;if(i){const T=je(m,u);S=St({inputs:{x:w},backend:e,attrs:{shape:T}})}else S=St({inputs:{x:w},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(v),e.disposeIntermediateTensorInfo(w),f!=null&&e.disposeIntermediateTensorInfo(p),S}const Itt={kernelName:tg,backendName:"webgl",kernelFunc:ktt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ett{constructor(t,e,s){this.variableNames=["A"];const{windowSize:a,batchSize:r,outSize:i}=t;s||this.variableNames.push("bestIndicesA"),this.outputShape=[r,i];const l=e==="max"?">":"<",u=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${a};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${a}; i++) {
          int inIdx = ${u};
          float candidate = getA(batch, inIdx);
          if (candidate ${l} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Att{constructor(t,e,s,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,D(t.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const r=t[t.length-1],i=Math.ceil(r/e);this.outputShape=t.slice(0,-1),i>1&&this.outputShape.push(i),a||this.variableNames.push("bestIndicesA");const l=this.outputShape,u=l.length,h=ve(u),f=Yn("coords",u);let p,m;if(i===1){m=u+1;const B=ve(m);p=`
        ${B} sourceLocR = ${B}(${f.join()}, 0);
        ++${f[u-1]};
        ${B} sourceLocG = ${B}(${f.join()}, 0);
        ++${f[u-2]};
        ${B} sourceLocA = ${B}(${f.join()}, 0);
        --${f[u-1]};
        ${B} sourceLocB = ${B}(${f.join()}, 0);
        --${f[u-2]};`}else m=u,p=`
        ${h} sourceLocR = coords;
        ++${f[u-1]};
        ${h} sourceLocG = coords;
        ++${f[u-2]};
        ${h} sourceLocA = coords;
        --${f[u-1]};
        ${h} sourceLocB = coords;
        --${f[u-2]};`;const y=["x","y","z","w","u","v"].slice(0,m),b="."+y[m-1],v=y.map(B=>"int "+B),w=Yn("sourceLocR",m-1).concat("inIdx.r"),S=Yn("sourceLocG",m-1).concat("inIdx.g"),T=Yn("sourceLocB",m-1).concat("inIdx.b"),$=Yn("sourceLocA",m-1).concat("inIdx.a"),C=s==="max"?"greaterThan":"lessThan",I=a?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${w.join()}),
                             getBestIndicesAChannel(${S.join()}),
                             getBestIndicesAChannel(${T.join()}),
                             getBestIndicesAChannel(${$.join()})));`,R=`vec4(
            getAChannel(${w.join()}),
            hasNextCol ? getAChannel(${S.join()}) : 0.,
            hasNextRow ? getAChannel(${T.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${$.join()}) : 0.)`,F=a?"":`
      float getBestIndicesAChannel(${v.join()}) {
        return getChannel(getBestIndicesA(${y.join()}),
                                          vec2(${y.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${v.join()}) {
        return getChannel(getA(${y.join()}),
                               vec2(${y.slice(-2).join()}));
      }
      ${F}
      void main() {
        ${h} coords = getOutputCoords();
        bool hasNextCol = ${f[u-1]} < ${l[u-1]-1};
        bool hasNextRow = ${f[u-2]} < ${l[u-2]-1};
        ${p}
        ivec4 srcIdx = ivec4(sourceLocR${b}, sourceLocG${b},
          sourceLocB${b}, sourceLocA${b}) * ${e};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${R};

        for (int i = 0; i < ${e}; i++) {
          inIdx = srcIdx;
          ${I}
          vec4 candidate = ${R};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${C}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n_(n,t,e,s=null){let a=t.shape[0],r=t.shape[1];s!=null&&(a=s.shape[0],r=s.shape[1]);const i=Hy(r),l={windowSize:i,inSize:r,batchSize:a,outSize:Math.ceil(r/i)},u=new Ett(l,e,s==null),h=[t];s!=null&&h.push(s);const f=n.runWebGLProgram(u,h,"int32");if(f.shape[1]===1)return f;const p=n_(n,t,e,f);return n.disposeIntermediateTensorInfo(f),p}function s_(n,t,e,s=null){const a=s!=null?s.shape:t.shape,r=a[a.length-1],i=Hy(r),l=new Att(a,i,e,s==null),u=s==null?[t]:[t,s],h=n.runWebGLProgram(l,u,"int32");if(h.shape.length===t.shape.length){const f=s_(n,t,e,h);return n.disposeIntermediateTensorInfo(h),f}return h}function a_(n,t,e,s){const a=[e];if(Dn("arg"+s.charAt(0).toUpperCase()+s.slice(1),a,t.shape.length),!rt().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const r=[],i=n.texData.get(t.dataId),l=i!==null&&i.isPacked;let u=t;l&&(u=n.unpackTensor(t),r.push(u));const[h,f]=wn(u.shape,a),p=ht(f),m=St({inputs:{x:u},backend:n,attrs:{shape:[-1,p]}});r.push(m);const y=n_(n,m,s);r.push(y);const b=St({inputs:{x:y},backend:n,attrs:{shape:h}});return r.forEach(v=>n.disposeIntermediateTensorInfo(v)),b}return s_(n,t,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rtt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r}=s;let i=Xt(r,a.shape);const l=Be(i,a.shape.length);let u=a;const h=[];l!=null&&(u=Zn({inputs:{x:a},backend:e,attrs:{perm:l}}),h.push(u),i=qe(i.length,u.shape.length)),Dn("argMax",[i[0]],u.shape.length);const f=a_(e,u,i[0],"max");return h.forEach(p=>e.disposeIntermediateTensorInfo(p)),f}const Dtt={kernelName:Yh,backendName:"webgl",kernelFunc:Rtt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ott(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r}=s;let i=Xt(r,a.shape);const l=Be(i,a.shape.length);let u=a;const h=[];l!=null&&(u=Zn({inputs:{x:a},backend:e,attrs:{perm:l}}),h.push(u),i=qe(i.length,u.shape.length)),Dn("argMin",[i[0]],u.shape.length);const f=a_(e,u,i[0],"min");return h.forEach(p=>e.disposeIntermediateTensorInfo(p)),f}const _tt={kernelName:Zh,backendName:"webgl",kernelFunc:Ott};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ftt=ha+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,Ltt=re({opSnippet:Ftt}),ztt={kernelName:ou,backendName:"webgl",kernelFunc:Ltt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mtt=ha+"return log(x + sqrt(x * x + 1.0));",Btt=re({opSnippet:Mtt}),Vtt={kernelName:lu,backendName:"webgl",kernelFunc:Btt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ptt=ha+`
  return atan(x);
`,Utt=re({opSnippet:Ptt}),Gtt={kernelName:uu,backendName:"webgl",kernelFunc:Utt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wtt=DS+`
  return atan(a, b);
`,Htt=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Xo+`
  return result;
`,jtt=_n({opSnippet:Wtt,packedOpSnippet:Htt}),qtt={kernelName:hu,backendName:"webgl",kernelFunc:jtt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xtt=ha+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,Ktt=re({opSnippet:Xtt}),Ytt={kernelName:cu,backendName:"webgl",kernelFunc:Ktt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jh{constructor(t,e,s,a=!1,r=!1){if(this.variableNames=["x"],e==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,l=t.strideHeight,u=t.strideWidth,h=t.dilationHeight,f=t.dilationWidth,p=t.effectiveFilterHeight,m=t.effectiveFilterWidth,y=t.padInfo.top,b=t.padInfo.left;this.outputShape=t.outShape;const v=e==="avg",w=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,S=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let T="0.0";if(v||(T="-1.0 / 1e-20"),s){const B=">=";this.userCode=`
        const ivec2 strides = ivec2(${l}, ${u});
        const ivec2 pads = ivec2(${y}, ${b});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${p};
              wR += ${h}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${m};
                wC += ${f}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${B} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${a?r?w:S:`wR * ${m} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const $="max";let C=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(C="avgValue / max(count, 1.0)");const I=Math.floor(i/4)*4,R=i%4,F=`
      if (${v}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${$}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${l}, ${u});
      const ivec2 pads = ivec2(${y}, ${b});
      const float initializationValue = ${T};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${T});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${p};
            wR += ${h}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${I}; wC += 4) {
            int xC = xCCorner + wC * ${f};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${f}, d),
              getValue(batch, xR, xC + 2 * ${f}, d),
              getValue(batch, xR, xC + 3 * ${f}, d)
            );

            ${F}
          }

          int xC = xCCorner + ${I};
          if (${R===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${F}
          } else if (${R===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${f}, d),
              initializationValue,
              initializationValue
            );

            ${F}
          } else if (${R===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${f}, d),
              getValue(batch, xR, xC + 2 * ${f}, d),
              initializationValue
            );

            ${F}
          }
        }
        setOutput(${C});
      }
    `}}class _S{constructor(t,e,s,a=!1,r=!1){if(this.variableNames=["x"],e==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const i=t.filterWidth,l=t.strideDepth,u=t.strideHeight,h=t.strideWidth,f=t.dilationDepth,p=t.dilationHeight,m=t.dilationWidth,y=t.effectiveFilterDepth,b=t.effectiveFilterHeight,v=t.effectiveFilterWidth,w=t.padInfo.front,S=t.padInfo.top,T=t.padInfo.left;this.outputShape=t.outShape;const $=e==="avg";let C="0.0";if($||(C="-1.0 / 1e-20"),s){const z=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${l}, ${u}, ${h});
        const ivec3 pads = ivec3(${w}, ${S}, ${T});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${y};
              wD += ${f}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${t.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${b};
                wR += ${p}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${v};
                  wC += ${m}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${z} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${a?r?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${b} * ${v} +
                      wR * ${v} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const I="max";let R=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;e==="avg"&&(R="avgValue / max(count, 1.0)");const F=Math.floor(i/4)*4,B=i%4,L=`
      if (${$}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${I}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${l}, ${u}, ${h});
      const ivec3 pads = ivec3(${w}, ${S}, ${T});
      const float initializationValue = ${C};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${t.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${C});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${y};
            wD += ${f}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${b};
            wR += ${p}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${F}; wC += 4) {
              int xC = xCCorner + wC * ${m};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                getValue(batch, xD, xR, xC + 2 * ${m}, ch),
                getValue(batch, xD, xR, xC + 3 * ${m}, ch)
              );

              ${L}
            }

            int xC = xCCorner + ${F};
            if (${B===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${L}
            } else if (${B===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                initializationValue,
                initializationValue
              );

              ${L}
            } else if (${B===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${m}, ch),
                getValue(batch, xD, xR, xC + 2 * ${m}, ch),
                initializationValue
              );

              ${L}
            }
          }
        }
        setOutput(${R});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ztt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t;Rf(a,"avgPool");const{filterSize:r,strides:i,pad:l,dimRoundingMode:u}=s,h=1;D(Rn(i,h),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`);const f=ua(a.shape,r,i,h,l,u);if(f.filterWidth===1&&f.filterHeight===1&&Zt(f.inShape,f.outShape))return Cs({inputs:{x:a},backend:e});const p=new jh(f,"avg",!1);return e.runWebGLProgram(p,[a],"float32")}const Qtt={kernelName:Qh,backendName:"webgl",kernelFunc:Ztt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jtt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{filterSize:r,strides:i,pad:l,dimRoundingMode:u,dataFormat:h}=s,f=[1,1,1],p=Or(a.shape,r,i,f,l,u,h),m=new _S(p,"avg",!1);return e.runWebGLProgram(m,[a],"float32")}const tet={kernelName:Jh,backendName:"webgl",kernelFunc:Jtt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eet{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,a=t.strideHeight,r=t.strideWidth,i=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterHeight,h=t.effectiveFilterWidth,f=u-1-t.padInfo.top,p=h-1-t.padInfo.left,m=1/(e*s);this.userCode=`
      const ivec2 pads = ivec2(${f}, ${p});
      const float avgMultiplier = float(${m});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${u};
            wR += ${i}) {
          float dyR = float(dyRCorner + wR) / ${a}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${h};
            wC+= ${l}) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class net{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,s=t.filterHeight,a=t.filterWidth,r=t.strideDepth,i=t.strideHeight,l=t.strideWidth,u=t.dilationDepth,h=t.dilationHeight,f=t.dilationWidth,p=t.effectiveFilterDepth,m=t.effectiveFilterHeight,y=t.effectiveFilterWidth,b=p-1-t.padInfo.front,v=m-1-t.padInfo.top,w=y-1-t.padInfo.left,S=1/(e*s*a);this.userCode=`
      const ivec3 pads = ivec3(${b}, ${v}, ${w});
      const float avgMultiplier = float(${S});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${u}) {
          float dyD = float(dyDCorner + wD) / ${r}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${m};
              wR += ${h}) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${y};
                wC += ${f}) {
              float dyC = float(dyCCorner + wC) / ${l}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function set(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,input:r}=t,i=r,{filterSize:l,strides:u,pad:h,dimRoundingMode:f}=s,p=[1,1,1],m=Or(i.shape,l,u,p,h,f),y=new net(m);return e.runWebGLProgram(y,[a],i.dtype)}const aet={kernelName:ng,backendName:"webgl",kernelFunc:set};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ret(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,input:r}=t,i=r;Rf([a,r],"avgPoolGrad");const{filterSize:l,strides:u,pad:h}=s,f=ua(i.shape,l,u,1,h),p=new eet(f);return e.runWebGLProgram(p,[a],i.dtype)}const iet={kernelName:eg,backendName:"webgl",kernelFunc:ret};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oet(n){const{inputs:t,backend:e,attrs:s}=n,{a,b:r}=t,{transposeA:i,transposeB:l}=s;return jm({a,b:r,transposeA:i,transposeB:l,backend:e})}const uet={kernelName:td,backendName:"webgl",kernelFunc:oet};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cet{constructor(t,e,s,a,r,i){this.outputShape=[],this.variableNames=["x","mean","variance"],Ut(t,e),Ut(t,s);let l="0.0";a!=null&&(Ut(t,a),this.variableNames.push("offset"),l="getOffsetAtOutCoords()");let u="1.0";r!=null&&(Ut(t,r),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${l};
        float scale = ${u};
        float inv = scale * inversesqrt(variance + float(${i}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class het{constructor(t,e,s,a,r,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Ut(t,e),Ut(t,s);let l="vec4(0.0)";a!=null&&(Ut(t,a),this.variableNames.push("offset"),l="getOffsetAtOutCoords()");let u="vec4(1.0)";r!=null&&(Ut(t,r),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`
      void main() {
        vec4 offset = ${l};
        vec4 scale = ${u};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${i}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const det=({inputs:n,backend:t,attrs:e})=>{const{x:s,mean:a,variance:r,offset:i,scale:l}=n;D(a.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),D(i==null||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),D(l==null||a.shape.length===l.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=e;u==null&&(u=.001);const h=[s,a,r];let f=null;i!=null&&(f=i.shape,h.push(i));let p=null;l!=null&&(p=l.shape,h.push(l));const m=rt().getBool("WEBGL_PACK_NORMALIZATION")?new het(s.shape,a.shape,r.shape,f,p,u):new cet(s.shape,a.shape,r.shape,f,p,u);return t.runWebGLProgram(m,h,h[0].dtype)},fet={kernelName:fd,backendName:"webgl",kernelFunc:det};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pet{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=ve(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=met(this.rank);let a;const r=t.map((i,l)=>`sourceLoc.${P1[l]} = start[${l}] + coords.${P1[l]};`);a=`
        ${e} sourceLoc;
        ${e} coords = getOutputCoords();
        ${r.join(`
`)}
      `,this.userCode=`
      void main() {
        ${a}
        setOutput(getSource(${s}));
      }
    `}}const P1=["x","y","z","w","u","v"];function met(n){if(n===1)return"sourceLoc";if(n<=6)return P1.slice(0,n).map(t=>"sourceLoc."+t).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class get{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const e=ve(this.rank),s=Yn("coords",this.rank),a=Yn("sourceLoc",this.rank),r=this.rank===1?"sourceLoc":`vec2(${a.slice(-2).join()})`,i=`getChannel(getSource(${a.join()}), ${r})`,l=`
      result.x = ${i};
      if (++${s[this.rank-1]} < ${t[this.rank-1]}) {
        ++${a[this.rank-1]};
        result.y = ${i};
        --${a[this.rank-1]};
      }
    `,u=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${t[this.rank-2]}) {
        ++${a[this.rank-2]};
        result.z = ${i};
        if (++${s[this.rank-1]} < ${t[this.rank-1]}) {
          ++${a[this.rank-1]};
          result.w = ${i};
        }
      }
    `,h=this.rank<=4?`sourceLoc = coords +
            ${e}(${t.map((f,p)=>`start[${p}]`).join()});`:t.map((f,p)=>`${a[p]} = ${s[p]} + start[${p}];`).join(`
`);this.userCode=`
      void main() {
        ${e} coords = getOutputCoords();
        ${e} sourceLoc;
        ${h}
        vec4 result = vec4(0.);
        ${l}
        ${u}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yet(n,t,e,s){const a=s.texData.get(n.dataId),r=s.makeTensorInfo(e,n.dtype),i=s.texData.get(r.dataId);Object.assign(i,a),i.refCount=1,i.shape=e,i.dtype=n.dtype;let l=Cw(t,Ot(n.shape));a.slice&&(l+=a.slice.flatOffset),i.slice={flatOffset:l,origDataId:a.slice&&a.slice.origDataId||n.dataId};const u=s.dataRefCount.get(i.slice.origDataId)||1;return s.dataRefCount.set(i.slice.origDataId,u+1),r}function mc(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{begin:r,size:i}=s,[l,u]=Wy(a,r,i);if(Sw(a,l,u),ht(u)===0)return e.makeTensorInfo(u,a.dtype,[]);if(e.shouldExecuteOnCPU([a])||a.dtype==="string"){const p=e.texData.get(a.dataId),m=lJ(p.values,l,u,a.shape,a.dtype);return e.makeTensorInfo(u,a.dtype,m)}const{isPacked:h}=e.texData.get(a.dataId),f=Tw(a.shape,l,u);if(h||!f){const p=rt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new get(u):new pet(u),m=[l];return e.runWebGLProgram(p,[a],a.dtype,m)}return e.uploadToGPU(a.dataId),yet(a,l,u,e)}const bet={kernelName:Ud,backendName:"webgl",kernelFunc:mc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xet=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{blockShape:r,crops:i}=s;D(a.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const l=r.reduce((T,$)=>T*$),u=bf(a.shape,r,l),h=xf(u.length,r.length),f=vf(a.shape,r,l),p=Rw(i,r.length),m=Dw(f,i,r.length),y=[],b=St({inputs:{x:a},backend:e,attrs:{shape:u}}),v=Zn({inputs:{x:b},backend:e,attrs:{perm:h}}),w=St({inputs:{x:v},backend:e,attrs:{shape:f}}),S=mc({inputs:{x:w},backend:e,attrs:{begin:p,size:m}});return y.push(b),y.push(v),y.push(w),y.forEach(T=>e.disposeIntermediateTensorInfo(T)),S},vet={kernelName:ed,backendName:"webgl",kernelFunc:xet};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wet(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,weights:r}=t,{size:i}=s,l=e.readSync(a.dataId),u=e.readSync(r.dataId),h=HO(l,u,r.dtype,r.shape,i);return e.makeTensorInfo([i],r.dtype,h)}const Net={kernelName:sg,backendName:"webgl",kernelFunc:wet};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tet=`
  int r = int(a.r) & int(b.r);
  int g = int(a.g) & int(b.g);
  int rb = int(a.b) & int(b.b);
  int ra = int(a.a) & int(b.a);
  return vec4(r, g, rb, ra);
`,Cet=`
  return float(int(a.r) & int(b.r));
`;function $et(n){const{inputs:t,backend:e}=n,{a:s,b:a}=t,r=rt().getBool("WEBGL_PACK_BINARY_OPERATIONS"),i=rt().getNumber("WEBGL_VERSION");if(e.shouldExecuteOnCPU([s,a])||i===1){const u=e.texData.get(s.dataId).values,h=e.texData.get(a.dataId).values,[f,p]=DQ(s.shape,a.shape,u,h,s.dtype),m=e.makeTensorInfo(p,s.dtype),y=e.texData.get(m.dataId);return y.values=f,m}let l;return r?l=new fc(Tet,s.shape,a.shape,!1):l=new Fo(Cet,s.shape,a.shape),e.runWebGLProgram(l,[s,a],s.dtype)}const ket={kernelName:nd,backendName:"webgl",kernelFunc:$et};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iet(n){const{inputs:t,backend:e}=n,{s0:s,s1:a}=t,r=e.readSync(s.dataId),i=e.readSync(a.dataId),l=Ut(Array.from(r),Array.from(i));return e.makeTensorInfo([l.length],"int32",Int32Array.from(l))}const Eet={kernelName:ag,backendName:"webgl",kernelFunc:Iet};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aet="return float(a != b);",r_=_n({opSnippet:Aet,cpuKernelImpl:JQ,dtype:"bool"}),Ret={kernelName:Ad,backendName:"webgl",kernelFunc:r_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Of(n){const{inputs:t,backend:e}=n,{input:s}=t,a=e.texData.get(s.dataId);return Cs({inputs:{x:a.complexTensorInfos.real},backend:e})}const Det={kernelName:Mg,backendName:"webgl",kernelFunc:Of};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oet="return float(int(x));";function _et(n,t){const e=new Ga(n.shape,Oet),s=t.runWebGLProgram(e,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U1(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{dtype:r}=s;if(r==="complex64"){if(a.dtype==="complex64")return Cs({inputs:{x:a},backend:e});const i=tn(a.shape),l=U1({inputs:{x:a},backend:e,attrs:{dtype:"float32"}}),u=Bi({inputs:{real:l,imag:i},backend:e});return i.dispose(),e.disposeIntermediateTensorInfo(l),u}if(a.dtype==="complex64"){const i=Of({inputs:{input:a},backend:e}),l=U1({inputs:{x:i},backend:e,attrs:{dtype:r}});return e.disposeIntermediateTensorInfo(i),l}if(!X1(a.dtype,r)){const i=Cs({inputs:{x:a},backend:e});return{dataId:i.dataId,shape:i.shape,dtype:r}}if(e.shouldExecuteOnCPU([a])){const i=e.texData.get(a.dataId).values,[l,u,h]=OQ(i,a.shape,a.dtype,r);return e.makeTensorInfo(l,u,h)}if(r==="int32")return _et(a,e);if(r==="bool"){const i=e.makeTensorInfo([],"bool",bn("bool",1)),u=r_({inputs:{a,b:i},backend:e});return e.disposeIntermediateTensorInfo(i),u}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${r}`)}const Fet={kernelName:du,backendName:"webgl",kernelFunc:U1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fk="return ceil(x);",Let=re({opSnippet:fk,packedOpSnippet:fk,cpuKernelImpl:_Q}),zet={kernelName:fu,backendName:"webgl",kernelFunc:Let};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Met{constructor(t){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bet{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=t,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vet(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{clipValueMin:r,clipValueMax:i}=s;let l;rt().getBool("WEBGL_PACK_CLIP")?l=new Bet(a.shape):l=new Met(a.shape);const u=[[r],[i]];return e.runWebGLProgram(l,[a],a.dtype,u)}const Pet={kernelName:pu,backendName:"webgl",kernelFunc:Vet};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Uet{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pk(n,t){return{dataId:t.dataId,dtype:t.dtype,shape:n.shape}}function Get(n){const{inputs:t,backend:e}=n,{x:s}=t,a=e.texData.get(s.dataId),r=new Uet(s.shape),i=[pk(s,a.complexTensorInfos.real),pk(s,a.complexTensorInfos.imag)];return e.runWebGLProgram(r,i,i[0].dtype)}const Wet={kernelName:sd,backendName:"webgl",kernelFunc:Get};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Het{constructor(t){this.outputShape=[],this.outputShape=ja(t,1),this.variableNames=t.map((i,l)=>`T${l}`);const e=new Array(t.length-1);e[0]=t[0][1];for(let i=1;i<e.length;i++)e[i]=e[i-1]+t[i][1];const s=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let i=1;i<e.length;i++){const l=e[i-1];s.push(`else if (yC < ${e[i]}) setOutput(getT${i}(yR, yC-${l}));`)}const a=e.length,r=e[e.length-1];s.push(`else setOutput(getT${a}(yR, yC-${r}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jet{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=ja(t,e);const s=this.outputShape,a=s.length,r=ve(a),i=Yn("coords",a),l=["x","y","z","w","u","v"].slice(0,a);this.variableNames=t.map((v,w)=>`T${w}`);const u=new Array(t.length-1);u[0]=t[0][e];for(let v=1;v<u.length;v++)u[v]=u[v-1]+t[v][e];const h=l[e],f=l.slice(-2),p=l.join();let m=`if (${h} < ${u[0]}) {
        return getChannel(
            getT0(${p}), vec2(${f.join()}));
        }`;for(let v=1;v<u.length;v++){const w=u[v-1];m+=`
        if (${h} < ${u[v]}  && ${h} >= ${u[v-1]}) {
          return getChannel(
            getT${v}(${im(l,h,w)}),
            vec2(${im(f,h,w)}));
        }`}const y=u.length,b=u[u.length-1];m+=`
        return getChannel(
          getT${y}(${im(l,h,b)}),
          vec2(${im(f,h,b)}));`,this.userCode=`
      float getValue(${l.map(v=>"int "+v)}) {
        ${m}
      }

      void main() {
        ${r} coords = getOutputCoords();
        vec4 result = vec4(getValue(${i}), 0., 0., 0.);

        ${i[a-1]} = ${i[a-1]} + 1;
        if (${i[a-1]} < ${s[a-1]}) {
          result.g = getValue(${i});
        }

        ${i[a-2]} = ${i[a-2]} + 1;
        if (${i[a-2]} < ${s[a-2]}) {
          result.a = getValue(${i});
        }

        ${i[a-1]} = ${i[a-1]} - 1;
        if (${i[a-2]} < ${s[a-2]} &&
            ${i[a-1]} < ${s[a-1]}) {
          result.b = getValue(${i});
        }
        setOutput(result);
      }
    `}}function im(n,t,e){const s=n.indexOf(t);return n.map((r,i)=>i===s?`${r} - ${e}`:r).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cb(n){const{inputs:t,backend:e}=n,{input:s}=t,a=e.texData.get(s.dataId);return Cs({inputs:{x:a.complexTensorInfos.imag},backend:e})}const qet={kernelName:Tg,backendName:"webgl",kernelFunc:cb};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $h(n,t,e){const s=n[0].dtype;if(s==="complex64"){const y=n.map(T=>Of({inputs:{input:T},backend:e})),b=n.map(T=>cb({inputs:{input:T},backend:e})),v=$h(y,t,e),w=$h(b,t,e),S=Bi({inputs:{real:v,imag:w},backend:e});return y.forEach(T=>e.disposeIntermediateTensorInfo(T)),b.forEach(T=>e.disposeIntermediateTensorInfo(T)),e.disposeIntermediateTensorInfo(v),e.disposeIntermediateTensorInfo(w),S}let a=e.shouldExecuteOnCPU(n);if(s==="string"&&(a=!0),a){const y=n.map(C=>{const R=[-1,ht(C.shape.slice(t))];return St({inputs:{x:C},backend:e,attrs:{shape:R}})}),b=y.map(C=>({vals:e.readSync(C.dataId),shape:C.shape})),v=ja(y.map(C=>C.shape),1),w=y[0].shape[0]===1,S=FQ(b,v,s,w),T=ja(n.map(C=>C.shape),t),$=e.makeTensorInfo(T,s,S);return y.forEach(C=>e.disposeIntermediateTensorInfo(C)),$}const r=n.filter(y=>ht(y.shape)>0),i=rt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&r[0].shape.length>1;if(r.length===1){const y=i?new Ga(n[0].shape,ci):new fi(n[0].shape,ci);return e.runWebGLProgram(y,n,s)}const l=rt().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(r.length>l){const y=[];for(let v=0;v<r.length;v+=l){const w=r.slice(v,v+l);y.push($h(w,t,e))}const b=$h(y,t,e);for(const v of y)e.disposeIntermediateTensorInfo(v);return b}if(i){const y=new jet(r.map(b=>b.shape),t);return e.runWebGLProgram(y,r,s)}const{tensors2D:u,outShape:h}=Xet(r,t,e),f=new Het(u.map(y=>y.shape)),p=e.runWebGLProgram(f,u,s);u.forEach(y=>e.disposeIntermediateTensorInfo(y));const m=St({inputs:{x:p},attrs:{shape:h},backend:e});return e.disposeIntermediateTensorInfo(p),m}function Xet(n,t,e){const s=ja(n.map(r=>r.shape),t);return{tensors2D:n.map(r=>St({inputs:{x:r},attrs:{shape:[-1,ht(r.shape.slice(t))]},backend:e})),outShape:s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function i_(n){const{inputs:t,backend:e,attrs:s}=n,{axis:a}=s,r=Xt(a,t[0].shape)[0],i=t.map(h=>h.shape);Iw(i,r);const l=ja(t.map(h=>h.shape),r);if(ht(l)===0)return e.makeTensorInfo(l,t[0].dtype,[]);const u=t.filter(h=>ht(h.shape)>0);return u.length===1?Cs({inputs:{x:u[0]},backend:e}):$h(u,r,e)}const Ket={kernelName:ad,backendName:"webgl",kernelFunc:i_};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class o_{constructor(t,e=!1,s=null,a=!1,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const i=t.padInfo.top,l=t.padInfo.left,u=t.strideHeight,h=t.strideWidth,f=t.dilationHeight,p=t.dilationWidth,m=t.filterHeight,y=t.filterWidth,b=Math.floor(t.inChannels/4)*4,v=t.inChannels%4,w=t.dataFormat==="channelsLast",S=w?1:2,T=w?2:3,$=w?3:1;let C="",I="";s&&(a?C=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:r?C=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:C=`
          float activation(float x) {
            ${s}
          }
        `,I="result = activation(result);");const R=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${C}

      const ivec2 strides = ivec2(${u}, ${h});
      const ivec2 pads = ivec2(${i}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${$}];

        ivec2 xRCCorner =
            ivec2(coords[${S}], coords[${T}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${m}; wR++) {
          int xR = xRCorner + wR * ${f};

          if (xR < 0 || xR >= ${t.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${y}; wC++) {
            int xC = xCCorner + wC * ${p};

            if (xC < 0 || xC >= ${t.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${b}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${w}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${v===1}) {

              if (${w}) {
                dotProd +=
                    getX(batch, xR, xC, ${b}) *
                    getW(wR, wC, ${b}, d2);
              } else {
                dotProd +=
                    getX(batch, ${b}, xR, xC) *
                    getW(wR, wC, ${b}, d2);
              }

            } else if (${v===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${b}, d2),
                getW(wR, wC, ${b} + 1, d2)
              );

              if (${w}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${b}),
                  getX(batch, xR, xC, ${b} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${b}, xR, xC),
                  getX(batch, ${b} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${v===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${b}, d2),
                getW(wR, wC, ${b} + 1, d2),
                getW(wR, wC, ${b} + 2, d2)
              );

              if (${w}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${b}),
                  getX(batch, xR, xC, ${b} + 1),
                  getX(batch, xR, xC, ${b} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${b}, xR, xC),
                  getX(batch, ${b} + 1, xR, xC),
                  getX(batch, ${b} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${R}
        ${I}
        setOutput(result);
      }
    `}}class Yet{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,s=t.padInfo.top,a=t.padInfo.left,r=t.strideDepth,i=t.strideHeight,l=t.strideWidth,u=t.dilationDepth,h=t.dilationHeight,f=t.dilationWidth,p=t.filterDepth,m=t.filterHeight,y=t.filterWidth,b=Math.floor(t.inChannels/4)*4,v=t.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${r}, ${i}, ${l});
      const ivec3 pads = ivec3(${e}, ${s}, ${a});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${p}; wF++) {
          int xF = xFCorner + wF * ${u};

          if (xF < 0 || xF >= ${t.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${m}; wR++) {
            int xR = xRCorner + wR * ${h};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${y}; wC++) {
              int xC = xCCorner + wC * ${f};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${b}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${v===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${b}) *
                  getW(wF, wR, wC, ${b}, d2);
              } else if (${v===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${b}),
                  getX(batch, xF, xR, xC, ${b} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${b}, d2),
                  getW(wF, wR, wC, ${b} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${v===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${b}),
                  getX(batch, xF, xR, xC, ${b} + 1),
                  getX(batch, xF, xR, xC, ${b} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${b}, d2),
                  getW(wF, wR, wC, ${b} + 1, d2),
                  getW(wF, wR, wC, ${b} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class l_{constructor(t,e=!1,s=null,a=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=Un(this.outputShape.length);const i=t.padInfo.left,l=t.strideWidth,u=t.dilationWidth,h=t.filterHeight,f=t.filterWidth,p=f;let m=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let w=0;w<f;w++)m+=`
           vec4 xTexelC${w*2};
           int xTexelC${w*2}Ready;
           vec4 xTexelC${w*2+1};
           int xTexelC${w*2+1}Ready;
           vec4 xC${w};`;m+=`
     for (int r = 0; r < ${h}; r++) {
      for (int d1 = 0; d1 < ${t.inChannels}; d1 += 2) {
       `;for(let w=0;w<f;w++)m+=`
           xTexelC${w*2} = vec4(0.0);
           xTexelC${w*2}Ready = 0;
           xTexelC${w*2+1} = vec4(0.0);
           xTexelC${w*2+1}Ready = 0;
           xC${w} = vec4(0.0);`;m+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let w=0;w<(p+1)/2;w++){const S=w*2;if(m+=`
           xC = xCCorner + ${S*u};
           `,l===1){if(S<f&&(i%2===1?(m+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${S}Ready == 0) {
                   xTexelC${S} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${S}.zw = vec2(0.0);
                   }
                   xTexelC${S}Ready = 1;
                 }
               `,u===1&&S>0?m+=`
                 xC${S} = vec4(xTexelC${S-2}.zw, xTexelC${S}.xy);
                 `:m+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${S} = vec4(previous.zw, xTexelC${S}.xy);
                   } else {
                     xC${S} = vec4(0.0, 0.0, xTexelC${S}.xy);
                   }
                   `):m+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${S}Ready == 0) {
                   xTexelC${S} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${S}.zw = vec2(0.0);
                   }
                   xTexelC${S}Ready = 1;
                 }

                 xC${S} = xTexelC${S};
                 `,S+1<f)){const T=i%2===0?Zm(u):u;u%2===0&&i%2===1||u%2!==0&&i%2!==1?(m+=`
                   xCOffset = xC + imod(pads[1], 2) + ${T};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${S+1}Ready == 0) {
                     xTexelC${S+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${S+1}.zw = vec2(0.0);
                     }
                     xTexelC${S+1}Ready = 1;
                   }
                   `,u>1?m+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${S+1} = vec4(previous.zw, xTexelC${S+1}.xy);
                     } else {
                      xC${S+1} = vec4(0.0, 0.0, xTexelC${S+1}.xy);
                     }
                     `:m+=`
                     xC${S+1} = vec4(xTexelC${S}.zw, xTexelC${S+1}.xy);
                     `):T===1?m+=`
                     xC${S+1} = xTexelC${S};
                     `:m+=`
                     xCOffset = xC + ${T};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${S+1}Ready == 0) {
                       xTexelC${S+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${S+1}.zw = vec2(0.0);
                       }
                       xTexelC${S+1}Ready = 1;
                     }

                     xC${S+1} = xTexelC${S+1};
                     `}}else S<f&&(i%2===1?(m+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${S}Ready == 0) {
                   xTexelC${S} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${S}.zw = vec2(0.0);
                   }
                   xTexelC${S}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${S+1}Ready == 0) {
                   xTexelC${S+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${S+1}.zw = vec2(0.0);
                   }
                   xTexelC${S+1}Ready = 1;
                 }

                 xC${S} = vec4(xTexelC${S}.zw, xTexelC${S+1}.zw);
               `,S+1<f&&(m+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${S+1} = vec4(xTexelC${S+1}.xy, final.xy);
                 `)):(m+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${S}Ready == 0) {
                   xTexelC${S} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${S}.zw = vec2(0.0);
                   }
                   xTexelC${S}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${S+1}Ready == 0) {
                   xTexelC${S+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${S+1}.zw = vec2(0.);
                   }
                   xTexelC${S+1}Ready = 1;
                 }

                 xC${S} = vec4(
                   xTexelC${S}.xy, xTexelC${S+1}.xy);
               `,S+1<f&&(m+=`
                   xC${S+1} = vec4(xTexelC${S}.zw, xTexelC${S+1}.zw);
                 `)));S<f&&(m+=`
             wTexel = getW(r, ${S}, d1, d2);
             dotProd += xC${S}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${t.inChannels}) {
               dotProd += xC${S}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,S+1<f&&(m+=`
               wTexel = getW(r, ${S+1}, d1, d2);
               dotProd += xC${S+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${t.inChannels}) {
                 dotProd += xC${S+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}m+=`
     }
   `,m+=`
     }
   `,m+=`
     }
   `;let y="",b="";s&&(a?y=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${s}
         }`:r?y=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${s}
         }`:y=`vec4 activation(vec4 x) {
           ${s}
         }`,b="result = activation(result);");const v=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${y}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${m}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${v}
         ${b}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zet{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=t,this.enableShapeUniforms=Un(this.outputShape.length);const{dataFormat:s}=e,a=Jn(),r=s==="channelsLast",i=r?1:2,l=r?2:3,u=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${t[2]} && pos < ${t[1]}) {`;let h="";for(let f=0;f<=1;f++)for(let p=0;p<=1;p++)h+=`
          blockIndex = rc.z + ${p};
          pos = rc.y + ${f};

          ${u}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${i}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${l}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${r}) {
                  innerDims = vec2(d1, ch);
                  result[${f*2+p}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${f*2+p}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${h}

        ${a.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qm(n,t){const e=n.length;return e>=3?t?[...n.slice(0,-3),n[e-3]*n[e-2],n[e-1]]:[...n.slice(0,-3),n[e-3],n[e-2]*n[e-1]]:!t&&e===1&&n[0]>1?[n[0],1]:null}function u_({x:n,filter:t,convInfo:e,backend:s,bias:a=null,preluActivationWeights:r=null,leakyreluAlpha:i=0,activation:l=null}){const u=n.shape,h=s.texData.get(n.dataId),f=e.inChannels,p=u[0]*u[1]*u[2],m=e.outChannels,y=e.dataFormat==="channelsLast",b=!1,v=!1;let w;const S=[];if(r!=null){const C=qm(r.shape,y);C!=null&&(r=St({inputs:{x:r},backend:s,attrs:{shape:C}}),S.push(r))}if(a!=null){const C=qm(a.shape,y);C!=null&&(a=St({inputs:{x:a},backend:s,attrs:{shape:C}}),S.push(a))}if(!((p===1||m===1)&&f>e_)&&h.isPacked&&y&&h.texture!=null&&u[2]%2!==0&&Zt(h.shape.slice(-3),u.slice(-3))){const C=u[0]*u[1]*(u[2]+1),I={dataId:n.dataId,shape:[1,C,e.inChannels],dtype:n.dtype},R=h.shape;h.shape=h.shape.slice(),h.shape[h.shape.length-2]++,D(Hm(h.shape,I.shape),()=>`packed reshape ${h.shape} to ${I.shape} isn't free`);const F=St({inputs:{x:t},backend:s,attrs:{shape:[1,e.inChannels,e.outChannels]}});S.push(F);const B=jm({a:I,b:F,backend:s,transposeA:b,transposeB:v,bias:a,activation:l,preluActivationWeights:r,leakyreluAlpha:i}),L=s.texData.get(B.dataId);D(L.isPacked,()=>"batchMatMul result is expected to be packed"),h.shape=R,L.shape=e.outShape,w=Cs({inputs:{x:B},backend:s}),w.shape=e.outShape,S.push(B)}else{const C=e.outHeight*e.outWidth,I=St({inputs:{x:n},backend:s,attrs:{shape:y?[e.batchSize,C,e.inChannels]:[e.batchSize,e.inChannels,C]}}),R=St({inputs:{x:t},backend:s,attrs:{shape:[1,e.inChannels,e.outChannels]}}),F=jm({a:y?I:R,b:y?R:I,transposeA:!y,transposeB:v,backend:s,bias:a,activation:l,preluActivationWeights:r,leakyreluAlpha:i});w=St({inputs:{x:F},backend:s,attrs:{shape:e.outShape}}),S.push(I),S.push(R),S.push(F)}for(const C of S)s.disposeIntermediateTensorInfo(C);return w}function c_({x:n,filter:t,convInfo:e,backend:s,bias:a=null,preluActivationWeights:r=null,leakyreluAlpha:i=0,activation:l=null}){const{filterWidth:u,filterHeight:h,inChannels:f,outWidth:p,outHeight:m,dataFormat:y}=e,b=y==="channelsLast",v=u*h*f,w=m*p,S=[e.batchSize,v,w],T=!0,$=!1,C=[];if(r!=null){const Y=qm(r.shape,b);Y!=null&&(r=St({inputs:{x:r},backend:s,attrs:{shape:Y}}),C.push(r))}if(a!=null){const Y=qm(a.shape,b);Y!=null&&(a=St({inputs:{x:a},backend:s,attrs:{shape:Y}}),C.push(a))}const I=St({inputs:{x:t},backend:s,attrs:{shape:[1,v,ht(t.shape)/v]}});C.push(I);const R=new Zet(S,e),F=[n.shape,[e.padInfo.top,e.padInfo.left],[e.strideHeight,e.strideWidth],[e.dilationHeight,e.dilationWidth],[e.inChannels],[e.filterWidth*e.inChannels],[e.outWidth]],B=s.runWebGLProgram(R,[n],"float32",F),L=St({inputs:{x:B},backend:s,attrs:{shape:S}});C.push(B),C.push(L);const z=a!=null,A=r!=null,G=l==="leakyrelu",Q=l?Hh(l,!0):null,tt=new t_(b?L.shape:I.shape,b?I.shape:L.shape,b?[e.batchSize,w,e.outChannels]:[e.batchSize,e.outChannels,w],T,$,z,Q,A,G),J=b?[L,I]:[I,L];if(a&&J.push(a),A&&J.push(r),G){const Y=s.makeTensorInfo([],"float32",Dr(i,"float32"));J.push(Y),C.push(Y)}const V=s.runWebGLProgram(tt,J,"float32"),q=St({inputs:{x:V},backend:s,attrs:{shape:e.outShape}});C.push(V);for(const Y of C)s.disposeIntermediateTensorInfo(Y);return q}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qet(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r}=t,{strides:i,pad:l,dataFormat:u,dilations:h,dimRoundingMode:f}=s,p=_r(u),m=vn(a.shape,r.shape,i,h,l,f,!1,p);let y;if(m.filterHeight===1&&m.filterWidth===1&&m.dilationHeight===1&&m.dilationWidth===1&&m.strideHeight===1&&m.strideWidth===1&&(m.padInfo.type==="SAME"||m.padInfo.type==="VALID"))y=u_({x:a,filter:r,convInfo:m,backend:e});else if(m.strideWidth<=2&&p==="channelsLast"&&rt().getBool("WEBGL_EXP_CONV")){const v=new l_(m),w=[[m.padInfo.top,m.padInfo.left],[m.strideHeight,m.strideWidth],[m.dilationHeight,m.dilationWidth],[m.inHeight,m.inWidth]];y=e.runWebGLProgram(v,[a,r],"float32",w)}else if(rt().getBool("WEBGL_CONV_IM2COL"))y=c_({x:a,filter:r,convInfo:m,backend:e});else{const v=new o_(m);y=e.runWebGLProgram(v,[a,r],"float32")}const b=St({inputs:{x:y},backend:e,attrs:{shape:m.outShape}});return e.disposeIntermediateTensorInfo(y),b}const Jet={kernelName:rd,backendName:"webgl",kernelFunc:Qet};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tnt{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,s=t.strideWidth,a=t.padInfo.top,r=t.padInfo.left,i=t.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${a};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${r};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              ${i?`float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);`:`float dyValue = getDy(b, d2, yR, yC);
              float xValue = getX(b, d1, xR, xC);
              dotProd += (xValue * dyValue);`}
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class ent{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,a=t.strideHeight,r=t.strideWidth,i=t.dataFormat==="channelsLast",l=e-1-t.padInfo.top,u=s-1-t.padInfo.left,h=i?1:2,f=i?2:3,p=i?3:1;this.userCode=`
      const ivec2 pads = ivec2(${l}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${p}];

        ivec2 dyCorner = ivec2(coords[${h}], coords[${f}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${a}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {

              if (${i}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class nnt{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,s=t.strideHeight,a=t.strideWidth,r=t.padInfo.front,i=t.padInfo.top,l=t.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yF = 0; yF < ${t.outDepth}; yF++) {
            int xF = wF + yF * ${e} - ${r};

            if (xF < 0 || xF >= ${t.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${t.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${i};

              if (xR < 0 || xR >= ${t.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${t.outWidth}; yC++) {
                int xC = wC + yC * ${a} - ${l};

                if (xC < 0 || xC >= ${t.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class snt{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,s=t.filterHeight,a=t.filterWidth,r=t.strideDepth,i=t.strideHeight,l=t.strideWidth,u=e-1-t.padInfo.front,h=s-1-t.padInfo.top,f=a-1-t.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${u}, ${h}, ${f});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${e}; wF++) {
          float dyF = float(dyFCorner + wF) / ${r}.0;

          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${e} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${i}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${a}; wC++) {
              float dyC = float(dyCCorner + wC) / ${l}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${a} - 1 - wC;

              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ant(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,dy:r}=t,{strides:i,pad:l,dataFormat:u,dimRoundingMode:h,filterShape:f}=s,p=_r(u),m=vn(a.shape,f,i,1,l,h,!1,p),y=new tnt(m);return e.runWebGLProgram(y,[a,r],"float32")}const rnt={kernelName:ig,backendName:"webgl",kernelFunc:ant};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class int{constructor(t){this.variableNames=["dy","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"strides",type:"vec2"}],this.outputShape=t.inShape,this.enableShapeUniforms=Un(this.outputShape.length);const e=t.filterHeight,s=t.filterWidth,a=e-1-t.padInfo.top,r=s-1-t.padInfo.left;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${r});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];

        ivec2 dyCorner = ivec2(coords[1], coords[2]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        vec4 result = vec4(0.);
        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / strides[0];
          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);
          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            int wCPerm = ${s} - 1 - wC;

            float dyC = float(dyCCorner + wC) / strides[1];
            bool idyCVal = (dyC >= 0.0) && (dyC < ${t.outWidth}.0)
              && (fract(dyC) == 0.0);
            int idyC = int(dyC);

            float dyC2 = float(dyCCorner + wC + 1) / strides[1];
            bool idyCVal2 = (dyC2 >= 0.0) && (dyC2 < ${t.outWidth}.0)
              && (fract(dyC2) == 0.0);
            int idyC2 = int(dyC2);

            if (idyCVal && idyCVal2) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec4 dySample2 = (idyC / 2 == idyC2 / 2) ?
                  dySample : getDy(batch, idyR, idyC2, d2);

                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));

                dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample2.xy : dySample2.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC, d2);
                vec2 dyValue = mod(float(idyC), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.xy += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            } else if (idyCVal2) {
              for (int d2 = 0; d2 < ${t.outChannels}; d2 += 2) {
                vec4 wValue = getW(wRPerm, wCPerm, d1, d2);
                vec4 dySample = getDy(batch, idyR, idyC2, d2);
                vec2 dyValue = mod(float(idyC2), 2.) == 0. ?
                  dySample.xy : dySample.zw;
                result.zw += vec2(dot(dyValue, wValue.xy),
                  dot(dyValue, wValue.zw));
              }
            }
          }
        }
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ont(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,filter:r}=t,{inputShape:i,strides:l,pad:u,dataFormat:h,dimRoundingMode:f}=s,p=_r(h),m=vn(i,r.shape,l,1,u,f,!1,p);if(rt().getBool("WEBGL_PACK_CONV2DTRANSPOSE")&&p==="channelsLast"){const y=[[m.strideHeight,m.strideWidth]],b=new int(m);return e.runWebGLProgram(b,[a,r],"float32",y)}else{const y=new ent(m);return e.runWebGLProgram(y,[a,r],"float32")}}const lnt={kernelName:id,backendName:"webgl",kernelFunc:ont};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function unt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r}=t,{strides:i,pad:l,dilations:u}=s,h=Ri(a.shape,r.shape,i,u,l),f=new Yet(h);return e.runWebGLProgram(f,[a,r],"float32")}const cnt={kernelName:od,backendName:"webgl",kernelFunc:unt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hnt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,dy:r}=t,{strides:i,pad:l,filterShape:u}=s,h=Ri(a.shape,u,i,1,l),f=new nnt(h);return e.runWebGLProgram(f,[a,r],"float32")}const dnt={kernelName:og,backendName:"webgl",kernelFunc:hnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fnt(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,filter:r}=t,{pad:i,strides:l,inputShape:u}=s,h=Ri(u,r.shape,l,1,i),f=new snt(h);return e.runWebGLProgram(f,[a,r],"float32")}const pnt={kernelName:lg,backendName:"webgl",kernelFunc:fnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mnt=pc+`
  return cos(x);
`,gnt=`
  vec4 result = cos(x);
  bvec4 isNaN = isnan(x);
  ${Xo}
  return result;
`,ynt=re({opSnippet:mnt,packedOpSnippet:gnt}),bnt={kernelName:mu,backendName:"webgl",kernelFunc:ynt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xnt=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,vnt=re({opSnippet:xnt}),wnt={kernelName:gu,backendName:"webgl",kernelFunc:vnt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Snt{constructor(t,e,s,a,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[i,l,u,h]=t,[f]=e,[p,m]=s;this.outputShape=[f,p,m,h];const y=a==="bilinear"?1:0,[b,v]=[`${l-1}.0`,`${u-1}.0`],[w,S,T]=p>1?[`${(l-1)/(p-1)}`,"(y2-y1) * height_ratio",`y1*${b} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${b}`],[$,C,I]=m>1?[`${(u-1)/(m-1)}`,"(x2-x1) * width_ratio",`x1*${v} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${v}`];this.userCode=`
      const float height_ratio = float(${w});
      const float width_ratio = float(${$});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${i}) {
          return;
        }

        float height_scale = ${S};
        float width_scale = ${C};

        float in_y = ${T};
        if( in_y < 0.0 || in_y > ${b} ) {
          setOutput(float(${r}));
          return;
        }
        float in_x = ${I};
        if( in_x < 0.0 || in_x > ${v} ) {
          setOutput(float(${r}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${y} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nnt=n=>{const{inputs:t,backend:e,attrs:s}=n,{image:a,boxes:r,boxInd:i}=t,{cropSize:l,method:u,extrapolationValue:h}=s,f=new Snt(a.shape,r.shape,l,u,h);return e.runWebGLProgram(f,[a,r,i],"float32")},Tnt={kernelName:cg,backendName:"webgl",kernelFunc:Nnt};var qh;(function(n){n.Prod="*",n.Sum="+"})(qh||(qh={}));class mk{constructor(t,e,s,a){this.op=t,this.outputShape=e,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,i=this.op===qh.Prod?"1.0":"0.0",l=s?i:`getX(${gk(r,"coords",this.op)})`,u=this.outputShape[this.outputShape.length-1];let h="",f="";s?(h=a?`end != ${u-1}`:"end != 0",f=a?"end + 1":"end - 1"):(h=a?`end + pow2 < ${u}`:"end >= pow2",f=a?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${ve(r)} coords = getOutputCoords();
        int end = ${yk(r,"coords",this.op)};
        float val = ${l};
        int pow2 = int(pow(2.0, index));
        if (${h}) {
          int idx = ${f};
          ${yk(r,"coords",this.op)} = idx;
          val ${this.op}= getX(${gk(r,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function gk(n,t,e){if(n===1)return`${t}`;if(n===2)return`${t}.x, ${t}.y`;if(n===3)return`${t}.x, ${t}.y, ${t}.z`;if(n===4)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${e} for rank ${n} is not yet supported`)}function yk(n,t,e){if(n===1)return`${t}`;if(n===2)return`${t}.y`;if(n===3)return`${t}.z`;if(n===4)return`${t}.w`;throw new Error(`Cumulative ${e} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h_(n,t,e,s,a,r){const i=t.shape.length,l=Be([s],i);let u=t;l!=null&&(u=Zn({inputs:{x:t},backend:e,attrs:{perm:l}}));const h=qe(1,i)[0];if(h!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${s}`);const f=u.shape[h];let p=Cs({inputs:{x:u},backend:e});for(let m=0;m<=Math.ceil(Math.log2(f))-1;m++){const y=new mk(n,u.shape,!1,r),b=[[m]],v=p;p=e.runWebGLProgram(y,[p],p.dtype,b),e.disposeIntermediateTensorInfo(v)}if(a){const m=new mk(n,u.shape,a,r),y=p;p=e.runWebGLProgram(m,[p],p.dtype),e.disposeIntermediateTensorInfo(y)}if(l!=null){const m=Di(l),y=Zn({inputs:{x:p},backend:e,attrs:{perm:m}});return e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(u),y}return p}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Cnt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,exclusive:i,reverse:l}=s;return h_(qh.Prod,a,e,r,i,l)}const $nt={kernelName:ug,backendName:"webgl",kernelFunc:Cnt};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function knt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,exclusive:i,reverse:l}=s;return h_(qh.Sum,a,e,r,i,l)}const Int={kernelName:ld,backendName:"webgl",kernelFunc:knt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ent(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,weights:r}=t,{size:i,binaryOutput:l}=s;if(a.shape.length===1){const u=e.readSync(a.dataId),h=e.readSync(r.dataId),f=HO(u,h,r.dtype,r.shape,i);return e.makeTensorInfo([i],r.dtype,f)}else if(a.shape.length===2){const u=e.bufferSync(a),h=e.bufferSync(r),f=RQ(u,h,i,l);return e.makeTensorInfo(f.shape,r.dtype,f.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}const Ant={kernelName:hg,backendName:"webgl",kernelFunc:Ent};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rnt{constructor(t,e,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${e};
      int offset_h = imod(h, ${e});
      int in_w = w / ${e};
      int offset_w = imod(w, ${e});
      int offset_d = (offset_h * ${e} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dnt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{blockSize:r,dataFormat:i}=s,l=a.shape[0],u=i==="NHWC"?a.shape[1]:a.shape[2],h=i==="NHWC"?a.shape[2]:a.shape[3],f=i==="NHWC"?a.shape[3]:a.shape[1],p=u*r,m=h*r,y=f/(r*r),b=i==="NHWC"?[l,p,m,y]:[l,y,p,m],v=new Rnt(b,r,i);return e.runWebGLProgram(v,[a],a.dtype)}const Ont={kernelName:dg,backendName:"webgl",kernelFunc:Dnt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class d_{constructor(t,e=!1,s=null,a=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=Un(this.outputShape.length);const i=t.filterHeight,l=t.filterWidth,u=t.outChannels/t.inChannels;let h="",f="";s&&(a?h=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:r?h=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:h=`
          float activation(float x) {
            ${s}
          }
        `,f="result = activation(result);");const p=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${h}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${u};
        int q = d2 - d1 * ${u};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${i}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${l}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${p}
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class f_{constructor(t,e=!1,s=null,a=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=t.outShape,this.enableShapeUniforms=Un(this.outputShape.length);const i=t.outChannels/t.inChannels,l=t.padInfo.left,u=t.strideWidth,h=t.dilationWidth,f=t.filterHeight,p=t.filterWidth,m=p;let y=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let S=0;S<p;S++)y+=`
          vec4 xTexelC${S*2};
          int xTexelC${S*2}Ready;
          vec4 xTexelC${S*2+1};
          int xTexelC${S*2+1}Ready;
          vec4 xC${S};`;y+=`
    for (int r = 0; r < ${f}; r++) {
      `;for(let S=0;S<p;S++)y+=`
          xTexelC${S*2} = vec4(0.0);
          xTexelC${S*2}Ready = 0;
          xTexelC${S*2+1} = vec4(0.0);
          xTexelC${S*2+1}Ready = 0;
          xC${S} = vec4(0.0);`;y+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let S=0;S<(m+1)/2;S++){const T=S*2;if(y+=`
          xC = xCCorner + ${T*h};
          `,u===1){if(T<p&&(l%2===1?(y+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T}Ready == 0) {
                  xTexelC${T} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${T}.zw = vec2(0.0);
                  }
                  xTexelC${T}Ready = 1;
                }
              `,h===1&&T>0?y+=`
                xC${T} = vec4(xTexelC${T-2}.zw, xTexelC${T}.xy);
                `:y+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${T} = vec4(previous.zw, xTexelC${T}.xy);
                  } else {
                    xC${T} = vec4(0.0, 0.0, xTexelC${T}.xy);
                  }
                  `):y+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${T}Ready == 0) {
                  xTexelC${T} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${T}.zw = vec2(0.0);
                  }
                  xTexelC${T}Ready = 1;
                }

                xC${T} = xTexelC${T};
                `,T+1<p)){const $=l%2===0?Zm(h):h;h%2===0&&l%2===1||h%2!==0&&l%2!==1?(y+=`
                  xCOffset = xC + imod(pads[1], 2) + ${$};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T+1}Ready == 0) {
                    xTexelC${T+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${T+1}.zw = vec2(0.0);
                    }
                    xTexelC${T+1}Ready = 1;
                  }
                  `,h>1?y+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${T+1} = vec4(previous.zw, xTexelC${T+1}.xy);
                    } else {
                     xC${T+1} = vec4(0.0, 0.0, xTexelC${T+1}.xy);
                    }
                    `:y+=`
                    xC${T+1} = vec4(xTexelC${T}.zw, xTexelC${T+1}.xy);
                    `):$===1?y+=`
                    xC${T+1} = xTexelC${T};
                    `:y+=`
                    xCOffset = xC + ${$};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T+1}Ready == 0) {
                      xTexelC${T+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${T+1}.zw = vec2(0.0);
                      }
                      xTexelC${T+1}Ready = 1;
                    }

                    xC${T+1} = xTexelC${T+1};
                    `}}else T<p&&(l%2===1?(y+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T}Ready == 0) {
                  xTexelC${T} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${T}.zw = vec2(0.0);
                  }
                  xTexelC${T}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${T+1}Ready == 0) {
                  xTexelC${T+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${T+1}.zw = vec2(0.0);
                  }
                  xTexelC${T+1}Ready = 1;
                }

                xC${T} = vec4(xTexelC${T}.zw, xTexelC${T+1}.zw);
              `,T+1<p&&(y+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${T+1} = vec4(xTexelC${T+1}.xy, final.xy);
                `)):(y+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${T}Ready == 0) {
                  xTexelC${T} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${T}.zw = vec2(0.0);
                  }
                  xTexelC${T}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${T+1}Ready == 0) {
                  xTexelC${T+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${T+1}.zw = vec2(0.);
                  }
                  xTexelC${T+1}Ready = 1;
                }

                xC${T} = vec4(
                  xTexelC${T}.xy, xTexelC${T+1}.xy);
              `,T+1<p&&(y+=`
                  xC${T+1} = vec4(xTexelC${T}.zw, xTexelC${T+1}.zw);
                `)));T<p&&(y+=`
            wTexel = getW(r, ${T}, d1, q);
            dotProd += xC${T} * vec4(wTexel.xz, wTexel.xz);
          `,T+1<p&&(y+=`
              wTexel = getW(r, ${T+1}, d1, q);
              dotProd += xC${T+1} * vec4(wTexel.xz, wTexel.xz);
            `))}y+=`
    }
  `,y+=`
      }
    `;let b="",v="";s&&(a?b=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:r?b=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:b=`vec4 activation(vec4 x) {
          ${s}
        }`,v="result = activation(result);");const w=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${b}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${i};
        int q = d2 - d1 * ${i};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${y}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${w}
        ${v}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _nt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r}=t,{strides:i,pad:l,dilations:u,dimRoundingMode:h}=s;let f=u;f==null&&(f=[1,1]),D(Rn(i,f),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${f}'`);const p=vn(a.shape,r.shape,i,f,l,h,!0);let m;rt().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels===1?m=new f_(p):m=new d_(p);const y=[[p.padInfo.top,p.padInfo.left],[p.strideHeight,p.strideWidth],[p.dilationHeight,p.dilationWidth],[p.inHeight,p.inWidth]];return e.runWebGLProgram(m,[a,r],"float32",y)}const Fnt={kernelName:ud,backendName:"webgl",kernelFunc:_nt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lnt{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,s=t.strideWidth,a=t.padInfo.top,r=t.padInfo.left,i=t.outChannels/t.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${i} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${t.batchSize}; b++) {
          for (int yR = 0; yR < ${t.outHeight}; yR++) {
            int xR = wR + yR * ${e} - ${a};

            if (xR < 0 || xR >= ${t.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${t.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${r};

              if (xC < 0 || xC >= ${t.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class znt{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,s=t.filterWidth,a=t.strideHeight,r=t.strideWidth,i=e-1-t.padInfo.top,l=s-1-t.padInfo.left,u=t.outChannels/t.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${l});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${e}; wR++) {
          float dyR = float(dyRCorner + wR) / ${a}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${e} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${u}; dm++) {
              int d2 = d1 * ${u} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mnt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,dy:r}=t,{strides:i,dilations:l,pad:u,dimRoundingMode:h,filterShape:f}=s,p=vn(a.shape,f,i,l,u,h,!0),m=new Lnt(p);return e.runWebGLProgram(m,[a,r],"float32")}const Bnt={kernelName:fg,backendName:"webgl",kernelFunc:Mnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vnt(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,filter:r}=t,{strides:i,dilations:l,pad:u,dimRoundingMode:h,inputShape:f}=s,p=vn(f,r.shape,i,l,u,h,!0),m=new znt(p);return e.runWebGLProgram(m,[a,r],"float32")}const Pnt={kernelName:pg,backendName:"webgl",kernelFunc:Vnt};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Unt{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gnt(n){const{inputs:t,backend:e}=n,{x:s}=t,a=[...s.shape,...s.shape],r=ht(s.shape),i=St({inputs:{x:s},backend:e,attrs:{shape:[r]}}),l=new Unt(r),u=e.runWebGLProgram(l,[i],i.dtype),h=St({inputs:{x:u},backend:e,attrs:{shape:a}});return e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(u),h}const Wnt={kernelName:mg,backendName:"webgl",kernelFunc:Gnt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hnt{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const{inHeight:e,inWidth:s,padInfo:a,strideHeight:r,strideWidth:i,filterHeight:l,filterWidth:u,dilationHeight:h,dilationWidth:f}=t,{top:p,left:m}=a;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${i});
      const ivec2 pads = ivec2(${p}, ${m});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${l}; h++) {
          int hIn = hBeg + h * ${h};

          if (hIn >= 0 && hIn < ${e}) {
            for (int w = 0; w < ${u}; w++) {
              int wIn = wBeg + w * ${f};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jnt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r}=t,{strides:i,pad:l,dilations:u}=s,h=Jd(a.shape,r.shape,i,l,"NHWC",u);let f;const p=new Hnt(h);f=e.runWebGLProgram(p,[a,r],"float32");const m=St({inputs:{x:f},backend:e,attrs:{shape:h.outShape}});return e.disposeIntermediateTensorInfo(f),m}const qnt={kernelName:cd,backendName:"webgl",kernelFunc:jnt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xnt(n){const{inputs:t,backend:e,attrs:s}=n,{equation:a}=s,r=t,{allDims:i,summedDims:l,idDims:u}=Vw(a,r.length);Uw(i.length,u,r);const{path:h,steps:f}=Gw(l,u),p=f.length;let m=null,y=i.length;const b=[];for(let v=0;v<p;++v){for(const w of f[v]){const{permutationIndices:S,expandDims:T}=Pw(y,u[w]);let $;Ww(S)?$=r[w]:($=Zn({inputs:{x:r[w]},backend:e,attrs:{perm:S}}),b.push($));const C=$.shape.slice();for(let I=0;I<T.length;++I)C.splice(T[I],0,1);Zt($.shape,C)||($=St({inputs:{x:$},backend:e,attrs:{shape:C}}),b.push($)),m===null?m=$:(m=OS({inputs:{a:$,b:m},backend:e}),b.push(m))}v<p-1&&(h[v]>=0&&(m=ub({inputs:{x:m},backend:e,attrs:{axis:h[v]-(i.length-y),keepDims:!1}}),b.push(m)),y--)}for(const v of b)v!==m&&e.disposeIntermediateTensorInfo(v);return m}const Knt={kernelName:yg,backendName:"webgl",kernelFunc:Xnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ynt="return (x >= 0.0) ? x : (exp(x) - 1.0);",Znt=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,Qnt=re({opSnippet:Ynt,packedOpSnippet:Znt}),Jnt={kernelName:bu,backendName:"webgl",kernelFunc:Qnt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tst="return (b >= 0.0) ? a : a * (b + 1.0);",est=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,nst=n=>{const{inputs:t,backend:e}=n,{dy:s,y:a}=t,r=rt().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new fc(est,s.shape,a.shape):new Fo(tst,s.shape,a.shape);return e.runWebGLProgram(r,[s,a],s.dtype)},sst={kernelName:bg,backendName:"webgl",kernelFunc:nst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ast=`
  return vec4(equal(a, b));
`,rst="return float(a == b);",ist=_n({opSnippet:rst,packedOpSnippet:ast,dtype:"bool",cpuKernelImpl:LQ}),ost={kernelName:hd,backendName:"webgl",kernelFunc:ist};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lst=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${Ow};
  float a1 = ${_w};
  float a2 = ${Fw};
  float a3 = ${Lw};
  float a4 = ${zw};
  float a5 = ${Mw};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,ust=re({opSnippet:lst}),cst={kernelName:xu,backendName:"webgl",kernelFunc:ust};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hst=pc+`
  return exp(x);
`,dst=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,p_=re({opSnippet:hst,packedOpSnippet:dst,cpuKernelImpl:zQ,dtype:"float32"}),fst={kernelName:vu,backendName:"webgl",kernelFunc:p_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G1(n){const{inputs:t,attrs:e,backend:s}=n,{dim:a}=e,{input:r}=t,i=r.shape.length,l=r.shape.slice();let u=a;return a<0&&(D(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+a+1),l.splice(u,0,1),St({inputs:{x:r},backend:s,attrs:{shape:l}})}const pst={kernelName:dd,backendName:"webgl",kernelFunc:G1};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bk="return exp(x) - 1.0;",mst=re({opSnippet:bk,packedOpSnippet:bk,cpuKernelImpl:MQ}),gst={kernelName:wu,backendName:"webgl",kernelFunc:mst};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xk{constructor(t,e,s){this.variableNames=["real","imag"];const a=e[1];this.outputShape=e;const r=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=s?`${a}.0`:"1.0";let l;if(t==="real")l="return real * expR - imag * expI;";else if(t==="imag")l="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);this.userCode=`
      const float exponentMultiplier = ${r};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${l}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${a});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${a}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${i};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m_(n,t,e){const s=e.texData.get(n.dataId),a=ht(n.shape),r=n.shape[n.shape.length-1],i=a/r,l=St({inputs:{x:n},backend:e,attrs:{shape:[i,r]}}),u=l.shape,h=new xk("real",u,t),f=new xk("imag",u,t),p=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:u},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:u}],m=e.runWebGLProgram(h,p,"float32"),y=e.runWebGLProgram(f,p,"float32"),b=Bi({inputs:{real:m,imag:y},backend:e});e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(y);const v=St({inputs:{x:b},backend:e,attrs:{shape:n.shape}});return e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(b),v}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yst(n){const{inputs:t,backend:e}=n,{input:s}=t;return m_(s,!1,e)}const bst={kernelName:xg,backendName:"webgl",kernelFunc:yst};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class xst{constructor(t,e){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=t,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _f(n){const{backend:t,attrs:e}=n,{shape:s,value:a}=e;let{dtype:r}=e;if(r=r||zo(a),r==="string"){const i=Pe(r,ht(s));return i.fill(a),t.makeTensorInfo(s,r,i)}else{const i=new xst(s,a),l=[[a]];return t.runWebGLProgram(i,[],r,l)}}const vst={kernelName:vg,backendName:"webgl",kernelFunc:_f};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wst{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${e} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${e}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sst={kernelName:wg,backendName:"webgl",kernelFunc:({inputs:n,backend:t})=>{const{image:e}=n,s=t,a=new wst(e.shape);return s.runWebGLProgram(a,[e],e.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vk="return floor(x);",Nst=re({opSnippet:vk,packedOpSnippet:vk,cpuKernelImpl:BQ}),Tst={kernelName:Su,backendName:"webgl",kernelFunc:Nst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cst=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,$st=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,kst=_n({opSnippet:Cst,packedOpSnippet:$st,dtype:"int32"}),Ist={kernelName:Nu,backendName:"webgl",kernelFunc:kst};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Est{constructor(t){this.variableNames=["A"];const e=Jn(),[s,a]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}.0, ${s}.0);

        vec4 values = ${e.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ast{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=Jn(),[s,a]=t;this.outputShape=t,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${a}.0, ${s}.0);
            vec4 values = ${e.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${e.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rst={kernelName:Tm,backendName:"webgl",kernelFunc:Dst};let zl,Kx=rt().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function Dst(n){const{inputs:t,backend:e,attrs:s}=n;let{pixels:a}=t;const{numChannels:r}=s,i=typeof HTMLVideoElement<"u"&&a instanceof HTMLVideoElement,l=typeof HTMLImageElement<"u"&&a instanceof HTMLImageElement,[u,h]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],f=[h,u],p=[h,u,r];if(l||i){const v=rt().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(zl==null||v!==Kx)&&(Kx=v,zl=document.createElement("canvas").getContext("2d",{willReadFrequently:Kx})),zl.canvas.width=u,zl.canvas.height=h,zl.drawImage(a,0,0,u,h),a=zl.canvas}const m=e.makeTensorInfo(f,"int32");e.texData.get(m.dataId).usage=Bs.PIXELS,e.gpgpu.uploadPixelDataToTexture(e.getTexture(m.dataId),a);const y=rt().getBool("WEBGL_PACK")?new Ast(p):new Est(p),b=e.runWebGLProgram(y,[m],"int32");return e.disposeData(m.dataId),b}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ost(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r,bias:i,preluActivationWeights:l}=t,{strides:u,pad:h,dataFormat:f,dilations:p,dimRoundingMode:m,activation:y,leakyreluAlpha:b}=s,v=_r(f),w=vn(a.shape,r.shape,u,p,h,m,!1,v);let S;const T=[],$=i!=null,C=l!=null,I=y==="leakyrelu",R=()=>{const B=[a,r],L=(z,A)=>{if(A==="NCHW"&&z.shape.length===1&&z.shape[0]!==1){const G=St({inputs:{x:z},backend:e,attrs:{shape:[z.shape[0],1,1]}});return T.push(G),G}return z};if($&&B.push(L(i,f)),C&&B.push(L(l,f)),I){const z=e.makeTensorInfo([],"float32",Dr(b,"float32"));B.push(z),T.push(z)}return B};if(w.filterHeight===1&&w.filterWidth===1&&w.dilationHeight===1&&w.dilationWidth===1&&w.strideHeight===1&&w.strideWidth===1&&(w.padInfo.type==="SAME"||w.padInfo.type==="VALID"))S=u_({x:a,filter:r,convInfo:w,backend:e,bias:i,activation:y,preluActivationWeights:l,leakyreluAlpha:b});else if(w.strideWidth<=2&&v==="channelsLast"&&rt().getBool("WEBGL_EXP_CONV")){const B=y?Hh(y,!0):null,L=new l_(w,$,B,C,I),z=[[w.padInfo.top,w.padInfo.left],[w.strideHeight,w.strideWidth],[w.dilationHeight,w.dilationWidth],[w.inHeight,w.inWidth]],A=R();S=e.runWebGLProgram(L,A,"float32",z)}else if(rt().getBool("WEBGL_CONV_IM2COL"))S=c_({x:a,filter:r,convInfo:w,backend:e,bias:i,activation:y,preluActivationWeights:l,leakyreluAlpha:b});else{const B=y?Hh(y,!1):null,L=new o_(w,$,B,C,I),z=R();S=e.runWebGLProgram(L,z,"float32")}const F=St({inputs:{x:S},backend:e,attrs:{shape:w.outShape}});return T.push(S),T.forEach(B=>e.disposeIntermediateTensorInfo(B)),F}const _st={kernelName:Ah,backendName:"webgl",kernelFunc:Ost};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fst(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,filter:r,bias:i,preluActivationWeights:l}=t,{strides:u,pad:h,dilations:f,dimRoundingMode:p,activation:m,leakyreluAlpha:y}=s,b=[];let v=f;v==null&&(v=[1,1]),D(Rn(u,v),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${v}'`);const w=vn(a.shape,r.shape,u,v,h,p,!0),S=rt().getBool("WEBGL_PACK_DEPTHWISECONV")&&w.strideWidth<=2&&w.outChannels/w.inChannels===1,T=m?Hh(m,S):null,$=[a,r],C=i!=null,I=l!=null,R=m==="leakyrelu";if(C&&$.push(i),I&&$.push(l),R){const z=e.makeTensorInfo([],"float32",Dr(y,"float32"));$.push(z),b.push(z)}let F;S?F=new f_(w,C,T,I,R):F=new d_(w,C,T,I,R);const B=[[w.padInfo.top,w.padInfo.left],[w.strideHeight,w.strideWidth],[w.dilationHeight,w.dilationWidth],[w.inHeight,w.inWidth]],L=e.runWebGLProgram(F,$,"float32",B);return b.forEach(z=>e.disposeIntermediateTensorInfo(z)),L}const Lst={kernelName:Rh,backendName:"webgl",kernelFunc:Fst};class zst{constructor(t,e,s,a){this.sliceDim=t,this.strides=e,this.paramsShape=a,this.variableNames=["x","indices"],this.outputShape=s;const r=ve(s.length);let i=`
    int index;`;for(let l=0;l<this.sliceDim;l++)i+=`
          index = round(getIndices(coords[0], ${l}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[l]};
          flattenIndex += index * ${this.strides[l]};`;this.userCode=`
         void main() {
          ${r} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${i}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mst(n){const{inputs:t,backend:e}=n,{params:s,indices:a}=t,r=a.shape,i=r[r.length-1],l=ht(s.shape),[u,h,f,p]=Gy(s,a),m=St({inputs:{x:a},backend:e,attrs:{shape:[h,i]}}),y=St({inputs:{x:s},backend:e,attrs:{shape:[ht(s.shape)/f,f]}});if(e.shouldExecuteOnCPU([s,a])||s.dtype==="string"){const S=e.readSync(a.dataId),T=e.bufferSync(s),$=VQ(S,T,s.dtype,h,i,f,p,s.shape,l);return e.makeTensorInfo(u,s.dtype,$.values)}const b=new zst(i,p,[h,f],s.shape),v=e.runWebGLProgram(b,[y,m],y.dtype),w=St({inputs:{x:v},backend:e,attrs:{shape:u}});return e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(v),w}const Bst={kernelName:Sg,backendName:"webgl",kernelFunc:Mst};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vst{constructor(t,e){this.variableNames=["A","indices"],this.outputShape=e,this.rank=e.length;const s=ve(this.rank),a=Pst(t);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${t[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${a}));
      }
    `}}function Pst(n,t){const e=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let a=0;a<n.length;a++)a===2?s.push("index"):s.push(`${e[a]}`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function g_(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,indices:r}=t,{axis:i,batchDims:l}=s,u=Xt(i,a.shape)[0];if(rt().get("DEBUG")){const T=e.readSync(r.dataId),$=a.shape[u];for(let C=0;C<T.length;++C){const I=T[C];D(I<=$-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${$-1}]`)}}const h=jw(a,r,u,l),f=ht(r.shape),p=[],m=St({inputs:{x:a},backend:e,attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]}}),y=St({inputs:{x:r},backend:e,attrs:{shape:[h.batchSize,f/h.batchSize]}});p.push(m),p.push(y);const b=[h.batchSize,h.outerSize,f/h.batchSize,h.sliceSize];if(e.shouldExecuteOnCPU([a,r])||a.dtype==="string"){const T=e.bufferSync(y),$=e.bufferSync(m),C=PQ($,T,b);return p.forEach(I=>e.disposeIntermediateTensorInfo(I)),e.makeTensorInfo(h.outputShape,C.dtype,C.values)}const v=new Vst(m.shape,b),w=e.runWebGLProgram(v,[m,y],m.dtype);p.push(w);const S=St({inputs:{x:w},backend:e,attrs:{shape:h.outputShape}});return p.forEach(T=>e.disposeIntermediateTensorInfo(T)),S}const Ust={kernelName:pd,backendName:"webgl",kernelFunc:g_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gst="return float(a > b);",Wst=`
  return vec4(greaterThan(a, b));
`,Hst=_n({opSnippet:Gst,packedOpSnippet:Wst,cpuKernelImpl:UQ,dtype:"bool"}),jst={kernelName:md,backendName:"webgl",kernelFunc:Hst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qst="return float(a >= b);",Xst=`
  return vec4(greaterThanEqual(a, b));
`,Kst=_n({opSnippet:qst,packedOpSnippet:Xst,dtype:"bool",cpuKernelImpl:GQ}),Yst={kernelName:Tu,backendName:"webgl",kernelFunc:Kst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zst(n){const{inputs:t,backend:e}=n,{input:s}=t;return m_(s,!0,e)}const Qst={kernelName:Ng,backendName:"webgl",kernelFunc:Zst};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jst="return float(!isnan(x) && !isinf(x));",tat=re({opSnippet:Jst,dtype:"bool"}),eat={kernelName:$u,backendName:"webgl",kernelFunc:tat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nat="return float(isinf(x));",sat=re({opSnippet:nat,dtype:"bool"}),aat={kernelName:ku,backendName:"webgl",kernelFunc:sat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rat="return float(isnan(x));",iat=re({opSnippet:rat,dtype:"bool"}),oat={kernelName:Iu,backendName:"webgl",kernelFunc:iat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lat="return float(a < b);",uat=`
  return vec4(lessThan(a, b));
`,cat=_n({opSnippet:lat,packedOpSnippet:uat,cpuKernelImpl:WQ,dtype:"bool"}),hat={kernelName:yd,backendName:"webgl",kernelFunc:cat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dat="return float(a <= b);",fat=`
  return vec4(lessThanEqual(a, b));
`,pat=_n({opSnippet:dat,packedOpSnippet:fat,cpuKernelImpl:HQ,dtype:"bool"}),mat={kernelName:bd,backendName:"webgl",kernelFunc:pat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gat(n){const{backend:t,attrs:e}=n,{start:s,stop:a,num:r}=e,i=jQ(s,a,r);return t.makeTensorInfo([i.length],"float32",i)}const yat={kernelName:Cg,backendName:"webgl",kernelFunc:gat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bat=pc+`
  return x < 0.0 ? 0./0. : log(x);
`,xat=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,vat=re({opSnippet:bat,packedOpSnippet:xat,cpuKernelImpl:qQ}),wat={kernelName:Eu,backendName:"webgl",kernelFunc:vat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sat=pc+`
  return log(1.0 + x);
`,Nat=re({opSnippet:Sat}),Tat={kernelName:Au,backendName:"webgl",kernelFunc:Nat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cat="return float(a >= 1.0 && b >= 1.0);",$at=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,kat=_n({opSnippet:Cat,packedOpSnippet:$at,dtype:"bool"}),Iat={kernelName:xd,backendName:"webgl",kernelFunc:kat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eat="return float(!(x >= 1.0));",Aat=re({opSnippet:Eat}),Rat={kernelName:vd,backendName:"webgl",kernelFunc:Aat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dat="return float(a >= 1.0 || b >= 1.0);",Oat=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,_at=_n({opSnippet:Dat,packedOpSnippet:Oat,dtype:"bool"}),Fat={kernelName:wd,backendName:"webgl",kernelFunc:_at};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lat{constructor(t,e,s,a,r){this.variableNames=["x"],this.outputShape=[];const i=e,l=t[3]-1;this.outputShape=t;let u;const h=`float(${s}) + float(${a}) * sum`;r===.5?u=`inversesqrt(${h})`:r===1?u=`1.0/(${h})`:u=`exp(log(${h}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${i}; j <= ${i}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${l}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${u};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zat{constructor(t,e,s,a,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const i=e,l=t[3]-1;this.outputShape=t;let u;const h=`float(${s}) + float(${a}) * sum`;r===.5?u=`inversesqrt(${h})`:r===1?u=`1.0/(${h})`:u=`exp(log(${h}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${i};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${i}; j <= ${i}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${l}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${u};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mat=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{depthRadius:r,bias:i,alpha:l,beta:u}=s,h=rt().getBool("WEBGL_PACK_NORMALIZATION")?new zat(a.shape,r,i,l,u):new Lat(a.shape,r,i,l,u);return e.runWebGLProgram(h,[a],a.dtype)},Bat={kernelName:Sd,backendName:"webgl",kernelFunc:Mat};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vat{constructor(t,e,s,a,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=s,this.alpha=a,this.beta=r,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${e})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${e} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${a}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${a})
                * float(${r})
                * getInputImage(b, r, c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${r});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pat=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:a,y:r,dy:i}=t,{depthRadius:l,bias:u,alpha:h,beta:f}=s,p=new Vat(a.shape,l,u,h,f);return e.runWebGLProgram(p,[a,r,i],a.dtype)},Uat={kernelName:$g,backendName:"webgl",kernelFunc:Pat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gat(n,t,e,s){const a=ht(t),i=ht(n.shape)/a,l=St({inputs:{x:n},attrs:{shape:[i,a]},backend:s}),u=Ko(l,n.dtype,"max",s),h=St({inputs:{x:u},attrs:{shape:e},backend:s});return s.disposeIntermediateTensorInfo(l),s.disposeIntermediateTensorInfo(u),h}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y_(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{reductionIndices:r,keepDims:i}=s,l=a.shape.length,u=Xt(r,a.shape);let h=u;const f=Be(h,l),p=f!=null,m=e.shouldExecuteOnCPU([a]);let y=a;if(p){if(m){const $=e.texData.get(y.dataId).values,C=new Array(l);for(let F=0;F<C.length;F++)C[F]=a.shape[f[F]];const I=RS($,a.shape,a.dtype,f,C);y=e.makeTensorInfo(C,a.dtype);const R=e.texData.get(y.dataId);R.values=I}else y=lb(a,f,e);h=qe(h.length,l)}Dn("max",h,l);const[b,v]=wn(y.shape,h);let w=b;i&&(w=je(b,u));let S;if(m){const $=e.texData.get(y.dataId).values,C=XQ($,ht(v),w,a.dtype);S=e.makeTensorInfo(w,a.dtype);const I=e.texData.get(S.dataId);I.values=C}else S=Gat(y,v,w,e);return p&&e.disposeIntermediateTensorInfo(y),S}const Wat={kernelName:Nd,backendName:"webgl",kernelFunc:y_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hat=DS+`
  return max(a, b);
`,jat=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Xo+`
  return result;
`,qat=_n({opSnippet:Hat,packedOpSnippet:jat,cpuKernelImpl:KQ}),Xat={kernelName:Ru,backendName:"webgl",kernelFunc:qat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kat(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t;Rf(a,"maxPool");const{filterSize:r,strides:i,pad:l,dimRoundingMode:u}=s,h=1;D(Rn(i,h),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`);const f=ua(a.shape,r,i,h,l,u);if(f.filterWidth===1&&f.filterHeight===1&&Zt(f.inShape,f.outShape))return Cs({inputs:{x:a},backend:e});const p=new jh(f,"max",!1);return e.runWebGLProgram(p,[a],a.dtype)}const Yat={kernelName:Td,backendName:"webgl",kernelFunc:Kat};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zat(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{filterSize:r,strides:i,pad:l,dataFormat:u,dimRoundingMode:h}=s,f=[1,1,1],p=Or(a.shape,r,i,f,l,h,u),m=new _S(p,"max",!1);return e.runWebGLProgram(m,[a],a.dtype)}const Qat={kernelName:Cd,backendName:"webgl",kernelFunc:Zat};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jat{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,s=t.strideWidth,a=t.dilationHeight,r=t.effectiveFilterHeight,i=t.effectiveFilterWidth,l=r-1-t.padInfo.top,u=i-1-t.padInfo.left,h=r*i-1;this.userCode=`
      const ivec2 pads = ivec2(${l}, ${u});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${r};
          wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${e}.0;

          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${i}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${h} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${i} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class trt{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,s=t.strideHeight,a=t.strideWidth,r=t.dilationDepth,i=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,h=t.effectiveFilterHeight,f=t.effectiveFilterWidth,p=u-1-t.padInfo.front,m=h-1-t.padInfo.top,y=f-1-t.padInfo.left,b=u*h*f-1;this.userCode=`
      const ivec3 pads = ivec3(${p}, ${m}, ${y});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${u};
           wD += ${r}) {
          float dyD = float(dyDCorner + wD) / ${e}.0;

          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${h};
              wR += ${i}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${f};
                wC += ${l}) {
              float dyC = float(dyCCorner + wC) / ${a}.0;

              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${b} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${h} * ${f} +
                  wR * ${f} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ert(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,input:r}=t,i=r,{filterSize:l,strides:u,pad:h,dimRoundingMode:f}=s,p=[1,1,1],m=Or(i.shape,l,u,p,h,f),y=new _S(m,"max",!0),b=e.runWebGLProgram(y,[i],i.dtype),v=new trt(m),w=e.runWebGLProgram(v,[a,b],i.dtype);return e.disposeIntermediateTensorInfo(b),w}const nrt={kernelName:Ig,backendName:"webgl",kernelFunc:ert};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function srt(n){const{inputs:t,backend:e,attrs:s}=n,{dy:a,input:r,output:i}=t,l=r;Rf([r,i],"maxPoolGrad");const{filterSize:u,strides:h,pad:f,dimRoundingMode:p}=s,m=ua(l.shape,u,h,1,f,p),y=!0,b=new jh(m,"max",y),v=e.runWebGLProgram(b,[l],l.dtype),w=new Jat(m),S=e.runWebGLProgram(w,[a,v],l.dtype);return e.disposeIntermediateTensorInfo(v),S}const art={kernelName:kg,backendName:"webgl",kernelFunc:srt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rrt(n,t,e,s){let a=new jh(e,"max",!1);const r=s.runWebGLProgram(a,[n],"float32");a=new jh(e,"max",!0,!0,t);const i=s.runWebGLProgram(a,[n],"float32");return[r,i]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const irt={kernelName:Eg,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{filterSize:a,strides:r,pad:i,includeBatchInIndex:l}=t,u=e;D(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const h=[1,1];D(Rn(r,h),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${h}'`);const f=ua(s.shape,a,r,h,i),[p,m]=rrt(s,l,f,u);return[p,m]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ort(n,t,e,s){const a=ht(t),i=ht(n.shape)/a,l=St({inputs:{x:n},attrs:{shape:[i,a]},backend:s}),u=Ko(l,"float32","mean",s),h=St({inputs:{x:u},attrs:{shape:e},backend:s});return s.disposeIntermediateTensorInfo(l),s.disposeIntermediateTensorInfo(u),h}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lrt={kernelName:$d,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{x:s}=n,{keepDims:a,axis:r}=t,i=e,l=s.shape.length,u=Xt(r,s.shape);let h=u;const f=Be(h,l),p=f!=null,m=i.shouldExecuteOnCPU([s]),y=[];let b=s;if(p){if(m){const C=i.texData.get(b.dataId).values,I=new Array(l);for(let B=0;B<I.length;B++)I[B]=s.shape[f[B]];const R=RS(C,s.shape,s.dtype,f,I);b=i.makeTensorInfo(I,s.dtype);const F=i.texData.get(b.dataId);F.values=R}else b=lb(s,f,i);y.push(b),h=qe(h.length,l)}Dn("sum",h,l);const[v,w]=wn(b.shape,h);let S=v;a&&(S=je(v,u));const T=ort(b,w,S,i);for(const $ of y)i.disposeIntermediateTensorInfo($);return T}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function urt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s,l=a.shape.length,u=Xt(r,a.shape);let h=u;const f=Be(h,l);let p=a;f!=null&&(p=Zn({inputs:{x:a},backend:e,attrs:{perm:f}}),h=qe(h.length,a.shape.length)),Dn("min",h,l);const[m,y]=wn(p.shape,h),b=ht(y),v=St({inputs:{x:p},backend:e,attrs:{shape:[-1,b]}}),w=Ko(v,v.dtype,"min",e);let S;if(i){const T=je(m,u);S=St({inputs:{x:w},backend:e,attrs:{shape:T}})}else S=St({inputs:{x:w},backend:e,attrs:{shape:m}});return e.disposeIntermediateTensorInfo(v),e.disposeIntermediateTensorInfo(w),f!=null&&e.disposeIntermediateTensorInfo(p),S}const crt={kernelName:kd,backendName:"webgl",kernelFunc:urt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hrt=DS+`
  return min(a, b);
`,drt=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+Xo+`
  return result;
`,frt=_n({opSnippet:hrt,packedOpSnippet:drt,cpuKernelImpl:YQ}),prt={kernelName:Du,backendName:"webgl",kernelFunc:frt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mrt{constructor(t,e,s){this.variableNames=["x"],this.outputShape=e.map((f,p)=>f[0]+t[p]+f[1]);const a=t.length,r=ve(a),i=e.map(f=>f[0]).join(","),l=e.map((f,p)=>f[0]+t[p]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),h=s==="reflect"?0:1;if(a===1){this.userCode=`
        int start = ${i};
        int end = ${l};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${h};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${h};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${i});
      ${r} end = ${r}(${l});

      void main() {
        ${r} outC = getOutputCoords();
        for (int i = 0; i < ${a}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${h};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${h};
          }
        }
        ${r} coords = outC - start;
        setOutput(getX(${u}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class grt{constructor(t,e,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map((b,v)=>b[0]+t[v]+b[1]);const a=t.length,r=ve(a),i=e.map(b=>b[0]).join(","),l=e.map((b,v)=>b[0]+t[v]).join(","),u=Yn("rc",a),h=Yn("source",a),f=`${u[a-1]} < ${this.outputShape[a-1]}`,p=a===1?"source":`vec2(${h.slice(-2).join()})`,m=s==="reflect"?0:1;let y="";if(a===1){const b=`
        ${r} source = rc;
        if (source < start) {
          source = start * 2 - source - ${m};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${m};
        }
        source -= start;
      `;y=`
        ${r} rc = outputLoc;
        ${b}
        result[0] = getChannel(getX(${h.join()}), ${p});
        ${u[a-1]} += 1;
        if(${f}) {
          ${b}
          result[1] = getChannel(getX(${h.join()}), ${p});
        }
      `}else{const b=`
        ${r} source = rc;
        ${r} lt = ${r}(lessThan(source, start));
        ${r} gte = ${r}(greaterThanEqual(source, end));
        ${r} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${m}) +
                gte * ((end - 1) * 2 - source + ${m});
        source -= start;
      `;y=`
        ${r} rc = outputLoc;
        ${b}
        result[0] = getChannel(getX(${h.join()}), ${p});
        ${u[a-1]} += 1;
        if(${f}) {
          ${b}
          result[1] = getChannel(getX(${h.join()}), ${p});
        }
        rc = outputLoc;
        ${u[a-2]} += 1;
        if(${u[a-2]} < ${this.outputShape[a-2]}) {
          ${b}
          result[2] = getChannel(getX(${h.join()}), ${p});
          ${u[a-1]} += 1;
          if(${f}) {
            ${b}
            result[3] = getChannel(getX(${h.join()}), ${p});
          }
        }
      `}this.userCode=`
      const ${r} start = ${r}(${i});
      const ${r} end = ${r}(${l});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${y}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yrt=({inputs:n,backend:t,attrs:e})=>{const{x:s}=n,{paddings:a,mode:r}=e,i=rt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new grt(s.shape,a,r):new mrt(s.shape,a,r);return t.runWebGLProgram(i,[s],s.dtype)},brt={kernelName:Id,backendName:"webgl",kernelFunc:yrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xrt=`if (b == 0.0) return NAN;
  return mod(a, b);`,vrt=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+Xo+`
  return result;
`,wrt=_n({opSnippet:xrt,packedOpSnippet:vrt}),Srt={kernelName:Ou,backendName:"webgl",kernelFunc:wrt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nrt{constructor(t,e,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[t,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${e-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${e-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Trt=`
if (a == b) {
  return 1.0;
};
return a / b;`,Crt=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,b_=_n({opSnippet:Trt,packedOpSnippet:Crt,checkOutOfBounds:!0}),$rt={kernelName:yu,backendName:"webgl",kernelFunc:b_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wk="return a - b;",x_=_n({opSnippet:wk,packedOpSnippet:wk,supportsComplex:!0,cpuKernelImpl:yJ}),krt={kernelName:Ku,backendName:"webgl",kernelFunc:x_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v_(n){const{inputs:t,backend:e,attrs:s}=n,{logits:a}=t,{dim:r}=s,i=Xt([r],a.shape),l=y_({inputs:{x:a},backend:e,attrs:{reductionIndices:i,keepDims:!1}}),u=je(l.shape,i),h=St({inputs:{x:l},backend:e,attrs:{shape:u}}),f=x_({inputs:{a,b:h},backend:e}),p=p_({inputs:{x:f},backend:e}),m=ub({inputs:{x:p},backend:e,attrs:{axis:i,keepDims:!1}}),y=St({inputs:{x:m},backend:e,attrs:{shape:u}}),b=b_({inputs:{a:p,b:y},backend:e});return e.disposeIntermediateTensorInfo(l),e.disposeIntermediateTensorInfo(h),e.disposeIntermediateTensorInfo(f),e.disposeIntermediateTensorInfo(p),e.disposeIntermediateTensorInfo(m),e.disposeIntermediateTensorInfo(y),b}const Irt={kernelName:jd,backendName:"webgl",kernelFunc:v_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ert(n){const{inputs:t,backend:e,attrs:s}=n,{logits:a}=t,{numSamples:r,seed:i,normalized:l}=s,u=l?a:v_({inputs:{logits:a},backend:e,attrs:{dim:a.shape.length-1}}),h=u.shape[0],f=u.shape[1],p=new Nrt(h,f,r),m=[[i]],y=e.runWebGLProgram(p,[u],"int32",m);return l||e.disposeIntermediateTensorInfo(u),y}const Art={kernelName:Ag,backendName:"webgl",kernelFunc:Ert};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rrt=ha+`
  return -x;
`,Drt=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function Ort(n){const{inputs:t,backend:e}=n,{x:s}=t;if(e.shouldExecuteOnCPU([s])){const r=e.texData.get(s.dataId),[i,l]=QQ(r.values,s.shape,s.dtype);return e.makeTensorInfo(l,s.dtype,i)}let a;return rt().getBool("WEBGL_PACK_UNARY_OPERATIONS")?a=new fi(s.shape,Drt):a=new Ga(s.shape,Rrt),e.runWebGLProgram(a,[s],s.dtype)}const _rt={kernelName:Ed,backendName:"webgl",kernelFunc:Ort};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Frt=By;function Lrt(n){Ls("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:a,scores:r}=t,{maxOutputSize:i,iouThreshold:l,scoreThreshold:u}=s,h=e.readSync(a.dataId),f=e.readSync(r.dataId),{selectedIndices:p}=Frt(h,f,i,l,u);return e.makeTensorInfo([p.length],"int32",new Int32Array(p))}const zrt={kernelName:Rg,backendName:"webgl",kernelFunc:Lrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mrt=Vy;function Brt(n){Ls("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:a,scores:r}=t,{maxOutputSize:i,iouThreshold:l,scoreThreshold:u,padToMaxOutputSize:h}=s,f=e.readSync(a.dataId),p=e.readSync(r.dataId),{selectedIndices:m,validOutputs:y}=Mrt(f,p,i,l,u,h);return[e.makeTensorInfo([m.length],"int32",new Int32Array(m)),e.makeTensorInfo([],"int32",new Int32Array([y]))]}const Vrt={kernelName:Dg,backendName:"webgl",kernelFunc:Brt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Prt=Py;function Urt(n){Ls("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:e,attrs:s}=n,{boxes:a,scores:r}=t,{maxOutputSize:i,iouThreshold:l,scoreThreshold:u,softNmsSigma:h}=s,f=e.readSync(a.dataId),p=e.readSync(r.dataId),m=i,y=l,b=u,v=h,{selectedIndices:w,selectedScores:S}=Prt(f,p,m,y,b,v);return[e.makeTensorInfo([w.length],"int32",new Int32Array(w)),e.makeTensorInfo([S.length],"float32",new Float32Array(S))]}const Grt={kernelName:Og,backendName:"webgl",kernelFunc:Urt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wrt{constructor(t,e,s,a){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${a}), float(${s}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hrt=n=>{const{inputs:t,backend:e,attrs:s}=n,{indices:a}=t,{dtype:r,depth:i,onValue:l,offValue:u}=s,h=ht(a.shape),f=new Wrt(h,i,l,u),p=St({inputs:{x:a},backend:e,attrs:{shape:[h]}}),m=e.runWebGLProgram(f,[p],r);e.disposeIntermediateTensorInfo(p);const y=[...a.shape,i],b=St({inputs:{x:m},backend:e,attrs:{shape:y}});return e.disposeIntermediateTensorInfo(m),b},jrt={kernelName:Dd,backendName:"webgl",kernelFunc:Hrt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xm(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="complex64"){const a=Of({inputs:{input:s},backend:e}),r=Xm({inputs:{x:a},backend:e}),i=cb({inputs:{input:s},backend:e}),l=Xm({inputs:{x:i},backend:e}),u=Bi({inputs:{real:r,imag:l},backend:e});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(l),u}else return _f({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:e})}const qrt={kernelName:Yd,backendName:"webgl",kernelFunc:Xm};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w_(n){const{inputs:t,backend:e}=n,{x:s}=t;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const a=Of({inputs:{input:s},backend:e}),r=w_({inputs:{x:a},backend:e}),i=cb({inputs:{input:s},backend:e}),l=Xm({inputs:{x:i},backend:e}),u=Bi({inputs:{real:r,imag:l},backend:e});return e.disposeIntermediateTensorInfo(a),e.disposeIntermediateTensorInfo(r),e.disposeIntermediateTensorInfo(i),e.disposeIntermediateTensorInfo(l),u}else return _f({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:e})}const Xrt={kernelName:Rd,backendName:"webgl",kernelFunc:w_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Krt(n){const{inputs:t,backend:e,attrs:s}=n,{axis:a}=s;if(t.length===1)return G1({inputs:{input:t[0]},backend:e,attrs:{dim:a}});const r=t[0].shape,i=t[0].dtype;t.forEach(f=>{An(r,f.shape,"All tensors passed to stack must have matching shapes"),D(i===f.dtype,()=>"All tensors passed to stack must have matching dtypes")});const l=[],u=t.map(f=>{const p=G1({inputs:{input:f},backend:e,attrs:{dim:a}});return l.push(p),p}),h=i_({inputs:u,backend:e,attrs:{axis:a}});return l.forEach(f=>e.disposeIntermediateTensorInfo(f)),h}const Yrt={kernelName:Od,backendName:"webgl",kernelFunc:Krt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Zrt{constructor(t,e,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((h,f)=>h[0]+t[f]+h[1]);const a=t.length,r=ve(a),i=e.map(h=>h[0]).join(","),l=e.map((h,f)=>h[0]+t[f]).join(","),u=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);if(a===1){this.userCode=`
        int start = ${i};
        int end = ${l};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${i});
      ${r} end = ${r}(${l});

      void main() {
        ${r} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${r} coords = outC - start;
          setOutput(getX(${u}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qrt{constructor(t,e,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=e.map((v,w)=>v[0]+t[w]+v[1]);const a=t.length,r=ve(a),i=e.map(v=>v[0]).join(","),l=e.map((v,w)=>v[0]+t[w]).join(","),u=Yn("rc",a),h=Yn("source",a),f=`${u[a-1]} < ${this.outputShape[a-1]}`,p=a===1?"source":`vec2(${h.slice(-2).join()})`,m=[`${r} rc = outputLoc;`,`${u[a-1]} += 1;
       if(${f}) {
      `,a===1?"":`}
       rc = outputLoc;
       ${u[a-2]} += 1;
       if(${u[a-2]} < ${this.outputShape[a-2]}) {`,a===1?"":`  ${u[a-1]} += 1;
         if(${f}) {`],y=a===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let b="";for(let v=0,w=a===1?2:4;v<w;v++)b+=`
        ${m[v]}
        if (${y}) {
          result[${v}] = float(value);
        } else {
          ${r} source = rc - start;
          result[${v}] = getChannel(getX(${h.join()}), ${p});
        }
      `;b+=a===1?"} ":"}}",this.userCode=`
      const ${r} start = ${r}(${i});
      const ${r} end = ${r}(${l});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${b}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S_=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{paddings:r,constantValue:i}=s;if(ht(a.shape)===0){const h=r.map((f,p)=>f[0]+a.shape[p]+f[1]);return _f({backend:e,attrs:{shape:h,value:i,dtype:a.dtype}})}const l=rt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Qrt(a.shape,r,i):new Zrt(a.shape,r,i),u=[[i]];return e.runWebGLProgram(l,[a],a.dtype,u)},Jrt={kernelName:_d,backendName:"webgl",kernelFunc:S_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tit=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,eit=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+Xo+`
  return result;
`,nit=_n({opSnippet:tit,packedOpSnippet:eit}),sit={kernelName:Fu,backendName:"webgl",kernelFunc:nit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ait(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{axis:r,keepDims:i}=s,l=a.shape.length,u=[],h=Xt(r,a.shape);let f=h;const p=Be(f,l);let m=a;p!=null&&(m=Zn({inputs:{x:a},backend:e,attrs:{perm:p}}),f=qe(f.length,l),u.push(m)),Dn("prod",f,l);let y;if(e.shouldExecuteOnCPU([m])){const b=e.texData.get(m.dataId).values,{outVals:v,outShape:w,outDtype:S}=tJ(m.shape,m.dtype,b,f);y=e.makeTensorInfo(w,S,v)}else{const[b,v]=wn(m.shape,f),w=ht(v),S=St({inputs:{x:m},backend:e,attrs:{shape:[-1,w]}}),T=ry(a.dtype),$=Ko(S,T,"prod",e);y=St({inputs:{x:$},backend:e,attrs:{shape:b}}),u.push(S),u.push($)}if(i){u.push(y);const b=je(y.shape,h);y=St({inputs:{x:y},backend:e,attrs:{shape:b}})}return u.forEach(b=>e.disposeIntermediateTensorInfo(b)),y}const rit={kernelName:Ld,backendName:"webgl",kernelFunc:ait};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iit(n){const{inputs:t,backend:e,attrs:s}=n,{paramsNestedSplits:a,paramsDenseValues:r,indices:i}=t,{outputRaggedRank:l}=s,u=a.map(S=>e.readSync(S.dataId)),h=a.map(S=>S.shape),f=e.readSync(r.dataId),p=e.readSync(i.dataId),[m,y,b]=eJ(u,h,f,r.shape,r.dtype,p,i.shape,l),v=m.map(S=>e.makeTensorInfo([S.length],"int32",S)),w=e.makeTensorInfo(b,r.dtype,y);return v.concat([w])}const oit={kernelName:_g,backendName:"webgl",kernelFunc:iit};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lit(n){const{inputs:t,backend:e}=n,{starts:s,limits:a,deltas:r}=t,i=e.readSync(s.dataId),l=e.readSync(a.dataId),u=e.readSync(r.dataId),[h,f]=nJ(i,s.shape,s.dtype,l,a.shape,u,r.shape),p=e.makeTensorInfo([h.length],"int32",h),m=e.makeTensorInfo([f.length],s.dtype,f);return[p,m]}const uit={kernelName:Fg,backendName:"webgl",kernelFunc:lit};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cit(n){const{inputs:t,backend:e,attrs:s}=n,{shape:a,values:r,defaultValue:i,rowPartitionTensors:l}=t,{rowPartitionTypes:u}=s,h=e.readSync(a.dataId),f=e.readSync(r.dataId),p=e.readSync(i.dataId),m=l.map(w=>e.readSync(w.dataId)),y=l.map(w=>w.shape),[b,v]=sJ(h,a.shape,f,r.shape,r.dtype,p,i.shape,m,y,u);return e.makeTensorInfo(b,r.dtype,v)}const hit={kernelName:Lg,backendName:"webgl",kernelFunc:cit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N_=n=>{const{backend:t,attrs:e}=n,{start:s,stop:a,step:r,dtype:i}=e,l=aJ(s,a,r,i);return t.makeTensorInfo([l.length],i,l)},dit={kernelName:zg,backendName:"webgl",kernelFunc:N_};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fit="return 1.0 / x;",pit=re({opSnippet:fit}),mit={kernelName:Lu,backendName:"webgl",kernelFunc:pit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const git=ha+`
  return (x < 0.0) ? 0.0 : x;
`,yit=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,bit=re({opSnippet:git,packedOpSnippet:yit}),xit={kernelName:zu,backendName:"webgl",kernelFunc:bit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vit=ha+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,wit=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Sit=re({opSnippet:vit,packedOpSnippet:wit}),Nit={kernelName:Mu,backendName:"webgl",kernelFunc:Sit};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tit{constructor(t,e,s,a,r){this.variableNames=["A"],this.outputShape=[];const[i,l,u,h]=t;this.outputShape=[i,e,s,h];const f=[a&&e>1?l-1:l,a&&s>1?u-1:u],p=[a&&e>1?e-1:e,a&&s>1?s-1:s];let m;r?m="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":m="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${f[0]/p[0]},
          ${f[1]/p[1]});
      const vec2 inputShapeRC = vec2(${l}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${m};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cit{constructor(t,e,s,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,l,u,h]=t;this.outputShape=[i,e,s,h];const f=[a&&e>1?l-1:l,a&&s>1?u-1:u],p=[a&&e>1?e-1:e,a&&s>1?s-1:s];let m;r?m="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":m="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${f[0]/p[0]},
          ${f[1]/p[1]},
          ${f[1]/p[1]});
      const vec3 inputShapeRC = vec3(${l}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${m};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${h-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $it(n){const{inputs:t,backend:e,attrs:s}=n,{images:a}=t,{alignCorners:r,halfPixelCenters:i,size:l}=s,[u,h]=l,f=rt().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Cit(a.shape,u,h,r,i):new Tit(a.shape,u,h,r,i);return e.runWebGLProgram(f,[a],"float32")}const kit={kernelName:Bd,backendName:"webgl",kernelFunc:$it};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Iit{constructor(t,e,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,a,r]=e,[,i,l]=t,u=[s&&i>1?a-1:a,s&&l>1?r-1:r],h=[s&&i>1?i-1:i,s&&l>1?l-1:l],f=u[0]/h[0],p=u[1]/h[1],m=1/f,y=1/p,b=Math.ceil(m)*2+2,v=Math.ceil(y)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${f});
        const float widthScale = float(${p});

        const float invHeightScale = float(${m});
        const float invWidthScale = float(${y});

        const int winHeight = int(${b});
        const int winWidth = int(${v});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${l}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${a-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eit(n){const{inputs:t,backend:e,attrs:s}=n,{images:a,dy:r}=t,{alignCorners:i}=s,l=new Iit(r.shape,a.shape,i);return e.runWebGLProgram(l,[r],r.dtype)}const Ait={kernelName:Vg,backendName:"webgl",kernelFunc:Eit};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rit{constructor(t,e,s,a,r){this.variableNames=["A"],this.outputShape=[];const[i,l,u,h]=t;this.outputShape=[i,e,s,h];const f=[a&&e>1?l-1:l,a&&s>1?u-1:u],p=[a&&e>1?e-1:e,a&&s>1?s-1:s],m=a?"0.5":"0.0";let y;r?y="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":y="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${f[0]/p[0]},
          ${f[1]/p[1]});
      const vec2 inputShapeRC = vec2(${l}.0, ${u}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${y};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${m})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dit{constructor(t,e,s,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,l,u,h]=t;this.outputShape=[i,e,s,h];const f=[a&&e>1?l-1:l,a&&s>1?u-1:u],p=[a&&e>1?e-1:e,a&&s>1?s-1:s],m=a?"0.5":"0.0";let y;r?y="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":y="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${f[0]/p[0]},
          ${f[1]/p[1]},
          ${f[1]/p[1]});
      const vec3 inputShapeRC = vec3(${l}.0, ${u}.0,
                                     ${u}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${y};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${m})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${h-1};
        bool hasNextRow = coords.z < ${s-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oit(n){const{inputs:t,backend:e,attrs:s}=n,{images:a}=t,{alignCorners:r,halfPixelCenters:i,size:l}=s,[u,h]=l,f=rt().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Dit(a.shape,u,h,r,i):new Rit(a.shape,u,h,r,i);return e.runWebGLProgram(f,[a],a.dtype)}const _it={kernelName:Md,backendName:"webgl",kernelFunc:Oit};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fit{constructor(t,e,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e;const[,a,r]=e,[,i,l]=t,u=[s&&i>1?a-1:a,s&&l>1?r-1:r],h=[s&&i>1?i-1:i,s&&l>1?l-1:l],f=u[0]/h[0],p=u[1]/h[1],m=1/f,y=1/p,b=Math.ceil(m)*2+2,v=Math.ceil(y)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${f});
        const float widthScale = float(${p});

        const float invHeightScale = float(${m});
        const float invWidthScale = float(${y});

        const int winHeight = int(${b});
        const int winWidth = int(${v});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${i}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${l}) {
              continue;
            }

            float sourceFracRow =
              float(${u[0]}) *
                (float(dyR) / float(${h[0]}));

            float sourceFracCol =
                float(${u[1]}) *
                  (float(dyC) / float(${h[1]}));

            int sourceNearestRow = int(min(
                float(int(${a}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lit(n){const{inputs:t,backend:e,attrs:s}=n,{images:a,dy:r}=t,{alignCorners:i}=s,l=new Fit(r.shape,a.shape,i);return e.runWebGLProgram(l,[r],r.dtype)}const zit={kernelName:Bg,backendName:"webgl",kernelFunc:Lit};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mit{constructor(t,e){this.variableNames=["x"];const s=t.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=t,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${t[0]} - coord - 1));
        }
      `;return}const a=l=>e.indexOf(l)!==-1&&t[l]!==1?`${t[l]} - coords[${l}] - 1`:`coords[${l}]`,r=t.map((l,u)=>a(u)).join(","),i=ve(s);this.userCode=`
      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bit{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=t.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=t;const a=Yn("rc",s),r=`${a[s-1]} + 1 < ${this.outputShape[s-1]}`,i=`${a[s-2]} + 1 < ${this.outputShape[s-2]}`,l=ve(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${t[0]} - rc - 1),
            ${t[0]} - rc - 1);
          if(${r}){
              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),
                ${t[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${l} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${u(a.slice())};
          if(${r}){
            result.g = ${h(a.slice())};
          }
          if(${i}) {
            result.b = ${f(a.slice())};
            if(${r}) {
              result.a = ${p(a.slice())};
            }
          }
          setOutput(result);
        }
    `;function u(b){return m(b)}function h(b){return b[s-1]="("+b[s-1]+" + 1)",m(b)}function f(b){return b[s-2]="("+b[s-2]+" + 1)",m(b)}function p(b){return b[s-1]="("+b[s-1]+" + 1)",b[s-2]="("+b[s-2]+" + 1)",m(b)}function m(b){const v=t.map((T,$)=>y($,b)),w=v.join(","),S=v.slice(-2).join(",");return`getChannel(getX(${w}), vec2(${S}))`}function y(b,v){return e.indexOf(b)!==-1&&t[b]!==1?`${t[b]} - ${v[b]} - 1`:`${v[b]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vit(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{dims:r}=s,i=a.shape.length,l=Xt(r,a.shape);if(i===0)return Cs({inputs:{x:a},backend:e});const u=rt().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Bit(a.shape,l):new Mit(a.shape,l);return e.runWebGLProgram(u,[a],a.dtype)}const Pit={kernelName:Vd,backendName:"webgl",kernelFunc:Vit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Uit{constructor(t,e){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=t[1],a=t[2];this.outputShape=t;let r="";typeof e=="number"?r=`float outputValue = ${e.toFixed(2)};`:r=`
        vec3 fill = vec3(${e.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${r}
          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Git={kernelName:sy,backendName:"webgl",kernelFunc:({inputs:n,attrs:t,backend:e})=>{const{image:s}=n,{radians:a,fillValue:r,center:i}=t,l=e,u=new Uit(s.shape,r),[h,f]=Aw(i,s.shape[1],s.shape[2]),p=[[h,f,Math.sin(a),Math.cos(a)]];return l.runWebGLProgram(u,[s],s.dtype,p)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wit=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,Hit=re({opSnippet:Wit}),jit={kernelName:Bu,backendName:"webgl",kernelFunc:Hit};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qit="return inversesqrt(x);",Xit=re({opSnippet:qit,cpuKernelImpl:rJ}),Kit={kernelName:Vu,backendName:"webgl",kernelFunc:Xit};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FS{constructor(t,e,s,a,r,i,l=!0,u=!1){this.variableNames=["updates","indices","defaultValue"],this.outputShape=i;const h=ve(r.length),f=ve(i.length);let p="";s===1?p="i":s===2&&(p="i, j");const m=`getIndices(${p})`;let y="";a===1?y="i":a===2&&(y="i, coords[1]");const b=`getUpdates(${y})`;let v="";u&&(v="coords[0], coords[1]");const w=`getDefaultValue(${v})`,S=e>1?"strides[j]":"strides";this.userCode=`
        ${h} strides = ${h}(${r});

        void main() {
          ${f} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${t}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${e}; j++) {
              int index = round(${m});
              flattenedIndex += index * ${S};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${b};
              found = true;
            }
          }
          setOutput(mix(${w}, sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yit{constructor(t,e,s,a,r,i,l=!0,u=!1){this.variableNames=["updates","indices","defaultValue"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=i;const h=ve(r.length),f=ve(i.length);let p="";s===1?p="i":s===2&&(p="i, j");const m=`getIndices(${p})`;let y="";a===1?y="i":a===2&&(y="i, coords[1]");const b=`getUpdates(${y})`;let v="";u&&(v="coords[0], coords[1]");const w=`getDefaultValue(${v})`,S=e>1?"strides[j]":"strides",T=e>1?"strides[j + 1]":"strides";this.userCode=`
        ${h} strides = ${h}(${r});

        void main() {
          ${f} coords = getOutputCoords();
          vec4 sum = vec4(0.);
          vec4 found = vec4(0.);
          for (int i = 0; i < ${t}; i+=2) {
            ivec2 flattenedIndex = ivec2(0);
            for (int j = 0; j < ${e}; j+=2) {
              ivec4 index = round(${m});
              flattenedIndex += index.xz * ${S};
              if (j + 1 < ${e}) {
                flattenedIndex += index.yw * ${T};
              }
            }
            if (flattenedIndex[0] == coords[0] || flattenedIndex[1] == coords[0] ||
                flattenedIndex[0] == coords[0] + 1 || flattenedIndex[1] == coords[0] + 1) {
              vec4 updVals = ${b};
              if (flattenedIndex[0] == coords[0]) {
                sum.xy += updVals.xy;
                found.xy = vec2(1.);
              } else if (flattenedIndex[0] == coords[0] + 1) {
                sum.zw += updVals.xy;
                found.zw = vec2(1.);
              }
              if (flattenedIndex[1] == coords[0]) {
                sum.xy += updVals.zw;
                found.xy = vec2(1.);
              } else if (flattenedIndex[1] == coords[0] + 1) {
                sum.zw += updVals.zw;
                found.zw = vec2(1.);
              }
            }
          }
          setOutput(mix(${w}, sum, found));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zit(n){const{inputs:t,backend:e,attrs:s}=n,{indices:a,updates:r}=t,{shape:i}=s,{sliceRank:l,numUpdates:u,sliceSize:h,strides:f,outputSize:p}=Li(r,a,i),m=[p/h,h];if(p===0)return e.makeTensorInfo(i,a.dtype);const y=St({inputs:{x:a},backend:e,attrs:{shape:[u,l]}}),b=St({inputs:{x:r},backend:e,attrs:{shape:[u,h]}}),v=e.makeTensorInfo([],"float32",new Float32Array([0]));let w;rt().getBool("WEBGL_PACK")?w=new Yit(u,l,y.shape.length,b.shape.length,f,m):w=new FS(u,l,y.shape.length,b.shape.length,f,m);const S=e.runWebGLProgram(w,[b,y,v],b.dtype),T=St({inputs:{x:S},backend:e,attrs:{shape:i}});return e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(S),e.disposeIntermediateTensorInfo(v),T}const Qit={kernelName:Pg,backendName:"webgl",kernelFunc:Zit};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Jit{constructor(t,e,s,a){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[t,s];const r="while (left < right) {",i=`for (int i = 0; i < ${Math.ceil(Math.log2(e+1))}; ++i) { if (left >= right) break;`,l=rt().getNumber("WEBGL_VERSION")===2?r:i,u=a==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${l}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${u} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tot(n){const{inputs:t,backend:e,attrs:s}=n,{sortedSequence:a,values:r}=t,{side:i}=s,l=new Jit(a.shape[0],a.shape[1],r.shape[1],i),u=[[a.shape[1]]];return e.runWebGLProgram(l,[a,r],"int32",u)}const eot={kernelName:Gg,backendName:"webgl",kernelFunc:tot};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class not{constructor(t,e,s){this.variableNames=["c","a","b"],this.outputShape=e;let a,r;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)r="resRC",a="resRC";else{const l=["resRC.x","resRC.y","resRC.z","resRC.w"],u=[],h=[];for(let f=0;f<e.length;f++)h.push(`${l[f]}`),f<t&&u.push(`${l[f]}`);a=u.join(),r=h.join()}const i=ve(s);this.userCode=`
      void main() {
        ${i} resRC = getOutputCoords();
        float cVal = getC(${a});
        if (cVal >= 1.0) {
          setOutput(getA(${r}));
        } else {
          setOutput(getB(${r}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sot(n){const{inputs:t,backend:e}=n,{condition:s,t:a,e:r}=t,i=new not(s.shape.length,a.shape,a.shape.length);return e.runWebGLProgram(i,[s,a,r],rs(a.dtype,r.dtype))}const aot={kernelName:Pd,backendName:"webgl",kernelFunc:sot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rot=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${jy};
  float scale = ${qy};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,iot=re({opSnippet:rot}),oot={kernelName:Pu,backendName:"webgl",kernelFunc:iot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lot=pc+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,uot=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,cot=re({opSnippet:lot,packedOpSnippet:uot,cpuKernelImpl:oJ}),hot={kernelName:Hu,backendName:"webgl",kernelFunc:cot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dot=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,fot=re({opSnippet:dot}),pot={kernelName:Wu,backendName:"webgl",kernelFunc:fot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mot=pc+`
  return sin(x);
`,got=`
  vec4 result = sin(x);
  bvec4 isNaN = isnan(x);
  ${Xo}
  return result;
`,yot=re({opSnippet:mot,packedOpSnippet:got}),bot={kernelName:Uu,backendName:"webgl",kernelFunc:yot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xot=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,vot=re({opSnippet:xot}),wot={kernelName:Gu,backendName:"webgl",kernelFunc:vot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sot=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,Not=re({opSnippet:Sot}),Tot={kernelName:ju,backendName:"webgl",kernelFunc:Not};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cot=n=>{const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{blockShape:r,paddings:i}=s;D(a.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const l=r.reduce((S,T)=>S*T),u=[[0,0]];u.push(...i);for(let S=1+r.length;S<a.shape.length;++S)u.push([0,0]);const h=[],f=S_({inputs:{x:a},backend:e,attrs:{paddings:u,constantValue:0}}),p=bf(f.shape,r,l,!1),m=xf(p.length,r.length,!1),y=vf(f.shape,r,l,!1),b=St({inputs:{x:f},backend:e,attrs:{shape:p}}),v=Zn({inputs:{x:b},backend:e,attrs:{perm:m}}),w=St({inputs:{x:v},backend:e,attrs:{shape:y}});return h.push(f),h.push(b),h.push(v),h.forEach(S=>e.disposeIntermediateTensorInfo(S)),w},$ot={kernelName:Wd,backendName:"webgl",kernelFunc:Cot};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kot(n){const{inputs:t,backend:e}=n,{indices:s,values:a,denseShape:r,defaultValue:i}=t;if(r.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${r.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(a.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${a.shape}`);if(i.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${i.shape}`);const l=e.readSync(s.dataId),u=e.readSync(a.dataId),h=e.readSync(r.dataId),f=e.readSync(i.dataId)[0],[p,m,y,b,v]=uJ(l,s.shape,s.dtype,u,a.dtype,h,f);return[e.makeTensorInfo(m,s.dtype,p),e.makeTensorInfo([m[0]],a.dtype,y),e.makeTensorInfo([b.length],"bool",new Uint8Array(b.map(w=>Number(w)))),e.makeTensorInfo([v.length],s.dtype,new Int32Array(v))]}const Iot={kernelName:Wg,backendName:"webgl",kernelFunc:kot};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Eot(n){const{inputs:t,backend:e}=n,{inputIndices:s,inputShape:a,newShape:r}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(a.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(r.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const i=Array.from(e.readSync(a.dataId)),l=e.readSync(s.dataId),u=Array.from(e.readSync(r.dataId)),[h,f,p]=cJ(l,s.shape,s.dtype,i,u);return[e.makeTensorInfo(f,s.dtype,h),e.makeTensorInfo([p.length],r.dtype,new Int32Array(p))]}const Aot={kernelName:Hg,backendName:"webgl",kernelFunc:Eot};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rot(n){const{inputs:t,backend:e}=n,{data:s,indices:a,segmentIds:r}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${a.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${r.shape}`);const i=e.readSync(s.dataId),l=e.readSync(a.dataId),u=e.readSync(r.dataId),[h,f]=qO(i,s.shape,s.dtype,l,u,!0);return e.makeTensorInfo(f,s.dtype,h)}const Dot={kernelName:jg,backendName:"webgl",kernelFunc:Rot};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oot(n){const{inputs:t,backend:e}=n,{data:s,indices:a,segmentIds:r}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(a.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${a.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${r.shape}`);const i=e.readSync(s.dataId),l=e.readSync(a.dataId),u=e.readSync(r.dataId),[h,f]=qO(i,s.shape,s.dtype,l,u);return e.makeTensorInfo(f,s.dtype,h)}const _ot={kernelName:qg,backendName:"webgl",kernelFunc:Oot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fot(n){const{inputs:t,backend:e,attrs:s}=n,{sparseIndices:a,sparseValues:r,defaultValue:i}=t,{outputShape:l}=s,{sliceRank:u,numUpdates:h,sliceSize:f,strides:p,outputSize:m}=Li(r,a,l),y=!1;if(r.dtype==="string"){const S=e.bufferSync(a),T=e.bufferSync(r),$=$r(e.readSync(i.dataId)[0]),C=iJ(S,T,l,m,f,h,u,p,$,y);return e.makeTensorInfo(l,C.dtype,C.values)}const b=new FS(h,u,a.shape.length,r.shape.length,p,[m,1],y),v=e.runWebGLProgram(b,[r,a,i],r.dtype),w=St({inputs:{x:v},backend:e,attrs:{shape:l}});return e.disposeIntermediateTensorInfo(v),w}const Lot={kernelName:Xg,backendName:"webgl",kernelFunc:Fot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zot(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{numOrSizeSplits:r,axis:i}=s,l=Xt(i,a.shape)[0],u=Hw(a,r,l),h=a.shape.length,f=new Array(h).fill(0),p=a.shape.slice();return u.map(m=>{const y=[...p];y[l]=m;const b=mc({inputs:{x:a},backend:e,attrs:{begin:f,size:y}});return f[l]+=m,b})}const Mot={kernelName:Hd,backendName:"webgl",kernelFunc:zot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sk="return sqrt(x);",Bot=re({opSnippet:Sk,packedOpSnippet:Sk,cpuKernelImpl:hJ}),Vot={kernelName:qu,backendName:"webgl",kernelFunc:Bot};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pot="return x * x;",Uot=re({opSnippet:Pot}),Got={kernelName:Kg,backendName:"webgl",kernelFunc:Uot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nk="return (a - b) * (a - b);",Wot=_n({opSnippet:Nk,packedOpSnippet:Nk}),Hot={kernelName:Xu,backendName:"webgl",kernelFunc:Wot};/**
 * @license
 * Copyright 2023 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jot(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t;if(a.dtype!=="string")throw new Error("Input must be of datatype string");const r=e.readSync(a.dataId),i=Ar(r),l=dJ(i,"string",s);return e.makeTensorInfo(a.shape,"string",l)}const qot={kernelName:qd,backendName:"webgl",kernelFunc:jot};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xot({inputs:n,attrs:t,backend:e}){const{x:s}=n,a=ha+`
    return x > 0.0 ? 1.0 : float(${t.alpha});
  `,r=new Ga(s.shape,a);return e.runWebGLProgram(r,[s],s.dtype)}const Kot={kernelName:Ju,backendName:"webgl",kernelFunc:Xot};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yot{constructor(t,e,s){this.variableNames=["x"],this.outputShape=s;const a=s.length,r=ve(s.length),i=ve(s.length);let l="";if(a===1)l="coords * strides + begin";else{let u=0;l=s.map((h,f)=>(u++,s.length===1?`coords * strides[${f}] + begin[${f}]`:`coords[${u-1}] * strides[${f}] + begin[${f}]`)).join(",")}this.userCode=`
      ${r} begin = ${r}(${t});
      ${r} strides = ${r}(${e});

      void main() {
        ${i} coords = getOutputCoords();
        setOutput(getX(${l}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zot(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{begin:r,end:i,strides:l,beginMask:u,endMask:h,ellipsisMask:f,newAxisMask:p,shrinkAxisMask:m}=s,{finalShapeSparse:y,finalShape:b,isIdentity:v,sliceDim0:w,isSimpleSlice:S,begin:T,end:$,strides:C}=$w(a.shape,r,i,l,u,h,f,p,m);let I;if(v)I=St({inputs:{x:a},backend:e,attrs:{shape:b}});else if(w||S){D(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);const F=Nw(T,$,C),B=mc({inputs:{x:a},backend:e,attrs:{begin:T,size:F}});I=St({inputs:{x:B},backend:e,attrs:{shape:b}}),e.disposeIntermediateTensorInfo(B)}else if(e.shouldExecuteOnCPU([a])){const B=e.readSync(a.dataId),L=Gt(a.shape,a.dtype,B),z=fJ(y,L,C,T);I=e.makeTensorInfo(b,a.dtype,z.values)}else{const B=new Yot(T,C,y);I=e.runWebGLProgram(B,[a],a.dtype)}const R=St({inputs:{x:I},backend:e,attrs:{shape:b}});return e.disposeIntermediateTensorInfo(I),R}const Qot={kernelName:Yg,backendName:"webgl",kernelFunc:Zot};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jot(n){const{inputs:t,backend:e,attrs:s}=n,{separator:a,nGramWidths:r,leftPad:i,rightPad:l,padWidth:u,preserveShortSequences:h}=s,{data:f,dataSplits:p}=t,m=e.readSync(f.dataId),y=e.readSync(p.dataId),[b,v]=pJ(m,y,a,r,i,l,u,h);return[e.makeTensorInfo([b.length],"string",b),e.makeTensorInfo(p.shape,"int32",v)]}const tlt={kernelName:Zg,backendName:"webgl",kernelFunc:Jot};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function elt(n){const{inputs:t,backend:e,attrs:s}=n,{skipEmpty:a}=s,{input:r,delimiter:i}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(r.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(i.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const l=e.readSync(r.dataId),u=e.readSync(i.dataId)[0],[h,f,p]=mJ(l,u,a),m=f.length;return[e.makeTensorInfo([m,2],"int32",h),e.makeTensorInfo([m],"string",f),e.makeTensorInfo([2],"int32",new Int32Array(p))]}const nlt={kernelName:Qg,backendName:"webgl",kernelFunc:elt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function slt(n){const{inputs:t,backend:e,attrs:s}=n,{numBuckets:a}=s,{input:r}=t;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=e.readSync(r.dataId),l=gJ(i,a);return e.makeTensorInfo(r.shape,"int32",l)}const alt={kernelName:Jg,backendName:"webgl",kernelFunc:slt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rlt="return tan(x);",ilt=re({opSnippet:rlt}),olt={kernelName:Yu,backendName:"webgl",kernelFunc:ilt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const llt=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,ult=re({opSnippet:llt}),clt={kernelName:Zu,backendName:"webgl",kernelFunc:ult};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hlt(n){const{inputs:t,backend:e,attrs:s}=n,{tensor:a,indices:r,updates:i}=t,{sliceRank:l,numUpdates:u,sliceSize:h,strides:f,outputSize:p}=Li(i,r,a.shape),m=[p/h,h];if(p===0)return e.makeTensorInfo(a.shape,r.dtype);const y=St({inputs:{x:r},backend:e,attrs:{shape:[u,l]}}),b=St({inputs:{x:i},backend:e,attrs:{shape:[u,h]}}),v=St({inputs:{x:a},backend:e,attrs:{shape:m}}),w=new FS(u,l,y.shape.length,b.shape.length,f,m,!1,!0),S=e.runWebGLProgram(w,[b,y,v],v.dtype),T=St({inputs:{x:S},backend:e,attrs:{shape:a.shape}});return e.disposeIntermediateTensorInfo(y),e.disposeIntermediateTensorInfo(b),e.disposeIntermediateTensorInfo(v),e.disposeIntermediateTensorInfo(S),T}const dlt={kernelName:Ug,backendName:"webgl",kernelFunc:hlt};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class flt{constructor(t,e){this.variableNames=["A"];const s=new Array(t.length);for(let i=0;i<s.length;i++)s[i]=t[i]*e[i];this.outputShape=s,this.rank=s.length;const a=ve(this.rank),r=plt(t);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}}function plt(n){const t=n.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(t===1)return`imod(resRC, ${n[0]})`;const e=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let a=0;a<n.length;a++)s.push(`imod(${e[a]}, ${n[a]})`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T_(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{reps:r}=s;if(a.dtype==="string"||a.shape.length>5){const u=e.readSync(a.dataId),h=a.dtype==="string"?u.map(m=>$r(m)):u,f=Gt(a.shape,a.dtype,h),p=bJ(f,r);return e.makeTensorInfo(p.shape,p.dtype,p.values)}const i=new flt(a.shape,r);return e.runWebGLProgram(i,[a],a.dtype)}const mlt={kernelName:Qu,backendName:"webgl",kernelFunc:T_};class glt{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=t,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class ylt{constructor(t){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=t,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ro(n,t){t!==null&&n.disposeIntermediateTensorInfo(t)}function Tk(n){let t=1;for(;t<n;)t*=2;return t}function blt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a}=t,{k:r,sorted:i}=s,l=rt().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=rt().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),h=a.shape,f=h[h.length-1];if(e.shouldExecuteOnCPU([a])||f<l||r>u){const z=e.readSync(a.dataId),[A,G]=xJ(z,h,a.dtype,r,i);return[e.makeTensorInfo(A.shape,A.dtype,A.values),e.makeTensorInfo(G.shape,G.dtype,G.values)]}if(r===0)return h[h.length-1]=0,[e.makeTensorInfo(h,a.dtype,[]),e.makeTensorInfo(h,"int32",[])];if(f===1)return[a,_f({attrs:{shape:h,dtype:"int32",value:0},backend:e})];const p=e.texData.get(a.dataId),m=p!==null&&p.isPacked,y=m?e.unpackTensor(a):a,v=ht(h)/f,w=St({inputs:{x:y},attrs:{shape:[v,f]},backend:e});m&&ro(e,y);const S=Tk(r),T=Tk(f);let $=null;const C=()=>$===null?[w,w]:[w,$],I=(z,A,G)=>{const Q=C(),tt=new glt(G),V=[[f],[$===null?1:0],[Number.NEGATIVE_INFINITY],[z],[A]],q=$;$=e.runWebGLProgram(tt,Q,"int32",V),ro(e,q)};for(let z=1;z<S;z*=2){const A=z*2;for(let G=z;G>=1;G/=2)I(A,G,[v,T])}for(let z=T;z>S;z/=2){const A=C(),G=new ylt([v,z/2]),tt=[[f],[$===null?1:0],[S]],J=$;$=e.runWebGLProgram(G,A,"int32",tt),ro(e,J);const V=S/2,q=V*2;for(let Y=V;Y>=1;Y/=2)I(q,Y,$.shape)}let R=$;$=mc({inputs:{x:$},backend:e,attrs:{begin:0,size:[v,r]}}),ro(e,R);let F=g_({inputs:{x:w,indices:$},backend:e,attrs:{axis:1,batchDims:1}});ro(e,w);const B=h.slice(0,-1);B.push(r),R=$,$=St({inputs:{x:$},attrs:{shape:B},backend:e}),ro(e,R);const L=F;return F=St({inputs:{x:F},attrs:{shape:B},backend:e}),ro(e,L),[F,$]}const xlt={kernelName:ty,backendName:"webgl",kernelFunc:blt};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vlt{constructor(t,e,s,a,r,i){this.variableNames=["Image","Transforms"],this.outputShape=i;const l=s==="nearest"?1:2;let u;switch(a){case"constant":u=1;break;case"reflect":u=2;break;case"wrap":u=3;break;case"nearest":u=4;break;default:u=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${u} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${u} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${t} && 0 <= coordX && coordX < ${e}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${r});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${r});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${e}));
                float mapY = mapCoord(inY, float(${t}));

                if (${l} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wlt(n){const{inputs:t,backend:e,attrs:s}=n,{image:a,transforms:r}=t,{interpolation:i,fillMode:l,fillValue:u,outputShape:h}=s,[f,p,m,y]=a.shape,[b,v]=h??[p,m],w=[f,b,v,y],S=new vlt(p,m,i,l,u,w);return e.runWebGLProgram(S,[a,r],"float32")}const Slt={kernelName:ey,backendName:"webgl",kernelFunc:wlt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nlt(n){const{inputs:t,attrs:e,backend:s}=n,{axis:a}=e,{x:r}=t;Rf(r,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=s.readSync(r.dataId),{outputValues:l,outputShape:u,indices:h}=vJ(i,a,r.shape,r.dtype);return[s.makeTensorInfo(u,r.dtype,l),s.makeTensorInfo([h.length],"int32",h)]}const Tlt={kernelName:ny,backendName:"webgl",kernelFunc:Nlt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Clt(n){const{inputs:t,backend:e,attrs:s}=n,{value:a}=t;let{axis:r}=s;r<0&&(r+=a.shape.length);const i=a,l=i.shape.length,u=a.shape[r],h=new Array(l-1);let f=0;for(let v=0;v<l;v++)v!==r&&(h[f++]=i.shape[v]);const p=[],m=new Array(l).fill(0),y=i.shape.slice();y[r]=1;const b=new Array(u);for(let v=0;v<b.length;v++){m[r]=v;const w=mc({inputs:{x:i},backend:e,attrs:{begin:m,size:y}}),S=St({inputs:{x:w},backend:e,attrs:{shape:h}});b[v]=S,p.push(w)}return p.forEach(v=>e.disposeIntermediateTensorInfo(v)),b}const $lt={kernelName:Xd,backendName:"webgl",kernelFunc:Clt};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class klt{constructor(t,e){this.variableNames=["x","segmentIds"];const s=t.windowSize,a=t.batchSize,r=t.inSize,i=t.numSegments,l=i*Math.ceil(r/s);this.outputShape=[a,l];const u="0.0",h="sumValue",f=Math.floor(s/4)*4,p=s%4,m=`
        sumValue += dot(values, segFilter);
    `;let y="";r%s>0&&(y=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `);let b="";r%s>0&&(b=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${u};

      float getValue(int batch, int inIdx) {
        ${y}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${b}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${i})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${i})));

        float sumValue = 0.0;

        for (int i = 0; i < ${f}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${m}
        }

        int inIdx = inOffset + ${f};
        if (${p===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${m}
        } else if (${p===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${m}
        } else if (${p===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${m}
        }
        setOutput(${h});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ilt(n){const{inputs:t,backend:e,attrs:s}=n,{x:a,segmentIds:r}=t,{numSegments:i}=s,l=a.shape.length,u=[];let h=0;const f=Be([h],l);let p=a;f!=null&&(p=Zn({inputs:{x:a},backend:e,attrs:{perm:f}}),u.push(p),h=qe(1,l)[0]);const m=eA(p.shape,h,i),y=ht([p.shape[h]]),b=St({inputs:{x:p},backend:e,attrs:{shape:[-1,y]}});u.push(b);const v=ry(a.dtype),w=(C,I,R,F,B)=>{const L=C.shape[0],z=C.shape[1],A=tA(z,B),G={windowSize:A,inSize:z,batchSize:L,numSegments:B},Q=new klt(G,I),tt=e.compileAndRun(Q,[C,R],F);if(u.push(tt),tt.shape[1]===B)return tt;const J=N_({backend:e,attrs:{start:0,stop:B,step:1,dtype:"float32"}}),V=T_({inputs:{x:J},backend:e,attrs:{reps:[z/A]}});return u.push(J),u.push(V),w(tt,I,V,F,B)},S=w(b,"unsortedSegmentSum",r,v,i),T=St({inputs:{x:S},backend:e,attrs:{shape:m}});let $=T;if(f!=null){u.push(T);const C=Di(f);$=Zn({inputs:{x:$},backend:e,attrs:{perm:C}})}return u.forEach(C=>e.disposeIntermediateTensorInfo(C)),$}const Elt={kernelName:Kd,backendName:"webgl",kernelFunc:Ilt};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Alt=[htt,ftt,gtt,xtt,wtt,Ttt,$tt,Itt,Dtt,_tt,ztt,Vtt,Gtt,qtt,Ytt,Qtt,tet,aet,iet,uet,fet,vet,Net,ket,Eet,Fet,zet,Pet,XJ,Wet,Ket,Jet,rnt,lnt,cnt,dnt,pnt,bnt,wnt,Tnt,$nt,Int,Ant,Ont,Fnt,Bnt,Pnt,Wnt,qnt,Knt,Jnt,sst,ost,cst,fst,pst,gst,bst,vst,Sst,Tst,Ist,Rst,_st,Lst,Bst,Ust,jst,Yst,qJ,Qst,qet,eat,aat,oat,YJ,hat,mat,yat,wat,Tat,Iat,Rat,Fat,Bat,Uat,Wat,Xat,Yat,Qat,nrt,art,irt,lrt,crt,prt,brt,Srt,Art,JJ,_rt,zrt,Vrt,Grt,Ret,jrt,Xrt,Yrt,Jrt,sit,QJ,rit,oit,uit,hit,dit,Det,$rt,mit,xit,Nit,ett,kit,Ait,_it,zit,Pit,Git,jit,Kit,Qit,eot,aot,oot,hot,pot,bot,wot,bet,Irt,Tot,$ot,Iot,Aot,Dot,_ot,Lot,Mot,Vot,Got,Hot,qot,Kot,Qot,tlt,nlt,alt,krt,ltt,olt,clt,dlt,mlt,xlt,Slt,utt,Tlt,$lt,Elt,qrt];for(const n of Alt)ay(n);const Rlt=(n,t)=>{t.clearRect(0,0,t.canvas.width,t.canvas.height);const e="16px sans-serif";t.font=e,t.textBaseline="top",n.forEach(s=>{const[a,r,i,l]=s.bbox;t.strokeStyle="#00FFFF",t.lineWidth=2,t.strokeRect(a,r,i,l),t.fillStyle="#00FFFF";const u=s.class,h=t.measureText(u).width,f=parseInt(e,10);t.fillRect(a,r,h+4,f+4),t.fillStyle="#000000",t.fillText(u,a,r)})},Dlt=()=>{const[n,t]=Ma.useState(!0),[e,s]=Ma.useState("user"),a=Ma.useRef(null),r=Ma.useRef(null),i=Ma.useRef(null),l=Ma.useRef(null),u=Ma.useCallback(async()=>{const m=i.current;if(m&&r.current&&a.current?.video?.readyState===4){const y=a.current.video;r.current.width=y.videoWidth,r.current.height=y.videoHeight;const b=await m.detect(y),v=r.current.getContext("2d");Rlt(b,v)}},[]),h=Ma.useCallback(async()=>{t(!0);const m=await dH.load({modelUrl:"/models/coco-ssd/model.json"});i.current=m,t(!1),l.current=setInterval(u,100)},[u]),f=()=>{s(m=>m==="user"?"environment":"user")};Ma.useEffect(()=>(h(),()=>{clearInterval(l.current)}),[e,h]);const p={facingMode:e};return ui.jsx("div",{className:"fixed inset-0 z-0 bg-black",children:n?ui.jsx("div",{className:"text-white text-center text-xl mt-4",children:"Loading AI Model..."}):ui.jsxs("div",{className:"relative w-full h-full",children:[ui.jsx(QF,{ref:a,className:"w-full h-full object-cover",videoConstraints:p,mirrored:e==="user",audio:!1,muted:!0}),ui.jsx("canvas",{ref:r,className:"absolute top-0 left-0 w-full h-full z-10"}),ui.jsx("button",{onClick:f,className:"absolute bottom-4 right-4 z-20 px-4 py-2 bg-white text-black rounded-md shadow-md",children:"Flip Camera"})]})})};XF.createRoot(document.getElementById("root")).render(ui.jsx(Ma.StrictMode,{children:ui.jsx(Dlt,{})}));
